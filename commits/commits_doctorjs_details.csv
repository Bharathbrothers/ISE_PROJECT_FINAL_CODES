,reponame,commitid,commitmsg,commitauthor,commitauthordate,comauthorlogin,shaauthorlogin,stats_total,stats_addns,stats_delns
0,doctorjs,e5836c98ee2be67659856a1b2a638a01836efb55,narcissus parses array comprehensions,dimvar,2010-06-22T21:33:15Z,dimvar,dimvar,34,30,4
1,doctorjs,6e23796bbc12f7b370eac62a897055af8b677bf9,Merge branch 'master' of git://github.com/pcwalton/jsctags,dimvar,2010-06-22T19:00:43Z,dimvar,dimvar,4,2,2
2,doctorjs,a07a595b6d572d5ac8f704726df6521728fdb550,narcissus parses destructuring,dimvar,2010-06-22T18:59:42Z,dimvar,dimvar,18,13,5
3,doctorjs,fe3489c796b86ef27609f2296547533f268e303f,extended parser to handle yield expressions,dimvar,2010-06-22T00:53:13Z,dimvar,dimvar,7,6,1
4,doctorjs,bdc9f52a2397720602903393b8e37b46f793a841,"jscfa: fixed some bugs after I did more AST normalizing

jsparse: extended to add for-each. Fixed let in forloop head.
Fixed error reporting for for/in.",dimvar,2010-06-22T00:35:40Z,dimvar,dimvar,140,82,58
5,doctorjs,d89ba6a2a254b83f827e3d266b2dfb41d167a4da,"Add jscfa.js to the Makefile, issue 5",Patrick Walton,2010-06-21T18:27:44Z,pcwalton,pcwalton,4,2,2
6,doctorjs,ed3c5c1d4383aeacde05edda3e90f1057f446024,more AST cleanups and bug fixing,dimvar,2010-06-18T15:48:07Z,dimvar,dimvar,165,93,72
7,doctorjs,0103852556318f4ad0d77c14ec77fbba1b115918,Merge branch 'master' of git://github.com/pcwalton/jsctags,dimvar,2010-06-18T00:40:07Z,dimvar,dimvar,179,151,28
8,doctorjs,5849726d3081be78338a5bdc960a4c015a3e9371,added code that finds the continuations of each statement in the AST,dimvar,2010-06-18T00:38:57Z,dimvar,dimvar,1602,945,657
9,doctorjs,06323508be3cc6fa037a3e580ea1614336f94fb4,Delete commented out code,Patrick Walton,2010-06-17T00:24:17Z,pcwalton,pcwalton,6,0,6
10,doctorjs,5587db58a899a602a4317b857822b4bd54f5dddd,Fix the binary search when stemming the top of the array; also fix the sort on add(),Patrick Walton,2010-06-15T21:50:26Z,pcwalton,pcwalton,6,3,3
11,doctorjs,2bf923b7fb2b70650fb564ff2aa91903f4ab4a6c,"Merge http://github.com/dimvar/jsctags

Conflicts:
	lib/jsctags/narcissus/jsparse.js",Patrick Walton,2010-06-15T17:35:26Z,pcwalton,pcwalton,902,883,19
12,doctorjs,2639610b684520ee5aab759673118bebba96d379,CFA code prototype just added to the repo,dimvar,2010-06-15T17:30:21Z,dimvar,dimvar,839,839,0
13,doctorjs,3dcf8d2477621cffc0b1d79d482716c22a8c26ba,minor edits,dimvar,2010-06-15T09:12:12Z,dimvar,dimvar,32,22,10
14,doctorjs,83e29f6e760cf794db80d73aa611a78a90dee60f,"Add an ""add"" method and rename the old ""add"" method to ""scan""",Patrick Walton,2010-06-12T01:00:35Z,pcwalton,pcwalton,26,18,8
15,doctorjs,3b8346f34bb57aaf2009fa2aabd9ac964833678b,Allow an initial set of tags to be passed in to the Tags constructor,Patrick Walton,2010-06-11T23:23:13Z,pcwalton,pcwalton,4,2,2
16,doctorjs,906d9b50ac49d0b70e7b6aa2e5d5edb08b7ff944,Add JSONP writing support,Patrick Walton,2010-06-11T23:18:24Z,pcwalton,pcwalton,33,29,4
17,doctorjs,8bb4f452aaa4c8c8b4f18c4465ee4d26f508dfeb,Add stemming support,Patrick Walton,2010-06-11T19:05:10Z,pcwalton,pcwalton,42,27,15
18,doctorjs,f0b840c3af91071e943f56a4c321868d15552561,insignificant change: changed const back to var in the beginnings of files,dimvar,2010-06-11T01:51:54Z,dimvar,dimvar,38,25,13
19,doctorjs,8d4fb5065c6a85acd26ce8c02016f0d1b1e67193,"'AS IS' -> ""AS IS"" in license text",Patrick Walton,2010-06-11T01:30:52Z,pcwalton,pcwalton,24,12,12
20,doctorjs,b1cea862e6e53813873e3336f77f41bbdd40b85d,Implement tag lookup,Patrick Walton,2010-06-11T01:28:29Z,pcwalton,pcwalton,24,23,1
21,doctorjs,6abff59cdf10f014e12a7f06dd32d19bb68d48a1,modified parsing of let-expressions when they appear in a statement context,dimvar,2010-06-10T01:40:28Z,dimvar,dimvar,20,17,3
22,doctorjs,b3bac9a14c79fbbe6371cfeff9a98429ed3c1dd8,modified parsing of let-expressions when they appear in a statement context,dimvar,2010-06-10T01:40:28Z,dimvar,dimvar,20,17,3
23,doctorjs,b7a9d31c28f7843b4facfbe845afae5f3dd29036,Add the ability to read tag files,Patrick Walton,2010-06-09T19:23:43Z,pcwalton,pcwalton,61,60,1
24,doctorjs,8ca1f6ceff7deba0c0d7f963c1c66cd0bfc25a8d,Move test cases to test/testcases to differentiate them from functionality tests,Patrick Walton,2010-06-09T18:50:30Z,pcwalton,pcwalton,0,0,0
25,doctorjs,0cac2b73a7adb7c9cc4a455c6c628d307f263138,"changed var to const in the beginning of jslex, jsparse",dimvar,2010-06-03T00:40:22Z,dimvar,dimvar,22,11,11
26,doctorjs,af3415c3e41e5350f75e12105fbab6ad5256ddc1,eliminated redundancy in test,dimvar,2010-06-02T23:38:14Z,dimvar,dimvar,2,1,1
27,doctorjs,70f71e8963bf6897ba5c46e6bb63739ac16faf97,fixed bug in forloop lets,dimvar,2010-06-02T23:30:33Z,dimvar,dimvar,8,1,7
28,doctorjs,3c8cf2045a958446982f6ca741ef1998049ab8a7,parsed expression closures,dimvar,2010-06-02T23:03:56Z,dimvar,dimvar,17,13,4
29,doctorjs,8dfb2a3fc90689b79e606b7a0690ed6b3eef4666,"fixed let in forloops, except destructuring",dimvar,2010-06-02T22:29:28Z,dimvar,dimvar,15,10,5
30,doctorjs,131534c29345ff29165f70793642736d61792f4b,removed some prints,dimvar,2010-06-02T18:31:01Z,dimvar,dimvar,2,0,2
31,doctorjs,4dba9fe05dcab8959e6f25c3e20991b0f00298f1,Modified narcissus parser to handle LET.,dimvar,2010-06-02T18:13:12Z,dimvar,dimvar,281,192,89
32,doctorjs,d8405996049db241987f9822c482c1f17fefc0ad,Add a short usage blurb to the readme,Patrick Walton,2010-05-26T21:05:26Z,pcwalton,pcwalton,8,8,0
33,doctorjs,e91d91f4b3fb9a5b162d491ab47b8dcca3498c24,Make package.json not always include the current directory,Patrick Walton,2010-05-26T01:38:30Z,pcwalton,pcwalton,12,10,2
34,doctorjs,0bc43fab506074ea1bf3d7321530d96b1dbcebb0,More Markdown fixes,Patrick Walton,2010-05-25T23:34:38Z,pcwalton,pcwalton,1,1,0
35,doctorjs,faa67e24af64a534c9f9091f9284ed079b215997,Fix Markdown in README.md,Patrick Walton,2010-05-25T23:34:02Z,pcwalton,pcwalton,3,3,0
36,doctorjs,c65e11e932cbd7b1fac73c4397c506d3eb9b6c37,Update the readme,Patrick Walton,2010-05-25T23:33:26Z,pcwalton,pcwalton,63,49,14
37,doctorjs,02871d71d97dd655788c5751ff9a934ba304f6e7,Add a -o option to control where the output goes,Patrick Walton,2010-05-25T22:25:57Z,pcwalton,pcwalton,9,5,4
38,doctorjs,4ca01fcaa3ea3a8238a3fd75b581d0a2e7ca9403,Add a -W switch to control output,Patrick Walton,2010-05-25T22:18:06Z,pcwalton,pcwalton,30,20,10
39,doctorjs,063a9dedfbf6e3b04e2e870f81732b09aec303ca,Remove unused underscore.js import in serve.js,Patrick Walton,2010-05-25T22:04:59Z,pcwalton,pcwalton,15,13,2
40,doctorjs,0acca2f30cc6ec01ba17cba1a4e3b90e6b97b85d,Rework the directory structure to be saner; add a Makefile; add a web server,Patrick Walton,2010-05-25T21:34:10Z,pcwalton,pcwalton,1102,1037,65
41,doctorjs,ecaa96526a808b7ea7d75cb65e8caddad97ff5c3,TODO files are for losers,Patrick Walton,2010-05-25T17:24:29Z,pcwalton,pcwalton,1,0,1
42,doctorjs,674a58d6754d2e273764134db8a0e5577177bac5,"Make unresolved variables spring into existence, needed for jQuery plugins",Patrick Walton,2010-05-25T01:59:25Z,pcwalton,pcwalton,25,14,11
43,doctorjs,9635c0edf5349cb5fd6478007a5e484b364eec9c,"When searching for CommonJS packages, only recurse upward until a fixpoint is reached; tolerate syntax errors",Patrick Walton,2010-05-25T01:08:49Z,pcwalton,pcwalton,12,9,3
44,doctorjs,b71d1d7a846962ae34afa53c962865d2d1a51f50,Prevent the lexer from crashing if the source file consists entirely of comments,Patrick Walton,2010-05-25T01:03:09Z,pcwalton,pcwalton,2,1,1
45,doctorjs,3934fd493924f59a5f5eb7de794dc43b9e532bad,"Scan for CommonJS modules from the bottom up, not from the top down",Patrick Walton,2010-05-25T00:36:22Z,pcwalton,pcwalton,133,63,70
46,doctorjs,8fd593d20e56cf105a9cc19feb86c68d5771b598,Update the TODO now that we have native function support,Patrick Walton,2010-05-24T23:07:04Z,pcwalton,pcwalton,3,0,3
47,doctorjs,b186aaf3f2409c5fdd5dfcdc916a77bb399aaa2e,Add the TextView from Bespin as a test case,Patrick Walton,2010-05-24T23:06:34Z,pcwalton,pcwalton,1089,1089,0
48,doctorjs,ac5859ac90f5a7b68a14746d0d72feae49da12d3,"Add native function support; add extend and mixin functions; hack in a stub for ""new""",Patrick Walton,2010-05-24T23:05:59Z,pcwalton,pcwalton,187,141,46
49,doctorjs,035a1213303c0e251f3583a8a013626937c659ad,Add underscore.js,Patrick Walton,2010-05-24T21:04:54Z,pcwalton,pcwalton,694,694,0
50,doctorjs,9b144b415cbe91087b87963ac25f4cf0faa083ff,Fix escaping in regexes,Patrick Walton,2010-05-22T09:26:20Z,pcwalton,pcwalton,9,6,3
51,doctorjs,ee5f5554717cf74f0789e42daef749a14c571559,Anchor regexes at the start and end of the line,Patrick Walton,2010-05-22T09:06:15Z,pcwalton,pcwalton,2,1,1
52,doctorjs,a5449f509e420ff699973e4eb5beca31d714236d,Add CommonJS support,Patrick Walton,2010-05-21T21:31:32Z,pcwalton,pcwalton,349,305,44
53,doctorjs,a9623c14c7971a2b0a80d308628624dd45ca9cdd,Add a tab before the kind field,Patrick Walton,2010-05-21T20:46:50Z,pcwalton,pcwalton,2,1,1
54,doctorjs,feeda39f433c3d591669a1945c3df0519c2105eb,Handle prototypes properly,Patrick Walton,2010-05-21T20:45:00Z,pcwalton,pcwalton,109,93,16
55,doctorjs,9ab9e56da9275d37725f9b43ed8aa74fb9698e01,"Call the contents of an object ""data"" instead of the confusing ""value""",Patrick Walton,2010-05-21T18:21:22Z,pcwalton,pcwalton,67,33,34
56,doctorjs,8b3c7ceec7c71deaef1528511afefb8bb0513fc3,Make the interpreter a separate class; use regexes instead of line numbers,Patrick Walton,2010-05-21T17:22:08Z,pcwalton,pcwalton,40,31,9
57,doctorjs,c2ca994fd2da3b6949a0ff7e35336f23a56e7309,Properly sort the tags file,Patrick Walton,2010-05-21T01:53:27Z,pcwalton,pcwalton,32,13,19
58,doctorjs,2386c193788468795799b6c3f432e293dc3226c5,Parse jQuery and generate tags,Patrick Walton,2010-05-21T01:47:52Z,pcwalton,pcwalton,30,17,13
59,doctorjs,880173518a1ac4fd7babb297390acb8bbc2e744b,Add support for hanging values off functions,Patrick Walton,2010-05-21T01:09:54Z,pcwalton,pcwalton,43,30,13
60,doctorjs,df08fb7c803b2defd3ae0ca011a806ac41e61b68,Correctly parse jquery-pattern.js,Patrick Walton,2010-05-21T00:43:39Z,pcwalton,pcwalton,61,41,20
61,doctorjs,4873e5da24267d8ada77a0f5af74e0392cea3caa,Initial support for jquery-pattern,Patrick Walton,2010-05-21T00:14:27Z,pcwalton,pcwalton,175,142,33
62,doctorjs,0412caeb8c39860437cb16524f6ab1fd6de2f6f0,Parse jquery-pattern.js,Patrick Walton,2010-05-20T21:20:42Z,pcwalton,pcwalton,83,64,19
63,doctorjs,2961868b2a34f46d0c77bfd74e239d2ee4d3814f,"Narcissus: Export DECLARED_FORM, EXPRESSED_FORM, and STATEMENT_FORM",Patrick Walton,2010-05-15T01:40:52Z,pcwalton,pcwalton,3,3,0
64,doctorjs,289db643338f2baf575ab4be39142e6cbd099c64,Flesh out the interpreter,Patrick Walton,2010-05-17T16:25:27Z,pcwalton,pcwalton,103,85,18
65,doctorjs,fc0a1e681a8000266d266fe26b7bfe767ffb339e,"Add a ""jQuery pattern"" test case",Patrick Walton,2010-05-15T01:29:57Z,pcwalton,pcwalton,20,20,0
66,doctorjs,2ba0a7e3889f04adcb3487901ca2c00ffcfddd89,Correctly display indexed children of a node in the parse tree,Patrick Walton,2010-05-15T01:25:51Z,pcwalton,pcwalton,9,8,1
67,doctorjs,2c8fa0e601d6ef529c2e3f728766273f1d9d51c9,Add a minimal abstract interpreter,Patrick Walton,2010-05-15T00:35:26Z,pcwalton,pcwalton,127,124,3
68,doctorjs,5b333a93da821c9c040e8c9afc6b27675fa665a3,Add simple test case,Patrick Walton,2010-05-15T00:54:51Z,pcwalton,pcwalton,16,16,0
69,doctorjs,80deaa756860b55ac7558ffd721ce16b1a2fdf39,"Rename 'file' to 'tagfile', as 'file' is already a well-known tagfield",Patrick Walton,2010-05-15T00:41:18Z,pcwalton,pcwalton,30,16,14
70,doctorjs,cf87f8e6006d48e7c5a3aaed2b23b68980057642,Show line numbers in the parser,Patrick Walton,2010-05-15T00:11:09Z,pcwalton,pcwalton,4,4,0
71,doctorjs,5a08d4e723abd3160698deb2a4e8dffd4a4e264e,Allow duplicate tag names,Patrick Walton,2010-05-14T23:51:09Z,pcwalton,pcwalton,56,28,28
72,doctorjs,c43d7eaf121ffad22f9a90d7d8de16742183b7e2,Display the parse tree,Patrick Walton,2010-05-14T23:34:29Z,pcwalton,pcwalton,86,83,3
73,doctorjs,647d1672b61b299fdc6788e28fc62961f9a36831,Get parser working; rearchitect directory structure again,Patrick Walton,2010-05-14T22:19:19Z,pcwalton,pcwalton,168,95,73
74,doctorjs,1a26c226dee86e20dcc96cf44bf7d92c4bad357f,Add parser.html test case,Patrick Walton,2010-05-14T21:31:38Z,pcwalton,pcwalton,189,188,1
75,doctorjs,8fb759ad79ace97e17fe0bdc503846b9fb2c3bd7,Bikeshed some more with the directory structure; add README.md,Patrick Walton,2010-05-14T17:59:52Z,pcwalton,pcwalton,12,12,0
76,doctorjs,4616d7657694435857c28aad9d84304d1317a5bd,Move libraries out of the contrib/ directory,Patrick Walton,2010-05-14T17:52:23Z,pcwalton,pcwalton,0,0,0
77,doctorjs,9f6c7862b062ef37ea767874d5c17fa3eb21ee1a,Add jsTree,Patrick Walton,2010-05-14T01:05:29Z,pcwalton,pcwalton,2094,2094,0
78,doctorjs,ad05c5bf4bfef66609581c6c52f191d058a9fb25,Move jQuery to html/js/contrib/ as well,Patrick Walton,2010-05-14T00:51:49Z,pcwalton,pcwalton,0,0,0
79,doctorjs,8384933742492037485f6532a26fbe4fae395f27,Add Tiki,Patrick Walton,2010-05-14T00:50:08Z,pcwalton,pcwalton,3219,3219,0
80,doctorjs,0b4e24dfb30bfd9c3d582227261001ba91556303,Get the CommonJS-ified Narcissus working,Patrick Walton,2010-05-14T00:42:42Z,pcwalton,pcwalton,34,25,9
81,doctorjs,92022836922d04428f269791e175c2acb4d7b90e,Add jQuery as a test case,Patrick Walton,2010-05-14T00:30:30Z,pcwalton,pcwalton,6240,6240,0
82,doctorjs,376078d0df9d6fa7de996c8de01376e520157042,Update Narcissus to the newest pending patch,Patrick Walton,2010-05-14T00:27:10Z,pcwalton,pcwalton,146,53,93
83,doctorjs,6a995d6524a972ce676a626b97d8f88cd47b7ec5,Stub code for reading JavaScript files and generating tags,Patrick Walton,2010-05-14T00:09:44Z,pcwalton,pcwalton,22,18,4
84,doctorjs,938a9da8cf94ffcd3303fa88ba44f2af647a62df,Write ctags to a tags file,Patrick Walton,2010-05-13T23:11:33Z,pcwalton,pcwalton,107,85,22
85,doctorjs,44a9143467ae2c7c1d0b15ac3131f16e7f5682a8,Add the Traits library,Patrick Walton,2010-05-13T18:39:16Z,pcwalton,pcwalton,596,596,0
86,doctorjs,ba83ad3016fc3071e1f683d1b1dd2e4e1a6f6396,"Add Narcissus, CommonJS-ified",Patrick Walton,2010-05-13T18:25:32Z,pcwalton,pcwalton,1564,1564,0
87,doctorjs,75fd8c753b0faad03e662b348245a998febc41e9,Initial commit,Patrick Walton,2010-05-13T17:13:00Z,Patrick Walton,Patrick Walton,209,209,0
88,doctorjs,f44b4e91601ebab679b6402b12f6f48ea1ff04b2,"Improved property access using brackets.
Arrays are now marked as either tuples or all elms merged in one.
Improved types on sunspider.
- Aobj.prototype.mergeNumProps
- evalLval and evalExp, INDEX updated",dimvar,2010-08-03T18:27:02Z,dimvar,dimvar,138,91,47
89,doctorjs,c55de15e9e5549341c31926ea6358c77f2902820,rm'ed some commented out code,dimvar,2010-08-03T08:10:16Z,dimvar,dimvar,10,0,10
90,doctorjs,944c49b9ba97a5f80859b1619a4f559bd86675ec,"- generate addr for REGEXP in labelExp
- added global object.
  - added global variables & methods: Infinity, NaN etc
  - Array, Function etc are its properties
  - THIS in global scope refers to global obj
  - global var refs become DOTs w/ THIS in global scope
  - THIS is bound to global obj in function calls
  - THIS is bound to global obj in unanalyzed functions
- added String.prototype.replace, String.fromCharCode",dimvar,2010-08-03T06:30:40Z,dimvar,dimvar,160,115,45
91,doctorjs,06243fce44ac7f415cfd9631cc903a0658a8fa18,"- Array.prototype.member returns the elm if it finds it, instead of true
- added Math, Boolean, Boolean.prototype
- boolean literals are converted to objs when applying Boolean methods
- changed handling of recursion, wanna see calls twice before giving up
- get some better types in sunspider and some weird ones in crypto-aes",dimvar,2010-08-02T23:29:19Z,dimvar,dimvar,168,151,17
92,doctorjs,6070a6e434808633d6bb0b5a2c3fcac35400c023,initCoreObjs recognizes the 'undefined' identifier,dimvar,2010-08-02T18:57:22Z,dimvar,dimvar,10,10,0
93,doctorjs,c889884c6a3f6239fab85de96de0e08913bbb143,"- rewrote evalStm to use a jump table instead of tagging the nodes
- wrote evalLval and evalExp using jump tables
- removed redundant var declaration in markConts/FOR_IN
- Aval.prototype.getProp and Aval.prototype.updateProp
- fixed bug in stmThrows",dimvar,2010-08-02T18:37:53Z,dimvar,dimvar,703,400,303
94,doctorjs,348123fe5e76d2780484c4f406c5aa3580f3fdf9,"handled FINALLY, forgot to handle it before.",dimvar,2010-07-31T01:33:54Z,dimvar,dimvar,28,25,3
95,doctorjs,c3ca012a2cecb0fa33d63cda495bf36f2af7de55,"1. fixed bug in markConts/FOR
2. wrote fastDispatchStm, eliminated dispatch from statements",dimvar,2010-07-31T01:23:02Z,dimvar,dimvar,154,94,60
96,doctorjs,2dc836bc08795bd79c5e3c8fcd423a1474b055f5,"don't add errav property to CATCHes, may lose context sensitivity.",dimvar,2010-07-30T22:45:26Z,dimvar,dimvar,28,26,2
97,doctorjs,370339ae5ad0dbfa04a1d8706034411df8d35534,"fixed labelStm & friends to generate only the necessary addrs, count is much smaller now",dimvar,2010-07-30T22:19:17Z,dimvar,dimvar,13,6,7
98,doctorjs,8b574e3084df11059eb0f284d88422044ccde445,create also RegExp objects in initDeclsExp.,dimvar,2010-07-30T22:01:31Z,dimvar,dimvar,16,8,8
99,doctorjs,eb720b88c857341937f04d82b5d90b27ec4de0e4,"1. created INVALID_TIMESTAMP constant for initial summaries
2. create array & object lits and NEW objs in initDeclsExp, before the analysis.",dimvar,2010-07-30T21:43:37Z,dimvar,dimvar,38,16,22
100,doctorjs,24a5f6e8d3abd1b0082fbf87db7769baf58870e8,improved evalExp/OR and AND,dimvar,2010-07-30T21:12:59Z,dimvar,dimvar,18,9,9
101,doctorjs,22f2a8be94de98ac7537baadf0fe9a456e8e751f,"1. Keep around only the summaries for the last timestamp, the rest aren't used.
   Keep a join of all summaries for each function.
   seen and summaries aren't hash tables now, simpler.
   seen and summaries are initialized in initDeclsFun.
2. Don't pass h around, only the most recent timestamp is used by evanFun etc.
3. aplus behaves differently for BOTTOM, ctags for sunspider improved.",dimvar,2010-07-30T20:50:44Z,dimvar,dimvar,562,294,268
102,doctorjs,9e897842a16932d048672dcb2e2eb93ddb96e52f,unimportant prints,dimvar,2010-07-30T00:16:06Z,dimvar,dimvar,19,7,12
103,doctorjs,64d118fbdda1b857fadd3c2c99a669db77051d24,improved sunspider results with null in types,dimvar,2010-07-30T00:02:53Z,dimvar,dimvar,16,8,8
104,doctorjs,989569a80ea5c5ed7b7387b787a05de00c1b2fe0,"1. separated null and undefined in the abstract values.
2. fixed bug in abstract plus.",dimvar,2010-07-29T23:53:36Z,dimvar,dimvar,23,13,10
105,doctorjs,7b1585fb63fda3c7885da5c7e00cf354406fbe52,deleted a debug print,dimvar,2010-07-29T23:36:43Z,dimvar,dimvar,2,1,1
106,doctorjs,e650807bba3a7bd35f6aad782f187d304e49f864,adding hasReturn introduced a bug in the printing of types which is now fixed.,dimvar,2010-07-29T23:35:22Z,dimvar,dimvar,44,22,22
107,doctorjs,3efe2a5ab3b528d520cb7781be2b6e99f9b01c01,"1. Automatic conversion of numbers and strings to objects when i need to call methods on them.
   - forEachMayObj
   - genericNumber
   - genericString
2. added the method: Array.prototype.split
3. support for Date & Date.prototype
   - now getting better tags in the two Date sunspider benchmarks.",dimvar,2010-07-29T23:24:02Z,dimvar,dimvar,130,111,19
108,doctorjs,1462879bd1c8c72443e94b20f042cddf5e22ee60,"For homogeneous arrays, report the type of elms.",dimvar,2010-07-29T16:32:59Z,dimvar,dimvar,175,104,71
109,doctorjs,49ba84a0b70327dbfd84b74831cf97114af709b0,"Make analysis results for recursive functions more precise:
- fixStm/fixFun: Each function node tagged if it has a return node.
- associated change in evalExp/CALL, NEW_WITH_ARGS.",dimvar,2010-07-29T14:33:49Z,dimvar,dimvar,92,52,40
110,doctorjs,b6186f293d8194a709a5e446248e0c41dc68ab35,"1. fixStm handles VAR & CONST decls that appear outside of BLOCK or SCRIPT.
2. fixed bug in initsToAssigns.
3. evalExp handles BITWISE_NOT.
4. added V8 benchmarks.",dimvar,2010-07-28T19:15:08Z,dimvar,dimvar,22873,22866,7
111,doctorjs,44819be2bfdd414925b92126be93cfd1e39a2136,added sunspider benchmarks with tags,dimvar,2010-07-28T17:12:54Z,dimvar,dimvar,5776,5771,5
112,doctorjs,6a9d331babf29f3a57f48373f65c182894aa57e7,"- fixed infinite loop in fixStm for functions in blocks.
- define the proto obj of a function's default prototype-property obj.",dimvar,2010-07-28T00:18:18Z,dimvar,dimvar,42,29,13
113,doctorjs,def479d7190c1f5c2c13799abfba2aca5477ba63,fixed bug in fixExp/RETURN,dimvar,2010-07-27T08:43:19Z,dimvar,dimvar,5,4,1
114,doctorjs,eb46c1c4699b1f80454dcbee53fe84b29acfa4c4,simplified and unified handling of statements. Everything except returns is handled in evalStm.,dimvar,2010-07-27T07:13:10Z,dimvar,dimvar,106,46,60
115,doctorjs,170ee771373cf1ef2cab24cd4f46ded14f25d035,"Fixed tags for anonymous functions.
Fixed fixStm to handle BREAK, CONTINUE, empty SEMICOLON in all contexts.",dimvar,2010-07-27T01:29:41Z,dimvar,dimvar,347,334,13
116,doctorjs,c3d0a945581d9c1e72e767dc98556e399bb30b8c,"Finished core JS (for now).
1. eliminated VAR from the lhs of for/in
2. changed markConts for FOR_IN
3. added hasProp, hasNumericProp, hasStringProp
4. improved evalExp/PLUS_ASSIGN
5. handled FOR_IN in evalFun",dimvar,2010-07-26T23:44:18Z,dimvar,dimvar,181,130,51
117,doctorjs,717a65b3598a14b809bbcee8c63546693c268ab4,"Handled SWITCH statements. Changed getProp, updateProp to be methods instead of functions.",dimvar,2010-07-26T20:55:47Z,dimvar,dimvar,135,77,58
118,doctorjs,3d470418024475e125785593626372f042bd0742,"Handled op-and-assign operators.
Treated += specially, with new non-terminal PLUS_ASSIGN.",dimvar,2010-07-26T19:49:59Z,dimvar,dimvar,88,80,8
119,doctorjs,eb3880847fff22176a5086255acb1261985f3b5e,"Finished almost all expressions, only op-and-assign operators are left.
1. Handled RegExp and RegExp.prototype
2. Made some core objects global so that new Arrays & stuff can use them as prototypes.
3. typeof, void, delete, instanceof, in, hook, object_init, array_init",dimvar,2010-07-26T17:38:58Z,dimvar,dimvar,263,256,7
120,doctorjs,d6c414fc948f8fea37d77dead78f77fc868de2e3,fixed bugs in producing types for AUNDEF and variable arity functions,dimvar,2010-07-24T16:25:48Z,dimvar,dimvar,21,13,8
121,doctorjs,ba514aacf5ce82a5acedd9ca734d3d5ccd18cd39,"added all arithmetic, comparison, boolean, bitwise and shift operators.",dimvar,2010-07-24T01:04:17Z,dimvar,dimvar,222,210,12
122,doctorjs,583e90c9dbf5e061bb8bdf44fac8c465d076240e,"1. fixExp: unary_minus of a number becomes a negative NUMBER.
2. Handled variable arity funs, arguments array:
   - new ARGUMENTS non-terminal
   - change in evalExp, evalFun
3. Handled exception throw from return's or throw's expression.",dimvar,2010-07-23T21:45:27Z,dimvar,dimvar,158,152,6
123,doctorjs,28abde07b90cc8a36b428676faeca298bffe9b3e,"1. attached more info to builtin functions
2. handled Error, Error.prototype
3. handled exceptions thrown from exprs (evalLval, evalExp, evalFun changed)
4. added many tests for exceptions from exprs",dimvar,2010-07-22T23:54:58Z,dimvar,dimvar,503,452,51
124,doctorjs,4bff6df39f092f1cdf77e4bd76e98d427cc385c8,exceptions work for statements.,dimvar,2010-07-22T08:14:40Z,dimvar,dimvar,10,5,5
125,doctorjs,e22bfae6b3e0873f399af813e9e107caf7645b68,"1. Started on exceptions.
2. Changed frameSet and frameGet to use addrs instead of varnames, so that catch-vars don't shadow other vars in scope.",dimvar,2010-07-22T07:33:56Z,dimvar,dimvar,43,32,11
126,doctorjs,d955010f3d71e2ee2c33dbaf6ccdd09010026a32,new test for recursion,dimvar,2010-07-22T01:36:49Z,dimvar,dimvar,13,13,0
127,doctorjs,e81f4fbcd4469958ba5d370e7c43329cbc43b5d4,"unified SWITCH with other stms in evalStm, don't remember why I had it in a separate case.",dimvar,2010-07-21T23:57:27Z,dimvar,dimvar,13,4,9
128,doctorjs,26d833f80954edd3ddfaf0be5e7df7681c6c9d88,Fixed bug in processing of recursive functions,dimvar,2010-07-21T21:30:44Z,dimvar,dimvar,40,18,22
129,doctorjs,a99c0590a3faa122e0b56961d08f1669da8251ae,"Produces tags for commonJS modules.
Create an exports obj so that it exists when the program adds properties to it.
Add it to core and fix refs to ""exports"".
If in commonJSmode then getTags produces the special tags.",dimvar,2010-07-21T02:30:33Z,dimvar,dimvar,63,54,9
130,doctorjs,98a8dc2236a1b10bfb0ad2476c185c536a6c4772,substituted interp.js with my version. Produced tags for all my test cases.,dimvar,2010-07-20T23:28:32Z,dimvar,dimvar,523,40,483
131,doctorjs,ad770c1bb5795b90b9c312a48a7803f141c3e4ce,produce better types for constructors,dimvar,2010-07-20T21:52:04Z,dimvar,dimvar,462,456,6
132,doctorjs,cd363330b75fe7f66668d1adfd65ea52a16f22bb,"Started producing types for jsctags:
1. Removed global refs from my for/in`s
2. rewrote showSummaries
3. added methods rmElmAfterIndex, rmDups to Array.prototype
4. wrote type-producing funs: funToType, Aobj/toType, Aval/toType",dimvar,2010-07-20T19:54:26Z,dimvar,dimvar,103,75,28
133,doctorjs,d69d1ae56217fdf326c68229ddd0848a5064f16f,starting on jsctags. Temporarily moved interp.js to interp-old.js,dimvar,2010-07-20T01:03:02Z,dimvar,dimvar,974,530,444
134,doctorjs,35b6e7f8fde9a231be3a741b92197596373f4e33,changed error checking in for/in a bit,dimvar,2010-07-19T22:08:31Z,dimvar,dimvar,9,6,3
135,doctorjs,9eba0ccb61b18403c5feb9d9f2c21f1666edfedb,modified YIELD to have 0 or 1 args. Fixed error checking bug in forloops,dimvar,2010-07-17T22:01:29Z,dimvar,dimvar,15,12,3
136,doctorjs,75dcd3bcdc3192ecd31b647899ac3c6f6807f450,"jscfa: slightly modified aplus
ctags files: unimportant changes",dimvar,2010-07-17T01:28:43Z,dimvar,dimvar,16,12,4
137,doctorjs,75238b6d6c44efd073381b229b9e82edf867bd21,some tests,dimvar,2010-07-15T19:36:16Z,dimvar,dimvar,24,24,0
138,doctorjs,6e0d7dc4bc2ffc0a8b8e7a2c61f30c8a25511309,"1. added toNum, toStr, toBool that clean up the code-objects code
2. added support for String and String.prototype",dimvar,2010-07-15T19:34:54Z,dimvar,dimvar,85,53,32
139,doctorjs,da4b5d28e251ac335f241ac8ce551c524642e5c6,added Number and Number.prototype,dimvar,2010-07-15T19:03:43Z,dimvar,dimvar,53,53,0
140,doctorjs,eb9cc353bea82d4d1b72823426626a88e815ddca,added many Array.prototype methods,dimvar,2010-07-15T07:25:15Z,dimvar,dimvar,193,144,49
141,doctorjs,fac479448de186a8b793f119748ec6456b7e5ebe,"added Array methods, join and pop",dimvar,2010-07-15T01:35:45Z,dimvar,dimvar,22,21,1
142,doctorjs,2a953715be15c6518ca75fcc0dca7b4fc2342e80,"1. fixed bug in updateHeapObjProp (wasn't mutating heap)
2. added support for Array, its constructors, and Array.prototype
3. fixed bugs in INDEX in both evalExp and evalLval
4. fixed heap bug, forgot to update h when returning from updateHeapObjProp",dimvar,2010-07-15T00:57:15Z,dimvar,dimvar,171,134,37
143,doctorjs,46fb5512e55a2c526c73e2a5222ef4c5eb16496d,added Function and Function.prototype.prototype,dimvar,2010-07-14T19:00:27Z,dimvar,dimvar,28,27,1
144,doctorjs,80ba3ab63aee458a0f693646da3a4cd4e3032ae1,"1. evalExp handles TRUE, FALSE
2. added some methods to the ancestors of Object.",dimvar,2010-07-14T18:26:31Z,dimvar,dimvar,67,56,11
145,doctorjs,4d040db596c318f4414d029d5ea86a9c6c6690b4,"1. fixed bug in updateProto, it now changes the timestamp
2. Added functionality for the Object constructor",dimvar,2010-07-14T07:21:28Z,dimvar,dimvar,45,38,7
146,doctorjs,d3e3dbf95466d5c6b6c1859f4d2e8760f88acd65,"Started adding JS core objects.
Added Object, Object.prototype and Object.__proto__
No methods yet, but can access them successfully (new test)",dimvar,2010-07-14T01:29:19Z,dimvar,dimvar,77,60,17
147,doctorjs,888b0a4ea0c6f7383d67f2c1c44e42b9c2771f96,added a couple tests that show when the analysis is unsound,dimvar,2010-07-13T23:11:30Z,dimvar,dimvar,31,30,1
148,doctorjs,2728761cd20d6f70ace5077e54ea1ac4f1501168,handled property access using bracket notation,dimvar,2010-07-13T19:13:23Z,dimvar,dimvar,140,119,21
149,doctorjs,4ad91d4af4d5abd0ac281ab8f164a6f438285af4,fixed some comments,dimvar,2010-07-13T02:42:44Z,dimvar,dimvar,26,12,14
150,doctorjs,a82fe00d07ec9d6d080e825017e0c8863a61c440,"1. fixed wrong fall thru in initDecls
2. handled recursive functions

Access of the prototype property of functions must be handled specially because it's defined by default, but we don't want imprecise results when the programmer redefines it.
3. added new non-terminal DOT_PROTO
4. added code in evalLval & evalExp to handle creation & use of default prototype
5. added tests for the above",dimvar,2010-07-13T02:07:28Z,dimvar,dimvar,172,138,34
151,doctorjs,18be5e3ef5bd05136359c3f06763508ed0d5dfa5,added the files for the test suite,dimvar,2010-07-12T16:30:18Z,dimvar,dimvar,182,182,0
152,doctorjs,9fb255eb5b66bc8e8a3a88e288477974a8c6a4d0,"1. fixExp removes parens from GROUP expressions, no ambiguity.
2. bug in the algorithm when reading stack refs: a heap ref may modify the binding in the frame indirectly.
   Fixed.
   Use an array ""modified"" that tracks when each heap var was last updated.
   Reading and writing to frames abstracted (functions frameGet, frameSet).",dimvar,2010-07-12T10:23:28Z,dimvar,dimvar,130,76,54
153,doctorjs,e2cf8683a0a42b5bdb5e75039e8cad2bc1f5ded6,added function for testing. Cleaned up the exports.,dimvar,2010-07-09T00:13:33Z,dimvar,dimvar,86,54,32
154,doctorjs,2addfa02ff575436bbbdc8f936484b57cc766ce2,"1. Have a print function that can use either Node or Firebug's print
2. Add ""-"" in the end of property names to not accidentally shadow properties of core-JS objects
3. getHeapObjProp searches up the prototype chain correctly
4. Made aplus more precise",dimvar,2010-07-08T16:36:26Z,dimvar,dimvar,173,105,68
155,doctorjs,739d8bcdf26b7b4da44f2c1cd051d35a6917a3db,minor changes that were made in the TM-tree version as well,dimvar,2010-07-03T01:32:33Z,dimvar,dimvar,13,7,6
156,doctorjs,18147378884de79806079dee5d39f8c4a0ec66b8,fixed forgotten comma in jsdefs,dimvar,2010-07-01T21:34:19Z,dimvar,dimvar,6,3,3
157,doctorjs,06134a0e6891ce91cac7f8862b9e277c2985028f,Merge branch 'master' of git://github.com/pcwalton/jsctags,dimvar,2010-07-01T21:07:16Z,dimvar,dimvar,248,128,120
158,doctorjs,ee90f03baf1d4e0ab77dd9c03cba6feb8a8486b8,Dimitris' revised changes,Patrick Walton,2010-07-01T20:56:54Z,pcwalton,pcwalton,196,97,99
159,doctorjs,64a9bf7b5ca24a7495ddc17582ef0aae24acacc5,unimportant commit. Just starting on including core JS,dimvar,2010-07-01T01:38:20Z,dimvar,dimvar,16,12,4
160,doctorjs,d11d583b801b5648986f948a947d404263cc75e4,Whitespace police.,Patrick Walton,2010-07-01T01:33:47Z,pcwalton,pcwalton,43,21,22
161,doctorjs,62cafb569db1d6d5852759c7dedbb8bd623c8cdf,"""-> node"" => ""-> Tokenizer"" in jslex.js",Patrick Walton,2010-07-01T01:20:42Z,pcwalton,pcwalton,2,1,1
162,doctorjs,3bdb32a3a47a6acf3a568e50a65f1d50f30dc16f,Merge http://github.com/dimvar/jsctags,Patrick Walton,2010-07-01T00:13:17Z,pcwalton,pcwalton,2371,1677,694
163,doctorjs,7ffaf2260df0ae7a6af720987dcd7b86eff9bf47,"Fixed markConts to dig in exprs and mark functions.
Fixed initDeclsInHeap to handle functions in exprs.
EvalExp handles functions in expression context.
Improved Aval and removed initObj.
Tested method calls, seem to work.",dimvar,2010-06-30T19:39:04Z,dimvar,dimvar,206,147,59
164,doctorjs,85e6c433a6986d8885f878ac8a85f1908953ecae,all functions on expressions starting at markConts must handle FUNCTION,dimvar,2010-06-30T00:13:57Z,dimvar,dimvar,2,1,1
165,doctorjs,da38c74328af7d022b48496d27ce69d09b39e9ce,"1. Debugged DOT, ASSIGN, NEW_WITH_ARGS.
   Methods need more testing, because FUNCTION can appear in expression context.
2. Wrote function to initialize functions and variables in heap, to avoid undefined.",dimvar,2010-06-29T23:52:18Z,dimvar,dimvar,263,199,64
166,doctorjs,917b55a937b62e19de5ec2e7bd1d03fc4ff68308,"1. handled DOT notation as lvalue and rvalue
2. added the abstract value for undefined
3. added method calls
Needs testing",dimvar,2010-06-29T00:46:41Z,dimvar,dimvar,74,31,43
167,doctorjs,9d11528a1805b0236d6c2c7aa54dc7a6b13a746f,"1. Replaced UNKNOWN with BOTTOM. I was using it as BOTTOM more or less.
2. Created funs to update the heap and if needed the timestamp.
3. handle assignments in evanExp, which requires handling lvalues (evalLval).",dimvar,2010-06-28T22:48:40Z,dimvar,dimvar,97,75,22
168,doctorjs,c3ab2427c67221ad0c48d6e3a117b402697cc995,finished new_with_args,dimvar,2010-06-28T15:01:58Z,dimvar,dimvar,2,0,2
169,doctorjs,0d5035c9f9cc0ff6213922dedb4bafb06c5a405f,"added code for NEW_WITH_ARGS, as the first step to add code that handles objects",dimvar,2010-06-28T07:16:15Z,dimvar,dimvar,82,55,27
170,doctorjs,576ed3cd1b860166b75e429c705d071cf2a532f7,"1. avjoin now handles objects, not just base values.
2. unified the creation of abstract objects, no more makeFunObj.
3. working on constructor calls.",dimvar,2010-06-27T08:15:21Z,dimvar,dimvar,90,57,33
171,doctorjs,cfd58c6dbeae335685571c72a06eecef710e8e96,"markConts: returns and throws don't ignore their kreg to allow permissive
control flow.
Relevant change in evanFun.",dimvar,2010-06-27T04:44:13Z,dimvar,dimvar,16,7,9
172,doctorjs,37e2399774f042a235da29b2b4afbb2cb70a0f02,"1. added fun idNode to create identifier nodes.
2. fixStm changed return ; to return undefined;
3. Decided not to add return undefined to tail positions that don't return.",dimvar,2010-06-26T18:04:24Z,dimvar,dimvar,48,23,25
173,doctorjs,579450d14e3fdfa57be6a6a852ddb821e74aa0ba,foo,dimvar,2010-06-26T01:23:44Z,dimvar,dimvar,20,13,7
174,doctorjs,6449ae88e31b84e100c0ac154345e20e83b1963a,fixed bug in fixStm for FORs whose setup is null,dimvar,2010-06-25T23:05:49Z,dimvar,dimvar,13,8,5
175,doctorjs,39cb35e3bb1a8a8b87659fac9da7f953d3b8d3c7,fixed parsing of array initializers with consecutive commas,dimvar,2010-06-25T22:52:39Z,dimvar,dimvar,10,6,4
176,doctorjs,6943f6661630abafad276642bfb5c28c3f9e5b81,fixed bug with summary reuse,dimvar,2010-06-25T21:52:15Z,dimvar,dimvar,101,50,51
177,doctorjs,78308854e0234017bd870057a56532138f23da7d,"Summaries: code to store summaries, search them, don't analyze a function if there's a summary. Silly examples with + seem to work.",dimvar,2010-06-25T21:25:31Z,dimvar,dimvar,174,139,35
178,doctorjs,82f70b164d64f89782d88da3b890b948a4258ed0,made evalFun and evalToplevel work with summaries. Fixed bugs in summary functions. Used forEach instead of maph for arrays. Summaries now use 1 timestamp instead of 2.,dimvar,2010-06-25T01:20:57Z,dimvar,dimvar,219,139,80
179,doctorjs,4b1a16ab3213dc2957369e26e9da939a2150ab47,rewrote rest of code to use array utils.,dimvar,2010-06-24T18:34:35Z,dimvar,dimvar,143,55,88
180,doctorjs,447c253270fe79112349180aeef442d5eca16579,"Changed labelExp, labelStm",dimvar,2010-06-24T17:35:35Z,dimvar,dimvar,44,16,28
181,doctorjs,defbd4d7768a2894831009838308374e25ff32a2,"converting code to use array utils. Changed fixExp, fixStm",dimvar,2010-06-24T17:16:38Z,dimvar,dimvar,29,10,19
182,doctorjs,8bcbabaabc44aefbce78d1a0a10b96580845ec66,added some utility functions for arrays. Started adding code for recording summaries,dimvar,2010-06-24T07:47:36Z,dimvar,dimvar,72,66,6
183,doctorjs,c1619d438e30daee2a81d6d715ddcd1211d9cbd4,"Functions that process statements, function bodies and the toplevel are in place.
Next step is to gradually fill them in to handle more and more of the language.",dimvar,2010-06-24T00:34:51Z,dimvar,dimvar,163,145,18
184,doctorjs,efa5d6e729304c9b42362dd3256819a44ecb82e6,Fix the function name in JSONP output,Patrick Walton,2010-06-23T21:32:42Z,pcwalton,pcwalton,2,1,1
185,doctorjs,f20c9a21bec8e74750b66a30ef7d78ce1f8c1f20,"Don't use localeCompare(), it's evil",Patrick Walton,2010-06-23T21:23:52Z,pcwalton,pcwalton,17,14,3
186,doctorjs,cfc6c0dcea489150a5465c24ca92aa2d2c737087,started work on evalStm,dimvar,2010-06-23T00:13:14Z,dimvar,dimvar,26,13,13
187,doctorjs,7a88a8752ff2e9b19fee65d324c705e4ffb86de7,"fixed bug in handling of FORs vs FOR/INs, separate nodes in the AST",dimvar,2010-06-22T22:49:27Z,dimvar,dimvar,125,60,65
188,doctorjs,36332e5e54461c3febc3b99ad3c10640ed17268d,"1. update tsAtStart every time you go back to evalFun after a stack cleaning.
2. added one more debugging variable, aveq_lens
3. Rewrote the stack cleaning mechanism to a simpler and more aggresive strategy
   that throws every time the pending calls to evalFun have smaller timestamps.
   Made raytrace 10x slower because it tends to analyze calls that aren't
   needed. Went back to the old strategy.",dimvar,2010-11-07T21:36:08Z,dimvar,dimvar,41,22,19
189,doctorjs,74c7e211b78cc2fdd8bfe936ff9130faf1d8e658,removed core. I was treating global names in a non-uniform way.,dimvar,2010-11-06T02:23:21Z,dimvar,dimvar,72,32,40
190,doctorjs,1498d8617e99fbe84646dbb056c88b5453212d8e,fixed a couple comments,dimvar,2010-11-04T22:26:14Z,dimvar,dimvar,3,2,1
191,doctorjs,42ca10ac3bacc19f8243119872a463d1aeb709dd,added handling of SyntaxError,dimvar,2010-11-04T16:50:31Z,dimvar,dimvar,42,40,2
192,doctorjs,8208ca16465b62622f264a1ea666b51de2c61d22,added the isFinite method,dimvar,2010-11-03T22:30:13Z,dimvar,dimvar,1,1,0
193,doctorjs,0b817aca25c6918284e1faf3e6df401bcdc88a9f,"1. minor change in rmElmAfterIndex
2. process types to change <any | x> to any, improves raytrace.tags",dimvar,2010-11-03T21:48:28Z,dimvar,dimvar,30,20,10
194,doctorjs,fc367ad9243ba7c2077a0be24512bb1275c01643,fixed getctags to not depend on my dirs,dimvar,2010-11-03T19:24:31Z,dimvar,dimvar,6,3,3
195,doctorjs,b22663ce518f74ed6485f4f1012693cfa5026bc8,"Revert ""Print out tags for properties added to the global objects. Gets reasonable tags for jQuery again (although the line numbers are wrong).""

This reverts commit acb55da161ab43a5c550f8647b6a6bb31cad553e.
Go back to a stable version to run the benchmarks for the paper.",dimvar,2010-11-03T19:05:50Z,dimvar,dimvar,42,8,34
196,doctorjs,46dd19fff1e0c467e739a18a57f9b9062191af10,"Revert ""Remove some stray debug prints""

This reverts commit e94bb582bdfaff6d3b15d62dfedc5551ddc54a6d.
foo",dimvar,2010-11-03T19:05:39Z,dimvar,dimvar,2,2,0
197,doctorjs,c45e6eeaa0a1230689f0ace5b3c814bd46d36e53,"Revert ""Search deeply through all objects visible to the outside when generating tags files. Yields better tags for jQuery.""

This reverts commit 3d0a069bd1b4e99502514de802d2ee8bf7bf8e7e.
foo",dimvar,2010-11-03T19:05:22Z,dimvar,dimvar,90,44,46
198,doctorjs,017104737169ada4c726ac76c7c53c56de4e3525,"Revert ""Emit function body line numbers in the tags""

This reverts commit 13d7f557dad6ba44fcdff123a262ae20c778fed3.
foo",dimvar,2010-11-03T19:05:06Z,dimvar,dimvar,11,2,9
199,doctorjs,828d6f35914802872a5c0c51d5485df10251b2d8,"Revert ""Track where value assignments come from. Improves tags for jQuery.""

This reverts commit 1481140bd31934425e99a7e53850635253c755f3.
foo",dimvar,2010-11-03T19:04:49Z,dimvar,dimvar,66,29,37
200,doctorjs,86c6add4fdc3044633f06a25daa294321f10da1f,"Revert ""Do a better job of hiding built-ins from the output. Improves the output on jQuery.""

This reverts commit 313ef6619d3fa1d1c2e415ac3a37c9574e213cf8.
foo",dimvar,2010-11-03T19:04:31Z,dimvar,dimvar,70,36,34
201,doctorjs,bc7cc04f2613ab5f78d13cf3905624f91dd883e8,"Revert ""Dive into top-level variable declarations. Gives better results on script.aculo.us.""

This reverts commit df79b347d4793ce53d4b9eac8ac056f3e6cb9339.
foo",dimvar,2010-11-03T19:04:09Z,dimvar,dimvar,13,3,10
202,doctorjs,9192b2597637365ccbb216a8dd0fb2f390a87169,"Revert ""Don't crash on those evil statement-form functions. Prototype works now.""

This reverts commit 876ad35850fb07d208bde91452afd77b823aaa51.
foo",dimvar,2010-11-03T19:03:52Z,dimvar,dimvar,4,1,3
203,doctorjs,093b1b659731bc66da3364503f4945c10f54fea3,"Revert ""Walk top-level function declarations too, in browser mode. We get good tags for mozilla-central/toolkit/components/console/hudservice/HUDService.jsm now.""

This reverts commit 8cae99d4f058cdc58588be0c7bf93e32f1c41682.
foo",dimvar,2010-11-03T19:03:31Z,dimvar,dimvar,38,12,26
204,doctorjs,91e0fbb2b500ab0f0dfbcf0095e4693def2985a6,"Revert ""Update v8bench tags. Currently dies due to a stack overflow.""

This reverts commit 9b7dde83917701c7a28fbe33473980e2584cf95b.
Go back to a stable version to run the benchmarks for the paper.",dimvar,2010-11-03T19:02:36Z,dimvar,dimvar,706,138,568
205,doctorjs,00545ceec17a042ce8d3af54a18a40859174b688,"Revert ""Don't use the regex-search form if the line is long""

This reverts commit 8c1a13dfe83f4b20aa323ea7d3699e181232559c.
Go back to a stable version to run the benchmarks for the paper.",dimvar,2010-11-03T19:02:03Z,dimvar,dimvar,13,4,9
206,doctorjs,cadc60cacf1a0d59893a8ec52a61b04ed33dc882,"Revert ""1. tagVarRefsStm: arguments is used only once, no need for the var decl""

This reverts commit 54b2b67e923e9fd67f9e8dccc5e593e26342473f.
Go back to a stable version to run the benchmarks for the paper.",dimvar,2010-11-03T19:01:31Z,dimvar,dimvar,12,6,6
207,doctorjs,82f5a2d0f733705834eee931cbc867af512d1ad7,"Revert ""1. Undid my last change in tagVarRefsStm because arguments was being rebound.""

This reverts commit 596379651f58511122f5bfb840cd513183d12d98.
Go back to a stable version to run the benchmarks for the paper.",dimvar,2010-11-03T18:59:57Z,dimvar,dimvar,7,3,4
208,doctorjs,ed97035498d04cff90720f9629c2b30ba7a3f346,"Revert ""Comment out the bit that calls uncalled functions. Was causing a hang on jQuery.""

This reverts commit 2231ae5ca2a40cf45e2909c35dab6ec7817d0490.
Need a stable branch to run the benchmarks for the paper.",dimvar,2010-11-03T18:57:06Z,dimvar,dimvar,16,8,8
209,doctorjs,596379651f58511122f5bfb840cd513183d12d98,"1. Undid my last change in tagVarRefsStm because arguments was being rebound.
2. Changed getctags to not depend on my directory structure.",dimvar,2010-11-03T15:48:43Z,dimvar,dimvar,7,4,3
210,doctorjs,54b2b67e923e9fd67f9e8dccc5e593e26342473f,"1. tagVarRefsStm: arguments is used only once, no need for the var decl
2. initCoreObjs: use goav instead of recreating the same abstract value
3. Use global_object_addr to hide the representation of abstract objects in
   unrelated parts of the code",dimvar,2010-11-02T21:46:07Z,dimvar,dimvar,12,6,6
211,doctorjs,8c1a13dfe83f4b20aa323ea7d3699e181232559c,Don't use the regex-search form if the line is long,Patrick Walton,2010-10-28T18:46:50Z,pcwalton,pcwalton,13,9,4
212,doctorjs,9b7dde83917701c7a28fbe33473980e2584cf95b,Update v8bench tags. Currently dies due to a stack overflow.,Patrick Walton,2010-10-19T19:52:42Z,pcwalton,pcwalton,706,568,138
213,doctorjs,8cae99d4f058cdc58588be0c7bf93e32f1c41682,"Walk top-level function declarations too, in browser mode. We get good tags for mozilla-central/toolkit/components/console/hudservice/HUDService.jsm now.",Patrick Walton,2010-10-16T02:19:51Z,pcwalton,pcwalton,38,26,12
214,doctorjs,876ad35850fb07d208bde91452afd77b823aaa51,Don't crash on those evil statement-form functions. Prototype works now.,Patrick Walton,2010-10-16T02:02:27Z,pcwalton,pcwalton,4,3,1
215,doctorjs,df79b347d4793ce53d4b9eac8ac056f3e6cb9339,Dive into top-level variable declarations. Gives better results on script.aculo.us.,Patrick Walton,2010-10-16T01:22:54Z,pcwalton,pcwalton,13,10,3
216,doctorjs,313ef6619d3fa1d1c2e415ac3a37c9574e213cf8,Do a better job of hiding built-ins from the output. Improves the output on jQuery.,Patrick Walton,2010-10-16T00:57:06Z,pcwalton,pcwalton,70,34,36
217,doctorjs,1481140bd31934425e99a7e53850635253c755f3,Track where value assignments come from. Improves tags for jQuery.,Patrick Walton,2010-10-16T00:16:21Z,pcwalton,pcwalton,66,37,29
218,doctorjs,13d7f557dad6ba44fcdff123a262ae20c778fed3,Emit function body line numbers in the tags,Patrick Walton,2010-10-15T23:54:15Z,pcwalton,pcwalton,11,9,2
219,doctorjs,3d0a069bd1b4e99502514de802d2ee8bf7bf8e7e,Search deeply through all objects visible to the outside when generating tags files. Yields better tags for jQuery.,Patrick Walton,2010-10-15T23:24:00Z,pcwalton,pcwalton,90,46,44
220,doctorjs,e94bb582bdfaff6d3b15d62dfedc5551ddc54a6d,Remove some stray debug prints,Patrick Walton,2010-10-15T22:06:29Z,pcwalton,pcwalton,2,0,2
221,doctorjs,acb55da161ab43a5c550f8647b6a6bb31cad553e,Print out tags for properties added to the global objects. Gets reasonable tags for jQuery again (although the line numbers are wrong).,Patrick Walton,2010-10-15T22:03:43Z,pcwalton,pcwalton,42,34,8
222,doctorjs,2231ae5ca2a40cf45e2909c35dab6ec7817d0490,Comment out the bit that calls uncalled functions. Was causing a hang on jQuery.,Patrick Walton,2010-10-15T20:38:10Z,pcwalton,pcwalton,16,8,8
223,doctorjs,c393a318997f314a5ed8d98900b691bb88fb37ca,unsound change to prevent jQuery from throwing an exception,dimvar,2010-10-13T18:57:28Z,dimvar,dimvar,6,4,2
224,doctorjs,8c9825605d8ee85f0c3809cc4fff8d3826f914d9,"bugfix: for soundness, summaries should use the timestamp of the function's entry, not of the exit",dimvar,2010-10-12T03:23:24Z,dimvar,dimvar,36,27,9
225,doctorjs,2251a154474e085a76dc524bca26d3bb3cb09812,"1. when analyzing uncalled functions, pass a generic object for THIS instead of the global object.
2. when accessing computed properties, join string properties but don't merge them in the object.
   Tags in sunspider and v8 changed slightly.
3. Dave's prorgam in bug 595396 is now test171.
4. The temporary files jscfa-current and jscfa-tmp-strings are now gone.",dimvar,2010-10-09T03:43:43Z,dimvar,dimvar,7336,139,7197
226,doctorjs,0de57c8063406645bcef9d1dd111e142fe75f291,"changes to avjoin, aveq, avlt added to jscfa-tmp-strings",dimvar,2010-10-08T18:16:22Z,dimvar,dimvar,51,40,11
227,doctorjs,c7fa811d6da021761e08fca6fa59d4a1085d6b71,small change in the places where timestamp is updated,dimvar,2010-10-08T15:59:00Z,dimvar,dimvar,165,138,27
228,doctorjs,2a6d7a7aa8df325ad8a3519bba6fba0717ae60c3,"1. added heap-dumping functions to jscfa as well
2. sped up avjoin, aveq a little bit in jscfa",dimvar,2010-10-08T13:21:47Z,dimvar,dimvar,92,84,8
229,doctorjs,5cd216ac9538c593c21461492af60a2ff69f1bce,testing commit from school,dimvar,2010-10-07T22:23:16Z,dimvar,dimvar,2,1,1
230,doctorjs,d460edad6eaabf65e2d9b5ece09ef12fc93ad63d,wrote functions to dump heap in file for debugging,dimvar,2010-10-07T22:17:44Z,dimvar,dimvar,83,74,9
231,doctorjs,700a79638ac28066e9e9404e308db944361afe65,some .svn folder forgotten in there,dimvar,2010-10-07T19:52:16Z,dimvar,dimvar,833,0,833
232,doctorjs,ceffdbc843ef98a06f0b3f000d28c41f779237fb,some debug prints in tmp-strings,dimvar,2010-10-07T18:19:16Z,dimvar,dimvar,28,15,13
233,doctorjs,6be70ef4024b652687fee27578d0dce529cee87f,foo,dimvar,2010-10-07T03:56:41Z,dimvar,dimvar,2,1,1
234,doctorjs,18c2dd69bae34961479ab6f96f89cfe2fcbe3dce,Trying to track the frames of evalFun manually to see what fills the stack,dimvar,2010-10-07T03:33:12Z,dimvar,dimvar,23,13,10
235,doctorjs,a3c96985a87cada6a0645de2e8689add9d81aad8,added some variations to jscfa while bug fixing,dimvar,2010-10-07T01:19:42Z,dimvar,dimvar,6891,6891,0
236,doctorjs,2500075689501dffd9da54cd69742759b2eabf78,tiny name change,dimvar,2010-10-07T01:15:19Z,dimvar,dimvar,8,4,4
237,doctorjs,8b1822bd88db4f698f9389cef8d834c059e28b0a,"Baby steps on getters, setters, and yield",Patrick Walton,2010-09-01T21:38:17Z,pcwalton,pcwalton,47,41,6
238,doctorjs,a7b72127941f77b7c82a170b83d70e541b0da97b,Merge branch 'master' of github.com:pcwalton/jsctags,dimvar,2010-09-01T10:41:32Z,dimvar,dimvar,235,152,83
239,doctorjs,6149d4da0ce6f04076f593acd9ea1d539febeb99,"added some code for debugging/profiling. Can't seem to make v8/raytrace faster for now. Also, the stack cleaning mechanism *is* essential for no blowup after all, eg sunspider/3d-cube blows up w/out it.",dimvar,2010-09-01T10:41:03Z,dimvar,dimvar,60,37,23
240,doctorjs,9e7b1c8d07ecb131a2ea9f5e48aa46108fc5321a,"Analyze Mozilla-style "".jsm"" modules too",Patrick Walton,2010-08-31T21:25:52Z,pcwalton,pcwalton,3,2,1
241,doctorjs,268845ef0068911b64580b1f8e8c021fb6f4186e,Add an encoding to readFileSync(). Closes #6.,Patrick Walton,2010-08-31T21:23:19Z,pcwalton,pcwalton,2,1,1
242,doctorjs,63bd03d573e41a5bfe9b45ae3c3f6c7d8fae8bd2,Hack Traits to avoid V8's broken Object.freeze(). Closes #9.,Patrick Walton,2010-08-31T20:49:16Z,pcwalton,pcwalton,230,149,81
243,doctorjs,3dff9f9a8d1ef65f2192e878af03630778efd4f2,fixed buggy test,dimvar,2010-08-31T10:27:41Z,dimvar,dimvar,2,1,1
244,doctorjs,7de9d1e69f0e3526e585d23f0d643dd9d7791cb3,Added codes to errors thrown by jscfa so that DrJS gives better error msgs.,dimvar,2010-08-31T10:17:17Z,dimvar,dimvar,33,24,9
245,doctorjs,29d90c754c33ccc0a15aecd5bc24b37978d0d80d,"- removed some old comments
- removed sunspider/README
- bugfix: the toplevel environment binds THIS (fixes last v8 crash)
v8 dir needs cleanup! (merge with its google subdir etc)",dimvar,2010-08-31T09:11:33Z,dimvar,dimvar,66,29,37
246,doctorjs,1cc7aa7451f5d3b4675468a440792a9a6c332e86,bugfix: repeatedly parses post-fix function type information for higher-order function types,David Herman,2010-08-29T15:56:09Z,David Herman,David Herman,4,2,2
247,doctorjs,0b5f5bed79138055f62532181a171aad6ed575b6,just testing,dimvar,2010-08-26T16:41:38Z,dimvar,dimvar,2,1,1
248,doctorjs,d4ea34b7dfe2f3f4d0e3773f45baf4c4611e7625,Merge branch 'master' of http://github.com/dimvar/jsctags,Patrick Walton,2010-08-25T18:02:50Z,pcwalton,pcwalton,1199,600,599
249,doctorjs,816ffc3dee2597f51225fcfa87f9b1578c511905,"- `dr.js -n` to run static site without JSON server (useful for testing UI error behavior)
- lots of UI changes:
  * twitter-like notification bar for errors
  * cosmetic changes to the tooltip bubbles in index.html
  * ajaxy progress animation while waiting for server
  * fixed a variable shadowing bug (status) that was causing tooltip bubbles to reload every time
  * try.html puts results in a formatted div instead of a textarea
  * try.html results are pretty-fied instead of just given as raw JSON",David Herman,2010-08-25T00:16:27Z,David Herman,David Herman,1379,187,1192
250,doctorjs,ba54b8282627d6130c9b43ae3e555db50c3744a6,"- `dr.js -n` to run static site without JSON server (useful for testing UI error behavior)
- lots of UI changes:
  * twitter-like notification bar for errors
  * cosmetic changes to the tooltip bubbles in index.html
  * ajaxy progress animation while waiting for server
  * fixed a variable shadowing bug (status) that was causing tooltip bubbles to reload every time
  * try.html puts results in a formatted div instead of a textarea
  * try.html results are pretty-fied instead of just given as raw JSON",David Herman,2010-08-25T00:10:48Z,David Herman,David Herman,182,182,0
251,doctorjs,347a530a5f80b32a5a2b353a7512e6eff521b8f9,Merge branch 'master' of git://github.com/pcwalton/jsctags,dimvar,2010-08-24T17:23:21Z,dimvar,dimvar,2601,2555,46
252,doctorjs,7fa1b34ec90e024de373c9b351f90c4f2cb951e8,"changed how to compute the return type of constructors, more precise now. Also, reran on v8 and got better tags (didn't rerun at prev commit)",dimvar,2010-08-24T09:18:22Z,dimvar,dimvar,1199,600,599
253,doctorjs,1d68b68acf6359194866cb05eacb7bf3998a1823,"- indentation police
- added static Doctor JS files in html/doctorjs
- servetypes.js now contains the JSON service
- dr.js can now serve the entire site with -s option",David Herman,2010-08-23T22:32:39Z,David Herman,David Herman,1898,1801,97
254,doctorjs,80356f3bf69ba8538a9a466dbde17e7f7aad978a,clear timeout on success,David Herman,2010-08-22T20:56:06Z,David Herman,David Herman,10,7,3
255,doctorjs,defa1ddef822d387810c5ea06065f9fc89cdd601,fixed typo,David Herman,2010-08-22T20:53:08Z,David Herman,David Herman,2,1,1
256,doctorjs,6bd44e3cc5ef65856dbbbe67297a054fdb293397,spawns a child process (rn.js) to do the heavy computation,David Herman,2010-08-22T20:49:39Z,David Herman,David Herman,41,21,20
257,doctorjs,28bcd1f31cb2ba921fe7ab78579ef9cbfc56bf28,"Merge branch 'master' of http://github.com/dimvar/jsctags

Conflicts:
	bin/drjs.js
	bin/rn.js
	bin/typo.js",Patrick Walton,2010-08-22T20:23:45Z,pcwalton,pcwalton,3868,3801,67
258,doctorjs,f34ce33d3d85dfde657e3347ba0d06652d651694,RN JS: the doctor's surrogate (and the one who does all the work),David Herman,2010-08-22T19:13:58Z,David Herman,David Herman,78,78,0
259,doctorjs,b40a9e0db8e7401c5d59cdebf620b3e3e110e041,changed drjs to record the source code on error (the same thing i did for servetypes),dimvar,2010-08-22T15:49:08Z,dimvar,dimvar,17,11,6
260,doctorjs,5af62c822ce664e62aac8585341350e88d16df04,changed cfa2ToJSON so that it records the src text on error,dimvar,2010-08-22T12:31:28Z,dimvar,dimvar,17,11,6
261,doctorjs,a02a5c9cea8bf14d80ddccf236dfca9e25037197,produces JSON error information when parsing or analysis fails,David Herman,2010-08-21T23:49:50Z,David Herman,David Herman,23,16,7
262,doctorjs,dc8f6a2cdc66e5f49863e8624620128a819ca4b2,and the def of print,dimvar,2010-08-21T11:15:52Z,dimvar,dimvar,22,11,11
263,doctorjs,4395498eaf2dbef617a9a834abc73bc26d63d8fb,commented out prints,dimvar,2010-08-21T11:14:52Z,dimvar,dimvar,24,12,12
264,doctorjs,995e3e57cb04ca9fd776a29ee4fb165a3044769a,"1. property lookups (getProp) are aware of cycles in the prototype chain.
2. functions that use seenObjs ensure that it's trimmed correctly in loops.
3. funToType doesn't crash for built-in functions.
4. rm`ed redundant code in funToType that was causing bugs in printing of types.
5. depth is now increased/decreased in the correct places.
6. fixed most v8 crashes (1 left in boyer), added tags files.",dimvar,2010-08-21T01:29:54Z,dimvar,dimvar,2318,2262,56
265,doctorjs,0a296a6135d7ad8621229763a7f7fcdc839dc6f2,basic functionality for the JSON server,David Herman,2010-08-20T23:34:10Z,David Herman,David Herman,65,50,15
266,doctorjs,7f0aad1724bede02b01fe02c498e54fd644e8956,"added the ""formidable"" library to use in dr.js",David Herman,2010-08-20T23:26:26Z,David Herman,David Herman,683,683,0
267,doctorjs,88c8ea12ae7381ad207f2e22939766124d1bc1fc,renamed typo.js to dr.js in honor of our new site,David Herman,2010-08-20T23:10:01Z,David Herman,David Herman,0,0,0
268,doctorjs,2db1948e9292ca41ef690e11e9dc793afe150a2c,renamed typo.js to drjs.js,Dimitrios Vardoulakis,2010-08-18T20:12:47Z,Dimitrios Vardoulakis,Dimitrios Vardoulakis,0,0,0
269,doctorjs,46cb53f06018e55ac79eb1f502458be718efdcb0,added code for my demo website,dimvar,2010-08-18T20:10:23Z,dimvar,dimvar,1499,1499,0
270,doctorjs,108adea16bccc882c7da2c230bc194dad83e0ecc,added file that produces the tags in JSON format,dimvar,2010-08-18T20:05:18Z,dimvar,dimvar,24,24,0
271,doctorjs,1868d634a086c14b0a554ced73d8fb3ed684ef0e,Add initial version of Typo server,Patrick Walton,2010-08-17T21:17:04Z,pcwalton,pcwalton,95,68,27
272,doctorjs,35e945568cabfd2180941553b419b64f3e2af9a8,Add servetypes.js from Bugzilla bug 586825,Patrick Walton,2010-08-17T19:30:48Z,pcwalton,pcwalton,27,27,0
273,doctorjs,70e1871877c48ad002fdac7fb4633a7f96d7313b,forgot to add test case,dimvar,2010-08-13T19:25:26Z,dimvar,dimvar,13,13,0
274,doctorjs,471fc7786acdacb126c7711bd30ca40e0605dfd9,fixed infinite loop when printing types of circular objects,dimvar,2010-08-13T19:23:29Z,dimvar,dimvar,44,27,17
275,doctorjs,0f3c8cbe617b72bae51758a3d6a45b454d7be0bd,"when assigning to the arguments array, do sth stupid just to avoid crashing",dimvar,2010-08-11T22:26:59Z,dimvar,dimvar,6,6,0
276,doctorjs,9b3266c850fb8677381f418f7ae3ce953649a081,"run cfa2 for all funs that haven't been run, not just toplevel ones",dimvar,2010-08-11T21:55:01Z,dimvar,dimvar,7,0,7
277,doctorjs,9e5813b94e14de50f5607986d0500aa60b322cc9,"run cfa2 for all funs that haven't been run, not just toplevel ones",dimvar,2010-08-11T21:54:47Z,dimvar,dimvar,144,76,68
278,doctorjs,08db8478226a81201213403c38b65d44390215e7,find names for some anonymous functions using heuristics,dimvar,2010-08-11T21:49:37Z,dimvar,dimvar,114,63,51
279,doctorjs,91924427fc46163f59ab7a88c9f356a2f02b983a,"Added tags for toplevel variables, all tag files for SunSpider changed.
Fixed bug w/ infinite recursion in presentation of types.",dimvar,2010-08-11T18:37:35Z,dimvar,dimvar,203,182,21
280,doctorjs,562c21739aff2e0766f215c4e5088b8f9480f651,added linenumbers to tags and started recording toplevel vars in heap for use in ctags,dimvar,2010-08-10T05:10:12Z,dimvar,dimvar,498,242,256
281,doctorjs,700029b8762c13bb2f09567d737acc7f2eaeaa27,"It may be that after the fix in arraymerge and timestamp-changing functions, the exception throwing mechanism isn't necessary because the stack doesn't grow too much. (It grows only in heap changing, recursive functions.) Added a test to exercise the exception mechanism.",dimvar,2010-08-09T18:26:59Z,dimvar,dimvar,27,27,0
282,doctorjs,ff1481d8b8cda6f649dca397e993b32c9b6785e5,"- fixed stack blow-up! Many frames down the stack aren't needed, discard by
  throwing exception and recomputing
- 2 seconds on all SunSpider (with 3d-cube)
- updateHeapAv, updateProp bug fix: first join, then compare, o/w an assignment
  with a low Aval will always bump the timestamp
- funToType: changed types of functions called with new",dimvar,2010-08-08T09:43:31Z,dimvar,dimvar,266,180,86
283,doctorjs,1f436c905dc44c6d4f6ee341db404e78d621b50a,"add exception Aval to Ans in constructor, instead of separately",dimvar,2010-08-07T23:34:27Z,dimvar,dimvar,58,22,36
284,doctorjs,541f88742a78aa92c492f62c4ffc70bf32aa1f8d,"- fixed major bug in joining, duplicates could be in the sets of Aval`s
- fixed bug, exceptions go in summaries, they're propagated when summary is used
- mergeNumProps doesn't bump timestamp, not needed",dimvar,2010-08-07T07:18:41Z,dimvar,dimvar,131,80,51
285,doctorjs,6c3f82c16d5bc7bdc195005ec88b38eb1c4af9e8,"- if a function doesn't use return, its rettype is reported as void instead of undefined
- increased debugging info for calls to unknown targets",dimvar,2010-08-06T22:20:35Z,dimvar,dimvar,68,43,25
286,doctorjs,49850e5e4df62ed0826c9bdb79fc5cfa51ce2373,"- fixed bug, updating a stack ref of a heap var can change the heap
- made the ret val of Aobj.prototype.getProp consistent
- fixed bug, array lits and regexp lits have properties attached correctly
- implemented apply and call ways of calling functions
- gave all built-in funs an arity, needed by apply
- String.prototype.match, String.prototype.split
- RegExp.prototype.exec
- cleaned-up the code of evalExp/ _call and _new_with_args
- added many tests",dimvar,2010-08-06T19:08:59Z,dimvar,dimvar,610,479,131
287,doctorjs,db687ee29aaea0945f5f9c6c66bf85676aa8bd8f,"Added Array methods: concat, slice, sort, splice.
Some unsoundness in array methods eliminated.",dimvar,2010-08-03T20:33:04Z,dimvar,dimvar,106,80,26
288,doctorjs,af1c196de5febf3361ee2a09d6e83044fc77981c,Added message to Makefile,thaddee tyl,2011-08-15T14:11:18Z,espadrine,espadrine,3,3,0
289,doctorjs,44d9930077859b5ea3e24737503d6eb2dde58d30,Updated Makefile for NODE_PATH goodness,thaddee tyl,2011-08-15T13:12:06Z,espadrine,espadrine,6,6,0
290,doctorjs,048ce21d86cc950a1f6fc48be64013125c880382,Makefile updated to the current tree. jsctags lives,thaddee tyl,2011-08-15T10:02:09Z,espadrine,espadrine,17,12,5
291,doctorjs,3bdfb5af3dea24c349f0692d88290bc0041c97e6,Sync'd w/ narcissus,dimvar,2011-08-11T15:24:40Z,dimvar,dimvar,2,1,1
292,doctorjs,d2bcbe42c40a1c24e1f644e441cdd1ee7955c552,require.paths doesn't exist anymore. Set the NODE_PATH env variable instead before running jsctags.,dimvar,2011-08-11T15:15:10Z,dimvar,dimvar,3,0,3
293,doctorjs,e6b9ec7625615e309165dd22be6a71aa08ed415e,Merge branch 'devel',dimvar,2011-08-11T14:06:18Z,dimvar,dimvar,143,83,60
294,doctorjs,0bb5c4054089482920fe3dd5dd2e617cdec9acc4,Fixed conflicts after the merge.,dimvar,2011-08-05T19:29:28Z,dimvar,dimvar,143,83,60
295,doctorjs,95743a0562bd391564a3068bbb00209df1693a14,"1. Rewrote the stack-cleaning policy to be more aggressive.
   When we analyze evalFun(fn, args, ...) and there is a pending
   call to fn with smaller timestamp, clear the stack even if the
   arguments of the pending call are different from args.
2. Created a subclass of Error called StackCleaner, to not confuse
   my stack management ""errors"" with actual analysis errors.
3. Bugfix in event classification, when addEventListener flows to
   some variable and then gets called.
4. Removed some debugging code.",dimvar,2011-08-05T02:53:58Z,dimvar,dimvar,172,78,94
296,doctorjs,70598714388ef01e569b21cdfeb94b4d43339f87,eliminate illegal characters from generated handler function name,Dave Herman,2011-08-03T07:39:59Z,Dave Herman,Dave Herman,2,1,1
297,doctorjs,7ab5652ae0edfec8a69706ad659eee5f171d15e9,properly produce test results in a file we can monitor,Dave Herman,2011-08-02T22:25:29Z,Dave Herman,Dave Herman,78,50,28
298,doctorjs,547287b4c243f85c3cecb1be7215133d6e897d2d,fixed timeout logic,Dave Herman,2011-08-02T18:43:16Z,Dave Herman,Dave Herman,4,2,2
299,doctorjs,00c1f1f5755b6543c2fc3c8852f05de44a93076a,added 5-minute timeout,Dave Herman,2011-08-02T05:42:30Z,Dave Herman,Dave Herman,21,21,0
300,doctorjs,5b7b23749dfa3e8c2d8dda84f9263ff5b4ddefb9,places all results in the directory containing the XPI,Dave Herman,2011-07-29T23:10:36Z,Dave Herman,Dave Herman,7,3,4
301,doctorjs,486fcfd48c98d46b91e220ab93a906d431298cfc,updated desugaring,Dave Herman,2011-07-27T00:12:48Z,Dave Herman,Dave Herman,2,1,1
302,doctorjs,eecbe6ad2b106d9bc777f409d817e20c07f23702,"rewrote e10s extraction:
- uses node.js exclusively; no more SpiderMonkey shell
- doesn't use the XPI parser at all; just finds all JS/JSM/XUL files",Dave Herman,2011-07-25T21:29:07Z,Dave Herman,Dave Herman,1268,645,623
303,doctorjs,3236fef9b6168b28af469671791d0b476b2929e0,Merge branch 'master' of github.com:mozilla/doctorjs,Dave Herman,2011-07-25T21:23:15Z,Dave Herman,Dave Herman,172,93,79
304,doctorjs,552b773712aaf828b03b0593dc08cdff6117dc4a,rewriting; this will be replaced with a node version,Dave Herman,2011-07-25T21:21:09Z,Dave Herman,Dave Herman,77,46,31
305,doctorjs,626cdabadc82e2450858a023f6ca81b806bf8ad5,Removed debugging line.,Dimitris Vardoulakis,2011-07-25T12:29:27Z,dimvar,dimvar,1,0,1
306,doctorjs,d56a842ed04560ef657d87dcf2734145b4bc28f6,"1. Bugfix when removing elms from pending.
2. Small changes to the stack-recording data structures.
   - No longer using a hash function in Pending.
   - No longer recording the stack depth to use when clearing the stack.
3. Minor clean-ups.",Dimitris Vardoulakis,2011-07-24T04:48:07Z,dimvar,dimvar,156,68,88
307,doctorjs,3dc210113aad4ccfa6df84bf9c0bf73ffd744568,"1. Bugfix when removing elms from pending.
2. Small changes to the stack-recording data structures.
   - No longer using a hash function for Pending.
   - No longer recording the stack depth to use for stack cleaning.
3. Minor clean-ups.",Dimitris Vardoulakis,2011-07-24T04:48:07Z,dimvar,dimvar,114,28,86
308,doctorjs,c8d4e9421e3118bf7a9e93c30c05f41be3b60462,fixExp handles LET_BLOCKs.,Dimitris Vardoulakis,2011-07-23T04:54:18Z,dimvar,dimvar,27,20,7
309,doctorjs,f1998cecea70742bda82fbdf5f296eca2756cc06,"1. Handling more event types.
2. Handling properties selectedBrowser, top, getBrowser()
3. Handle array literals with holes.
4. evtClassify uses the desugaring module of Narcissus.",Dimitris Vardoulakis,2011-07-22T22:54:26Z,dimvar,dimvar,66,63,3
310,doctorjs,2b85dacf6dc6aba9fb2014cd04cce50dbac960be,"1. Handled LET in for-loop heads.
2. Bugfix when converting from NEW to NEW_WITH_ARGS",Dimitris Vardoulakis,2011-07-22T17:51:53Z,dimvar,dimvar,67,59,8
311,doctorjs,046e46722ff650ddd47810e61b2d87ee648d4596,Read-only URL for narcissus submodule.,Dimitris Vardoulakis,2011-07-22T15:16:49Z,dimvar,dimvar,2,1,1
312,doctorjs,c765f0d2218bd72b71cda73cdf12e9f4a1f8c894,New narcissus commit.,Dimitris Vardoulakis,2011-07-22T12:11:33Z,dimvar,dimvar,2,1,1
313,doctorjs,be287fe0972bc3019b6109c4ccad4cc70885ef21,"1. Handle function nodes declared in blocks, add them to funDecls.
2. Support some more properties of DOM objects.
3. Support more kinds of events.",Dimitris Vardoulakis,2011-07-21T22:00:51Z,dimvar,dimvar,82,57,25
314,doctorjs,ec3f28515c8d80b5be3c5e11da262bfbce8c4839,Run e10s using bash.,Dimitris Vardoulakis,2011-07-21T19:18:39Z,dimvar,dimvar,2,1,1
315,doctorjs,22b7376e2699d988a6c1c5dd6d1abbfcabf0852c,Pulled out the tagVarRefs/IDENTIFIER case to avoid duplication.,Dimitris Vardoulakis,2011-07-21T18:04:08Z,dimvar,dimvar,140,50,90
316,doctorjs,a911d364bbaf259738aac93dcf8c516cd566c307,"Don't crash on getters/setters, yield.",Dimitris Vardoulakis,2011-07-20T21:47:40Z,dimvar,dimvar,44,39,5
317,doctorjs,92e99e3254791634a6a9c650fae41870a327040c,Merge branch 'master' of git@github.com:mozilla/doctorjs,Dimitris Vardoulakis,2011-07-20T19:19:19Z,dimvar,dimvar,871,870,1
318,doctorjs,5ef9289019541480b29f06ecf1e1651179026d3f,"1. The analysis handles let-statements, let-definitions and
   let-expressions by desugaring and using fresh variables.
   - fixStm handles LET and LET_BLOCK.
   - Pulled initsToAssigns to the toplevel, desugarLet uses it.
   - The AST walker handles LET and LET_BLOCK.
   - desugarLet uses a substitution function.
   - Added tests.
2. bugfix in fixStm, add empty varDecls to BLOCK.
3. bugfix in fixStm, don't create empty SEMICOLON.
4. Cleaned up some tests.",Dimitris Vardoulakis,2011-07-20T18:56:29Z,dimvar,dimvar,628,394,234
319,doctorjs,4ecc017c6e9a21f1a9fbfae2e7b8b0eedc2fc593,now with recursive XPI/JAR extraction,Dave Herman,2011-07-19T02:26:42Z,Dave Herman,Dave Herman,161,156,5
320,doctorjs,bb989a727303bb3592d9b52c9ed7cf08f1e1389e,"Merge branch 'master' of github.com:mozilla/doctorjs

Conflicts:
	narcissus",Dave Herman,2011-07-19T01:02:45Z,Dave Herman,Dave Herman,0,0,0
321,doctorjs,803db8f4b13f07a1dfadb95f3255f7b02274fde9,updated Narcissus to get parser extension,Dave Herman,2011-07-19T01:00:45Z,Dave Herman,Dave Herman,2,1,1
322,doctorjs,560e4ec10f90663d14b10d4c169d7ca0303e0a5a,basic JS extraction tools for unpacked XPI's,Dave Herman,2011-07-19T01:00:01Z,Dave Herman,Dave Herman,718,718,0
323,doctorjs,92529cb67d19fb6d2b748ab723b36604232044a6,"1. Wrote a generic AST-walker function.
2. Rewrote labelStm, markConts, initDeclsInHeap, evalLval, evalExp, evalStm to use it.
3. Added memq to find array membership using strict equality.
4. Rewrote fixExp and friends to use the new arity arrays.
5. Removed opArity.",dimvar,2011-07-15T20:42:25Z,dimvar,dimvar,1409,601,808
324,doctorjs,eabb9f218ba4abb77441313c8297f5f172027971,"1. Generate new token IDs for the expression non terminals I introduce,
   instead of reusing IDs from statements.
2. Minor clean-ups.",dimvar,2011-07-14T19:43:48Z,dimvar,dimvar,63,25,38
325,doctorjs,6d5a1df412e3fef71efb0fa8e20ac428ac95b7d1,Working on WITH,dimvar,2011-07-14T14:32:14Z,dimvar,dimvar,15,14,1
326,doctorjs,0a0da7ebfadba13b6bfdebcace918d26eb058bfd,Removed handling of GROUP in jscfa. Narcissus no longer produces GROUP nodes.,dimvar,2011-07-13T22:28:51Z,dimvar,dimvar,5,1,4
327,doctorjs,6c6bf3c9448ff2d4fb22e546db19053eaee990f1,"1. Split the generic boolean abstract value to true & false abstract values.
2. We can analyze the NOT and IN operators more precisely now.
3. Added tests for the changes.",dimvar,2011-07-13T18:47:50Z,dimvar,dimvar,150,124,26
328,doctorjs,7d90e7b70a6fe0396d6517a355c3ed133b4ce3a7,"Sync'd doctorjs with the latest narcissus.
1. Narcissus is now a git submodule.
2. The directory lib/jsctags/narcissus is gone.
3. The cfa2 files are in lib/cfa2.
4. Removed the files of my demo drjs website, unneeded.
5. Removed interp-old.js, it's been deprecated for a long time.
6. Fixed references to narcissus and jscfa modules in scripts.
7. Changed jscfa.js to use the latest Narcissus AST.
   - Nodes now have a .children property, they don't inherit from Array.
   - The 2nd arg of the Node constructor is now an object.",dimvar,2011-07-10T00:49:27Z,dimvar,dimvar,3270,203,3067
329,doctorjs,8d294b47f48294d5c8e096a314cb029c75cb1e3c,Bugfix: property deletion always returns a boolean.,dimvar,2011-07-08T14:29:30Z,dimvar,dimvar,7,2,5
330,doctorjs,3f97e56b29b9fa84c7a0b3f8c108dc66e7b3a25f,Format tweaks to jsctags --help,Patrick Walton,2011-07-06T22:30:57Z,pcwalton,pcwalton,8,4,4
331,doctorjs,9442b88654edf2fab4b441ebde508e3cdfa658d6,Started work on syncing w/ narcissus.,dimvar,2011-07-06T20:54:29Z,dimvar,dimvar,311,61,250
332,doctorjs,9f9840ee6b8805f3c62b7246a6c1f19bb11e3f55,"1. The analysis handles WITH by desugaring it.
   Lvalues and rvalues desugared differently.
   Assignments to variables may become hooks.
   For/ins may become IFs.
2. Changed DOT and OBJECT_INIT nodes to use string,
   not identifier, for property names.",Dimitris Vardoulakis,2011-07-17T19:53:26Z,dimvar,dimvar,359,307,52
333,doctorjs,e276064ea5fe61b18876ebed2994de3439098231,"1. Improved HOOK, doesn't always evaluate both the true and the false branch.
2. Clean-ups.",Dimitris Vardoulakis,2011-07-17T19:27:12Z,dimvar,dimvar,145,59,86
334,doctorjs,45a4b69d543d00556772565bef96d9f6bef38d7e,"1. Wrote a generic AST-walker function.
2. Rewrote labelStm, markConts, initDeclsInHeap, evalLval, evalExp, evalStm to use it.
3. Added memq to find array membership using strict equality.
4. Rewrote fixExp and friends to use the new arity arrays.
5. Removed opArity.",dimvar,2011-07-15T20:42:25Z,dimvar,dimvar,1409,601,808
335,doctorjs,286440100815fd380b7b3cba9c533486fb2062f3,"1. Generate new token IDs for the expression non terminals I introduce,
   instead of reusing IDs from statements.
2. Minor clean-ups.",dimvar,2011-07-14T19:43:48Z,dimvar,dimvar,63,25,38
336,doctorjs,0e910ca6ecf0eb16e020e7c0edcdeacef4e77a58,Working on WITH,dimvar,2011-07-14T14:32:14Z,dimvar,dimvar,15,14,1
337,doctorjs,e95325ba65a322a739919782108e4deec08733a0,Removed handling of GROUP in jscfa. Narcissus no longer produces GROUP nodes.,dimvar,2011-07-13T22:28:51Z,dimvar,dimvar,5,1,4
338,doctorjs,8bbfcd6c367e5dd6fe558eb745e1a8b11a8ab54a,"1. Split the generic boolean abstract value to true & false abstract values.
2. We can analyze the NOT and IN operators more precisely now.
3. Added tests for the changes.",dimvar,2011-07-13T18:47:50Z,dimvar,dimvar,150,124,26
339,doctorjs,512e96b74b4e164a572b8a36569eacea62214b5f,"Sync'd doctorjs with the latest narcissus.
1. Narcissus is now a git submodule.
2. The directory lib/jsctags/narcissus is gone.
3. The cfa2 files are in lib/cfa2.
4. Removed the files of my demo drjs website, unneeded.
5. Removed interp-old.js, it's been deprecated for a long time.
6. Fixed references to narcissus and jscfa modules in scripts.
7. Changed jscfa.js to use the latest Narcissus AST.
   - Nodes now have a .children property, they don't inherit from Array.
   - The 2nd arg of the Node constructor is now an object.",dimvar,2011-07-10T00:49:27Z,dimvar,dimvar,3270,203,3067
340,doctorjs,f41cf25e8367057308a19067597cac23719c89b6,Merge branch 'master' of git@github.com:mozilla/doctorjs,dimvar,2011-07-08T14:30:32Z,dimvar,dimvar,8,4,4
341,doctorjs,9788c5113721b36e57b5b0897b780e3bdc3cecc9,Bugfix: property deletion always returns a boolean.,dimvar,2011-07-08T14:29:30Z,dimvar,dimvar,7,2,5
342,doctorjs,77b61853a992e3c6dcec244a4c01948547ea6b5e,Format tweaks to jsctags --help,Patrick Walton,2011-07-06T22:30:57Z,pcwalton,pcwalton,8,4,4
343,doctorjs,83792c8987daf40a074b92a103f7afcb87706aa7,Started work on syncing w/ narcissus.,dimvar,2011-07-06T20:54:29Z,dimvar,dimvar,311,61,250
344,doctorjs,f63c1e0d30bd8a15823ed1e692b901fdf412a8c2,Bugfix for multi-file processing.,dimvar,2011-07-01T04:56:42Z,dimvar,dimvar,10,6,4
345,doctorjs,423dbd3652e4a659f119b42e6192ebd8125c4ddd,Added option to process many files at once as a single program.,dimvar,2011-06-28T00:05:03Z,dimvar,dimvar,67,59,8
346,doctorjs,f4e1c124817ef776e29c3be5dcd66eeb8425fb92,"Merge branch 'master' of github.com:dimvar/doctorjs

Conflicts:
	lib/jsctags/narcissus/jscfa.js",dimvar,2011-06-24T18:48:25Z,dimvar,dimvar,24829,20997,3832
347,doctorjs,c32c361be9c7d2e7b253b027dc24b7942b29dc37,"1. Added code for analysis of FF addons & classification of events.
   It's not inlined w/ the prev code, it overrides some functions.
2. Added script evtclassify, you call it w/ a js file & it does the
   analysis & writes the results in a file called ""evts""",dimvar,2011-06-23T00:52:24Z,dimvar,dimvar,312,311,1
348,doctorjs,d7cba5075b56ab44409f861dc4df0ec7d2b776ab,"1. Removed all ""WITH not implemented"" errors except the 1st one.
2. Rewrote tagVarRefs & initDeclsInHeap to use jump tables so
   that clients of the analysis can change their behavior w/out
   doing it inline.
3. Added initOtherGlobals, initOtherObjects for the same reason.",dimvar,2011-06-22T23:34:47Z,dimvar,dimvar,555,308,247
349,doctorjs,b98a1d09c7f79c32c79ecf5d9d19316710c5412d,"1. callFun and evalFun take the call node, in case they need info
   from it to record analysis results.
2. minor change in the handling of for_in.",dimvar,2011-06-17T17:12:30Z,dimvar,dimvar,67,33,34
350,doctorjs,6d30ce9a6fc8634cb6f413c9b068e3269a34108c,"Merge pull request #3 from cmaxo/master

debugger keyword causing exception",Patrick Walton,2011-06-15T21:27:28Z,pcwalton,pcwalton,4,2,2
351,doctorjs,171ac51034d1f0d76f6f61b2a01c6ea7e35440eb,Handling debugger keyword,Corey Olsen,2011-06-15T20:52:15Z,cmaxo,cmaxo,4,2,2
352,doctorjs,420fbdbd4debfd7a3e80c98189f1721cb353f50c,"1. Slightly simplified updateProp
2. match, split and exec no longer refer to ""-number"".
   The representation of abs vals is now hidden from initCoreObjs.",dimvar,2011-06-15T17:07:53Z,dimvar,dimvar,11,3,8
353,doctorjs,5caf41968699aba954f2911c9979e5c80dbb552f,Removed some redundant code.,dimvar,2011-06-15T07:06:57Z,dimvar,dimvar,33,10,23
354,doctorjs,08a855611f1bff9d022bc99291e4b1c611097cda,some minor indentation changes.,dimvar,2011-05-26T07:50:46Z,dimvar,dimvar,122,61,61
355,doctorjs,76b44a69a44edf23905bb01849cf5a7ced08e886,"1. INDEX nodes whose 2nd arg has type NUMBER were treated the same
   as STRING, so I eliminated them altogether.
2. Removed some unneeded parens.",dimvar,2011-05-24T07:26:48Z,dimvar,dimvar,50,30,20
356,doctorjs,157db944c4e84a7aa5ef104dbbc7ab17219e82da,"Use new functions that get and set properties where possible.
1. DOT_PROTO node has same structure as DOT.
   In evalLval, removed _dot_proto and just used _dot.
   Add the prototype property to functions on creation, set to BOTTOM.
2. Removed getExactProp, lookups up the chain are always lax.
3. Object and Array inits use updateProp, behave correctly if
   properties have been merged.
4. forEachEnumProp rewritten to use foldProtoChain.
5. Fixed bug in updateProp when numeric properties are merged, but not
   the other properties.
6. Indentation changes because of new Emacs JavaScript mode.",dimvar,2011-05-20T23:14:41Z,dimvar,dimvar,746,334,412
357,doctorjs,d867a723cfc780b254cd61b0168c6edabcc19e86,"1. Bugfix in updateProp, when adding a new property w/ non-numeric name
2. Fixed type error in forEachOwnProp
3. When finding ""-number"" in getProp, stop looking at ancestors
4. getNumProps doesn't look in the proto chain
5. Added explicit conversion baseToObj, stopped using forEachMayObj
6. Simplified evalLval/_index and _dot, evalExp/_index and _dot
   More soundness now due to new property accessors and updaters
7. Added new tests.",dimvar,2011-05-19T06:51:39Z,dimvar,dimvar,362,175,187
358,doctorjs,2ecc1fbe55729247ef79d035523636bf7fe0ab02,"1. Redesigned how properties merge & the role of ""-number"" and ""-string""
2. Changed functions that get and set properties, to hide the special
   properties ""-number"" and ""-string"" from the rest of the code.
3. Created generic function foldProtoChain to be used by others that
   do actions on an object and its ancestors.
4. The code up to ""evaluation preamble"" uses new getters/setters correctly.
   The evaluation section needs changes, esp. INDEX, DOT, FOR/IN.",dimvar,2011-05-18T04:24:44Z,dimvar,dimvar,426,287,139
359,doctorjs,8ced24dc319470865bdf916243c4fd584a27703a,"1. Changed fixExp so string literals end in a dash (may be used as properties).
2. isTruthy and isFalsy change b/c the empty string is now ""-""
3. INDEX changed in evalLval and evalExp to be precise for string literals.
4. FOR/IN in evalStm changed to be precise for string literals.
5. Added some tests.",dimvar,2011-05-13T04:12:19Z,dimvar,dimvar,130,97,33
360,doctorjs,672c87b4d5d289199fbe2f5bcf6066f158a1b237,"1. String literals have a precise abstract value now.
   Many old tests failed after the change, had to be rewritten.
2. Can guarantee that non-empty strings are truthy.
   Logical And and OR are better. New tests.",dimvar,2011-05-11T21:32:23Z,dimvar,dimvar,229,124,105
361,doctorjs,da090e08b1f3e384534cb5a1f59aeb3884f9f695,"1. Removed redundant 2nd arg from some calls to Ans
2. Fixed type error in the implementation of String.prototype.match and
   RegExp.prototype.exec
3. Calls to Aval go through newly-created wrappers for base values & objects.
4. Added string literals to abstract values (and changed avjoin, aveq, etc).
   Evaluation functions don't use them yet though.",dimvar,2011-05-11T17:40:57Z,dimvar,dimvar,210,120,90
362,doctorjs,49b77bfee687ca4f30589aeb00f183ebfb2e5f54,"Fixed bug when converting booleans to objects automatically.
Added new test.",dimvar,2011-05-11T14:05:14Z,dimvar,dimvar,38,22,16
363,doctorjs,f5d5f26fe2b33dd779b1d656e6a79c95afd12f31,"Create new generic object for each unanalyzed function instead of
using the same for all; it avoids unnecessary merging.
v8 tags improved slightly.",dimvar,2011-05-10T16:50:06Z,dimvar,dimvar,34,18,16
364,doctorjs,21bb320fce6d73fb284669212aa632ebe66a6fb6,"1. Added writable and configurable attributes to properties
2. Changed core objects to initialize property attributes correctly",dimvar,2011-05-09T17:34:39Z,dimvar,dimvar,85,53,32
365,doctorjs,8b1093d4f36ce51a2e493f12edf93eafc3ff5c16,"When adding a prototype property to a constructor, make sure it's not enumerable.",dimvar,2011-05-09T03:22:55Z,dimvar,dimvar,11,8,3
366,doctorjs,0ff545425d4781483d457ebef9915be0b7b9ffff,"1. Added support for non-enumerable properties
2. Changed for/in to ignore non-enumerable properties
3. Added some tests",dimvar,2011-05-06T21:38:20Z,dimvar,dimvar,251,146,105
367,doctorjs,011b86626fcefebd9958337f390f35a27ec10054,"1. Changed properties of abstract objects to be objects themselves.
   This will be used to distinguish non-enumerable properties.
2. Fixed bug in hasProp, which wasn't looking for cycles in proto chain.
3. Added two tests for proto-chain cycles.
4. Fixed bug in run-tests.js",dimvar,2011-05-04T16:46:00Z,dimvar,dimvar,96,78,18
368,doctorjs,69588ab477626a4b7f2e6a0982d1129c4a16279a,Change tag file comments to reflect sortedness.,jez,2011-03-12T08:32:54Z,int3,int3,10,8,2
369,doctorjs,383235d1619f2ff83df68bb6e9b66f5f5337a90f,"Add --sort option.

A value of 'no' sorts by line number, a value of 'yes' sorts
alphabetically.",jez,2011-03-12T08:25:41Z,int3,int3,26,19,7
370,doctorjs,1062dd31625cc002261f15e68af77eedd63a56f6,Merge https://github.com/int3/doctorjs,Patrick Walton,2011-03-01T23:29:07Z,pcwalton,pcwalton,19,11,8
371,doctorjs,451bf8131314be14c0d5572a75b4fc4c98c4efcd,Add note in the help text about printing to stdout,jez,2011-02-23T00:08:36Z,int3,int3,2,1,1
372,doctorjs,f0faf2c3a900b6fa26132236532a48098be9c2a2,"uncommented the part that calls uncalled functions again, jQuery be damned :)",Dave Herman,2011-02-08T22:48:48Z,Dave Herman,Dave Herman,16,8,8
373,doctorjs,9f0bd4439d53605048a9fb370d9dea1df5ef22fe,added github banners to public web site,Dave Herman,2011-02-08T22:15:12Z,Dave Herman,Dave Herman,2,2,0
374,doctorjs,a0c38d4f0201ffaae69ebec1fe44c243615fb06f,"uncommented the part that calls uncalled functions again, jQuery be damned :)",Dave Herman,2011-02-08T22:48:48Z,Dave Herman,Dave Herman,16,8,8
375,doctorjs,9a5022f7b321f0185be0b486bf75ac381edfdf23,added github banners to public web site,Dave Herman,2011-02-08T22:15:12Z,Dave Herman,Dave Herman,2,2,0
376,doctorjs,e0a282248b87cdb2613ec5f7e6d49959ffa6d512,Add -f option.,jez,2011-01-06T16:25:53Z,int3,int3,5,3,2
377,doctorjs,62e83d0740c4f5e02e58ecc19eb516def982f87a,Add ability to print to stdout.,jez,2011-01-06T16:18:38Z,int3,int3,14,8,6
378,doctorjs,6b0781d1c0eb685b8be2470067a521845d074fb6,"Sometimes addSummary is called for a summary with a ts that's smaller than the
current ts and the summary.ts.
In this case, join but don't change the (more recent) summary.ts.",dimvar,2010-11-17T19:26:50Z,dimvar,dimvar,2,1,1
379,doctorjs,a3e6f6b1e9c23a9177aec7543e8f576365c4e8b9,added benchmark numbers for v8/v6,dimvar,2010-11-17T18:37:58Z,dimvar,dimvar,19,15,4
380,doctorjs,96b58264695ffe0bcfaf90f4a3e6a640c702aeca,added raytrace-inlined to v8/v6,dimvar,2010-11-17T17:39:26Z,dimvar,dimvar,1456,1456,0
381,doctorjs,23c4fd6671aedcd150e6aba83795ae0cb77abfa2,Split v8 versions in directories. Added version 6.,dimvar,2010-11-17T17:28:47Z,dimvar,dimvar,16363,13935,2428
382,doctorjs,0bdf056d09dc1afd5ffc33e117e69709461b6dd0,benchmarked the fast raytrace,dimvar,2010-11-11T04:11:50Z,dimvar,dimvar,1,1,0
383,doctorjs,f5905490b8d2dcdce9be530541c61a31efad2483,found the cause of slowness in v8/raytrace and added another version which is analyzed really fast.,dimvar,2010-11-10T20:29:15Z,dimvar,dimvar,3421,3421,0
384,doctorjs,5ead8eafde4b80fc17ee069d59d9b2019c9be4db,finished benchmarking,dimvar,2010-11-10T04:49:10Z,dimvar,dimvar,92,61,31
385,doctorjs,0cabe4c55c74919bb6e0e1127b92cfba4aae3b94,foo,dimvar,2010-11-09T20:42:43Z,dimvar,dimvar,2,1,1
386,doctorjs,0a97cf3774e1adc6583fe8e237c57ed39d9e92fb,"1. Removed the require('sys') from jscfa to bring it up to date with Node
2. Used Node's awkard way of executing shell commands to remove the file run-tests",dimvar,2010-11-09T20:34:24Z,dimvar,dimvar,110,49,61
387,doctorjs,a4df2f092b7d855b293f7a73f72d749c31ca3b36,started benchmarking,dimvar,2010-11-08T21:27:58Z,dimvar,dimvar,107,70,37
