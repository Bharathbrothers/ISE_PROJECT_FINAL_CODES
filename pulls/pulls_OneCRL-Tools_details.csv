,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/189,189,"fixes #188: file bugs in 'Core :: Security Block-lists, Allow-lists, …",…and other State',mozkeeler,3374946,2021-04-08T22:52:23Z,COLLABORATOR,True,4,4,2,Some tools for supporting OneCRL,Go,051edaca6b3fa9fc28f76f08351e4837fe6168d5,"fixes #188: file bugs in 'Core :: Security Block-lists, Allow-lists, and other State'"
1,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/185,185,Use the actual Issuer and Subject DER encodings for all comparison operations,"
Fixes #184",jcjones,518542,2020-11-10T05:20:49Z,CONTRIBUTOR,True,30,124,5,Some tools for supporting OneCRL,Go,e15cccca7cce9f61f2e0e3bafc33869ea820a353,"Use the actual Issuer and Subject DER encodings for all comparison operations

Fixes #184"
2,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/185,185,Use the actual Issuer and Subject DER encodings for all comparison operations,"
Fixes #184",jcjones,518542,2020-11-10T05:20:49Z,CONTRIBUTOR,True,30,124,5,Some tools for supporting OneCRL,Go,960a129691a6ff9f0e02202091435a380aae0e2c,Add tests of the Base64 decoder
3,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/185,185,Use the actual Issuer and Subject DER encodings for all comparison operations,"
Fixes #184",jcjones,518542,2020-11-10T05:20:49Z,CONTRIBUTOR,True,30,124,5,Some tools for supporting OneCRL,Go,323d25cb7e99ade8a62646980f6b60e553fc4b2a,Rename to unbase64RawDistinguishedName
4,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/183,183,"Put Prod into review automatically, too.",Fixes #182,jcjones,518542,2020-10-20T21:58:35Z,CONTRIBUTOR,True,9,0,1,Some tools for supporting OneCRL,Go,f85df372b332c390893f5124c362f029b473a82e,"Put Prod into review automatically, too.

Fixes #182"
5,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/181,181,[WIP] Try to write tests that exercise the Kinto Signer,,jcjones,518542,2020-10-12T16:55:28Z,CONTRIBUTOR,False,78,3,4,Some tools for supporting OneCRL,Go,818b8c61bb031f43ef53ca54be7504d972060560,"Change the algorithm to require both Staging and Prod be out-of-review before proceeding

Fixes #179"
6,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/181,181,[WIP] Try to write tests that exercise the Kinto Signer,,jcjones,518542,2020-10-12T16:55:28Z,CONTRIBUTOR,False,78,3,4,Some tools for supporting OneCRL,Go,fe0e7275090fec331e30e477620c4f5bb58f5700,typo fix
7,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/181,181,[WIP] Try to write tests that exercise the Kinto Signer,,jcjones,518542,2020-10-12T16:55:28Z,CONTRIBUTOR,False,78,3,4,Some tools for supporting OneCRL,Go,d7bd787db050ba48f242e07b53f17493d895204c,WIP - Tests for to-be-signed states
8,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/181,181,[WIP] Try to write tests that exercise the Kinto Signer,,jcjones,518542,2020-10-12T16:55:28Z,CONTRIBUTOR,False,78,3,4,Some tools for supporting OneCRL,Go,b7e07363252398631ac49543a13ecff827702aa3,Merge branch 'main' into 179-tests
9,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/180,180,Change the algorithm to require both Staging and Prod be out-of-review before proceeding,Fixes #179,jcjones,518542,2020-10-09T22:57:21Z,CONTRIBUTOR,True,12,8,1,Some tools for supporting OneCRL,Go,818b8c61bb031f43ef53ca54be7504d972060560,"Change the algorithm to require both Staging and Prod be out-of-review before proceeding

Fixes #179"
10,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/180,180,Change the algorithm to require both Staging and Prod be out-of-review before proceeding,Fixes #179,jcjones,518542,2020-10-09T22:57:21Z,CONTRIBUTOR,True,12,8,1,Some tools for supporting OneCRL,Go,fe0e7275090fec331e30e477620c4f5bb58f5700,typo fix
11,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/178,178,Hardcode and don't allow override of a config file for ccadb2onecrl,Fixes #177,jcjones,518542,2020-10-02T17:56:52Z,CONTRIBUTOR,True,1,2,1,Some tools for supporting OneCRL,Go,8025f8b5bef72c60a9c04d4c6c13bae3efd4a0e7,"Hardcode and don't allow override of a config file for ccadb2onecrl

Fixes #177"
12,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/176,176,Move the binary to ENTRYPOINT and remove CMD,"Overriding the CMD in jenkins is proving difficult where all configuration is being passed via env vars.

Can the dev tooling simply inline the config file to docker run when needed?",erkolson,9535472,2020-10-01T14:06:55Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,2f6130776a18137193c4f61f249baa5694a8adba,"Move the binary to ENTRYPOINT and config to CMD, helps Jenkins track the
log output as it runs"
13,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/176,176,Move the binary to ENTRYPOINT and remove CMD,"Overriding the CMD in jenkins is proving difficult where all configuration is being passed via env vars.

Can the dev tooling simply inline the config file to docker run when needed?",erkolson,9535472,2020-10-01T14:06:55Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,73728300acfbcf2baae07f4ca59ecc1e85f11bee,"Remove configuration, apparently no way to override in jenkins :-|"
14,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/173,173,gofmt,gofmt everything with go 1.15,jcjones,518542,2020-09-18T22:42:08Z,CONTRIBUTOR,True,182,183,7,Some tools for supporting OneCRL,Go,0929ba0680e54cb1b582dbadeb1cc9b81083840a,gofmt
15,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/173,173,gofmt,gofmt everything with go 1.15,jcjones,518542,2020-09-18T22:42:08Z,CONTRIBUTOR,True,182,183,7,Some tools for supporting OneCRL,Go,2b9b85485bbfa9f8b56f7a0079e05a73cc1e28b5,Merge branch 'master' into gofmt
16,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/173,173,gofmt,gofmt everything with go 1.15,jcjones,518542,2020-09-18T22:42:08Z,CONTRIBUTOR,True,182,183,7,Some tools for supporting OneCRL,Go,5d0c07dd8dd4f94b0b43fcced8a94b11b5ef162c,Merge branch 'master' into gofmt
17,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,08eb2d87bae3f11af43480e105901d7c4f147936,Initial Dockerfile
18,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,d018779f61b378125dc675dbc4073840d14070e9,also let the env file be from a volume
19,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,8bc6a3a173ca5f8ba739ed67e3e32ce4975a92da,Use Go 1.15
20,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,f40bffdd06b6054af9133a93410da3a25cc7d51b,Use Alpine linux
21,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,4e0f76dd89a77a899932cc05997eb95353f4eaff,gofmt
22,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,4236d365959151f24cb2699fba8039399c67f295,CircleCI Config
23,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,807725e57b2bbc7f2d96996436b402e5dbbd4085,enable Docker for tests
24,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,258371573b11447a4068980b728ba0b5148b80cd,Skip docker-compose test on CircleCI
25,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,78709116126e35f8d8338fec577c9d135cf207f6,remote
26,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,947b1e240ee81f31c47fc6f949b51aab408d23b7,Kinto
27,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,733e0f389efac3c963f85108dec210133a383b20,Kinto2
28,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,53ada71a364c289958575b554ce26bc5a748d9ab,Kinto2
29,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,218313aad7b2bc4a27132ee4f0718d9083b5e36f,gitignore update
30,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/172,172,Circleci,,jcjones,518542,2020-09-18T22:31:39Z,CONTRIBUTOR,True,139,0,4,Some tools for supporting OneCRL,Go,024b35a2399fc87c034aea7b7da3b1e991278dbb,Merge branch 'master' into circleci
31,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/171,171,Print the full RDNS in the comparison object,A sample can be found [here](https://bug1629388.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9140252).,christopher-henderson,8518514,2020-09-18T22:06:35Z,COLLABORATOR,True,7,2,1,Some tools for supporting OneCRL,Go,fdabe301b9cbd3e97a8d403d7482a4e6f3bd0fe1,print the full RDNS in the comparison object
32,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,26273c760c2df8cfe1ea967b93bd552884abe44b,Correct the default names and paths
33,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,5de63f0feea9c2e90a5082bfd7c488d144d40b3a,Don't try and sign Stage before putting Stage into Review.
34,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,59cefe1218162628ca9d24eee5aff89a22702316,Replace default User Agent
35,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,6fb49e0a1cf9e4e7e7aa7989a178ac05195737af,Bad bots comment
36,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,35cd474a77bcc05c21268fe72dee5180aa9fc3ba,Merge branch 'master' into integration_fixes_ccadb2onecrl
37,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,46cc8190ae9f913f4a83b503bc0f039555f367ce,Merge branch 'main' into integration_fixes_ccadb2onecrl
38,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/169,169,Integration fixes ccadb2onecrl,"Some of the names were a little off as defaults, we can't Sign at Stage until Stage is in Review (also, we don't have permissions to Sign, and maybe want to think about it -- but still, can't sign before going to Review!), and we need to set a non-default User Agent.",jcjones,518542,2020-09-18T21:10:35Z,CONTRIBUTOR,True,14,11,3,Some tools for supporting OneCRL,Go,53c59798ef775ba1f271bebdadd0132293a08ccd,Merge branch 'main' into integration_fixes_ccadb2onecrl
39,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/168,168,explicit content length setting,,christopher-henderson,8518514,2020-09-17T22:07:12Z,COLLABORATOR,False,1,0,2,Some tools for supporting OneCRL,Go,19e9e3c15355c43e1cc5e947a6b81c8d1c800cc7,explicit content length setting
40,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/168,168,explicit content length setting,,christopher-henderson,8518514,2020-09-17T22:07:12Z,COLLABORATOR,False,1,0,2,Some tools for supporting OneCRL,Go,17ac92365846536e0462df7d1f5ce570af2e76d7,Merge branch 'master' into contentlength
41,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/167,167,Initial Dockerfile,Still need to get building to happen in CircleCI.,jcjones,518542,2020-09-16T23:47:47Z,CONTRIBUTOR,True,70,0,3,Some tools for supporting OneCRL,Go,25bb0fe5237e258671fce3e4568e4e35e1fe46a6,Initial Dockerfile
42,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/167,167,Initial Dockerfile,Still need to get building to happen in CircleCI.,jcjones,518542,2020-09-16T23:47:47Z,CONTRIBUTOR,True,70,0,3,Some tools for supporting OneCRL,Go,af6bb46b09645a23e500bc3f22466f43894e4566,also let the env file be from a volume
43,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/167,167,Initial Dockerfile,Still need to get building to happen in CircleCI.,jcjones,518542,2020-09-16T23:47:47Z,CONTRIBUTOR,True,70,0,3,Some tools for supporting OneCRL,Go,a4ad49fbe8694b9b023bbc662bc4e463cc58b310,Use Go 1.15
44,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/167,167,Initial Dockerfile,Still need to get building to happen in CircleCI.,jcjones,518542,2020-09-16T23:47:47Z,CONTRIBUTOR,True,70,0,3,Some tools for supporting OneCRL,Go,74a488ad00e282041cc4e7cd243b2eb21ae1140e,Use Alpine linux
45,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/167,167,Initial Dockerfile,Still need to get building to happen in CircleCI.,jcjones,518542,2020-09-16T23:47:47Z,CONTRIBUTOR,True,70,0,3,Some tools for supporting OneCRL,Go,e8c6bde59edefce9bb0e918bcdf29fb02ea8bd54,Merge branch 'master' into docker-ccadb2onecrl
46,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/166,166,Bug 1664854,,jcjones,518542,2020-09-14T18:52:48Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,abcf82590232ec6247999d483514680c6d805405,Bug 1664854
47,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/165,165,Adding a README for ccadb2OneCRL,"# ccadb2OneCRL

### Execution Flow

1. Authentication for Kinto Staging and Kinto Production is attempted. If authentication fails for either-or-both, exit.
2. If Kinto Staging is in the `in-review` state then a comment is posted to Bugzilla for the issues that are still open. Exit.
3. Compute all entries that are within the CCADB that are not within either Kinto Staging nor Kinto Production. If no such entries are found, exit.
4. The following transaction is built and executed

```go
transaction.Start().
    // Push the candidate changes to staging. 
    Then(u.PushToStaging()).
    // Open a Bugzilla ticket with information about the above changes.
    Then(u.OpenBug()).
    // Update the records from PushToStaging to hold the Bugzilla IF just generated.
    Then(u.UpdateRecordsWithBugID()).
    // Put Kinto Staging into review.
    Then(u.PutStagingIntoReview()).
    // Push the candidate changes to production. Accepting these changes remains a manual step.
    Then(u.PushToProduction()).
```

Each step in the transaction holds a rollback procedure in the event of a downstream failure. For example, if putting staging into review fails, then Bugzilla ticket will be closed as `INVALID` with a stacktrace attached and all entries that were pushed to staging will be deleted.

### Sample Output

The following is a sample output to Bugzilla dev of a successful run:

https://bugzilla-dev.allizom.org/show_bug.cgi?id=1629310

The following is a sample output to Bugzilla dev when a mocked failure occurred while pushing to staging:

https://bugzilla-dev.allizom.org/show_bug.cgi?id=1629313

### Deployment
A convenience script, `deploy.sh`, has been provided for deployment that is portable to _most_ Linux systems. The script has a single dependency on the local `cron` system being configured to read from `/etc/cron.weekly/`.

### Testing
If you have Docker installed, then `go test .` will fire up a local Kinto instance that is used to simulate Kinto Staging/Production and uses Bugzilla's open development instance.

### Configuration

This tool takes in exactly one optional argument - a path to a configuration file.

```bash
./ccadb2OneCRL /opt/configDir/prod.env
```

If no path is provided, then this tool defaults to looking for a `config.env` file within the same directory as the executable itself (which is NOT necessarily the callers present working directory).

For example:

```bash
# /
# ├── opt
#     ├── ccadb2onecrl
#     │   ├── ccadb2onecrl
#     │   └── config.env

$ /opt/ccadb2onecrl/ccadb2onecrl
```

...will run using the configuration found at `/opt/ccadb2onecrl/config.env`.

The following is a sample configuration file. Note that this sample still requires some fields to be filled it, notably the `TOKEN/API KEY` fields for Kinto staging/production as well as for Bugzilla.

```.env
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Base URL for Kinto production [default: ""https://firefox.settings.services.mozilla.com/v1""]
#ONECRL_PRODUCTION=""https://firefox.settings.services.mozilla.com/v1""

# User account for Kinto production. Requires OneCRLProductionPassword to be set. Mutually exclusive with OneCRLProductionToken.
#ONECRL_PRODUCTION_USER=

# User password for Kinto production. Requires OneCRLProductionUser to be set. Mutually exclusive with OneCRLProductionToken.
#ONECRL_PRODUCTION_PASSWORD=

# Auth token for Kinto production. Mutually exclusive with OneCRLProductionUser and OneCRLProductionPassword.
ONECRL_PRODUCTION_TOKEN=

# Target production bucket [default: ""security-state""]
# Default is likely what you want as this is mostly configurable for testing purposes.
#ONECRL_PRODUCTION_BUCKET=""security-state""

# Target production collection [default: ""onecrl""]
# Default is likely what you want as this is mostly configurable for testing purposes.
#ONECRL_PRODUCTION_COLLECTION=""onecrl""

# Base URL for Kinto production [default: ""https://settings.stage.mozaws.net/v1""]
#ONECRL_STAGING=""https://settings.stage.mozaws.net/v1""

# User account for Kinto staging. Requires OneCRLStagingPassword to be set. Mutually exclusive with OneCRLStagingToken.
#ONECRL_STAGING_USER=

# User password for Kinto staging. Requires OneCRLStagingUser to be set. Mutually exclusive with OneCRLStagingToken.
#ONECRL_STAGING_PASSWORD=

# Auth token for Kinto staging. Mutually exclusive with OneCRLStagingUser and OneCRLStagingPassword.
ONECRL_STAGING_TOKEN=

# Target staging bucket [default: ""security-state""].
# Default is likely what you want as this is mostly configurable for testing purposes.
# ONECRL_STAGING_BUCKET=""security-state""

# Target staging collection [default: ""onecrl""]
# Default is likely what you want as this is mostly configurable for testing purposes.
# ONECRL_STAGING_COLLECTION=""onecrl""

# Base URL for Bugzilla [default: ""https://bugzilla.mozilla.org""]
# BUGZILLA=""https://bugzilla.mozilla.org""

# Mandatory API key for posting to Bugzilla. This key MUST have write permissions.
BUGZILLA_API_KEY=

# Optional. A comma separated list of of email accounts to put on CC for new bugs. If these accounts are not
# registered with the configured Bugzilla, then a runtime error will occur when creating new bugs.
# BUGZILLA_CC_ACCOUNTS=""alice@secrets.org, eve@legit.ru""

# Target logging level for this tool.
#   Available: panic, fatal, error, warn, warning info, debug, trace
#   Default: info
#LOG_LEVEL=""info""

# Target directory for logs [default: stdout/stderr]
# Each run of the tool will be logged to the timestamp of when it was ran.
LOG_DIR=/opt/ccadb2onecrl/logs

```
",christopher-henderson,8518514,2020-09-13T23:19:20Z,COLLABORATOR,True,132,0,1,Some tools for supporting OneCRL,Go,0006c16ff84d3864da64263d9c51603c79b6c7ce,adding a README for ccadb2OneCRL
48,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/165,165,Adding a README for ccadb2OneCRL,"# ccadb2OneCRL

### Execution Flow

1. Authentication for Kinto Staging and Kinto Production is attempted. If authentication fails for either-or-both, exit.
2. If Kinto Staging is in the `in-review` state then a comment is posted to Bugzilla for the issues that are still open. Exit.
3. Compute all entries that are within the CCADB that are not within either Kinto Staging nor Kinto Production. If no such entries are found, exit.
4. The following transaction is built and executed

```go
transaction.Start().
    // Push the candidate changes to staging. 
    Then(u.PushToStaging()).
    // Open a Bugzilla ticket with information about the above changes.
    Then(u.OpenBug()).
    // Update the records from PushToStaging to hold the Bugzilla IF just generated.
    Then(u.UpdateRecordsWithBugID()).
    // Put Kinto Staging into review.
    Then(u.PutStagingIntoReview()).
    // Push the candidate changes to production. Accepting these changes remains a manual step.
    Then(u.PushToProduction()).
```

Each step in the transaction holds a rollback procedure in the event of a downstream failure. For example, if putting staging into review fails, then Bugzilla ticket will be closed as `INVALID` with a stacktrace attached and all entries that were pushed to staging will be deleted.

### Sample Output

The following is a sample output to Bugzilla dev of a successful run:

https://bugzilla-dev.allizom.org/show_bug.cgi?id=1629310

The following is a sample output to Bugzilla dev when a mocked failure occurred while pushing to staging:

https://bugzilla-dev.allizom.org/show_bug.cgi?id=1629313

### Deployment
A convenience script, `deploy.sh`, has been provided for deployment that is portable to _most_ Linux systems. The script has a single dependency on the local `cron` system being configured to read from `/etc/cron.weekly/`.

### Testing
If you have Docker installed, then `go test .` will fire up a local Kinto instance that is used to simulate Kinto Staging/Production and uses Bugzilla's open development instance.

### Configuration

This tool takes in exactly one optional argument - a path to a configuration file.

```bash
./ccadb2OneCRL /opt/configDir/prod.env
```

If no path is provided, then this tool defaults to looking for a `config.env` file within the same directory as the executable itself (which is NOT necessarily the callers present working directory).

For example:

```bash
# /
# ├── opt
#     ├── ccadb2onecrl
#     │   ├── ccadb2onecrl
#     │   └── config.env

$ /opt/ccadb2onecrl/ccadb2onecrl
```

...will run using the configuration found at `/opt/ccadb2onecrl/config.env`.

The following is a sample configuration file. Note that this sample still requires some fields to be filled it, notably the `TOKEN/API KEY` fields for Kinto staging/production as well as for Bugzilla.

```.env
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# Base URL for Kinto production [default: ""https://firefox.settings.services.mozilla.com/v1""]
#ONECRL_PRODUCTION=""https://firefox.settings.services.mozilla.com/v1""

# User account for Kinto production. Requires OneCRLProductionPassword to be set. Mutually exclusive with OneCRLProductionToken.
#ONECRL_PRODUCTION_USER=

# User password for Kinto production. Requires OneCRLProductionUser to be set. Mutually exclusive with OneCRLProductionToken.
#ONECRL_PRODUCTION_PASSWORD=

# Auth token for Kinto production. Mutually exclusive with OneCRLProductionUser and OneCRLProductionPassword.
ONECRL_PRODUCTION_TOKEN=

# Target production bucket [default: ""security-state""]
# Default is likely what you want as this is mostly configurable for testing purposes.
#ONECRL_PRODUCTION_BUCKET=""security-state""

# Target production collection [default: ""onecrl""]
# Default is likely what you want as this is mostly configurable for testing purposes.
#ONECRL_PRODUCTION_COLLECTION=""onecrl""

# Base URL for Kinto production [default: ""https://settings.stage.mozaws.net/v1""]
#ONECRL_STAGING=""https://settings.stage.mozaws.net/v1""

# User account for Kinto staging. Requires OneCRLStagingPassword to be set. Mutually exclusive with OneCRLStagingToken.
#ONECRL_STAGING_USER=

# User password for Kinto staging. Requires OneCRLStagingUser to be set. Mutually exclusive with OneCRLStagingToken.
#ONECRL_STAGING_PASSWORD=

# Auth token for Kinto staging. Mutually exclusive with OneCRLStagingUser and OneCRLStagingPassword.
ONECRL_STAGING_TOKEN=

# Target staging bucket [default: ""security-state""].
# Default is likely what you want as this is mostly configurable for testing purposes.
# ONECRL_STAGING_BUCKET=""security-state""

# Target staging collection [default: ""onecrl""]
# Default is likely what you want as this is mostly configurable for testing purposes.
# ONECRL_STAGING_COLLECTION=""onecrl""

# Base URL for Bugzilla [default: ""https://bugzilla.mozilla.org""]
# BUGZILLA=""https://bugzilla.mozilla.org""

# Mandatory API key for posting to Bugzilla. This key MUST have write permissions.
BUGZILLA_API_KEY=

# Optional. A comma separated list of of email accounts to put on CC for new bugs. If these accounts are not
# registered with the configured Bugzilla, then a runtime error will occur when creating new bugs.
# BUGZILLA_CC_ACCOUNTS=""alice@secrets.org, eve@legit.ru""

# Target logging level for this tool.
#   Available: panic, fatal, error, warn, warning info, debug, trace
#   Default: info
#LOG_LEVEL=""info""

# Target directory for logs [default: stdout/stderr]
# Each run of the tool will be logged to the timestamp of when it was ran.
LOG_DIR=/opt/ccadb2onecrl/logs

```
",christopher-henderson,8518514,2020-09-13T23:19:20Z,COLLABORATOR,True,132,0,1,Some tools for supporting OneCRL,Go,1b2bd510eea0f91af7d51478aa1594b17e5cbf39,Merge branch 'master' into readmes
49,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,62b0c2dcefef5b69841a94fd831190e1e852ecb2,A tool for replacing salesforce2OneCRL
50,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,5d9435ad1dbc834228f1abfeaf89791b89b3d1cc,rename to set
51,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,dae6373a0ec826f50444d51ab9c8fbe182141e8d,"Update ccadb2OneCRL/ccadb/ccadb.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
52,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,55c055eeb9f2a17a233df42ab8254aa40d8f7ae2,"Update ccadb2OneCRL/config.sh

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
53,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,3f04d1527811f8f9ed65cdc5231b7debddb0b04c,typos and so on
54,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/162,162,A tool for replacing salesforce2OneCRL,"[set](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/set): This package defines an interface and implementation for a [Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L19)<[Record](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/set/set.go#L13)>. Record is implemented for both CCADB and OneCRL datatypes, meaning that we can much more easily perform the all-important set operations on these otherwise disparate data sets. This package is crucial to the diffing logic.

[ccadb](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/ccadb): Fairly vanilla what you would expect. Download the CCADB revocation CSV and deserialize it (work with some of the complications of the CCADB such as quoting certificates). [ccadb.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/ccadb/set.go) embeds a `set.SetImpl` but overrides the `Add` method in order to keep concrete types homogeneous.

[onecrl](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/onecrl): Again is what you would expect. One particular oddity is the presence of a [Comparison](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/onecrl/onecrl.go#L152) type. It is a somewhat awkward spot for this type and logic, but the comparison object is what is getting us files such as [this](https://bug1629227.bmoattachments.bugzilla-dev.allizom.org/attachment.cgi?id=9139836). [onecrl.Set](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/onecrl/set.go) is similar to `ccadb.Set`.

[utils](https://github.com/christopher-henderson/OneCRL-Tools/tree/ccadb2onecrl/ccadb2OneCRL/utils): It wouldn't be a one-off tool without a good old utils folder. This holds two pieces of common logic. 1). [utils.Normalize](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L18) which sorts a pkix.RDNSequence by the OID of all of its components (we haven't seen this matter in THIS dataset yet, but we did see it earlier this year when we were trying to find certs in crt.sh and realized that it's not reliable to just deep-equal an RDN sequence, I'd guess that certs have been deserialized and reserialized by different libraries that result in a different ordering). We also have to [B64 re-encode](https://github.com/christopher-henderson/OneCRL-Tools/blob/5d9435ad1dbc834228f1abfeaf89791b89b3d1cc/ccadb2OneCRL/utils/normailize.go#L46) all base 64 that we come across in order to coerce them all into the same standard (since we will be doing a _literal_ string comparison of them).

[deploy.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/deploy.sh): Install Go, build the tool, and install it into `/opt/ccadb2onecrl` with a caller script in `/etc/cron.weekly`.

[config.sh](https://github.com/christopher-henderson/OneCRL-Tools/blob/ccadb2onecrl/ccadb2OneCRL/config.sh): A (hopefully well) documented example configuration. This file gets copied `/opt/ccad2onecrl/config.sh` and is that target configuration used in the above crontab script (in `main` if you don't specify a config file as the sole argument then the tool will look in the binary's directory for a `config.sh`).",christopher-henderson,8518514,2020-07-26T23:37:54Z,COLLABORATOR,True,2659,68,34,Some tools for supporting OneCRL,Go,6eb254951cfe190553040d0c523e762a02f05bbc,Merge branch 'ccadb2onecrl' of github.com:christopher-henderson/OneCRL-Tools into ccadb2onecrl
55,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/161,161,Initial kinto bindings,"This change introduces some generic bindings to the Kinto 1.x REST API as well as the Kinto Signer plugin. Note that this is not actually a 1400 addition change as there is some copy-pastaed configuration and Python files that are necessary for local test instances.

The [Client](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/kinto/client.go) is the entry point to the API.

By injecting an environment variable and asking Travis to make a Docker daemon available to me ([.travis.yml](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/.travis.yml)) I was able to some fairly decent test coverage over GET/POST/PATCH APIs as well batch requests and utility endpoints (for things such as ""try_auth"").

Note that I was not able to test this with bearer token authorization as, given the moderate time constraints, I could not think of a nice way to register a local dev instance for any stable and openly available authz service. I also tried my best to honor Kinto niceness contracts by trying to read a Backoff header, however I was not able to recreate the scenario in which case I would actually receive this header.",christopher-henderson,8518514,2020-06-14T21:16:21Z,COLLABORATOR,True,1415,4,18,Some tools for supporting OneCRL,Go,5aa6b14a627c666b3fd8530ce7ae9c8ff66fe6ad,Initial kinto bindings
56,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/161,161,Initial kinto bindings,"This change introduces some generic bindings to the Kinto 1.x REST API as well as the Kinto Signer plugin. Note that this is not actually a 1400 addition change as there is some copy-pastaed configuration and Python files that are necessary for local test instances.

The [Client](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/kinto/client.go) is the entry point to the API.

By injecting an environment variable and asking Travis to make a Docker daemon available to me ([.travis.yml](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/.travis.yml)) I was able to some fairly decent test coverage over GET/POST/PATCH APIs as well batch requests and utility endpoints (for things such as ""try_auth"").

Note that I was not able to test this with bearer token authorization as, given the moderate time constraints, I could not think of a nice way to register a local dev instance for any stable and openly available authz service. I also tried my best to honor Kinto niceness contracts by trying to read a Backoff header, however I was not able to recreate the scenario in which case I would actually receive this header.",christopher-henderson,8518514,2020-06-14T21:16:21Z,COLLABORATOR,True,1415,4,18,Some tools for supporting OneCRL,Go,a55bfde81bf3e479d864c0dfd7ece3614607b3ac,better staged locking
57,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/161,161,Initial kinto bindings,"This change introduces some generic bindings to the Kinto 1.x REST API as well as the Kinto Signer plugin. Note that this is not actually a 1400 addition change as there is some copy-pastaed configuration and Python files that are necessary for local test instances.

The [Client](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/kinto/client.go) is the entry point to the API.

By injecting an environment variable and asking Travis to make a Docker daemon available to me ([.travis.yml](https://github.com/christopher-henderson/OneCRL-Tools/blob/kinto/.travis.yml)) I was able to some fairly decent test coverage over GET/POST/PATCH APIs as well batch requests and utility endpoints (for things such as ""try_auth"").

Note that I was not able to test this with bearer token authorization as, given the moderate time constraints, I could not think of a nice way to register a local dev instance for any stable and openly available authz service. I also tried my best to honor Kinto niceness contracts by trying to read a Backoff header, however I was not able to recreate the scenario in which case I would actually receive this header.",christopher-henderson,8518514,2020-06-14T21:16:21Z,COLLABORATOR,True,1415,4,18,Some tools for supporting OneCRL,Go,d08fa5f1aa2cec923bf0e28a33e9549f60c9285b,"Update kinto/api/batch/batch.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
58,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/158,158,Changed OneCRLEntry to allow either issuer / serial or subject / public key hash pairs,"added subject_name and public_key_hash

Should resolve issue 157",mozmark,1017161,2020-06-05T09:22:38Z,CONTRIBUTOR,True,54,22,1,Some tools for supporting OneCRL,Go,04037fa338859d0feb391c95fd40015f0861d98e,"Changed OneCRLEntry's members issuer_name and serial_number to Option<String>, added subject_name and public_key_hash"
59,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/158,158,Changed OneCRLEntry to allow either issuer / serial or subject / public key hash pairs,"added subject_name and public_key_hash

Should resolve issue 157",mozmark,1017161,2020-06-05T09:22:38Z,CONTRIBUTOR,True,54,22,1,Some tools for supporting OneCRL,Go,96cbf7cead889f46b47fc6b6be864fd40e0a9418,Cleaned up OneCRLEntry by using untagged enum instead of Option
60,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,650c9579c228faaef720f2c5e63577eda7a6a6a4,adding transaction facilities
61,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,e118d00e483dcbda9f4391438d2b07067b5d36c6,Merge branch 'master' into transactions
62,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,cbaf66c6f0acfa3d6724748b00870a70d920d30c,fix typos
63,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,769751a319481bf51f53560b9b723e22be228357,Expected expected not excepted
64,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,bf97fc8ad2e75df8bfc38ed3edb9b46848757ad5,adding some thread safety
65,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,d22419d0b24dd14c34b3013cb873f157656ad5ad,Merge branch 'transactions' of github.com:christopher-henderson/OneCRL-Tools into transactions
66,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,8c6d4113dfc9241611f53f8e7d103575473ae0bc,adding docs about thread safety
67,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,68882b8d1b14b3db6416170c98a3b37ec10b6853,Merge branch 'master' into transactions
68,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,161323837063ca49c36d408a4a16139f8942bd34,"Update transaction/transaction.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
69,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,8325cbd49b225a77336817693e288bb08a749787,"Update transaction/transaction.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
70,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,8d74f44abeccee08538abfc576e801cd4bd01655,"Update transaction/transaction.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
71,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/156,156,Add transactional facilities for our new tooling,"(I can't add reviewers, so shouting out to @jcjones and @mozkeeler for reviewal)

In our discussions, and as is implied by the bug tracker, we are going to need some framework to reliably encode rollback logic without resorting to messy point-solutions.

It may be a shotgun to a worm, but I've had good luck with this recipe quite a few times in the past, so I was able whip it out  rather quickly. By defining the following interface:

```go
type Transactor interface {
	Commit() error
	Rollback() error
	Close() error
}
```

...as well as defining a struct that both aggregates `Transactor`s and _is_ a `Transactor` itself.

```go
type Transactions struct {
	txs []Transactor
}

func (t *Transactions) Commit() error {
	...
}

func (t *Transactions) Rollback() error {
	...
}

func (t *Transactions) Close() error {
	...
}
```

...you can come do some very rich composition of lazily evaluated transactions that carry rollback and destructor logic throughout the stack rather easily. Take the following highlevel view on what the flow we discussed the other day might look like:

```go
func Submit(r Revocation) error {
	txs := Start().
		Then(ToKinto(r)).
		Then(ToBugizlla(r))
	defer txs.Close()
	if err := txs.Commit(); err != nil {
		return txs.Rollback()
	}
	return nil
}

func ToKinto(r Revocation) Transactor {
	return Start().
		Then(ToStaging(r)).
		Then(ToProd(r))
}

func ToStaging(r Revocaction) Transactor {
	c := NewKintoClient()
	return Start().
		Then(NewTransaction().
			WithCommit(func() error {
				return c.Upload(r)
			}).
			WithRollback(func() error {
				return c.Delete(r)
			}).
			WithClose(c.Close)).
		Then(NewTransaction().
			WithCommit(func() error {
				return c.OpenReview(r)
			}).
			WithRollback(func() error {
				return c.CloseReview(r)
			})
		)
}

func ToProd(r Revocaction) Transactor {
	c := NewKintoClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Upload(r)
		}).
		WithRollback(func() error {
			return c.Delete(r)
		}).
		WithClose(c.Close)
}

func ToBugzilla(r Revocation) Transactor {
	c := NewBugzillaClient()
	return NewTransaction().
		WithCommit(func() error {
			return c.Post(r)
		}).
		// Is there any rollback procedure? You can leave it NOOP if you like.
		WithClose(c.Close)
}
```",christopher-henderson,8518514,2020-05-23T16:34:04Z,COLLABORATOR,True,774,0,4,Some tools for supporting OneCRL,Go,cf7d452e9aed34780de90fb4b44abfb4be9dce60,"Update transaction/transaction.go

Co-authored-by: J.C. Jones <james.jc.jones@gmail.com>"
72,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/155,155,Transaction,,christopher-henderson,8518514,2020-05-23T16:00:36Z,COLLABORATOR,False,578,0,6,Some tools for supporting OneCRL,Go,840588ab80013593fb92acf2a9441cd2c6a2c001,Adds REST API bindings for Bugzilla that are bit more designed and extensible.
73,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/155,155,Transaction,,christopher-henderson,8518514,2020-05-23T16:00:36Z,COLLABORATOR,False,578,0,6,Some tools for supporting OneCRL,Go,6a985300104c285c7e9682fc198eb73c0a4f846d,adding transaction facilities
74,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/155,155,Transaction,,christopher-henderson,8518514,2020-05-23T16:00:36Z,COLLABORATOR,False,578,0,6,Some tools for supporting OneCRL,Go,1085c377142ebac2ca8e4e6d2e357f7efdf516cd,rebasing
75,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/154,154,Adds REST API bindings for Bugzilla that are bit more designed and extensible,"Howdy folks,

This change introduces some API bindings for Bugzilla that are bit a less coupled from the rest of OneCRL and will hopefully make future extensions and maintenance a bit less painful.

From a user perspective, one should instantiate a [`Client`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/client/client.go) with the target base URL in order to construct an unauthenticated client. One may use the provided `WithAuth` builder pattern to inject an [`auth.Authenticator`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/auth/auth.go). Structs from the `api` package may then be used to engage the API.

The API package hierarchy is structured to similar to that found in the [Bugzilla API Docs](https://bugzilla.readthedocs.io/en/latest/api/core/v1/) (have 1:1 namings such as `general`, `attachments`, and `bugs`). An explanation of how to continue developing using this pattern may be found in the toplevel [`Endpoint`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/endpoint.go) docstring.

It is worth noting that one test is currently ""soft"" failing ([TestAttachment](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/bugzilla/client/client_test.go#L65)). It is just not failing to actually create an attachment on Bugzilla, however Bugzilla is suffering from an internal failing when building the return object.

I would also like to call out what to do about these [test credentials](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/.travis.yml#L3). Travis CAN [encrypt environment variables](https://docs.travis-ci.com/user/environment-variables/#defining-encrypted-variables-in-travisyml), however this would require some setup from you folks, plus we have the following snippet:

> Encrypted environment variables are not available to pull requests from forks 

...which would make it very unfortunate if couldn't successfully run tests. The truth is that these are credentials for an instance that is completely wide open in the first place, so I'm sure I see much danger there. Of course, the API key posted to this PR are generated against my personal GitHub account, so I'm on the hook for what is done with it. Perhaps a key generated by a Moz service account?",christopher-henderson,8518514,2020-05-17T18:23:56Z,COLLABORATOR,True,859,0,20,Some tools for supporting OneCRL,Go,840588ab80013593fb92acf2a9441cd2c6a2c001,Adds REST API bindings for Bugzilla that are bit more designed and extensible.
76,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/154,154,Adds REST API bindings for Bugzilla that are bit more designed and extensible,"Howdy folks,

This change introduces some API bindings for Bugzilla that are bit a less coupled from the rest of OneCRL and will hopefully make future extensions and maintenance a bit less painful.

From a user perspective, one should instantiate a [`Client`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/client/client.go) with the target base URL in order to construct an unauthenticated client. One may use the provided `WithAuth` builder pattern to inject an [`auth.Authenticator`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/auth/auth.go). Structs from the `api` package may then be used to engage the API.

The API package hierarchy is structured to similar to that found in the [Bugzilla API Docs](https://bugzilla.readthedocs.io/en/latest/api/core/v1/) (have 1:1 namings such as `general`, `attachments`, and `bugs`). An explanation of how to continue developing using this pattern may be found in the toplevel [`Endpoint`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/endpoint.go) docstring.

It is worth noting that one test is currently ""soft"" failing ([TestAttachment](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/bugzilla/client/client_test.go#L65)). It is just not failing to actually create an attachment on Bugzilla, however Bugzilla is suffering from an internal failing when building the return object.

I would also like to call out what to do about these [test credentials](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/.travis.yml#L3). Travis CAN [encrypt environment variables](https://docs.travis-ci.com/user/environment-variables/#defining-encrypted-variables-in-travisyml), however this would require some setup from you folks, plus we have the following snippet:

> Encrypted environment variables are not available to pull requests from forks 

...which would make it very unfortunate if couldn't successfully run tests. The truth is that these are credentials for an instance that is completely wide open in the first place, so I'm sure I see much danger there. Of course, the API key posted to this PR are generated against my personal GitHub account, so I'm on the hook for what is done with it. Perhaps a key generated by a Moz service account?",christopher-henderson,8518514,2020-05-17T18:23:56Z,COLLABORATOR,True,859,0,20,Some tools for supporting OneCRL,Go,518a0ef35bdea69ba20f165b405b9a46ac12349d,Adding more docs to search term as well as the Moz license everywhere
77,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/154,154,Adds REST API bindings for Bugzilla that are bit more designed and extensible,"Howdy folks,

This change introduces some API bindings for Bugzilla that are bit a less coupled from the rest of OneCRL and will hopefully make future extensions and maintenance a bit less painful.

From a user perspective, one should instantiate a [`Client`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/client/client.go) with the target base URL in order to construct an unauthenticated client. One may use the provided `WithAuth` builder pattern to inject an [`auth.Authenticator`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/auth/auth.go). Structs from the `api` package may then be used to engage the API.

The API package hierarchy is structured to similar to that found in the [Bugzilla API Docs](https://bugzilla.readthedocs.io/en/latest/api/core/v1/) (have 1:1 namings such as `general`, `attachments`, and `bugs`). An explanation of how to continue developing using this pattern may be found in the toplevel [`Endpoint`](https://github.com/christopher-henderson/OneCRL-Tools/blob/bugzilla/bugzilla/api/endpoint.go) docstring.

It is worth noting that one test is currently ""soft"" failing ([TestAttachment](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/bugzilla/client/client_test.go#L65)). It is just not failing to actually create an attachment on Bugzilla, however Bugzilla is suffering from an internal failing when building the return object.

I would also like to call out what to do about these [test credentials](https://github.com/christopher-henderson/OneCRL-Tools/blob/840588ab80013593fb92acf2a9441cd2c6a2c001/.travis.yml#L3). Travis CAN [encrypt environment variables](https://docs.travis-ci.com/user/environment-variables/#defining-encrypted-variables-in-travisyml), however this would require some setup from you folks, plus we have the following snippet:

> Encrypted environment variables are not available to pull requests from forks 

...which would make it very unfortunate if couldn't successfully run tests. The truth is that these are credentials for an instance that is completely wide open in the first place, so I'm sure I see much danger there. Of course, the API key posted to this PR are generated against my personal GitHub account, so I'm on the hook for what is done with it. Perhaps a key generated by a Moz service account?",christopher-henderson,8518514,2020-05-17T18:23:56Z,COLLABORATOR,True,859,0,20,Some tools for supporting OneCRL,Go,344830682e82ed067f5542b05f59679217915f8e,Merge branch 'master' into bugzilla
78,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/149,149,20200215 Fix issue #147,This change updates oneCRL.go so that LoadRevocationsTxtFromFile now supports subject / public key hash pairs in revocations.txt files.,mozmark,1017161,2020-02-15T09:05:19Z,CONTRIBUTOR,True,6,2,1,Some tools for supporting OneCRL,Go,5c09c2b82bdd9d42ed09195f08b12b968fa2fbe5,Fix OneCRL2CSV to support revocations by subject and public key hash
79,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/149,149,20200215 Fix issue #147,This change updates oneCRL.go so that LoadRevocationsTxtFromFile now supports subject / public key hash pairs in revocations.txt files.,mozmark,1017161,2020-02-15T09:05:19Z,CONTRIBUTOR,True,6,2,1,Some tools for supporting OneCRL,Go,0c3a704181891afe2a551371a4479f9d6e9f11fc,fix LoadRevocationsTxtFromFile to add support for subject / public key hash pairs
80,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/149,149,20200215 Fix issue #147,This change updates oneCRL.go so that LoadRevocationsTxtFromFile now supports subject / public key hash pairs in revocations.txt files.,mozmark,1017161,2020-02-15T09:05:19Z,CONTRIBUTOR,True,6,2,1,Some tools for supporting OneCRL,Go,428b3f923ada6ba4374883f8a59d0311a3fb5f90,Merge branch 'master' into 20200215-issue-147
81,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/148,148,Fix OneCRL2CSV to support revocations by subject and public key hash,"OneCRL2CSV lacked the ability to output data on revocations by subject and public key hash.

This change adds two new columns to the CSV output and, in cases where the issuer and serial number are not set, uses these columns for subject and public key hash pairs.",mozmark,1017161,2020-02-14T22:11:00Z,CONTRIBUTOR,True,24,11,1,Some tools for supporting OneCRL,Go,5c09c2b82bdd9d42ed09195f08b12b968fa2fbe5,Fix OneCRL2CSV to support revocations by subject and public key hash
82,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/145,145,Update default bug component and bug attachment flag name,"- Updates default configuration options to be compatible with production bugzilla.
- Updates the default flag name when adding bug attachments to bugzilla. @wthayer ",JP-E,55386708,2019-12-06T12:00:23Z,CONTRIBUTOR,True,2,2,2,Some tools for supporting OneCRL,Go,bfd57fb066b2f94ea7870e2fdba090cb48149037,Update default bug component and bug attachment flag name
83,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/144,144,updating to the new cert_storage backend,"@mozmark `cert_storage` changed its backend on nightly the other week, so we need to update to the specific version of `rkv` used by [Firefox](https://searchfox.org/mozilla-central/source/security/manager/ssl/cert_storage/Cargo.toml), which includes some minor code changes due to interface drift.

I also took the opportunity to .gitignore `target/` and to update the CLI `env` flag to look like the existing tools. I aim to have something on the Python side to call this tool by this weekend's end.",christopher-henderson,8518514,2019-11-29T18:10:27Z,COLLABORATOR,True,29,18,5,Some tools for supporting OneCRL,Go,7241a6be5c4645005a7ede95e9f7c0293b4201a4,updating to the new cert_storage backend
84,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/144,144,updating to the new cert_storage backend,"@mozmark `cert_storage` changed its backend on nightly the other week, so we need to update to the specific version of `rkv` used by [Firefox](https://searchfox.org/mozilla-central/source/security/manager/ssl/cert_storage/Cargo.toml), which includes some minor code changes due to interface drift.

I also took the opportunity to .gitignore `target/` and to update the CLI `env` flag to look like the existing tools. I aim to have something on the Python side to call this tool by this weekend's end.",christopher-henderson,8518514,2019-11-29T18:10:27Z,COLLABORATOR,True,29,18,5,Some tools for supporting OneCRL,Go,dd9e44106b1570b1c123b3c097500baa87d7d3b5,Merge branch 'master' into new_cert_storage
85,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/143,143,OneCRL to cert_storage for the TLS Canary,"As per issue [#204](https://github.com/mozilla/tls-canary/issues/204) of the TLS Canary, a tool is needed that can pull from OneCRL production/staging and populate a give Firefox profile's `cert_storage` with the result.

The following is the `--help` output of this tool.

```
OneCRL to Cert Storage
Christopher Henderson, chris@chenderson.org
Populates the given Firefox profile's cert_storage with the contents of OneCRL.

USAGE:
    one_crl_to_cert_storage [OPTIONS] --profile <Profile Path>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
    -e, --env <Production/Staging Environment>
            Describes whether to populate cert_storage from OneCRL's production or staging environment. [default: prod]
            [possible values: prod, production, stag, staging]
    -p, --profile <Profile Path>
            The profile path provided may be either the top level of a given profile (E.G. Firefox/Profiles/<PROFILE>)
            or the specific security_state directory within a profile (E.G. Firefox/Profiles/<PROFILE>/security_state).

Firefox must NOT be already running, as a running Firefox captures the lock on the cert_storage database and will almost
certainly result in an error.
```",christopher-henderson,8518514,2019-11-09T21:08:16Z,COLLABORATOR,True,1919,11,7,Some tools for supporting OneCRL,Go,ede9128b51083b53093b7ba422e00bd506ef9b41,Submitting a tool for populating a given Firefox profile's cert_storage from OneCRL prod/staging
86,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/143,143,OneCRL to cert_storage for the TLS Canary,"As per issue [#204](https://github.com/mozilla/tls-canary/issues/204) of the TLS Canary, a tool is needed that can pull from OneCRL production/staging and populate a give Firefox profile's `cert_storage` with the result.

The following is the `--help` output of this tool.

```
OneCRL to Cert Storage
Christopher Henderson, chris@chenderson.org
Populates the given Firefox profile's cert_storage with the contents of OneCRL.

USAGE:
    one_crl_to_cert_storage [OPTIONS] --profile <Profile Path>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
    -e, --env <Production/Staging Environment>
            Describes whether to populate cert_storage from OneCRL's production or staging environment. [default: prod]
            [possible values: prod, production, stag, staging]
    -p, --profile <Profile Path>
            The profile path provided may be either the top level of a given profile (E.G. Firefox/Profiles/<PROFILE>)
            or the specific security_state directory within a profile (E.G. Firefox/Profiles/<PROFILE>/security_state).

Firefox must NOT be already running, as a running Firefox captures the lock on the cert_storage database and will almost
certainly result in an error.
```",christopher-henderson,8518514,2019-11-09T21:08:16Z,COLLABORATOR,True,1919,11,7,Some tools for supporting OneCRL,Go,38cc1518a76b415f5bf8815c5e6b5c6e45dc62e5,"Actual error message for when the maintainer fails to sync expectations
between main one_crl::Environment"
87,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/143,143,OneCRL to cert_storage for the TLS Canary,"As per issue [#204](https://github.com/mozilla/tls-canary/issues/204) of the TLS Canary, a tool is needed that can pull from OneCRL production/staging and populate a give Firefox profile's `cert_storage` with the result.

The following is the `--help` output of this tool.

```
OneCRL to Cert Storage
Christopher Henderson, chris@chenderson.org
Populates the given Firefox profile's cert_storage with the contents of OneCRL.

USAGE:
    one_crl_to_cert_storage [OPTIONS] --profile <Profile Path>

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

OPTIONS:
    -e, --env <Production/Staging Environment>
            Describes whether to populate cert_storage from OneCRL's production or staging environment. [default: prod]
            [possible values: prod, production, stag, staging]
    -p, --profile <Profile Path>
            The profile path provided may be either the top level of a given profile (E.G. Firefox/Profiles/<PROFILE>)
            or the specific security_state directory within a profile (E.G. Firefox/Profiles/<PROFILE>/security_state).

Firefox must NOT be already running, as a running Firefox captures the lock on the cert_storage database and will almost
certainly result in an error.
```",christopher-henderson,8518514,2019-11-09T21:08:16Z,COLLABORATOR,True,1919,11,7,Some tools for supporting OneCRL,Go,6a9135d7dcde66968dde1e99e6f7d0e88ac9bbe1,fixing omitted fmt value and updating the CI system for rust
88,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,f99967c46c5deb80ab574061c7d59f2b242dadb4,Comment out kinto related code
89,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,2d6ad21817f4d45d5211a9abf702adcb46b7ae14,"Remove kinto auth check for bugzilla bug creation
Add OneCRL record creation"
90,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,ec4027d5f985ce834fac02fc92136af41c1d4481,Add debug messages for filing bugzilla bug
91,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,baca8de60f835ea59d5f42c4114515de6c0707b1,"Fix bugzilla integration
Add bug configuration options for product, component, and version"
92,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,2885ffaa577db46117c4009302e07c9e67634a6a,Fix typo in a bug's component default configuration
93,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/142,142,Fix Bugzilla bug creation in salesforce2OneCRL,"Adds the configuration options `bugcomponent`, `bugproduct`, `bugversion` to specify the default bug version, component, and product when creating a bug with Bugzilla.

Fixes bug creation with Bugzilla using the REST API.",JP-E,55386708,2019-10-05T09:53:38Z,CONTRIBUTOR,True,28,3,3,Some tools for supporting OneCRL,Go,e381a04c9e0f951abea3fd26973c6afedb076095,"Remove debug statements, debug modifications"
94,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/141,141,Add leaf cert due to private key compromise,,wthayer,1906861,2019-05-08T23:22:27Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,05f7bc6b08158473a5b8d483d4683535a1c87387,Add leaf cert due to private key compromise
95,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/141,141,Add leaf cert due to private key compromise,,wthayer,1906861,2019-05-08T23:22:27Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,2b14f83741edba6b467e7ad586e28cab06f21d7e,Merge branch 'master' into bug1539007
96,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/141,141,Add leaf cert due to private key compromise,,wthayer,1906861,2019-05-08T23:22:27Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,338dd99bd9821ceead3c18cdd05ad15e31f6bab8,Merge branch 'master' into bug1539007
97,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/140,140,Migrating certdataDiffCCAB from Heroku to Docker,"Supporting tools for the CCADB have been undergoing migrations from Heroku to Google Cloud Platform, which uses Docker under the hood. `certdataDiffCCADB` was one of the last tools pegged for this migration.

This change does three things:

1. Removes references to Heroku and replaces them with a Dockerfile (and a Makefile for convenience).
2. Since the last time this code was touched, Go 1.11 happened, so I tore out `Godeps` and migrated to `go.mod`.
3. There we some bugs in `main.go` wherein a formatting string was being used for a non-formatting function.",christopher-henderson,8518514,2019-04-21T17:36:45Z,COLLABORATOR,True,66,3265,34,Some tools for supporting OneCRL,Go,fde217e9faf912ffdc231ad128dcbe0659c71281,"Migrating from Heroku to Docker

adding license to Makefile

Adding explanation for CGO disable

adding newlines to EOF"
98,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/140,140,Migrating certdataDiffCCAB from Heroku to Docker,"Supporting tools for the CCADB have been undergoing migrations from Heroku to Google Cloud Platform, which uses Docker under the hood. `certdataDiffCCADB` was one of the last tools pegged for this migration.

This change does three things:

1. Removes references to Heroku and replaces them with a Dockerfile (and a Makefile for convenience).
2. Since the last time this code was touched, Go 1.11 happened, so I tore out `Godeps` and migrated to `go.mod`.
3. There we some bugs in `main.go` wherein a formatting string was being used for a non-formatting function.",christopher-henderson,8518514,2019-04-21T17:36:45Z,COLLABORATOR,True,66,3265,34,Some tools for supporting OneCRL,Go,18e244ac81ab245984dc7d537b7f6ce549904bb1,Merge branch 'master' into master
99,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/139,139,Add Mozilla Code of Conduct,"Fixes #138


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T22:06:18Z,CONTRIBUTOR,True,15,0,1,Some tools for supporting OneCRL,Go,2ed9d43d8875b576f65370b0479933eac243fbd9,"Add Mozilla Code of Conduct file

Fixes #138.

_(Message COC002)_"
100,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/137,137,Fix #135 - Move to new Kinto collection name,,jcjones,518542,2019-03-13T16:13:22Z,CONTRIBUTOR,True,57,36,2,Some tools for supporting OneCRL,Go,27b423b053efae5bcae75b5f4368cf1912d293e4,Issue #135 - Add a CLI flag to skip creating a bug at bugzilla
101,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/137,137,Fix #135 - Move to new Kinto collection name,,jcjones,518542,2019-03-13T16:13:22Z,CONTRIBUTOR,True,57,36,2,Some tools for supporting OneCRL,Go,aabc8eab29f894131e0b81483b26031431c5896e,Issue #135 - Make preview generate the attachment files as tmp files
102,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/137,137,Fix #135 - Move to new Kinto collection name,,jcjones,518542,2019-03-13T16:13:22Z,CONTRIBUTOR,True,57,36,2,Some tools for supporting OneCRL,Go,37eaf560944819663df75606f5c7699f35ce4814,Issue #136 - Bugfix that BugData.txt is only generated when preview is not yes
103,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/137,137,Fix #135 - Move to new Kinto collection name,,jcjones,518542,2019-03-13T16:13:22Z,CONTRIBUTOR,True,57,36,2,Some tools for supporting OneCRL,Go,c17c6961984406eee1ebd79057e59c14bfc6f393,Fix #135 - Move to new bucket format
104,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/137,137,Fix #135 - Move to new Kinto collection name,,jcjones,518542,2019-03-13T16:13:22Z,CONTRIBUTOR,True,57,36,2,Some tools for supporting OneCRL,Go,0f59833f0e17792cb5810c24894b7bd205510357,Fix go fmt
105,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/133,133,Revoke compromised Alibaba *.alipcsec.com certificate,,wthayer,1906861,2018-12-14T18:34:19Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,b22ae1ea9b2dc60093fc9f471b52ab6f861f421a,Revoke compromised Alibaba *.alipcsec.com certificate
106,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/132,132,20180904 lambda config changes,These changes allow services operations to have a single lambda package for different environments by allowing the OneCRL config and the salesforce2OneCRL exceptions to be set from AWS environment. This change includes some modification to config.go to allow configuration entries that do not apply to all OneCRL tools to nevertheless be added to the config.yaml,mozmark,1017161,2018-11-14T12:29:35Z,CONTRIBUTOR,True,89,28,2,Some tools for supporting OneCRL,Go,c391a69cc8b0fd57d4e2aaf03e029b1675ad012e,Added support for parsing additional config items from the config.yml
107,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/132,132,20180904 lambda config changes,These changes allow services operations to have a single lambda package for different environments by allowing the OneCRL config and the salesforce2OneCRL exceptions to be set from AWS environment. This change includes some modification to config.go to allow configuration entries that do not apply to all OneCRL tools to nevertheless be added to the config.yaml,mozmark,1017161,2018-11-14T12:29:35Z,CONTRIBUTOR,True,89,28,2,Some tools for supporting OneCRL,Go,76875038b6ad6e02f1e79c2cfbfe67e2e1abb52f,modified salesforce2OneCRL to fetch exceptions from config or environment
108,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/132,132,20180904 lambda config changes,These changes allow services operations to have a single lambda package for different environments by allowing the OneCRL config and the salesforce2OneCRL exceptions to be set from AWS environment. This change includes some modification to config.go to allow configuration entries that do not apply to all OneCRL tools to nevertheless be added to the config.yaml,mozmark,1017161,2018-11-14T12:29:35Z,CONTRIBUTOR,True,89,28,2,Some tools for supporting OneCRL,Go,b464a4d58fde3c6f5cecd13e8c5e9e0679fda3a0,merged mozilla master
109,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/132,132,20180904 lambda config changes,These changes allow services operations to have a single lambda package for different environments by allowing the OneCRL config and the salesforce2OneCRL exceptions to be set from AWS environment. This change includes some modification to config.go to allow configuration entries that do not apply to all OneCRL tools to nevertheless be added to the config.yaml,mozmark,1017161,2018-11-14T12:29:35Z,CONTRIBUTOR,True,89,28,2,Some tools for supporting OneCRL,Go,c30f84d40c638f708a48f9adc1c02148aa14a93e,some tidy up
110,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/131,131,Use bearer token,,jcjones,518542,2018-11-02T15:51:56Z,CONTRIBUTOR,True,28,12,3,Some tools for supporting OneCRL,Go,a2c7f9f03fb544f7595d512d72479902353ad8fd,Fix compile issues on Go 1.11
111,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/131,131,Use bearer token,,jcjones,518542,2018-11-02T15:51:56Z,CONTRIBUTOR,True,28,12,3,Some tools for supporting OneCRL,Go,59179406965dc96d85a0aab5b4c2761a3a9aa279,Fix 'go vet' issues in 1.11
112,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/131,131,Use bearer token,,jcjones,518542,2018-11-02T15:51:56Z,CONTRIBUTOR,True,28,12,3,Some tools for supporting OneCRL,Go,aaa6b96be7ef885ee7e47505a81ba2f3740f9729,"Permit use of a Kinto bearer token for authentication, 'KintoToken'

See https://bugzilla.mozilla.org/show_bug.cgi?id=1397882#c15 for context"
113,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/131,131,Use bearer token,,jcjones,518542,2018-11-02T15:51:56Z,CONTRIBUTOR,True,28,12,3,Some tools for supporting OneCRL,Go,5ae96d2b49150025516a335953f3b302e11f257b,Merge branch 'master' into use_bearer_token
114,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/130,130,Fix travis for Go 1.11,"These are non-functional changes, except for an unexported JSON field that looks harmless. These fix `go test` and `go vet` for 1.11.",jcjones,518542,2018-11-02T15:26:02Z,CONTRIBUTOR,True,16,13,6,Some tools for supporting OneCRL,Go,a2c7f9f03fb544f7595d512d72479902353ad8fd,Fix compile issues on Go 1.11
115,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/130,130,Fix travis for Go 1.11,"These are non-functional changes, except for an unexported JSON field that looks harmless. These fix `go test` and `go vet` for 1.11.",jcjones,518542,2018-11-02T15:26:02Z,CONTRIBUTOR,True,16,13,6,Some tools for supporting OneCRL,Go,59179406965dc96d85a0aab5b4c2761a3a9aa279,Fix 'go vet' issues in 1.11
116,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/129,129,"Change bug component for new entries to ""Blocklist Policy Requests""",,jcjones,518542,2018-10-04T21:34:27Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,4ec9fc145c60054648ba6cacf7fd831c7e216ca9,"Change bug component for new entries to ""Blocklist Policy Requests"""
117,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/129,129,"Change bug component for new entries to ""Blocklist Policy Requests""",,jcjones,518542,2018-10-04T21:34:27Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,7e6bb78515699e5eaf3ec89ace8a168b934b02a0,Merge branch 'master' into bug_component_change
118,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/127,127,Exceptional revocations in bugs 1480853 and 1484798,,wthayer,1906861,2018-08-29T18:04:07Z,CONTRIBUTOR,True,36,0,1,Some tools for supporting OneCRL,Go,c31ba0755903e7ce420104ebea52135dcefc894c,exceptional revocations in bugs 1480853 and 1484798
119,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/126,126,Add compromised localhost.megasynloopback.mega.nz certs to OneCRL,,wthayer,1906861,2018-08-14T21:03:37Z,CONTRIBUTOR,False,24,0,1,Some tools for supporting OneCRL,Go,1fc86ca86a8f7d602e77958188524b28b4e482e2,Add compromised localhost.megasynloopback.mega.nz certs to OneCRL
120,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/125,125,import the missing boto3 module,"Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```",bqbn,2209111,2018-05-17T00:49:15Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,673e3ed201a11a3f9022e405b15db6b6ecf7e1d0,"Fix a build error

This tries to revert https://github.com/mozilla/OneCRL-Tools/pull/105

I'm not sure why we changed from `go get` to `go install` in that PR,
but it doesn't work when we try to build the lambda. See the error in
https://bugzilla.mozilla.org/show_bug.cgi?id=1397882#c4

IIRC, neither `go install` nor `go build` will download the dependencies,
only `go get` does that. If we were trying to avoid always building the
""master"", then we can go get a relative path."
121,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/125,125,import the missing boto3 module,"Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```",bqbn,2209111,2018-05-17T00:49:15Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,b0e6a0b3111f2a305d5515b15385ebe3a64b2568,Merge branch 'master' into master
122,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/125,125,import the missing boto3 module,"Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```",bqbn,2209111,2018-05-17T00:49:15Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,2cc3eedc6ae5edda1000d6565602c234645ea052,Merge remote-tracking branch 'upstream/master'
123,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/125,125,import the missing boto3 module,"Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```",bqbn,2209111,2018-05-17T00:49:15Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,c899a04a940c620988dc9c7906e1fc67e83aed5b,Merge branch 'master' of github.com:bqbn/OneCRL-Tools
124,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/125,125,import the missing boto3 module,"Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```",bqbn,2209111,2018-05-17T00:49:15Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,61fb448940ce165a28397a5a45f17ff05b7872ca,"Import the missing boto3 module

Without it, the lambda fails with the following error:
```
global name 'boto3' is not defined: NameError
Traceback (most recent call last):
File ""/var/task/scheduler.py"", line 38, in ccadb_import
kinto_pass = str(kms_decrypt_env(""PROTECTED_KINTO_PASS""))
File ""/var/task/scheduler.py"", line 19, in kms_decrypt_env
return kms_decrypt(b64decode(os.environ[key]))
File ""/var/task/scheduler.py"", line 12, in kms_decrypt
res = boto3.client(""kms"").decrypt(
NameError: global name 'boto3' is not defined
```"
125,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/124,124,Fixing flipped web and email trust fields,"When in `serve` mode, the serialized struct reversed the `TrustWeb` and `TrustEmail` fields.",christopher-henderson,8518514,2018-05-10T00:35:29Z,COLLABORATOR,True,7,2,1,Some tools for supporting OneCRL,Go,0b8a47585b563d3df274606f69388f5363a37c07,fixing flipped web and email trust fields
126,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,21fbe07d263d4255fd42dc92fd38dd0d2340466f,Add support for the public intermediate certificates report to salesforce.go
127,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,435477b0af4a7c00cc98db4f30a5c251b00788ed,Merge branch 'master' into 20180105-110-Public-Intermediates
128,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,210f2feed9792c84fc7dce569a1a566c980cf103,Modify the signature of the AddKintoObject function to return the ID
129,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,99b03f19ad426c4cbd0030908becdf85157d7d89,Merged
130,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,9b2ab5d240d1a8c8e976b686d51aa282e67a9ec9,added test script for dumping intermediates
131,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,c391a69cc8b0fd57d4e2aaf03e029b1675ad012e,Added support for parsing additional config items from the config.yml
132,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,76875038b6ad6e02f1e79c2cfbfe67e2e1abb52f,modified salesforce2OneCRL to fetch exceptions from config or environment
133,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,b464a4d58fde3c6f5cecd13e8c5e9e0679fda3a0,merged mozilla master
134,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,c30f84d40c638f708a48f9adc1c02148aa14a93e,some tidy up
135,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/123,123,20180105 110 public intermediates,Add support necessary for creating public intermediate records in Kinto,mozmark,1017161,2018-05-09T13:45:45Z,CONTRIBUTOR,False,191,39,4,Some tools for supporting OneCRL,Go,692171a980d9bcf094e6aae7962a59cdefa9787e,Merge branch '20180904-lambda-config-changes' into 20180105-110-Public-Intermediates
136,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/122,122,"CKT_NSS_MUST_VERIFY_TRUST is now taken to mean ""distrusted"".",Fixes an issue wherein certificates in cerdata.txt which require verification were taken to be implicitly trusted. They are now taken to be distrusted instead.,christopher-henderson,8518514,2018-04-19T18:25:38Z,COLLABORATOR,True,307,24,3,Some tools for supporting OneCRL,Go,155d72181c0401a8d257dc100262a0e046bd712c,"CKT_NSS_MUST_VERIFY_TRUST is now taken to broadly mean ""distrusted""."
137,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/121,121,Fix a build error,"This tries to revert https://github.com/mozilla/OneCRL-Tools/pull/105

I'm not sure why we changed from `go get` to `go install` in that PR,
but it doesn't work when we try to build the lambda. See the error in
https://bugzilla.mozilla.org/show_bug.cgi?id=1397882#c4

IIRC, neither `go install` nor `go build` will download the dependencies,
only `go get` does that. If we were trying to avoid always building the
""master"", then we can go get a relative path.",bqbn,2209111,2018-04-19T00:56:53Z,CONTRIBUTOR,True,2,1,1,Some tools for supporting OneCRL,Go,673e3ed201a11a3f9022e405b15db6b6ecf7e1d0,"Fix a build error

This tries to revert https://github.com/mozilla/OneCRL-Tools/pull/105

I'm not sure why we changed from `go get` to `go install` in that PR,
but it doesn't work when we try to build the lambda. See the error in
https://bugzilla.mozilla.org/show_bug.cgi?id=1397882#c4

IIRC, neither `go install` nor `go build` will download the dependencies,
only `go get` does that. If we were trying to avoid always building the
""master"", then we can go get a relative path."
138,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/121,121,Fix a build error,"This tries to revert https://github.com/mozilla/OneCRL-Tools/pull/105

I'm not sure why we changed from `go get` to `go install` in that PR,
but it doesn't work when we try to build the lambda. See the error in
https://bugzilla.mozilla.org/show_bug.cgi?id=1397882#c4

IIRC, neither `go install` nor `go build` will download the dependencies,
only `go get` does that. If we were trying to avoid always building the
""master"", then we can go get a relative path.",bqbn,2209111,2018-04-19T00:56:53Z,CONTRIBUTOR,True,2,1,1,Some tools for supporting OneCRL,Go,b0e6a0b3111f2a305d5515b15385ebe3a64b2568,Merge branch 'master' into master
139,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,03c14b573ef00282046fe9bc793fc4a319b37a3b,This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory
140,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,d793ca4032d9f68d26137cdcf9b00bffdaaeacdf,Travis is expecting all of these to have their own directory.
141,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,e509fc05572606dd2825392aa2e1214bc4cd07f4,fixed flag usage and defaul path
142,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,2b06ebe5dadbd13c64ec1cd7f2f9e4b9a805821d,Fixing bug caused by building paths in init
143,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,8bea9ed31f07d885bf194fc63a49a94064617f4a,Added a link to a relevant TLS Observatory issue.
144,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,278c0ec13fe323727e348d321d3ecacbaeca5817,Added recommendation for migrating certificate ID
145,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/120,120,CCADB to TLS Observatory Report Tool,"This change introduces a tool for building an analysis report on the formatting and semantic differences between the CCADB and the TLS Observatory.

The entire tool is comprised of four commands in a pipeline: `makeDB` (pull, normalize, and store CCADB/Obs) -> `buildReport` (find differences) -> `buildReportSite` (build static website) -> `serveReportSite`. The report website is generated by [Hugo](https://gohugo.io/getting-started/installing/) (available on Homebrew). Unless we are interested in reviewing the markdown for the static site, then everything under `obsDiffCCADB/recommendation` can be ignored (in fact, a huge chunk of the files in this change are just Hugo files from the directory).",christopher-henderson,8518514,2018-04-17T15:32:05Z,COLLABORATOR,True,10014,12,94,Some tools for supporting OneCRL,Go,0e152c5470a6d20a024f6c9be514df66e41b1132,Fixed incomplete call to MkdirAll
146,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/117,117,Compromise update per bug 1436524,,wthayer,1906861,2018-02-13T20:50:09Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,2fd28c1819cf42e79b22c92b070538443622d4b1,Compromise update per bug 1436524
147,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/115,115,Add support for the public intermediate certificates report to salesf…,…orce.go,mozmark,1017161,2018-02-06T21:29:00Z,CONTRIBUTOR,True,83,35,2,Some tools for supporting OneCRL,Go,21fbe07d263d4255fd42dc92fd38dd0d2340466f,Add support for the public intermediate certificates report to salesforce.go
148,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/115,115,Add support for the public intermediate certificates report to salesf…,…orce.go,mozmark,1017161,2018-02-06T21:29:00Z,CONTRIBUTOR,True,83,35,2,Some tools for supporting OneCRL,Go,435477b0af4a7c00cc98db4f30a5c251b00788ed,Merge branch 'master' into 20180105-110-Public-Intermediates
149,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/114,114,Entry maker improvements,"These patches make `entryMaker` have the capability of editing the `exceptions.json` in-place,
avoiding the need for us to keep hand-editing the file.

It also updates `exceptions.json` to be formatted according to Go's preference. That should be a no-logical-changes change, please confirm it before merging.",jcjones,518542,2018-01-26T01:05:03Z,CONTRIBUTOR,True,676,585,7,Some tools for supporting OneCRL,Go,547ec608a09a2a8fc614ee1426aaf325f58d5b0a,"Move ""bugs.go"" out of util and into its own package"
150,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/114,114,Entry maker improvements,"These patches make `entryMaker` have the capability of editing the `exceptions.json` in-place,
avoiding the need for us to keep hand-editing the file.

It also updates `exceptions.json` to be formatted according to Go's preference. That should be a no-logical-changes change, please confirm it before merging.",jcjones,518542,2018-01-26T01:05:03Z,CONTRIBUTOR,True,676,585,7,Some tools for supporting OneCRL,Go,0df9bd79740510a95661b487e4e5f7d335393ee7,Move the exceptions loading code into util
151,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/114,114,Entry maker improvements,"These patches make `entryMaker` have the capability of editing the `exceptions.json` in-place,
avoiding the need for us to keep hand-editing the file.

It also updates `exceptions.json` to be formatted according to Go's preference. That should be a no-logical-changes change, please confirm it before merging.",jcjones,518542,2018-01-26T01:05:03Z,CONTRIBUTOR,True,676,585,7,Some tools for supporting OneCRL,Go,27df96cef5dc30f8cc12dbe2d71d506808246101,"Rework entryMaker to permit appending a new entry directly onto the exceptions list

also reformat the exceptions list!"
152,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/113,113,Add additional information to the certdataDiffCCADB returned JSON,"Added the DN and distinguished name to the returned JSON. Also fixed an issue where I was appending to a slice whose capacity was initialized to a non-zero value, leading to `len(c)` zero value entries leading the slice",christopher-henderson,8518514,2018-01-18T22:18:36Z,COLLABORATOR,True,8,6,1,Some tools for supporting OneCRL,Go,b216193be3a4d88e47813ed272b0aaf642af221e,Added additional information to the return and fixed a ranging/append bug over a slice with an initialized capacity
153,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/112,112,Exceptional addition - see bug 1427034,https://bugzilla.mozilla.org/show_bug.cgi?id=1427034,mozmark,1017161,2018-01-17T13:12:26Z,CONTRIBUTOR,True,12,0,1,Some tools for supporting OneCRL,Go,1cca4d3de8db2b5878920b89ac97db42a80d997d,Exceptional addition - see bug 1427034
154,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/108,108,20171206 exceptional additions,As per https://bugzilla.mozilla.org/show_bug.cgi?id=1423400,mozmark,1017161,2017-12-06T17:02:03Z,CONTRIBUTOR,True,26,2,1,Some tools for supporting OneCRL,Go,a343262ba16977c6123dee097befe2053685fc09,Exceptional revocation as per bug https://bugzilla.mozilla.org/show_bug.cgi?id=1423400
155,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/108,108,20171206 exceptional additions,As per https://bugzilla.mozilla.org/show_bug.cgi?id=1423400,mozmark,1017161,2017-12-06T17:02:03Z,CONTRIBUTOR,True,26,2,1,Some tools for supporting OneCRL,Go,a6542e2ee12727eb2ee2cf13f90f629af2dbd9ef,Ensure enabled is set to true
156,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/107,107,added server mode to the certdata.txt diff ccadb tool,"As requested, I added a server mode that serves up _only_ a list of simplified certdata objects. Poonam would rather use the Observatory to parse out information from the PEM than support this code's logic for extracting the bulk of the certdata info (it is still extracting everything, it's just throwing most of it away).",christopher-henderson,8518514,2017-12-02T23:36:59Z,COLLABORATOR,True,3096,5,30,Some tools for supporting OneCRL,Go,e2d3808f86b9606105bfdde6db2ec35fae917f84,added server mode to the certdata.txt diff ccadb tool
157,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/107,107,added server mode to the certdata.txt diff ccadb tool,"As requested, I added a server mode that serves up _only_ a list of simplified certdata objects. Poonam would rather use the Observatory to parse out information from the PEM than support this code's logic for extracting the bulk of the certdata info (it is still extracting everything, it's just throwing most of it away).",christopher-henderson,8518514,2017-12-02T23:36:59Z,COLLABORATOR,True,3096,5,30,Some tools for supporting OneCRL,Go,57ee492d8c9c3ca9a928bc4d65eff7b99d5bc9ab,Removed self signed certificate generation. Got working in Heroku.
158,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/107,107,added server mode to the certdata.txt diff ccadb tool,"As requested, I added a server mode that serves up _only_ a list of simplified certdata objects. Poonam would rather use the Observatory to parse out information from the PEM than support this code's logic for extracting the bulk of the certdata info (it is still extracting everything, it's just throwing most of it away).",christopher-henderson,8518514,2017-12-02T23:36:59Z,COLLABORATOR,True,3096,5,30,Some tools for supporting OneCRL,Go,724cff38c52d5b0f03b744060b06bbf17b685fdf,Added rate limiting and the automated tool header
159,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/107,107,added server mode to the certdata.txt diff ccadb tool,"As requested, I added a server mode that serves up _only_ a list of simplified certdata objects. Poonam would rather use the Observatory to parse out information from the PEM than support this code's logic for extracting the bulk of the certdata info (it is still extracting everything, it's just throwing most of it away).",christopher-henderson,8518514,2017-12-02T23:36:59Z,COLLABORATOR,True,3096,5,30,Some tools for supporting OneCRL,Go,a9eebe57665ad0b19f9bf8389845f96c989b0ddd,Added the header to the wrong place
160,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/107,107,added server mode to the certdata.txt diff ccadb tool,"As requested, I added a server mode that serves up _only_ a list of simplified certdata objects. Poonam would rather use the Observatory to parse out information from the PEM than support this code's logic for extracting the bulk of the certdata info (it is still extracting everything, it's just throwing most of it away).",christopher-henderson,8518514,2017-12-02T23:36:59Z,COLLABORATOR,True,3096,5,30,Some tools for supporting OneCRL,Go,c253eaaf5fe28a93037f4516257b6fe4d0c06033,Merge branch 'master' into serveMode
161,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/106,106,add validity check,,mozmark,1017161,2017-11-20T12:52:54Z,CONTRIBUTOR,True,11,0,1,Some tools for supporting OneCRL,Go,7be85ab10a9da041d82d25e9498e22cc91c8a2af,add validity check
162,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/106,106,add validity check,,mozmark,1017161,2017-11-20T12:52:54Z,CONTRIBUTOR,True,11,0,1,Some tools for supporting OneCRL,Go,35a494d786d3ca1b6300b811ff1ad1823f6f7781,Merge branch 'master' into 20171110-entryMaker-validity
163,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/105,105,Allow Salesforce2OneCRL-scheduler to build specific git refs.,"Requesting this on recommendation from @oremj:

Alter the makefile to go install instead of go get -u. The way it is now it builds master no matter what ref is currently checked out.",Micheletto,1770209,2017-11-16T05:30:52Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,10f81971f00becea9a379117bb39c67f08a94995,"Requesting this on recommendation from @oremj:
Alter the makefile to go install instead of go get -u. The way it is now builds master no matter what ref is current checked out."
164,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/105,105,Allow Salesforce2OneCRL-scheduler to build specific git refs.,"Requesting this on recommendation from @oremj:

Alter the makefile to go install instead of go get -u. The way it is now it builds master no matter what ref is currently checked out.",Micheletto,1770209,2017-11-16T05:30:52Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,dfe959c6c186036fe27732d64342325e3c3ad41e,Merge branch 'master' into bobm/Salesforce2OneCRL-scheduler-Makefile-1
165,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/103,103,Added a tool to build a report of the differences between a certdata.…,"Added a tool to build a report of the differences between a certdata.txt file and a CCADB CSV report file.

CLI Usage:
-cd: Path to the certdata file
-ccadb: Path to the CCADB CSV file
-o: Path to the directory to write the output to.

Output Files:
- matched.json: All pairs of entries between the two files that could be reliably matched.
- unmatchedTrusted.json: All entries that could not be reliably matched and are trusted.
- unmatchedUnstrusted.json: All entries that coult not be reliably matched are not trusted.",christopher-henderson,8518514,2017-11-01T16:47:20Z,COLLABORATOR,True,1044,0,6,Some tools for supporting OneCRL,Go,52d07db1031d32caf01853bae7fae7bfe875518d,"Added a tool to build a report of the differences between a certdata.txt file and a CCADB CSV report file.

CLI Usage:
-cd: Path to the certdata file
-ccadb: Path to the CCADB CSV file
-o: Path to the directory to write the output to.

Output Files:

    matched.json: All pairs of entries between the two files that could be reliably matched.
    unmatchedTrusted.json: All entries that could not be reliably matched and are trusted.
    unmatchedUnstrusted.json: All entries that coult not be reliably matched are not trusted."
166,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/100,100,20171011 use new ccadb report,"Uses the new CCADB report, allows CRL checks to not be enforced, included comments on failed CRL lookups in the bugzilla comment",mozmark,1017161,2017-10-11T09:22:24Z,CONTRIBUTOR,True,62,9,4,Some tools for supporting OneCRL,Go,7280a79ca17a56b833e510ef0adcecacaba53dca,"Issue #97 - Add a flag for not requiring CRL checks, Issue #99 - Modify AddEntries to take information on what to include in the bugzilla comment."
167,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/100,100,20171011 use new ccadb report,"Uses the new CCADB report, allows CRL checks to not be enforced, included comments on failed CRL lookups in the bugzilla comment",mozmark,1017161,2017-10-11T09:22:24Z,CONTRIBUTOR,True,62,9,4,Some tools for supporting OneCRL,Go,406d7f0a6efcaa639c2b5b9555a44e534c763f25,"Issue #98 - Set the ""ready to add"" report as the default CSV source for revocation data."
168,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
169,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
170,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
171,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
172,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
173,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
174,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
175,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
176,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
177,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,257175d8916fd2fa2b46ccb6d3b8933362116c7a,Merge remote-tracking branch 'mozilla/master'
178,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,ae830cf187948f180705b5143d7d8bd67637126e,Merge remote-tracking branch 'mozilla/master'
179,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,1fcfdce7386224f591f7577ca0f16dc87c0974d2,Merge remote-tracking branch 'mozilla/master'
180,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,e03ae3bf3a5e813f47fc899975047aa4ab44c350,"Issue #90- move args into a separate array, URL into constant for more readable code"
181,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,303156039416d57c36a86e4fa7bfe1572035494b,Issue #95 - Add KMS decryption for protected environment variables
182,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,532f12a6a27a2be10c9800f0e89971ab8f97d1b3,fix typo
183,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/96,96,20171006 issue 95 kms,,mozmark,1017161,2017-10-06T15:10:30Z,CONTRIBUTOR,True,40,3,1,Some tools for supporting OneCRL,Go,9f0610997d19085d1d4d2ec48aef8f388d2ca134,Merge branch 'master' into 20171006-Issue-95-KMS
184,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
185,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
186,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
187,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
188,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
189,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
190,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
191,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
192,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
193,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,257175d8916fd2fa2b46ccb6d3b8933362116c7a,Merge remote-tracking branch 'mozilla/master'
194,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,ae830cf187948f180705b5143d7d8bd67637126e,Merge remote-tracking branch 'mozilla/master'
195,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,1fcfdce7386224f591f7577ca0f16dc87c0974d2,Merge remote-tracking branch 'mozilla/master'
196,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,28d4998d1b10a3025a88da6a1d53ce662d678180,Issue #93 - create a tool to make entries
197,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,cd0cf92782c2bbc8983a23a57ea62168f26e8260,gofmt
198,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,4a01cd69dd22dc34c53fa0d57e1c85ca15146706,Merge branch 'master' into 20171005-Issue-93
199,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,72fefbf7b5ac399a7c06ec88dc271215a245febe,"Add MPL header, add encodings to usage output"
200,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,fc3ff20b93a31eb8a703fa639101897ada476da6,Merge branch '20171005-Issue-93' of github.com:mozmark/OneCRL-Tools into 20171005-Issue-93
201,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,e4a75e10a62b56984b604fa780fb70948efc37dd,Issue #93 - create a tool to make entries
202,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,e1886ab71f6cb6c1e606e7f7cc0e81e2d4f2e3a8,gofmt
203,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,3a95d4ebc8657d13e225208f3a9c2361babb2043,"Add MPL header, add encodings to usage output"
204,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,5e9d90708ed12d495924614f4cb19ee7ef61f94b,Merge branch '20171005-Issue-93' of github.com:mozmark/OneCRL-Tools into 20171005-Issue-93
205,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/94,94,20171005 issue 93 - create a tool to make exceptions.json entries,,mozmark,1017161,2017-10-05T13:25:22Z,CONTRIBUTOR,True,79,0,1,Some tools for supporting OneCRL,Go,0dd54a10183f96171659072fc2e9d8ac451fefb8,Merge branch 'master' into 20171005-Issue-93
206,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
207,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
208,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
209,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
210,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
211,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
212,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
213,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
214,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
215,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,257175d8916fd2fa2b46ccb6d3b8933362116c7a,Merge remote-tracking branch 'mozilla/master'
216,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,ae830cf187948f180705b5143d7d8bd67637126e,Merge remote-tracking branch 'mozilla/master'
217,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,1fcfdce7386224f591f7577ca0f16dc87c0974d2,Merge remote-tracking branch 'mozilla/master'
218,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/92,92,20171005 issue 91 - omit empty on IssuerName and SerialNumber,,mozmark,1017161,2017-10-05T13:21:13Z,CONTRIBUTOR,True,2,2,1,Some tools for supporting OneCRL,Go,6d6f524bf943d9628512b7ce250c6cbb5206a289,Issue #91 - omitempty on IssuerName and SerialNumber
219,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
220,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
221,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
222,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
223,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
224,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
225,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
226,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
227,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
228,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,257175d8916fd2fa2b46ccb6d3b8933362116c7a,Merge remote-tracking branch 'mozilla/master'
229,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,ae830cf187948f180705b5143d7d8bd67637126e,Merge remote-tracking branch 'mozilla/master'
230,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/89,89,20171004 issue 88,,mozmark,1017161,2017-10-04T18:07:10Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,bea1036f888e167cc13768ba00418dc80a2e59f1,Issue #88 - ensure exceptions via HTTPS are in the Lambda command args
231,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
232,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
233,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
234,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
235,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
236,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
237,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
238,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
239,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
240,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,257175d8916fd2fa2b46ccb6d3b8933362116c7a,Merge remote-tracking branch 'mozilla/master'
241,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/86,86,20171004 issue 85,A fix for Issue #85  - empty IDs were being sent in Kinto POSTs,mozmark,1017161,2017-10-04T10:28:44Z,CONTRIBUTOR,True,4,1,1,Some tools for supporting OneCRL,Go,758252b7d8f441aeca2bdb66de939d3f1c8c54a0,"Issue #85 - prevent empty IDs being sent in POSTs to Kinto, provide useful messages in the event of error responses"
242,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
243,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
244,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
245,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
246,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
247,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
248,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
249,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
250,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,fc6aa117b70632a89d7c5f303094422868cf0606,Merge remote-tracking branch 'mozilla/master'
251,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/84,84,20171002 mpl headers,,mozmark,1017161,2017-10-02T20:17:15Z,CONTRIBUTOR,True,20,0,5,Some tools for supporting OneCRL,Go,402c955995c146d9ec6f9c38057ea3ee78c59f60,Issue #74 - ensure all source files have MPL headers
252,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
253,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
254,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
255,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
256,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
257,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
258,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
259,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
260,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,a78ff4094d1bfae8904a7a1a8c97d3279744035d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools into HEAD
261,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/83,83,20171002 gofmt all the things,,mozmark,1017161,2017-10-02T16:19:19Z,CONTRIBUTOR,True,82,86,7,Some tools for supporting OneCRL,Go,d379abb233cc1259bed1e9485268c7e36a625d5f,Issue #75 - gofmt all the things
262,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
263,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
264,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
265,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
266,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
267,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
268,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
269,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
270,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/82,82,20170929 issue 81,,mozmark,1017161,2017-09-29T14:42:16Z,CONTRIBUTOR,True,1,1,1,Some tools for supporting OneCRL,Go,e90d38405fc7461d63e3ed4961d51d1cd2eaabc8,Issue #81 - record comparison was broken
271,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
272,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
273,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
274,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
275,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
276,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
277,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
278,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
279,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,a08ecccd0941b607b09e7b1fd63b0e30535395b8,Issue #77 - Follow up for PR #73 and PR #68
280,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,33a2d89e39ed560a9982ba3e89db71f990b6d35a,Issue #78
281,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,bcfa842f2d21a22b2eacaad61c5e6c75a7ff79fd,"change if/else to switch, as per @jcjones' feedback"
282,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,cd7010023299ef99c671c0cd7a195da4afeec909,Merge branch 'master' into 20170929-Issue-78
283,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,efdf95a62c2bd5dda5d10fba22379123d1bc3565,removed extraneous breaks
284,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/80,80,20170929 issue 78,Adds an option to OneCRL2CSV to take bug format data.,mozmark,1017161,2017-09-29T10:59:35Z,CONTRIBUTOR,True,10,1,1,Some tools for supporting OneCRL,Go,b70acc55b9ddf142b99463fb4f18a4f9c04b747d,Merge branch '20170929-Issue-78' of github.com:mozmark/OneCRL-Tools into 20170929-Issue-78
285,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
286,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
287,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
288,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
289,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
290,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
291,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
292,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,70307e5a534fd0e65616788fd65c4fdd819eab04,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
293,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,a08ecccd0941b607b09e7b1fd63b0e30535395b8,Issue #77 - Follow up for PR #73 and PR #68
294,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,8c2daf81fa418fe679048c6432150ecf3031b96f,missed a file
295,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/79,79,20170929 follow up,,mozmark,1017161,2017-09-29T10:58:51Z,CONTRIBUTOR,True,5,7,2,Some tools for supporting OneCRL,Go,699bf9d0413cdcd444389cef0b497582bc1b7ddf,Merge branch 'master' into 20170929-follow-up
296,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
297,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
298,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
299,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
300,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
301,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,18cff586ea7e4b3db8e9d30da605b91cf4c8ce51,Add sample scheduler lambda
302,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,866721015a3b1493ff843b95d70e1b54997c2293,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
303,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,1e8d1160981967086343d318adcca0d1186ca18d,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
304,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,7a83fd60ab16f26f0e888a6f245c5130696b83e4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools into 20170906-create_lambda
305,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,b502b874afde1181d7e8e659f00c968cb47e1a10,"Issue #70 - allow setting of bzapikey, kintouser and kintopass from enviroment"
306,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,ba32c6160c2876bb2994ba03c9f577522ef9a4da,Merge branch '20170927-options-via-env' of github.com:mozmark/OneCRL-Tools into 20170906-create_lambda
307,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,bb51c5abb570e8b37c793bd566ffa5e707aae1bd,"Add initial Makefile, config sample and (stub) README"
308,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,c5343d77b92cd7e51258009636e597e8c45d57e2,Update README.md
309,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,509f724833168ee31e1b9e0bfa38a6e2193c7c92,Merge branch 'master' into 20170906-create_lambda
310,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/73,73,20170906 create lambda,This branch has fixes for Issue #70 and Issue #72,mozmark,1017161,2017-09-27T17:33:14Z,CONTRIBUTOR,True,70,7,5,Some tools for supporting OneCRL,Go,87824f26413252ef5511ecad066e38a2abbf6056,Merge branch 'master' into 20170906-create_lambda
311,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
312,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
313,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
314,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
315,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
316,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,2f3bd4515cc78583e9ff06163c4559c7ecb52d3e,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools into 20170908-generate-historical-diff
317,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,f3c93ff494de929ecd2573233a848d2ae3154e72,Extract record fetching to allow oneCRL.go clients to et full data on existing records
318,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,2221813014443ae82ed017c5ccb3f4674316dc5f,Add support for retrieving revoked cert info from an arbitrary location
319,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,beefe4a343197935fced79be3690bc53f0898aa6,Add support for getting bug summary via the bugzilla search API
320,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,b510209a6549812f106e0a5e7b64e10dcdf37b28,remove empty records from salesforce revoked cert info (bug)
321,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,45174d7f74cab6613f8abb63cb25bd3c1fab6b08,"add ID to OneCRL record, remove unnecessary output from bugs.go"
322,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,e885ca0dd411b45c94a896b33b1471a1d8849d17,add initial HTML report summary support
323,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,a3e32a82ebe9ac9d937f877ef829475719ef4af2,"add Valid To from CCADB CSV data to the RevokedCertInfo struct, tweak a couple of report fields"
324,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,65298a0f634279a1f2a6d0a452c12c6ff81d67ae,remove unneccessary debug
325,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,dca229e92db5a86d5e1ea5881fd68c0308606b50,Merge branch 'master' into 20170908-generate-historical-diff
326,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,2bf28163bde536accc9897fad33da11a05dce3b4,"Merge branch 'master' of github.com:mozilla/OneCRL-Tools into
20170908-generate-historical-diff, address feedback"
327,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/69,69,20170908 generate historical diff,"The changes to oneCRL.go are obsolete (assuming we merge pr #68), but other than that, this does what Gerv asked for (some tidying may be required).",mozmark,1017161,2017-09-26T14:54:01Z,CONTRIBUTOR,True,343,35,4,Some tools for supporting OneCRL,Go,a5d8cb1c0fe464de4abf58f5a38c21cbe3576b8e,Merge branch 'master' into 20170908-generate-historical-diff
328,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
329,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
330,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
331,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
332,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
333,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,1c69a070fa48430e118e7b3b6e7e921fffdc6e3a,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools into add_revocations_txt_to_bug
334,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,97f9a7f10d0d5349d9df4405cf91436d42ac3b22,"Modify FetchExistingRecords to return oneCRL.Records instead of strings, add existing entries to the AddEntries signature"
335,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,7815bb9f733df4f0260a959b229d5c6705ffbdc9,extract RevocationsTxt string making from the main method of OneCRL2RevocationsTxt
336,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,be1003618c80630ee879523f86e83d923bfd3ebb,move RevocationsTxtData to oneCRL.go
337,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,45a590fef0e0260e5c26a18cabf254b97d9aa08e,Issue #30 - include revocations.txt in bug
338,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,2431b3cf478221eddabe694c3e4d31cedffb677f,Merge branch 'master' into add_revocations_txt_to_bug
339,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/68,68,Add revocations txt to bug,,mozmark,1017161,2017-09-26T13:54:05Z,CONTRIBUTOR,True,107,85,4,Some tools for supporting OneCRL,Go,1d4b91ae9dba81582fefc31b38a262959bbcd9f8,Missed some things in the merge
340,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
341,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
342,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
343,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
344,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
345,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,23d44772b917c9ef2f3f19506fed0f072fddcc71,Issue #64 - allow exceptions to be loaded via HTTPS
346,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,cf20417a9b79c20d2e55f720af4c7eac766d7633,Merge branch 'master' into 20170920-Exceptions-via-HTTPS
347,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,031afc641e1726fdf245808a4d78228d18a2d016,address feedback in PR #67
348,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/67,67,20170920 exceptions via https,,mozmark,1017161,2017-09-26T11:25:58Z,CONTRIBUTOR,True,44,12,1,Some tools for supporting OneCRL,Go,c1f6c0f600db06355e0b9f64157cd93ec528d41d,Merge branch '20170920-Exceptions-via-HTTPS' of github.com:mozmark/OneCRL-Tools into 20170920-Exceptions-via-HTTPS
349,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
350,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
351,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
352,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
353,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
354,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,cabace951866f390ce335a072f20f0e1ec533fbf,Issue #65 - Exceptional additions 2017-09-22
355,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/66,66,20170922 exceptional additions,,mozmark,1017161,2017-09-22T17:28:45Z,CONTRIBUTOR,True,79,1,1,Some tools for supporting OneCRL,Go,2a85e22753f38cb758ebc9faeef0fa78badda2f0,merge from mozilla master
356,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
357,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
358,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
359,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,bd408147e057d7808f9ac5672da16b7a2e63eba8,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools into 20170822-issue-55
360,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,18de9c5303f71175fd2924180361c0a383c332e5,Issue #55 - salesforce2OneCRL Should not file a bug if kinto operations fail
361,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,89a32511f943b62c27d4912f92351d6ae1b0bbb8,"Factor out auth and http error response checks, go fmt"
362,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/59,59,20170822 issue 55,,mozmark,1017161,2017-09-08T11:06:19Z,CONTRIBUTOR,True,104,31,1,Some tools for supporting OneCRL,Go,a45363f0aaf2dbe3828ab9f41480171e1fb62ffb,Fix premature commit...
363,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
364,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
365,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
366,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,163e32313db1bb19bba9de6f167423ed7683afa2,Merge remote-tracking branch 'mozilla/master'
367,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,22694df6e78592a29b327bc39f0d141885ac4a8f,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
368,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/58,58,20170907 exceptional additions,,mozmark,1017161,2017-09-07T11:00:32Z,CONTRIBUTOR,True,22,0,1,Some tools for supporting OneCRL,Go,0a7c70b419e2f32e1cdef453ab1dfb0c83ab0a15,Issue #57 - Exceptional additions
369,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
370,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
371,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
372,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,3dbeeff2e5802bcf5f4fd2c933231807aa86e6c0,Issue #53 - Add TurkTrust intermediate certs to exceptions.json
373,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,e5a75258ff59d99416c108d4187a2392e116e66e,Merge branch 'master' into 20170821-exceptional-addition
374,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/54,54,20170821 exceptional addition,,mozmark,1017161,2017-08-21T15:53:36Z,CONTRIBUTOR,True,33,0,1,Some tools for supporting OneCRL,Go,704806ac9bec2712697fdcb077ac824f78f7a2ef,Merge branch 'master' into 20170821-exceptional-addition
375,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/52,52,Add license,,mozmark,1017161,2017-08-21T15:06:05Z,CONTRIBUTOR,True,364,0,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
376,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/52,52,Add license,,mozmark,1017161,2017-08-21T15:06:05Z,CONTRIBUTOR,True,364,0,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
377,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/52,52,Add license,,mozmark,1017161,2017-08-21T15:06:05Z,CONTRIBUTOR,True,364,0,1,Some tools for supporting OneCRL,Go,9f30ff3c3a2f0cbede165cf927c6e219ccd421a4,Merge branch 'master' of https://github.com/mozilla/OneCRL-Tools
378,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/52,52,Add license,,mozmark,1017161,2017-08-21T15:06:05Z,CONTRIBUTOR,True,364,0,1,Some tools for supporting OneCRL,Go,32565fb8a872d64e8bb9c025f82d4c598d147f70,Issue #47 - Add license
379,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/51,51,Remove unexpected binary,"`salesforce2OneCRL/salesforce2OneCRL` shouldn't have been committed, so clean that up",jcjones,518542,2017-08-17T17:36:26Z,CONTRIBUTOR,True,0,0,1,Some tools for supporting OneCRL,Go,c27e5cbcd86e386f63384bd2370134a006e5c06a,"Remove unexpected binary

`salesforce2OneCRL/salesforce2OneCRL` shouldn't have been committed, so clean that up"
380,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/51,51,Remove unexpected binary,"`salesforce2OneCRL/salesforce2OneCRL` shouldn't have been committed, so clean that up",jcjones,518542,2017-08-17T17:36:26Z,CONTRIBUTOR,True,0,0,1,Some tools for supporting OneCRL,Go,51c645e262182215a834564bcf459949a1dda103,Merge branch 'master' into remove_checkedin_binary
381,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/50,50,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold Sta…,…rtCom exceptional revocation,mozmark,1017161,2017-08-17T17:03:36Z,CONTRIBUTOR,True,6,17,1,Some tools for supporting OneCRL,Go,7c0f2bb6cc75537ccfa3fa127ad0b0c477d9e010,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold StartCom exceptional revocation
382,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/50,50,Issue #48 - Add AC FNMT Usuarios certificate to OneCRL - and hold Sta…,…rtCom exceptional revocation,mozmark,1017161,2017-08-17T17:03:36Z,CONTRIBUTOR,True,6,17,1,Some tools for supporting OneCRL,Go,30807685911db1888f163e7acfc9b05b5afbcc34,Merge branch 'master' into master
383,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/49,49,Enable TravisCI to work on forked repos,"This extends @cr 's commit in PR #42 handling the error in invocation, renaming the imports, and fixing Travis to handle forked repositories OK.",jcjones,518542,2017-08-17T17:01:51Z,CONTRIBUTOR,True,15,10,7,Some tools for supporting OneCRL,Go,941e6a1a16e5e8d499061681d8c4169bbcccb277,Handle forked repositories for TravisCI
384,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/49,49,Enable TravisCI to work on forked repos,"This extends @cr 's commit in PR #42 handling the error in invocation, renaming the imports, and fixing Travis to handle forked repositories OK.",jcjones,518542,2017-08-17T17:01:51Z,CONTRIBUTOR,True,15,10,7,Some tools for supporting OneCRL,Go,e062a1684ed5d3f6cbe9fe4b189339a7292c79e5,Change all mozmark to mozilla
385,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/42,42,Adding Travis.CI config and integration test,"I can't really say whether the test actually works, because master is currently broken.",cr,170331,2017-08-15T13:38:42Z,CONTRIBUTOR,True,50,0,3,Some tools for supporting OneCRL,Go,70f2165652510b4d393c5b815b0b0029d0d104c3,Adding Travis.CI config and integration test
386,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/41,41,Move vendored constraintcrypto to its own repository,"I want to use `constraintcrypto` elsewhere, so I've put a copy at https://github.com/jcjones/constraintcrypto/x509 . This changes `salesforce2OneCRL` to use that copy. 

It's also a little cleaner-looking, as there was no explanation as to where the vendored `constraintcrypto` package came from, and while there still isn't much, there's a little bit...",jcjones,518542,2017-08-14T20:50:21Z,CONTRIBUTOR,True,1,12165,31,Some tools for supporting OneCRL,Go,02c52c6184f855cdf8ca6b27c7310a99c1936825,"Move vendored constraintcrypto to its own repository

I want to use constraintcrypto elsewhere, so I've put a copy at
https://github.com/jcjones/constraintcrypto/x509 . This changes
salesforce2OneCRL to use that copy. It's also a little cleaner-looking, as
there was no explanation as to where the vendored constraintcrypto package
came from, and while there still isn't much, there's a little bit..."
387,https://api.github.com/repos/mozilla/OneCRL-Tools/pulls/37,37,Fix #36: Mention OneCRL in the bug summary,"Per Kathleen's comment captured in Issue #36, change the bug summary to mention OneCRL.",jcjones,518542,2017-07-18T19:50:23Z,CONTRIBUTOR,False,1,1,1,Some tools for supporting OneCRL,Go,7340d67a637a53fb769e578871a62de8ccdc3bf2,Fix #36: Mention OneCRL in the bug summary
