,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/dxr/pulls/702,702,Bump pygments from 2.1.3 to 2.7.4,"Bumps [pygments](https://github.com/pygments/pygments) from 2.1.3 to 2.7.4.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/pygments/pygments/releases"">pygments's releases</a>.</em></p>
<blockquote>
<h2>2.7.4</h2>
<ul>
<li>
<p>Updated lexers:</p>
<ul>
<li>
<p>Apache configurations: Improve handling of malformed tags (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1656"">#1656</a>)</p>
</li>
<li>
<p>CSS: Add support for variables (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1633"">#1633</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1666"">#1666</a>)</p>
</li>
<li>
<p>Crystal (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1650"">#1650</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1670"">#1670</a>)</p>
</li>
<li>
<p>Coq (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1648"">#1648</a>)</p>
</li>
<li>
<p>Fortran: Add missing keywords (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1635"">#1635</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1665"">#1665</a>)</p>
</li>
<li>
<p>Ini (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1624"">#1624</a>)</p>
</li>
<li>
<p>JavaScript and variants (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1647"">#1647</a> -- missing regex flags, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1651"">#1651</a>)</p>
</li>
<li>
<p>Markdown (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1623"">#1623</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1617"">#1617</a>)</p>
</li>
<li>
<p>Shell</p>
<ul>
<li>Lex trailing whitespace as part of the prompt (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1645"">#1645</a>)</li>
<li>Add missing <code>in</code> keyword (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1652"">#1652</a>)</li>
</ul>
</li>
<li>
<p>SQL - Fix keywords (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1668"">#1668</a>)</p>
</li>
<li>
<p>Typescript: Fix incorrect punctuation handling (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1510"">#1510</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1511"">#1511</a>)</p>
</li>
</ul>
</li>
<li>
<p>Fix infinite loop in SML lexer (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1625"">#1625</a>)</p>
</li>
<li>
<p>Fix backtracking string regexes in JavaScript/TypeScript, Modula2
and many other lexers (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1637"">#1637</a>)</p>
</li>
<li>
<p>Limit recursion with nesting Ruby heredocs (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1638"">#1638</a>)</p>
</li>
<li>
<p>Fix a few inefficient regexes for guessing lexers</p>
</li>
<li>
<p>Fix the raw token lexer handling of Unicode (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1616"">#1616</a>)</p>
</li>
<li>
<p>Revert a private API change in the HTML formatter (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1655"">#1655</a>) --
please note that private APIs remain subject to change!</p>
</li>
<li>
<p>Fix several exponential/cubic-complexity regexes found by
Ben Caller/Doyensec (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1675"">#1675</a>)</p>
</li>
<li>
<p>Fix incorrect MATLAB example (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1582"">#1582</a>)</p>
</li>
</ul>
<p>Thanks to Google's OSS-Fuzz project for finding many of these bugs.</p>
<h2>2.7.3</h2>
<ul>
<li>
<p>Updated lexers:</p>
<ul>
<li>Ada (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1581"">#1581</a>)</li>
<li>HTML (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1615"">#1615</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1614"">#1614</a>)</li>
<li>Java (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1594"">#1594</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1586"">#1586</a>)</li>
<li>JavaScript (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1605"">#1605</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1589"">#1589</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1588"">#1588</a>)</li>
<li>JSON (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1569"">#1569</a> -- this is a complete rewrite)</li>
<li>Lean (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1601"">#1601</a>)</li>
<li>LLVM (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1612"">#1612</a>)</li>
<li>Mason (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1592"">#1592</a>)</li>
<li>MySQL (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1555"">#1555</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1551"">#1551</a>)</li>
<li>Rust (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1608"">#1608</a>)</li>
<li>Turtle (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1590"">#1590</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1553"">#1553</a>)</li>
</ul>
</li>
<li>
<p>Deprecated JsonBareObjectLexer, which is now identical to JsonLexer (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1600"">#1600</a>)</p>
</li>
<li>
<p>The <code>ImgFormatter</code> now calculates the exact character width, which fixes some issues with overlapping text (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1213"">#1213</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1611"">#1611</a>)</p>
</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/pygments/pygments/blob/master/CHANGES"">pygments's changelog</a>.</em></p>
<blockquote>
<h2>Version 2.7.4</h2>
<p>(released January 12, 2021)</p>
<ul>
<li>
<p>Updated lexers:</p>
<ul>
<li>
<p>Apache configurations: Improve handling of malformed tags (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1656"">#1656</a>)</p>
</li>
<li>
<p>CSS: Add support for variables (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1633"">#1633</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1666"">#1666</a>)</p>
</li>
<li>
<p>Crystal (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1650"">#1650</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1670"">#1670</a>)</p>
</li>
<li>
<p>Coq (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1648"">#1648</a>)</p>
</li>
<li>
<p>Fortran: Add missing keywords (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1635"">#1635</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1665"">#1665</a>)</p>
</li>
<li>
<p>Ini (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1624"">#1624</a>)</p>
</li>
<li>
<p>JavaScript and variants (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1647"">#1647</a> -- missing regex flags, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1651"">#1651</a>)</p>
</li>
<li>
<p>Markdown (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1623"">#1623</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1617"">#1617</a>)</p>
</li>
<li>
<p>Shell</p>
<ul>
<li>Lex trailing whitespace as part of the prompt (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1645"">#1645</a>)</li>
<li>Add missing <code>in</code> keyword (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1652"">#1652</a>)</li>
</ul>
</li>
<li>
<p>SQL - Fix keywords (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1668"">#1668</a>)</p>
</li>
<li>
<p>Typescript: Fix incorrect punctuation handling (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1510"">#1510</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1511"">#1511</a>)</p>
</li>
</ul>
</li>
<li>
<p>Fix infinite loop in SML lexer (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1625"">#1625</a>)</p>
</li>
<li>
<p>Fix backtracking string regexes in JavaScript/TypeScript, Modula2
and many other lexers (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1637"">#1637</a>)</p>
</li>
<li>
<p>Limit recursion with nesting Ruby heredocs (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1638"">#1638</a>)</p>
</li>
<li>
<p>Fix a few inefficient regexes for guessing lexers</p>
</li>
<li>
<p>Fix the raw token lexer handling of Unicode (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1616"">#1616</a>)</p>
</li>
<li>
<p>Revert a private API change in the HTML formatter (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1655"">#1655</a>) --
please note that private APIs remain subject to change!</p>
</li>
<li>
<p>Fix several exponential/cubic-complexity regexes found by
Ben Caller/Doyensec (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1675"">#1675</a>)</p>
</li>
<li>
<p>Fix incorrect MATLAB example (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1582"">#1582</a>)</p>
</li>
</ul>
<p>Thanks to Google's OSS-Fuzz project for finding many of these bugs.</p>
<h2>Version 2.7.3</h2>
<p>(released December 6, 2020)</p>
<ul>
<li>
<p>Updated lexers:</p>
<ul>
<li>Ada (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1581"">#1581</a>)</li>
<li>HTML (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1615"">#1615</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1614"">#1614</a>)</li>
<li>Java (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1594"">#1594</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1586"">#1586</a>)</li>
<li>JavaScript (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1605"">#1605</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1589"">#1589</a>, <a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1588"">#1588</a>)</li>
<li>JSON (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1569"">#1569</a> -- this is a complete rewrite)</li>
<li>Lean (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1601"">#1601</a>)</li>
<li>LLVM (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1612"">#1612</a>)</li>
<li>Mason (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1592"">#1592</a>)</li>
</ul>
</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/pygments/pygments/commit/4d555d0fffc914a2a4ac9874416cdaaf8f8c9e74""><code>4d555d0</code></a> Bump version to 2.7.4.</li>
<li><a href=""https://github.com/pygments/pygments/commit/fc3b05ddf25933e45f670534f79fd1df870e142a""><code>fc3b05d</code></a> Update CHANGES.</li>
<li><a href=""https://github.com/pygments/pygments/commit/ad21935815ff6402d402b036e204f0333a77031b""><code>ad21935</code></a> Revert &quot;Added dracula theme style (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1636"">#1636</a>)&quot;</li>
<li><a href=""https://github.com/pygments/pygments/commit/e411506a23a39f4487ecc36afb616cc4715eb571""><code>e411506</code></a> Prepare for 2.7.4 release.</li>
<li><a href=""https://github.com/pygments/pygments/commit/275e34d8f0d265bd474f269471b41c635fe559ff""><code>275e34d</code></a> doc: remove Perl 6 ref</li>
<li><a href=""https://github.com/pygments/pygments/commit/2e7e8c4a7b318f4032493773732754e418279a14""><code>2e7e8c4</code></a> Fix several exponential/cubic complexity regexes found by Ben Caller/Doyensec</li>
<li><a href=""https://github.com/pygments/pygments/commit/eb39c43b6ef992abadb0d25f0504d0cf2f3ccd86""><code>eb39c43</code></a> xquery: fix pop from empty stack</li>
<li><a href=""https://github.com/pygments/pygments/commit/2738778c0b9c615bfcae68972fc656d351d676ca""><code>2738778</code></a> fix coding style in test_analyzer_lexer</li>
<li><a href=""https://github.com/pygments/pygments/commit/02e0f09d796cca5174181e7ae3971cdc010e39b0""><code>02e0f09</code></a> Added 'ERROR STOP' to fortran.py keywords. (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1665"">#1665</a>)</li>
<li><a href=""https://github.com/pygments/pygments/commit/c83fe4888868f79415b50f050c047dc7fe11fd3b""><code>c83fe48</code></a> support added for css variables (<a href=""https://github-redirect.dependabot.com/pygments/pygments/issues/1633"">#1633</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/pygments/pygments/compare/2.1.3...2.7.4"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pygments&package-manager=pip&previous-version=2.1.3&new-version=2.7.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mozilla/dxr/network/alerts).

</details>",dependabot[bot],49699333,2021-03-29T17:13:03Z,NONE,False,3,3,1,Powerful search for large codebases,Python,00048cea0b3bf345687bf69182a876b746bf21ad,"Bump pygments from 2.1.3 to 2.7.4

Bumps [pygments](https://github.com/pygments/pygments) from 2.1.3 to 2.7.4.
- [Release notes](https://github.com/pygments/pygments/releases)
- [Changelog](https://github.com/pygments/pygments/blob/master/CHANGES)
- [Commits](https://github.com/pygments/pygments/compare/2.1.3...2.7.4)

Signed-off-by: dependabot[bot] <support@github.com>"
1,https://api.github.com/repos/mozilla/dxr/pulls/701,701,Bump jinja2 from 2.7.3 to 2.11.3,"Bumps [jinja2](https://github.com/pallets/jinja) from 2.7.3 to 2.11.3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>
<blockquote>
<h2>2.11.3</h2>
<p>This contains a fix for a speed issue with the <code>urlize</code> filter. <code>urlize</code> is likely to be called on untrusted user input. For certain inputs some of the regular expressions used to parse the text could take a very long time due to backtracking. As part of the fix, the email matching became slightly stricter. The various speedups apply to <code>urlize</code> in general, not just the specific input cases.</p>
<ul>
<li>PyPI: <a href=""https://pypi.org/project/Jinja2/2.11.3/"">https://pypi.org/project/Jinja2/2.11.3/</a></li>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-3"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-3</a></li>
</ul>
<h2>2.11.2</h2>
<ul>
<li>Changelog: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-2"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-2</a></li>
</ul>
<h2>2.11.1</h2>
<p>This fixes an issue in async environment when indexing the result of an attribute lookup, like <code>{{ data.items[1:] }}</code>.</p>
<ul>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-1"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-1</a></li>
</ul>
<h2>2.11.0</h2>
<ul>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-0"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-0</a></li>
<li>Blog: <a href=""https://palletsprojects.com/blog/jinja-2-11-0-released/"">https://palletsprojects.com/blog/jinja-2-11-0-released/</a></li>
<li>Twitter: <a href=""https://twitter.com/PalletsTeam/status/1221883554537230336"">https://twitter.com/PalletsTeam/status/1221883554537230336</a></li>
</ul>
<p>This is the last version to support Python 2.7 and 3.5. The next version will be Jinja 3.0 and will support Python 3.6 and newer.</p>
<h2>2.10.3</h2>
<ul>
<li>Changes: <a href=""http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-3"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-3</a></li>
</ul>
<h2>2.10.2</h2>
<ul>
<li>Changes: <a href=""http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2"">http://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-2</a></li>
</ul>
<h2>2.10.1</h2>
<ul>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1"">https://jinja.palletsprojects.com/en/2.10.x/changelog/#version-2-10-1</a></li>
<li>Blog: <a href=""https://palletsprojects.com/blog/jinja-2-10-1-released/"">https://palletsprojects.com/blog/jinja-2-10-1-released/</a></li>
<li>Twitter: <a href=""https://twitter.com/PalletsTeam/status/1114605127308992513"">https://twitter.com/PalletsTeam/status/1114605127308992513</a></li>
</ul>
<h2>2.10</h2>
<h2>Primary changes</h2>
<ul>
<li>A <code>NativeEnvironment</code> that renders Python types instead of strings.
<a href=""http://jinja.pocoo.org/docs/2.10/nativetypes/"">http://jinja.pocoo.org/docs/2.10/nativetypes/</a></li>
<li>A <code>namespace</code> object that works with <code>{% set %}</code>. This replaces
previous hacks for storing state across iterations or scopes.
<a href=""http://jinja.pocoo.org/docs/2.10/templates/#assignments"">http://jinja.pocoo.org/docs/2.10/templates/#assignments</a></li>
<li>The <code>loop</code> object now has <code>nextitem</code> and <code>previtem</code> attributes, as
well as a <code>changed</code> method, for the common case of outputting
something as a value in the loop changes. More complicated cases can
use the <code>namespace</code> object.
<a href=""http://jinja.pocoo.org/docs/2.10/templates/#for"">http://jinja.pocoo.org/docs/2.10/templates/#for</a></li>
</ul>
<h2>Install or upgrade</h2>
<p>Install from <a href=""https://pypi.python.org/pypi/Jinja2/2.10"">PyPI</a> with pip:</p>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/master/CHANGES.rst"">jinja2's changelog</a>.</em></p>
<blockquote>
<h2>Version 2.11.3</h2>
<p>Released 2021-01-31</p>
<ul>
<li>Improve the speed of the <code>urlize</code> filter by reducing regex
backtracking. Email matching requires a word character at the start
of the domain part, and only word characters in the TLD. :pr:<code>1343</code></li>
</ul>
<h2>Version 2.11.2</h2>
<p>Released 2020-04-13</p>
<ul>
<li>Fix a bug that caused callable objects with <code>__getattr__</code>, like
:class:<code>~unittest.mock.Mock</code> to be treated as a
:func:<code>contextfunction</code>. :issue:<code>1145</code></li>
<li>Update <code>wordcount</code> filter to trigger :class:<code>Undefined</code> methods
by wrapping the input in :func:<code>soft_str</code>. :pr:<code>1160</code></li>
<li>Fix a hang when displaying tracebacks on Python 32-bit.
:issue:<code>1162</code></li>
<li>Showing an undefined error for an object that raises
<code>AttributeError</code> on access doesn't cause a recursion error.
:issue:<code>1177</code></li>
<li>Revert changes to :class:<code>~loaders.PackageLoader</code> from 2.10 which
removed the dependency on setuptools and pkg_resources, and added
limited support for namespace packages. The changes caused issues
when using Pytest. Due to the difficulty in supporting Python 2 and
:pep:<code>451</code> simultaneously, the changes are reverted until 3.0.
:pr:<code>1182</code></li>
<li>Fix line numbers in error messages when newlines are stripped.
:pr:<code>1178</code></li>
<li>The special <code>namespace()</code> assignment object in templates works in
async environments. :issue:<code>1180</code></li>
<li>Fix whitespace being removed before tags in the middle of lines when
<code>lstrip_blocks</code> is enabled. :issue:<code>1138</code></li>
<li>:class:<code>~nativetypes.NativeEnvironment</code> doesn't evaluate
intermediate strings during rendering. This prevents early
evaluation which could change the value of an expression.
:issue:<code>1186</code></li>
</ul>
<h2>Version 2.11.1</h2>
<p>Released 2020-01-30</p>
<ul>
<li>Fix a bug that prevented looking up a key after an attribute
(<code>{{ data.items[1:] }}</code>) in an async template. :issue:<code>1141</code></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/pallets/jinja/commit/cf215390d4a4d6f0a4de27e2687eed176878f13d""><code>cf21539</code></a> release version 2.11.3</li>
<li><a href=""https://github.com/pallets/jinja/commit/15ef8f09b659f9100610583938005a7a10472d4d""><code>15ef8f0</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1343"">#1343</a> from pallets/urlize-speedup</li>
<li><a href=""https://github.com/pallets/jinja/commit/ef658dc3b6389b091d608e710a810ce8b87995b3""><code>ef658dc</code></a> speed up urlize matching</li>
<li><a href=""https://github.com/pallets/jinja/commit/eeca0fecc3318d43f61bc340ad61db641b861ade""><code>eeca0fe</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1207"">#1207</a> from mhansen/patch-1</li>
<li><a href=""https://github.com/pallets/jinja/commit/2dd769111cbb1a2637f805b3b4c652ec8096d371""><code>2dd7691</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1209"">#1209</a> from mhansen/patch-3</li>
<li><a href=""https://github.com/pallets/jinja/commit/48929401db7228db04dfd8e88115dd5c30dc2d86""><code>4892940</code></a> do_dictsort: update example ready to copy/paste</li>
<li><a href=""https://github.com/pallets/jinja/commit/7db7d336ba12574e6205fdd929386fd529e3fad4""><code>7db7d33</code></a> api.rst: bugfix in docs, import PackageLoader</li>
<li><a href=""https://github.com/pallets/jinja/commit/9ec465baefe32e305bd4e61da49e6c39360c194e""><code>9ec465b</code></a> fix changelog header</li>
<li><a href=""https://github.com/pallets/jinja/commit/737a4cd41d09878e7e6c584a2062f5853dc30150""><code>737a4cd</code></a> release version 2.11.2</li>
<li><a href=""https://github.com/pallets/jinja/commit/179df6b54e87b3d420cabf65fc07b2605ffc05f8""><code>179df6b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1190"">#1190</a> from pallets/native-eval</li>
<li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/2.7.3...2.11.3"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=2.7.3&new-version=2.11.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mozilla/dxr/network/alerts).

</details>",dependabot[bot],49699333,2021-03-19T22:22:25Z,NONE,False,3,2,1,Powerful search for large codebases,Python,639c5eac128aee795893304ca27f38562c34203f,"Bump jinja2 from 2.7.3 to 2.11.3

Bumps [jinja2](https://github.com/pallets/jinja) from 2.7.3 to 2.11.3.
- [Release notes](https://github.com/pallets/jinja/releases)
- [Changelog](https://github.com/pallets/jinja/blob/master/CHANGES.rst)
- [Commits](https://github.com/pallets/jinja/compare/2.7.3...2.11.3)

Signed-off-by: dependabot[bot] <support@github.com>"
2,https://api.github.com/repos/mozilla/dxr/pulls/699,699,Merge: Add a banner about DXR Decommission,[CI tests passed](https://travis-ci.org/github/mozilla/dxr/builds/741491704) but deployment failed. Merging manually into the deployment branch rather than troubleshooting that for a decommissioned project.,erikrose,295816,2020-11-05T13:10:10Z,MEMBER,True,2,0,1,Powerful search for large codebases,Python,ef09324a32930e2769e6ff63eaa8de76fcf79ee3,Add a banner about DXR Decommission
3,https://api.github.com/repos/mozilla/dxr/pulls/698,698,Add a banner about DXR Decommission,,sylvestre,733326,2020-11-04T20:25:24Z,CONTRIBUTOR,True,2,0,1,Powerful search for large codebases,Python,05e41443fff7e8bfbaaedf8ad689f199f443b9c0,Add a banner about DXR Decommission
4,https://api.github.com/repos/mozilla/dxr/pulls/695,695,Bump eslint from 2.9.0 to 6.5.1 in /dxr/plugins/js/analyze_js,"Bumps [eslint](https://github.com/eslint/eslint) from 2.9.0 to 6.5.1.
<details>
<summary>Release notes</summary>

*Sourced from [eslint's releases](https://github.com/eslint/eslint/releases).*

> ## v6.5.1
> * [`0d3d7d9`](https://github.com/eslint/eslint/commit/0d3d7d9cdd83a7f0e035c95f716a91b9ecc4868b) Docs: fix typo in no-magic-numbers ([#12345](https://github-redirect.dependabot.com/eslint/eslint/issues/12345)) (Josiah Rooney)
> * [`447ac87`](https://github.com/eslint/eslint/commit/447ac877e8ca2858d61b1e983f72d39e3e2ca74d) Fix: no-useless-rename handles ExperimentalRestProperty (fixes [#12335](https://github-redirect.dependabot.com/eslint/eslint/issues/12335)) ([#12339](https://github-redirect.dependabot.com/eslint/eslint/issues/12339)) (Kai Cataldo)
> * [`b6ff73c`](https://github.com/eslint/eslint/commit/b6ff73cad13282fbfc91186cf4bc2f20278a8936) Sponsors: Sync README with website (ESLint Jenkins)
> 
> ## v6.5.0
> * [`73596cb`](https://github.com/eslint/eslint/commit/73596cbdf0a12e2878b2994783f9b969b0c5fbeb) Update: Add enforceForSwitchCase option to use-isnan ([#12106](https://github-redirect.dependabot.com/eslint/eslint/issues/12106)) (Milos Djermanovic)
> * [`d592a24`](https://github.com/eslint/eslint/commit/d592a248d67920f7200925c003f10853d29f1f8d) Fix: exclude `\u000d` so new line won't convert to text (fixes [#12027](https://github-redirect.dependabot.com/eslint/eslint/issues/12027)) ([#12031](https://github-redirect.dependabot.com/eslint/eslint/issues/12031)) (zamboney)
> * [`e85d27a`](https://github.com/eslint/eslint/commit/e85d27af427d6185ac553a0d801b5103153426d4) Fix: no-regex-spaces false positives and invalid autofix (fixes [#12226](https://github-redirect.dependabot.com/eslint/eslint/issues/12226)) ([#12231](https://github-redirect.dependabot.com/eslint/eslint/issues/12231)) (Milos Djermanovic)
> * [`b349bf7`](https://github.com/eslint/eslint/commit/b349bf79ad56dded826bc99cb52c3551af34fa63) Fix: prefer-named-capture-group incorrect locations (fixes [#12233](https://github-redirect.dependabot.com/eslint/eslint/issues/12233)) ([#12247](https://github-redirect.dependabot.com/eslint/eslint/issues/12247)) (Milos Djermanovic)
> * [`7dc1ea9`](https://github.com/eslint/eslint/commit/7dc1ea9a1b9a21daaffcf712ba9c0e91af81b906) Fix: no-useless-return autofix removes comments ([#12292](https://github-redirect.dependabot.com/eslint/eslint/issues/12292)) (Milos Djermanovic)
> * [`0e68677`](https://github.com/eslint/eslint/commit/0e68677ec0aaf060a071ecf71e4af954dddb6af0) Fix: no-extra-bind autofix removes comments ([#12293](https://github-redirect.dependabot.com/eslint/eslint/issues/12293)) (Milos Djermanovic)
> * [`6ad7e86`](https://github.com/eslint/eslint/commit/6ad7e864303e56a39c89569d50c6caf80752ee21) Fix: no-extra-label autofix removes comments ([#12298](https://github-redirect.dependabot.com/eslint/eslint/issues/12298)) (Milos Djermanovic)
> * [`acec201`](https://github.com/eslint/eslint/commit/acec201f06df780791179ad92cfc484f9b6d23d4) Fix: no-undef-init autofix removes comments ([#12299](https://github-redirect.dependabot.com/eslint/eslint/issues/12299)) (Milos Djermanovic)
> * [`d89390b`](https://github.com/eslint/eslint/commit/d89390b75e3e9993f347387a49b0ac5550f45c7f) Fix: use async reading of stdin in bin/eslint.js (fixes [#12212](https://github-redirect.dependabot.com/eslint/eslint/issues/12212)) ([#12230](https://github-redirect.dependabot.com/eslint/eslint/issues/12230)) (Barrie Treloar)
> * [`334ca7c`](https://github.com/eslint/eslint/commit/334ca7c8b9c18ac097849c1cefaa43097a4e51dc) Update: no-useless-rename also reports default values (fixes [#12301](https://github-redirect.dependabot.com/eslint/eslint/issues/12301)) ([#12322](https://github-redirect.dependabot.com/eslint/eslint/issues/12322)) (Kai Cataldo)
> * [`41bfe91`](https://github.com/eslint/eslint/commit/41bfe919c06932b7e58cd9ead20157e06656160a) Update: Fix handling of chained new expressions in new-parens ([#12303](https://github-redirect.dependabot.com/eslint/eslint/issues/12303)) (Milos Djermanovic)
> * [`160b7c4`](https://github.com/eslint/eslint/commit/160b7c46b556ccb6023eb411a8be8801a4bda6df) Chore: add autofix npm script ([#12330](https://github-redirect.dependabot.com/eslint/eslint/issues/12330)) (Kai Cataldo)
> * [`04b6adb`](https://github.com/eslint/eslint/commit/04b6adb7f1bcb2b6cb3fa377b1ca4cecd810630e) Chore: enable eslint-plugin-jsdoc (refs [#11146](https://github-redirect.dependabot.com/eslint/eslint/issues/11146)) ([#12332](https://github-redirect.dependabot.com/eslint/eslint/issues/12332)) (Kai Cataldo)
> * [`9b86167`](https://github.com/eslint/eslint/commit/9b86167e6f053e4a72bf68ebc79db53903f7f8c3) Docs: Add new ES environments to Configuring ESLint ([#12289](https://github-redirect.dependabot.com/eslint/eslint/issues/12289)) (Milos Djermanovic)
> * [`c9aeab2`](https://github.com/eslint/eslint/commit/c9aeab21a71c6743f51163b7a8fdf4f0cbfcdbde) Docs: Add supported ECMAScript version to README ([#12290](https://github-redirect.dependabot.com/eslint/eslint/issues/12290)) (Milos Djermanovic)
> * [`8316e7b`](https://github.com/eslint/eslint/commit/8316e7be5a9429513d7ecf2ee2afc40ab4415b8f) Fix: no-useless-rename autofix removes comments ([#12300](https://github-redirect.dependabot.com/eslint/eslint/issues/12300)) (Milos Djermanovic)
> * [`29c12f1`](https://github.com/eslint/eslint/commit/29c12f18726a3afb21fc89ab1bdacc6972d49e68) Chore: cache results in runtime-info ([#12320](https://github-redirect.dependabot.com/eslint/eslint/issues/12320)) (Kai Cataldo)
> * [`f5537b2`](https://github.com/eslint/eslint/commit/f5537b2ed0b0b5e51a34c22cdd4ebfd024eaea3d) Fix: prefer-numeric-literals autofix removes comments ([#12313](https://github-redirect.dependabot.com/eslint/eslint/issues/12313)) (Milos Djermanovic)
> * [`11ae6fc`](https://github.com/eslint/eslint/commit/11ae6fcb5d5503e5dea41c02780369efe51f0bb9) Update: Fix call, new and member expressions in no-extra-parens ([#12302](https://github-redirect.dependabot.com/eslint/eslint/issues/12302)) (Milos Djermanovic)
> * [`a7894eb`](https://github.com/eslint/eslint/commit/a7894ebb43523152d36720efa770bb1fe8b58c07) New: add --env-info flag to CLI ([#12270](https://github-redirect.dependabot.com/eslint/eslint/issues/12270)) (Kai Cataldo)
> * [`61392ff`](https://github.com/eslint/eslint/commit/61392ff5ec660bfc01ac2ff0e9660d259cf88fd6) Sponsors: Sync README with website (ESLint Jenkins)
> * [`2c6bf8e`](https://github.com/eslint/eslint/commit/2c6bf8ea9c8a8f94746f980bd5bea0a8c5c4d6b7) Docs: English fix ([#12306](https://github-redirect.dependabot.com/eslint/eslint/issues/12306)) (Daniel Nixon)
> * [`6f11877`](https://github.com/eslint/eslint/commit/6f118778366613fc53036cb6a7537e1b4c6e7af8) Sponsors: Sync README with website (ESLint Jenkins)
> * [`2e202ca`](https://github.com/eslint/eslint/commit/2e202ca2228846e6226aa8dd99c614d572fb86a8) Docs: fix links in array-callback-return ([#12288](https://github-redirect.dependabot.com/eslint/eslint/issues/12288)) (Milos Djermanovic)
> * [`e39c631`](https://github.com/eslint/eslint/commit/e39c6318af0fd27edd5fd2aaf2b24a3e204005dd) Docs: add example for CLIEngine#executeOnText 3rd arg ([#12286](https://github-redirect.dependabot.com/eslint/eslint/issues/12286)) (Kai Cataldo)
> * [`d4f9a16`](https://github.com/eslint/eslint/commit/d4f9a16af7e00021e2ed63823d9c2f149bc985d6) Update: add support for JSXFragments in indent rule (fixes [#12208](https://github-redirect.dependabot.com/eslint/eslint/issues/12208)) ([#12210](https://github-redirect.dependabot.com/eslint/eslint/issues/12210)) (Kai Cataldo)
> * [`c6af95f`](https://github.com/eslint/eslint/commit/c6af95f5bf1ef10f08545d54fd52b98e85fdf7f7) Sponsors: Sync README with website (ESLint Jenkins)
> * [`8cadd52`](https://github.com/eslint/eslint/commit/8cadd5229b7372aed0d4785dcae15532a399bf55) Sponsors: Sync README with website (ESLint Jenkins)
> * [`f9fc695`](https://github.com/eslint/eslint/commit/f9fc695d77c19cd5ecb3f0e97e1ea124c8543409) Chore: enable default-param-last ([#12244](https://github-redirect.dependabot.com/eslint/eslint/issues/12244)) (薛定谔的猫)
> * [`9984c3e`](https://github.com/eslint/eslint/commit/9984c3e27c92de76b8c05a58525dbcea12b10b83) Docs: Update README team and sponsors (ESLint Jenkins)
> 
> ## v6.4.0
> * [`e915fff`](https://github.com/eslint/eslint/commit/e915fffb6089a23ff1cae926cc607f9b87dc1819) Docs: Improve examples and clarify default option ([#12067](https://github-redirect.dependabot.com/eslint/eslint/issues/12067)) (Yuping Zuo)
> * [`540296f`](https://github.com/eslint/eslint/commit/540296fcecd232a09dc873a5a22f5839b59b7842) Update: enforceForClassMembers option to accessor-pairs (fixes [#12063](https://github-redirect.dependabot.com/eslint/eslint/issues/12063)) ([#12192](https://github-redirect.dependabot.com/eslint/eslint/issues/12192)) (Milos Djermanovic)
> * [`d3c2334`](https://github.com/eslint/eslint/commit/d3c2334646eae9287d5be9e457d041e445efb512) Update: flag nested block with declaration as error ([#12193](https://github-redirect.dependabot.com/eslint/eslint/issues/12193)) (David Waller)
> * [`b2498d2`](https://github.com/eslint/eslint/commit/b2498d284b9c30ed1543429c2f45d9014e12fe22) Update: Fix handling of property names in no-self-assign ([#12105](https://github-redirect.dependabot.com/eslint/eslint/issues/12105)) (Milos Djermanovic)
> * [`1ee61b0`](https://github.com/eslint/eslint/commit/1ee61b06715fcc750be2c923034a1e59ba663287) Update: enforceForClassMembers computed-property-spacing (fixes [#12049](https://github-redirect.dependabot.com/eslint/eslint/issues/12049)) ([#12214](https://github-redirect.dependabot.com/eslint/eslint/issues/12214)) (Milos Djermanovic)
> * [`520c922`](https://github.com/eslint/eslint/commit/520c92270eed6e90c1a796e8af275980f01705e0) Docs: Added naming convention details to plugin usage ([#12202](https://github-redirect.dependabot.com/eslint/eslint/issues/12202)) (Henrique Barcelos)
> * [`f826eab`](https://github.com/eslint/eslint/commit/f826eabbeecddb047f58f4e7308a14c18148d369) Fix: Allow line comment exception in object-curly-spacing (fixes [#11902](https://github-redirect.dependabot.com/eslint/eslint/issues/11902)) ([#12216](https://github-redirect.dependabot.com/eslint/eslint/issues/12216)) (Milos Djermanovic)
> * [`db2a29b`](https://github.com/eslint/eslint/commit/db2a29beb0fa28183f65bf9e659c66c03a8918b5) Update: indentation of comment followed by semicolon (fixes [#12232](https://github-redirect.dependabot.com/eslint/eslint/issues/12232)) ([#12243](https://github-redirect.dependabot.com/eslint/eslint/issues/12243)) (Kai Cataldo)
> * [`ae17d1c`](https://github.com/eslint/eslint/commit/ae17d1ca59dd466aa64da0680ec2453c2dc3b80d) Fix: no-sequences is reporting incorrect locations ([#12241](https://github-redirect.dependabot.com/eslint/eslint/issues/12241)) (Milos Djermanovic)
> * [`365331a`](https://github.com/eslint/eslint/commit/365331a42e22af5a77ac9cfa9673d6a8f653eb5a) Fix: object-shorthand providing invalid fixes for typescript ([#12260](https://github-redirect.dependabot.com/eslint/eslint/issues/12260)) (Brad Zacher)
> * [`1c921c6`](https://github.com/eslint/eslint/commit/1c921c6dfd7ddfb0308c8103e53d32c1241475f0) New: add no-import-assign (fixes [#12237](https://github-redirect.dependabot.com/eslint/eslint/issues/12237)) ([#12252](https://github-redirect.dependabot.com/eslint/eslint/issues/12252)) (Toru Nagashima)
> * [`3be04fd`](https://github.com/eslint/eslint/commit/3be04fd6a4e7b3f5a5ecb845a29cf29b71fe2dfb) New: Add prefer-regex-literals rule (fixes [#12238](https://github-redirect.dependabot.com/eslint/eslint/issues/12238)) ([#12254](https://github-redirect.dependabot.com/eslint/eslint/issues/12254)) (Milos Djermanovic)
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [eslint's changelog](https://github.com/eslint/eslint/blob/master/CHANGELOG.md).*

> v6.5.1 - September 30, 2019
> 
> * [`0d3d7d9`](https://github.com/eslint/eslint/commit/0d3d7d9cdd83a7f0e035c95f716a91b9ecc4868b) Docs: fix typo in no-magic-numbers ([#12345](https://github-redirect.dependabot.com/eslint/eslint/issues/12345)) (Josiah Rooney)
> * [`447ac87`](https://github.com/eslint/eslint/commit/447ac877e8ca2858d61b1e983f72d39e3e2ca74d) Fix: no-useless-rename handles ExperimentalRestProperty (fixes [#12335](https://github-redirect.dependabot.com/eslint/eslint/issues/12335)) ([#12339](https://github-redirect.dependabot.com/eslint/eslint/issues/12339)) (Kai Cataldo)
> * [`b6ff73c`](https://github.com/eslint/eslint/commit/b6ff73cad13282fbfc91186cf4bc2f20278a8936) Sponsors: Sync README with website (ESLint Jenkins)
> 
> v6.5.0 - September 29, 2019
> 
> * [`73596cb`](https://github.com/eslint/eslint/commit/73596cbdf0a12e2878b2994783f9b969b0c5fbeb) Update: Add enforceForSwitchCase option to use-isnan ([#12106](https://github-redirect.dependabot.com/eslint/eslint/issues/12106)) (Milos Djermanovic)
> * [`d592a24`](https://github.com/eslint/eslint/commit/d592a248d67920f7200925c003f10853d29f1f8d) Fix: exclude `\u000d` so new line won't convert to text (fixes [#12027](https://github-redirect.dependabot.com/eslint/eslint/issues/12027)) ([#12031](https://github-redirect.dependabot.com/eslint/eslint/issues/12031)) (zamboney)
> * [`e85d27a`](https://github.com/eslint/eslint/commit/e85d27af427d6185ac553a0d801b5103153426d4) Fix: no-regex-spaces false positives and invalid autofix (fixes [#12226](https://github-redirect.dependabot.com/eslint/eslint/issues/12226)) ([#12231](https://github-redirect.dependabot.com/eslint/eslint/issues/12231)) (Milos Djermanovic)
> * [`b349bf7`](https://github.com/eslint/eslint/commit/b349bf79ad56dded826bc99cb52c3551af34fa63) Fix: prefer-named-capture-group incorrect locations (fixes [#12233](https://github-redirect.dependabot.com/eslint/eslint/issues/12233)) ([#12247](https://github-redirect.dependabot.com/eslint/eslint/issues/12247)) (Milos Djermanovic)
> * [`7dc1ea9`](https://github.com/eslint/eslint/commit/7dc1ea9a1b9a21daaffcf712ba9c0e91af81b906) Fix: no-useless-return autofix removes comments ([#12292](https://github-redirect.dependabot.com/eslint/eslint/issues/12292)) (Milos Djermanovic)
> * [`0e68677`](https://github.com/eslint/eslint/commit/0e68677ec0aaf060a071ecf71e4af954dddb6af0) Fix: no-extra-bind autofix removes comments ([#12293](https://github-redirect.dependabot.com/eslint/eslint/issues/12293)) (Milos Djermanovic)
> * [`6ad7e86`](https://github.com/eslint/eslint/commit/6ad7e864303e56a39c89569d50c6caf80752ee21) Fix: no-extra-label autofix removes comments ([#12298](https://github-redirect.dependabot.com/eslint/eslint/issues/12298)) (Milos Djermanovic)
> * [`acec201`](https://github.com/eslint/eslint/commit/acec201f06df780791179ad92cfc484f9b6d23d4) Fix: no-undef-init autofix removes comments ([#12299](https://github-redirect.dependabot.com/eslint/eslint/issues/12299)) (Milos Djermanovic)
> * [`d89390b`](https://github.com/eslint/eslint/commit/d89390b75e3e9993f347387a49b0ac5550f45c7f) Fix: use async reading of stdin in bin/eslint.js (fixes [#12212](https://github-redirect.dependabot.com/eslint/eslint/issues/12212)) ([#12230](https://github-redirect.dependabot.com/eslint/eslint/issues/12230)) (Barrie Treloar)
> * [`334ca7c`](https://github.com/eslint/eslint/commit/334ca7c8b9c18ac097849c1cefaa43097a4e51dc) Update: no-useless-rename also reports default values (fixes [#12301](https://github-redirect.dependabot.com/eslint/eslint/issues/12301)) ([#12322](https://github-redirect.dependabot.com/eslint/eslint/issues/12322)) (Kai Cataldo)
> * [`41bfe91`](https://github.com/eslint/eslint/commit/41bfe919c06932b7e58cd9ead20157e06656160a) Update: Fix handling of chained new expressions in new-parens ([#12303](https://github-redirect.dependabot.com/eslint/eslint/issues/12303)) (Milos Djermanovic)
> * [`160b7c4`](https://github.com/eslint/eslint/commit/160b7c46b556ccb6023eb411a8be8801a4bda6df) Chore: add autofix npm script ([#12330](https://github-redirect.dependabot.com/eslint/eslint/issues/12330)) (Kai Cataldo)
> * [`04b6adb`](https://github.com/eslint/eslint/commit/04b6adb7f1bcb2b6cb3fa377b1ca4cecd810630e) Chore: enable eslint-plugin-jsdoc (refs [#11146](https://github-redirect.dependabot.com/eslint/eslint/issues/11146)) ([#12332](https://github-redirect.dependabot.com/eslint/eslint/issues/12332)) (Kai Cataldo)
> * [`9b86167`](https://github.com/eslint/eslint/commit/9b86167e6f053e4a72bf68ebc79db53903f7f8c3) Docs: Add new ES environments to Configuring ESLint ([#12289](https://github-redirect.dependabot.com/eslint/eslint/issues/12289)) (Milos Djermanovic)
> * [`c9aeab2`](https://github.com/eslint/eslint/commit/c9aeab21a71c6743f51163b7a8fdf4f0cbfcdbde) Docs: Add supported ECMAScript version to README ([#12290](https://github-redirect.dependabot.com/eslint/eslint/issues/12290)) (Milos Djermanovic)
> * [`8316e7b`](https://github.com/eslint/eslint/commit/8316e7be5a9429513d7ecf2ee2afc40ab4415b8f) Fix: no-useless-rename autofix removes comments ([#12300](https://github-redirect.dependabot.com/eslint/eslint/issues/12300)) (Milos Djermanovic)
> * [`29c12f1`](https://github.com/eslint/eslint/commit/29c12f18726a3afb21fc89ab1bdacc6972d49e68) Chore: cache results in runtime-info ([#12320](https://github-redirect.dependabot.com/eslint/eslint/issues/12320)) (Kai Cataldo)
> * [`f5537b2`](https://github.com/eslint/eslint/commit/f5537b2ed0b0b5e51a34c22cdd4ebfd024eaea3d) Fix: prefer-numeric-literals autofix removes comments ([#12313](https://github-redirect.dependabot.com/eslint/eslint/issues/12313)) (Milos Djermanovic)
> * [`11ae6fc`](https://github.com/eslint/eslint/commit/11ae6fcb5d5503e5dea41c02780369efe51f0bb9) Update: Fix call, new and member expressions in no-extra-parens ([#12302](https://github-redirect.dependabot.com/eslint/eslint/issues/12302)) (Milos Djermanovic)
> * [`a7894eb`](https://github.com/eslint/eslint/commit/a7894ebb43523152d36720efa770bb1fe8b58c07) New: add --env-info flag to CLI ([#12270](https://github-redirect.dependabot.com/eslint/eslint/issues/12270)) (Kai Cataldo)
> * [`61392ff`](https://github.com/eslint/eslint/commit/61392ff5ec660bfc01ac2ff0e9660d259cf88fd6) Sponsors: Sync README with website (ESLint Jenkins)
> * [`2c6bf8e`](https://github.com/eslint/eslint/commit/2c6bf8ea9c8a8f94746f980bd5bea0a8c5c4d6b7) Docs: English fix ([#12306](https://github-redirect.dependabot.com/eslint/eslint/issues/12306)) (Daniel Nixon)
> * [`6f11877`](https://github.com/eslint/eslint/commit/6f118778366613fc53036cb6a7537e1b4c6e7af8) Sponsors: Sync README with website (ESLint Jenkins)
> * [`2e202ca`](https://github.com/eslint/eslint/commit/2e202ca2228846e6226aa8dd99c614d572fb86a8) Docs: fix links in array-callback-return ([#12288](https://github-redirect.dependabot.com/eslint/eslint/issues/12288)) (Milos Djermanovic)
> * [`e39c631`](https://github.com/eslint/eslint/commit/e39c6318af0fd27edd5fd2aaf2b24a3e204005dd) Docs: add example for CLIEngine#executeOnText 3rd arg ([#12286](https://github-redirect.dependabot.com/eslint/eslint/issues/12286)) (Kai Cataldo)
> * [`d4f9a16`](https://github.com/eslint/eslint/commit/d4f9a16af7e00021e2ed63823d9c2f149bc985d6) Update: add support for JSXFragments in indent rule (fixes [#12208](https://github-redirect.dependabot.com/eslint/eslint/issues/12208)) ([#12210](https://github-redirect.dependabot.com/eslint/eslint/issues/12210)) (Kai Cataldo)
> * [`c6af95f`](https://github.com/eslint/eslint/commit/c6af95f5bf1ef10f08545d54fd52b98e85fdf7f7) Sponsors: Sync README with website (ESLint Jenkins)
> * [`8cadd52`](https://github.com/eslint/eslint/commit/8cadd5229b7372aed0d4785dcae15532a399bf55) Sponsors: Sync README with website (ESLint Jenkins)
> * [`f9fc695`](https://github.com/eslint/eslint/commit/f9fc695d77c19cd5ecb3f0e97e1ea124c8543409) Chore: enable default-param-last ([#12244](https://github-redirect.dependabot.com/eslint/eslint/issues/12244)) (薛定谔的猫)
> * [`9984c3e`](https://github.com/eslint/eslint/commit/9984c3e27c92de76b8c05a58525dbcea12b10b83) Docs: Update README team and sponsors (ESLint Jenkins)
> 
> v6.4.0 - September 13, 2019
> 
> * [`e915fff`](https://github.com/eslint/eslint/commit/e915fffb6089a23ff1cae926cc607f9b87dc1819) Docs: Improve examples and clarify default option ([#12067](https://github-redirect.dependabot.com/eslint/eslint/issues/12067)) (Yuping Zuo)
> * [`540296f`](https://github.com/eslint/eslint/commit/540296fcecd232a09dc873a5a22f5839b59b7842) Update: enforceForClassMembers option to accessor-pairs (fixes [#12063](https://github-redirect.dependabot.com/eslint/eslint/issues/12063)) ([#12192](https://github-redirect.dependabot.com/eslint/eslint/issues/12192)) (Milos Djermanovic)
> * [`d3c2334`](https://github.com/eslint/eslint/commit/d3c2334646eae9287d5be9e457d041e445efb512) Update: flag nested block with declaration as error ([#12193](https://github-redirect.dependabot.com/eslint/eslint/issues/12193)) (David Waller)
> * [`b2498d2`](https://github.com/eslint/eslint/commit/b2498d284b9c30ed1543429c2f45d9014e12fe22) Update: Fix handling of property names in no-self-assign ([#12105](https://github-redirect.dependabot.com/eslint/eslint/issues/12105)) (Milos Djermanovic)
> * [`1ee61b0`](https://github.com/eslint/eslint/commit/1ee61b06715fcc750be2c923034a1e59ba663287) Update: enforceForClassMembers computed-property-spacing (fixes [#12049](https://github-redirect.dependabot.com/eslint/eslint/issues/12049)) ([#12214](https://github-redirect.dependabot.com/eslint/eslint/issues/12214)) (Milos Djermanovic)
> * [`520c922`](https://github.com/eslint/eslint/commit/520c92270eed6e90c1a796e8af275980f01705e0) Docs: Added naming convention details to plugin usage ([#12202](https://github-redirect.dependabot.com/eslint/eslint/issues/12202)) (Henrique Barcelos)
> * [`f826eab`](https://github.com/eslint/eslint/commit/f826eabbeecddb047f58f4e7308a14c18148d369) Fix: Allow line comment exception in object-curly-spacing (fixes [#11902](https://github-redirect.dependabot.com/eslint/eslint/issues/11902)) ([#12216](https://github-redirect.dependabot.com/eslint/eslint/issues/12216)) (Milos Djermanovic)
> * [`db2a29b`](https://github.com/eslint/eslint/commit/db2a29beb0fa28183f65bf9e659c66c03a8918b5) Update: indentation of comment followed by semicolon (fixes [#12232](https://github-redirect.dependabot.com/eslint/eslint/issues/12232)) ([#12243](https://github-redirect.dependabot.com/eslint/eslint/issues/12243)) (Kai Cataldo)
> * [`ae17d1c`](https://github.com/eslint/eslint/commit/ae17d1ca59dd466aa64da0680ec2453c2dc3b80d) Fix: no-sequences is reporting incorrect locations ([#12241](https://github-redirect.dependabot.com/eslint/eslint/issues/12241)) (Milos Djermanovic)
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`f150f7f`](https://github.com/eslint/eslint/commit/f150f7f8fa1c992d60fcce0ede6c0557cb1f43a5) 6.5.1
- [`571307f`](https://github.com/eslint/eslint/commit/571307fdb2e0b04ca37702dd5174b3b60c715f6f) Build: changelog update for 6.5.1
- [`0d3d7d9`](https://github.com/eslint/eslint/commit/0d3d7d9cdd83a7f0e035c95f716a91b9ecc4868b) Docs: fix typo in no-magic-numbers ([#12345](https://github-redirect.dependabot.com/eslint/eslint/issues/12345))
- [`447ac87`](https://github.com/eslint/eslint/commit/447ac877e8ca2858d61b1e983f72d39e3e2ca74d) Fix: no-useless-rename handles ExperimentalRestProperty (fixes [#12335](https://github-redirect.dependabot.com/eslint/eslint/issues/12335)) ([#12339](https://github-redirect.dependabot.com/eslint/eslint/issues/12339))
- [`b6ff73c`](https://github.com/eslint/eslint/commit/b6ff73cad13282fbfc91186cf4bc2f20278a8936) Sponsors: Sync README with website
- [`76fb571`](https://github.com/eslint/eslint/commit/76fb571a1c15b040e42272435eb0d023cdcb031e) 6.5.0
- [`7359a80`](https://github.com/eslint/eslint/commit/7359a80f587b1aed4716d8397cc18629f8f948ab) Build: changelog update for 6.5.0
- [`73596cb`](https://github.com/eslint/eslint/commit/73596cbdf0a12e2878b2994783f9b969b0c5fbeb) Update: Add enforceForSwitchCase option to use-isnan ([#12106](https://github-redirect.dependabot.com/eslint/eslint/issues/12106))
- [`d592a24`](https://github.com/eslint/eslint/commit/d592a248d67920f7200925c003f10853d29f1f8d) Fix: exclude `\u000d` so new line won't convert to text (fixes [#12027](https://github-redirect.dependabot.com/eslint/eslint/issues/12027)) ([#12031](https://github-redirect.dependabot.com/eslint/eslint/issues/12031))
- [`e85d27a`](https://github.com/eslint/eslint/commit/e85d27af427d6185ac553a0d801b5103153426d4) Fix: no-regex-spaces false positives and invalid autofix (fixes [#12226](https://github-redirect.dependabot.com/eslint/eslint/issues/12226)) ([#12231](https://github-redirect.dependabot.com/eslint/eslint/issues/12231))
- Additional commits viewable in [compare view](https://github.com/eslint/eslint/compare/v2.9.0...v6.5.1)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [eslint](https://www.npmjs.com/~eslint), a new releaser for eslint since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint&package-manager=npm_and_yarn&previous-version=2.9.0&new-version=6.5.1)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mozilla/dxr/network/alerts).

</details>",dependabot[bot],49699333,2019-10-18T14:29:50Z,NONE,False,1,1,1,Powerful search for large codebases,Python,5a619777018d0328f1e1c5770f79767d484ad0df,"Bump eslint from 2.9.0 to 6.5.1 in /dxr/plugins/js/analyze_js

Bumps [eslint](https://github.com/eslint/eslint) from 2.9.0 to 6.5.1.
- [Release notes](https://github.com/eslint/eslint/releases)
- [Changelog](https://github.com/eslint/eslint/blob/master/CHANGELOG.md)
- [Commits](https://github.com/eslint/eslint/compare/v2.9.0...v6.5.1)

Signed-off-by: dependabot[bot] <support@github.com>"
5,https://api.github.com/repos/mozilla/dxr/pulls/694,694,Bump werkzeug from 0.10.4 to 0.15.3,"Bumps [werkzeug](https://github.com/pallets/werkzeug) from 0.10.4 to 0.15.3.
<details>
<summary>Release notes</summary>

*Sourced from [werkzeug's releases](https://github.com/pallets/werkzeug/releases).*

> ## 0.15.3
> * Blog: https://palletsprojects.com/blog/werkzeug-0-15-3-released/
> * Changes: https://werkzeug.palletsprojects.com/en/0.15.x/changes/#version-0-15-3
> 
> 
> ## 0.15.2
> * Blog: https://palletsprojects.com/blog/werkzeug-0-15-2-released/
> * Changes: https://werkzeug.palletsprojects.com/en/0.15.x/changes/#version-0-15-2
> 
> ## 0.15.1
> * Blog: https://palletsprojects.com/blog/werkzeug-0-15-1-released/
> * Changes: https://werkzeug.palletsprojects.com/en/0.15.x/changes/
> 
> ## 0.15.0
> * Blog: https://palletsprojects.com/blog/werkzeug-0-15-0-released/
> * Changes: https://werkzeug.palletsprojects.com/en/0.15.x/changes/
> 
> ## 0.13
> [Read the announcement here.](https://www.palletsprojects.com/blog/werkzeug-013-released/)
> 
> [Read the full changelog.](http://werkzeug.pocoo.org/docs/latest/changes/#version-0-13)
> 
> Install from [PyPI](https://pypi.org/Werkzeug/0.13) with pip:
> 
> ```
> pip install -U Werkzeug
> ```
> 
</details>
<details>
<summary>Changelog</summary>

*Sourced from [werkzeug's changelog](https://github.com/pallets/werkzeug/blob/master/CHANGES.rst).*

> Version 0.15.3
> --------------
> 
> Released 2019-05-14
> 
> -   Properly handle multi-line header folding in development server in
>     Python 2.7. (:issue:`1080`)
> -   Restore the ``response`` argument to :exc:`~exceptions.Unauthorized`.
>     (:pr:`1527`)
> -   :exc:`~exceptions.Unauthorized` doesn't add the ``WWW-Authenticate``
>     header if ``www_authenticate`` is not given. (:issue:`1516`)
> -   The default URL converter correctly encodes bytes to string rather
>     than representing them with ``b''``. (:issue:`1502`)
> -   Fix the filename format string in
>     :class:`~middleware.profiler.ProfilerMiddleware` to correctly handle
>     float values. (:issue:`1511`)
> -   Update :class:`~middleware.lint.LintMiddleware` to work on Python 3.
>     (:issue:`1510`)
> -   The debugger detects cycles in chained exceptions and does not time
>     out in that case. (:issue:`1536`)
> -   When running the development server in Docker, the debugger security
>     pin is now unique per container.
> 
> 
> Version 0.15.2
> --------------
> 
> Released 2019-04-02
> 
> -   ``Rule`` code generation uses a filename that coverage will ignore.
>     The previous value, ""generated"", was causing coverage to fail.
>     (:issue:`1487`)
> -   The test client removes the cookie header if there are no persisted
>     cookies. This fixes an issue introduced in 0.15.0 where the cookies
>     from the original request were used for redirects, causing functions
>     such as logout to fail. (:issue:`1491`)
> -   The test client copies the environ before passing it to the app, to
>     prevent in-place modifications from affecting redirect requests.
>     (:issue:`1498`)
> -   The ``""werkzeug""`` logger only adds a handler if there is no handler
>     configured for its level in the logging chain. This avoids double
>     logging if other code configures logging first. (:issue:`1492`)
> 
> 
> Version 0.15.1
> --------------
> 
> Released 2019-03-21
> 
> -   :exc:`~exceptions.Unauthorized` takes ``description`` as the first
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`9b1123a`](https://github.com/pallets/werkzeug/commit/9b1123a779e95b5c38ca911ce1329e87a3348a92) release version 0.15.3
- [`00bc43b`](https://github.com/pallets/werkzeug/commit/00bc43b1672e662e5e3b8cecd79e67fc968fa246) unique debugger pin in Docker containers
- [`2cbdf2b`](https://github.com/pallets/werkzeug/commit/2cbdf2b02273daccf85845b1e1569096e65ffe58) Merge pull request [#1542](https://github-redirect.dependabot.com/pallets/werkzeug/issues/1542) from asottile/exceptions_arent_always_hashable
- [`0e669f6`](https://github.com/pallets/werkzeug/commit/0e669f6be532801267d35de23c5f5237b8406d8a) Fix unhashable exception types
- [`bdc17e4`](https://github.com/pallets/werkzeug/commit/bdc17e4cd10bbb17449006cef385ec953a11fc36) Merge pull request [#1540](https://github-redirect.dependabot.com/pallets/werkzeug/issues/1540) from pallets/break-tb-cycle
- [`44e38c2`](https://github.com/pallets/werkzeug/commit/44e38c2985bcd3a7c17467bead901b8f36528f5f) break cycle in chained exceptions
- [`777500b`](https://github.com/pallets/werkzeug/commit/777500b64647ea47b21e52e5e113ba1d86014c05) Merge pull request [#1518](https://github-redirect.dependabot.com/pallets/werkzeug/issues/1518) from NiklasMM/fix/1510_lint-middleware-python3-compa...
- [`e00c7c2`](https://github.com/pallets/werkzeug/commit/e00c7c2cedcbcad3772e4522813c78bc9a860fbe) Make LintMiddleware Python 3 compatible and add tests
- [`d590cc7`](https://github.com/pallets/werkzeug/commit/d590cc7cf2fcb34ebc0783eb3c2913e8ce016ed8) Merge pull request [#1539](https://github-redirect.dependabot.com/pallets/werkzeug/issues/1539) from pallets/profiler-format
- [`0388fc9`](https://github.com/pallets/werkzeug/commit/0388fc95e696513bbefbde293f3f76cc482df8fa) update filename_format for ProfilerMiddleware.
- Additional commits viewable in [compare view](https://github.com/pallets/werkzeug/compare/0.10.4...0.15.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=werkzeug&package-manager=pip&previous-version=0.10.4&new-version=0.15.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mozilla/dxr/network/alerts).

</details>",dependabot[bot],49699333,2019-10-18T14:29:46Z,NONE,False,3,3,1,Powerful search for large codebases,Python,05bf07357f3a8558a55ed61b664b4bd8c10de921,"Bump werkzeug from 0.10.4 to 0.15.3

Bumps [werkzeug](https://github.com/pallets/werkzeug) from 0.10.4 to 0.15.3.
- [Release notes](https://github.com/pallets/werkzeug/releases)
- [Changelog](https://github.com/pallets/werkzeug/blob/master/CHANGES.rst)
- [Commits](https://github.com/pallets/werkzeug/compare/0.10.4...0.15.3)

Signed-off-by: dependabot[bot] <support@github.com>"
6,https://api.github.com/repos/mozilla/dxr/pulls/693,693,Bump flask from 0.10.1 to 1.0,"Bumps [flask](https://github.com/pallets/flask) from 0.10.1 to 1.0.
<details>
<summary>Release notes</summary>

*Sourced from [flask's releases](https://github.com/pallets/flask/releases).*

> ## 1.0
> The Pallets team is pleased to release Flask 1.0. [Read the announcement on our blog.](https://www.palletsprojects.com/blog/flask-1-0-released/
> 
> There are over a year's worth of changes in this release. Many features have been improved or changed. [Read the changelog](http://flask.pocoo.org/docs/1.0/changelog/) to understand how your project's code will be affected.
> 
> 
> JSON Security Fix
> ------------------
> 
> Flask previously decoded incoming JSON bytes using the content type of the request. Although JSON should only be encoded as UTF-8, Flask was more lenient. However, Python includes non-text related encodings that could result in unexpected memory use by a request.
> 
> Flask will now detect the encoding of incoming JSON data as one of the supported UTF encodings, and will not allow arbitrary encodings from the request.
> 
> 
> Install or Upgrade
> -------------------
> 
> Install from [PyPI](https://pypi.org/project/Flask/) with pip:
> 
>     pip install -U Flask
> 
> ## 0.12.4
> This is a repackage of [0.12.3](https://github.com/pallets/flask/releases/0.12.3) to fix an issue with how the package was built.
> 
> 
> Upgrade
> --------
> 
> Upgrade from [PyPI](https://pypi.org/project/Flask/0.12.4/) with pip. Use a version identifier if you want to stay at 0.12:
> 
>     pip install -U 'Flask~=0.12.4'
> 
> ## 0.12.3
> This release includes an important security fix for JSON and a minor backport for CLI support in PyCharm. It is provided for projects that cannot update to Flask 1.0 immediately. See the [1.0 announcement](https://github.com/pallets/flask/blob/flask-1-0-released) and update to it instead if possible.
> 
> 
> JSON Security Fix
> ------------------
> 
> Flask previously decoded incoming JSON bytes using the content type of the request. Although JSON should only be encoded as UTF-8, Flask was more lenient. However, Python includes non-text related encodings that could result in unexpected memory use by a request.
> 
> Flask will now detect the encoding of incoming JSON data as one of the supported UTF encodings, and will not allow arbitrary encodings from the request.
> 
> 
> Upgrade
> --------
> 
> Upgrade from [PyPI](https://pypi.org/project/Flask/) with pip. Use a version identifier if you want to stay at 0.12:
> 
>     pip install -U 'Flask~=0.12.3'
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [flask's changelog](https://github.com/pallets/flask/blob/master/CHANGES.rst).*

> Version 1.0
> -----------
> 
> Released 2018-04-26
> 
> -   Python 2.6 and 3.3 are no longer supported.
> -   Bump minimum dependency versions to the latest stable versions:
>     Werkzeug >= 0.14, Jinja >= 2.10, itsdangerous >= 0.24, Click >= 5.1.
>     :issue:`2586`
> -   Skip :meth:`app.run <Flask.run>` when a Flask application is run
>     from the command line. This avoids some behavior that was confusing
>     to debug.
> -   Change the default for :data:`JSONIFY_PRETTYPRINT_REGULAR` to
>     ``False``. :func:`~json.jsonify` returns a compact format by
>     default, and an indented format in debug mode. :pr:`2193`
> -   :meth:`Flask.__init__ <Flask>` accepts the ``host_matching``
>     argument and sets it on :attr:`~Flask.url_map`. :issue:`1559`
> -   :meth:`Flask.__init__ <Flask>` accepts the ``static_host`` argument
>     and passes it as the ``host`` argument when defining the static
>     route. :issue:`1559`
> -   :func:`send_file` supports Unicode in ``attachment_filename``.
>     :pr:`2223`
> -   Pass ``_scheme`` argument from :func:`url_for` to
>     :meth:`~Flask.handle_url_build_error`. :pr:`2017`
> -   :meth:`~Flask.add_url_rule` accepts the
>     ``provide_automatic_options`` argument to disable adding the
>     ``OPTIONS`` method. :pr:`1489`
> -   :class:`~views.MethodView` subclasses inherit method handlers from
>     base classes. :pr:`1936`
> -   Errors caused while opening the session at the beginning of the
>     request are handled by the app's error handlers. :pr:`2254`
> -   Blueprints gained :attr:`~Blueprint.json_encoder` and
>     :attr:`~Blueprint.json_decoder` attributes to override the app's
>     encoder and decoder. :pr:`1898`
> -   :meth:`Flask.make_response` raises ``TypeError`` instead of
>     ``ValueError`` for bad response types. The error messages have been
>     improved to describe why the type is invalid. :pr:`2256`
> -   Add ``routes`` CLI command to output routes registered on the
>     application. :pr:`2259`
> -   Show warning when session cookie domain is a bare hostname or an IP
>     address, as these may not behave properly in some browsers, such as
>     Chrome. :pr:`2282`
> -   Allow IP address as exact session cookie domain. :pr:`2282`
> -   ``SESSION_COOKIE_DOMAIN`` is set if it is detected through
>     ``SERVER_NAME``. :pr:`2282`
> -   Auto-detect zero-argument app factory called ``create_app`` or
>     ``make_app`` from ``FLASK_APP``. :pr:`2297`
> -   Factory functions are not required to take a ``script_info``
>     parameter to work with the ``flask`` command. If they take a single
>     parameter or a parameter named ``script_info``, the
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`291f3c3`](https://github.com/pallets/flask/commit/291f3c338c4d302dbde01ab9153a7817e5a780f5) Bump version number to 1.0
- [`36e68a4`](https://github.com/pallets/flask/commit/36e68a439a073e927b1801704fc7921be58262e1) release 1.0
- [`216151c`](https://github.com/pallets/flask/commit/216151c8a3c02e805fe5d1824708253f7e01e77f) Merge branch '0.12-maintenance'
- [`23047a7`](https://github.com/pallets/flask/commit/23047a71fd7da13be7b545f30807f38f4d9ecb25) Bump version number to 0.12.4.dev
- [`1a9e58e`](https://github.com/pallets/flask/commit/1a9e58e8c97c47c969736d46410f724f4e834f54) Bump version number to 0.12.3
- [`63deee0`](https://github.com/pallets/flask/commit/63deee0a8b0963f1657e2d327773d65632a387d3) release 0.12.3
- [`062745b`](https://github.com/pallets/flask/commit/062745b23f7abaafb144e3d94b6fbdf8ccc456b9) Merge pull request [#2720](https://github-redirect.dependabot.com/pallets/flask/issues/2720) from pallets/setup-link
- [`5c8110d`](https://github.com/pallets/flask/commit/5c8110de25f08bf20e9fda6611403dc5c59ec849) ensure order of project urls
- [`10a77a5`](https://github.com/pallets/flask/commit/10a77a54309876a6aba2e3303d291498c0a9318c) Add project_urls so that PyPI will show GitHub stats.
- [`22992a0`](https://github.com/pallets/flask/commit/22992a0d533f7f68e9fa1845c86dae230d8ff9ba) add donate link
- Additional commits viewable in [compare view](https://github.com/pallets/flask/compare/0.10.1...1.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=flask&package-manager=pip&previous-version=0.10.1&new-version=1.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/mozilla/dxr/network/alerts).

</details>",dependabot[bot],49699333,2019-10-18T14:29:44Z,NONE,False,3,2,1,Powerful search for large codebases,Python,afe17c0eab3c28f9400cf04c0c2cca6574b7574e,"Bump flask from 0.10.1 to 1.0

Bumps [flask](https://github.com/pallets/flask) from 0.10.1 to 1.0.
- [Release notes](https://github.com/pallets/flask/releases)
- [Changelog](https://github.com/pallets/flask/blob/master/CHANGES.rst)
- [Commits](https://github.com/pallets/flask/compare/0.10.1...1.0)

Signed-off-by: dependabot[bot] <support@github.com>"
7,https://api.github.com/repos/mozilla/dxr/pulls/692,692,Corrected grammar.," Added ""is"" because it seems to make more sense that way",ShriprajwalK,40351128,2019-10-13T06:20:53Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,f4f28f842b9d2216f2a662079ff3616af7a8f043,"Corrected grammar.

 Added ""is"" because it seems to make more sense that way"
8,https://api.github.com/repos/mozilla/dxr/pulls/690,690,Update for new version of rustup,"The new version is hosted at a different location, takes different
command line arguments, and installs to the user's home directory
instead of /usr/local.

I'm hopeful that this will fix the CI failure seen in #689",abbeyj,99402,2019-08-18T00:19:57Z,CONTRIBUTOR,True,6,6,3,Powerful search for large codebases,Python,a9636f8c455bd3612128497aa6ae2b50786e0dc3,"Update for new version of rustup

The new version is hosted at a different location, takes different
command line arguments, and installs to the user's home directory
instead of /usr/local."
9,https://api.github.com/repos/mozilla/dxr/pulls/689,689,Fix dependency conflict for issue,#688 ,NeolithEra,52778917,2019-08-09T01:42:16Z,NONE,False,3,3,2,Powerful search for large codebases,Python,de68a181f9767a6670126c43dd7ebf503c67d6f0,Fix dependency conflict for issue
10,https://api.github.com/repos/mozilla/dxr/pulls/689,689,Fix dependency conflict for issue,#688 ,NeolithEra,52778917,2019-08-09T01:42:16Z,NONE,False,3,3,2,Powerful search for large codebases,Python,3382a4d7025e8ef793e602062aa8332367baba3b,Fix dependency conflict for issue
11,https://api.github.com/repos/mozilla/dxr/pulls/689,689,Fix dependency conflict for issue,#688 ,NeolithEra,52778917,2019-08-09T01:42:16Z,NONE,False,3,3,2,Powerful search for large codebases,Python,f2c56584d045851547c70f695a59d2d636ffb8e2,Fix dependency conflict for issue
12,https://api.github.com/repos/mozilla/dxr/pulls/689,689,Fix dependency conflict for issue,#688 ,NeolithEra,52778917,2019-08-09T01:42:16Z,NONE,False,3,3,2,Powerful search for large codebases,Python,13449c679d815e37f37bb21fc6c7f82c3e098d81,Fix dependency conflict for issue
13,https://api.github.com/repos/mozilla/dxr/pulls/687,687,Add Mozilla Code of Conduct,"Fixes #686

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T03:45:04Z,CONTRIBUTOR,True,15,0,1,Powerful search for large codebases,Python,02757f749bd8b4223864b6201cf9e7f63e7d03ac,"Add Mozilla Code of Conduct file

Fixes #686.

_(Message COC002)_"
14,https://api.github.com/repos/mozilla/dxr/pulls/680,680,Add support for clang 7,Fixes #679,abbeyj,99402,2019-02-14T04:40:47Z,CONTRIBUTOR,True,38,3,2,Powerful search for large codebases,Python,7a737c3a8bd5f57cc67001228a3895f40c82620f,Add support for clang 7
15,https://api.github.com/repos/mozilla/dxr/pulls/676,676,Fix menus on members of anonymous unions.,,abbeyj,99402,2018-08-26T19:05:40Z,CONTRIBUTOR,True,62,2,2,Powerful search for large codebases,Python,c287dfb2c842b612c534af0658e68349f74f6f3d,Fix menus on members of anonymous unions.
16,https://api.github.com/repos/mozilla/dxr/pulls/675,675,Compatibility with clang 6.,"This version of clang slightly changed the way warnings worked,
breaking some of our tests.",abbeyj,99402,2018-08-26T19:03:56Z,CONTRIBUTOR,True,19,3,1,Powerful search for large codebases,Python,b1433fd7d375e19e124d666b749edf61ba85a10f,"Compatibility with clang 6.
This version of clang slightly changed the way warnings worked,
breaking some of our tests."
17,https://api.github.com/repos/mozilla/dxr/pulls/674,674,Fix menu items on variable declarations.,"These were being treated like types instead of variables and getting type-decl
and type-ref in the menu instead of the correct var-decl and var-ref.",abbeyj,99402,2018-07-02T22:44:55Z,CONTRIBUTOR,True,27,8,2,Powerful search for large codebases,Python,2700933929e046f94699529708aa48593a3b8af9,"Fix menu items on variable declarations.

These were being treated like types instead of variables and getting type-decl
and type-ref in the menu instead of the correct var-decl and var-ref."
18,https://api.github.com/repos/mozilla/dxr/pulls/673,673,"Fix missing ""Jump to definition"" link on function declarations.","I believe I broke this in 94882fe.  There is now, in some circumstances,
the possibility of having multiple decldefs for a single function.  Only one
will have a defloc and the rest will be without it.

When we're building the page we sort them (in essentially random order) and
pick the first one.  If that one happens to be one without a defloc then the
""Jump to definition"" menu item will not be shown.

The fix here makes sure that if we have a decldef with a defloc then it is
chosen in preference to others without a defloc.  If all the decldefs that
we have are without deflocs then the one that we pick is essentially chosen at
random like before.  But in this case all the decldefs should be identical so
this should not cause any issues.",abbeyj,99402,2018-06-29T21:26:40Z,CONTRIBUTOR,True,142,7,7,Powerful search for large codebases,Python,07a07c4fe617bb5005ab3e85acf5b83ab3b443b8,"Fix missing ""Jump to definition"" link on function declarations.

I believe I broke this in 94882fe.  There is now, in some circumstances,
the possibility of having multiple decldefs for a single function.  Only one
will have a defloc and the rest will be without it.

When we're building the page we sort them (in essentially random order) and
pick the first one.  If that one happens to be one without a defloc then the
""Jump to definition"" menu item will not be shown.

The fix here makes sure that if we have a decldef with a defloc then it is
chosen in preference to others without a defloc.  If all the decldefs that
we have are without deflocs then the one that we pick is essentially chosen at
random like before.  But in this case all the decldefs should be identical so
this should not cause any issues."
19,https://api.github.com/repos/mozilla/dxr/pulls/673,673,"Fix missing ""Jump to definition"" link on function declarations.","I believe I broke this in 94882fe.  There is now, in some circumstances,
the possibility of having multiple decldefs for a single function.  Only one
will have a defloc and the rest will be without it.

When we're building the page we sort them (in essentially random order) and
pick the first one.  If that one happens to be one without a defloc then the
""Jump to definition"" menu item will not be shown.

The fix here makes sure that if we have a decldef with a defloc then it is
chosen in preference to others without a defloc.  If all the decldefs that
we have are without deflocs then the one that we pick is essentially chosen at
random like before.  But in this case all the decldefs should be identical so
this should not cause any issues.",abbeyj,99402,2018-06-29T21:26:40Z,CONTRIBUTOR,True,142,7,7,Powerful search for large codebases,Python,44c9533a74f3e9c3d53438d05448ccfc6b0ba089,"Fix ""Jump to defintion"" on variables and types too.

These were experiencing the same problem as functions but the fix needs
to be applied in a different place."
20,https://api.github.com/repos/mozilla/dxr/pulls/672,672,Adding js test harness,"Karma ditambahkan  plugin-nya serta mocha dan chai ke devDependencies
Diperbarui file lockdown.
json Menambahkan tes pertama ke dalam tes direktori baru / js /
Itu saja untuk sekarang.",transdigiware,34800339,2018-06-07T12:35:38Z,NONE,False,397,37,4,Powerful search for large codebases,Python,1a0d99ad12e4502bdbeac3e01e197d00392d5549,"Adding js test harness
Added karma and its plugins as well as mocha and chai into devDependencies
Updated the lockdown.json file
Added a first test into the new directory tests/js/
That's about it for now."
21,https://api.github.com/repos/mozilla/dxr/pulls/670,670,Add additional extensions that are recognized as C++,"Borrowed from the list at https://github.com/github/linguist/blob/5363e045bb2728eec05ff2225a87e742e0bff586/lib/linguist/languages.yml#L513
",abbeyj,99402,2018-04-17T03:18:53Z,CONTRIBUTOR,True,12,4,4,Powerful search for large codebases,Python,b396efeda90fe338464f91112c7b2f07642da6b7,Add additional extensions that are recognized as C++
22,https://api.github.com/repos/mozilla/dxr/pulls/669,669,Remove deprecated peep.py and use `pip install --require-hashes` inst…,…ead.,abbeyj,99402,2018-04-17T02:26:20Z,CONTRIBUTOR,True,257,1073,6,Powerful search for large codebases,Python,957e37c1759496a640a13c854afabd38723a2d0b,Remove deprecated peep.py and use `pip install --require-hashes` instead.
23,https://api.github.com/repos/mozilla/dxr/pulls/669,669,Remove deprecated peep.py and use `pip install --require-hashes` inst…,…ead.,abbeyj,99402,2018-04-17T02:26:20Z,CONTRIBUTOR,True,257,1073,6,Powerful search for large codebases,Python,e90edf38a69d8fe170a3393960d89649502604c9,Ensure we have a recent version of pip before using --require-hashes.
24,https://api.github.com/repos/mozilla/dxr/pulls/669,669,Remove deprecated peep.py and use `pip install --require-hashes` inst…,…ead.,abbeyj,99402,2018-04-17T02:26:20Z,CONTRIBUTOR,True,257,1073,6,Powerful search for large codebases,Python,ae9f986d86f0a4a6aeb68666d7e1e3f1130f702f,Update comment to be more clear about where pip is coming from.
25,https://api.github.com/repos/mozilla/dxr/pulls/668,668,Make sure the virtualenv is set up before trying to run peep.py.,,abbeyj,99402,2018-02-15T05:21:52Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,f461fc4eb55d10c77b0c9b150c0c723f98bfa447,Make sure the virtualenv is set up before trying to run peep.py.
26,https://api.github.com/repos/mozilla/dxr/pulls/667,667,Handle files with CRLF line endings.,"Pygments gets confused by these and does odd things like splitting up a
CRLF pair so that the CR is on the end of one token and the LF is a
separate token.

This leads to us eventually outputting HTML that renders as two lines
in the browser for every one line in the source file.

We can fix up the output from pygments so that tokens do not contain
these unexpected line ending characters.  This guarantees that we
never output a <span> tag containing a CR or an LF.",abbeyj,99402,2018-02-15T04:43:42Z,CONTRIBUTOR,True,31,2,3,Powerful search for large codebases,Python,858a27040db9563d26a341c8b372b36a0314f0f1,Turn the pygmentize plugin into a package.
27,https://api.github.com/repos/mozilla/dxr/pulls/667,667,Handle files with CRLF line endings.,"Pygments gets confused by these and does odd things like splitting up a
CRLF pair so that the CR is on the end of one token and the LF is a
separate token.

This leads to us eventually outputting HTML that renders as two lines
in the browser for every one line in the source file.

We can fix up the output from pygments so that tokens do not contain
these unexpected line ending characters.  This guarantees that we
never output a <span> tag containing a CR or an LF.",abbeyj,99402,2018-02-15T04:43:42Z,CONTRIBUTOR,True,31,2,3,Powerful search for large codebases,Python,2936b303b906510b3e861f850c1f3d9990dc52e4,"Handle files with CRLF line endings.

Pygments gets confused by these and does odd things like splitting up a
CRLF pair so that the CR is on the end of one token and the LF is a
separate token.

This leads to us eventually outputting HTML that renders as two lines
in the browser for every one line in the source file.

We can fix up the output from pygments so that tokens do not contain
these unexpected line ending characters.  This guarantees that we
never output a <span> tag containing a CR or an LF."
28,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,a02ecc8ae9da517633ec64f40e9d5df2f7a20875,"Make sure all tests use the same name for the index and the catalog.
This ensures the index and catalog are properly cleaned up at the end
of the test."
29,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,93ac8d09a356a9151b5b6f2bf420f0aedf46365d,"Use a unique name for the ES index for every test.
When a test has finished delete only the index created by that test and
not all test indices."
30,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,e754fd9244a22469f51615b94982ec7c5166f09e,"Switch directories before calling `abspath`.
Otherwise temporary and log directories will be created in the current
directory rather than where the `dxr.config` file is located."
31,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,a53240ef53242040dd9d4e4540d5216453bf41a7,Don't leak directories in /tmp during testing.
32,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,f3e8af29a1a8822f34a5a77e414f786cc2e2b4fb,Remove unused file.
33,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,c00a3d528223e11f3e00bbf1aaed62b6668e6de7,"Don't play around with _config_dir_path in tests.
Doing this makes config.path_hash() change during the run and results
in ES indices leaking."
34,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,6a68ab74a85f738801095e07a379feba3158e202,"Run the indexing in-process instead of running it in a subprocess.
This is a bit faster and will produce better results for profiling and
coverage reports."
35,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,350167c57fe4c02162f7e16581fef9512877ccf8,"Run all tests out of directories in /tmp
This adds consistency between GenerativeTestCase and DxrInstanceTestCase.
It makes cleaning up much easier and faster since we can just delete
the entire temporary directory."
36,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,24ac1139a9c04e7f4ad0cde7aaa1486e1697e47a,Now that tests get built in /tmp we no longer need these rules.
37,https://api.github.com/repos/mozilla/dxr/pulls/666,666,Run tests in parallel for a nice speedup,"Lucky #666

This ended up bigger than I originally anticipated.  If you want me to split it up into smaller pieces or something, please tell me.

I get impatient waiting for tests to run.  Many of them could run in parallel except for a few problems:
- All the tests use the same name for the ES index so if you run more than one at a time they interfere with each other.  We can fix this by giving each test a unique index name.
- Tests were inadvertently writing temp files into a `dxr-temp-code` directory in the root of the DXR directory.  One test would delete this when it was done running while another was still using it.  Making sure the temporary directories are created relative to the `dxr.config` file as originally intended helps.
- But there's still a problem when there are multiple `DxrInstanceTestCase` tests in the same directory since they will still all try to use the same temporary directory.  We can fix this by copying the entire test to a unique temporary directory in the setup for the class.  This actually simplifies some things since it makes `DxrInstanceTestCase` and `GenerativeTestCase` both run from a temporary directory.

Other speedups include:
- Performing the indexing in-process instead of shelling out to `dxr index`.
- Not having to call `dxr clean` at all since deleting the temporary directory will clean up everything.


Before:
Ran 550 tests in 116.558s

After:
Ran 550 tests in 44.232s


Tests run over 2.5x faster.
",abbeyj,99402,2018-02-13T06:42:33Z,CONTRIBUTOR,True,222,269,51,Powerful search for large codebases,Python,36c95c30ab92793f3576b329704fccc83119fdc3,Run tests in parallel for a nice speedup.
38,https://api.github.com/repos/mozilla/dxr/pulls/665,665,Allow searching for references to things defined in third-party code,"This is split into 3 commits for easier review.

Until now functions, classes and variables that were not defined within the source tree were ""invisible"".  Uses of these things were not hyperlinked and searching for references to them found no results.

With this change we no longer ignore these things and they become searchable just like other identifiers.  You won't be able to find the definition for such items but other searches like ""Find references"" will work.

This works for things defined in third-party libraries and even libc.  So now you can search for all uses of ""strcpy"" or ""gets"" in your code.
",abbeyj,99402,2018-02-11T01:31:00Z,CONTRIBUTOR,True,133,82,18,Powerful search for large codebases,Python,195a3bd5113c6a867f9978fa8ca25d1d23a988a2,"Allow single-file test cases that don't link.
This allows testing indexing of code that doesn't link on its own but
that would link as part of a larger project.  The missing symbols
would be provided by a different translation unit or a library."
39,https://api.github.com/repos/mozilla/dxr/pulls/665,665,Allow searching for references to things defined in third-party code,"This is split into 3 commits for easier review.

Until now functions, classes and variables that were not defined within the source tree were ""invisible"".  Uses of these things were not hyperlinked and searching for references to them found no results.

With this change we no longer ignore these things and they become searchable just like other identifiers.  You won't be able to find the definition for such items but other searches like ""Find references"" will work.

This works for things defined in third-party libraries and even libc.  So now you can search for all uses of ""strcpy"" or ""gets"" in your code.
",abbeyj,99402,2018-02-11T01:31:00Z,CONTRIBUTOR,True,133,82,18,Powerful search for large codebases,Python,94ed718733ccdb93088cf8cc896bd35b551fb804,"Remove MINIMAL_MAIN

Now that test cases are no longer forced to link we don't need
MINIMAL_MAIN and can remove it to simplify the tests."
40,https://api.github.com/repos/mozilla/dxr/pulls/665,665,Allow searching for references to things defined in third-party code,"This is split into 3 commits for easier review.

Until now functions, classes and variables that were not defined within the source tree were ""invisible"".  Uses of these things were not hyperlinked and searching for references to them found no results.

With this change we no longer ignore these things and they become searchable just like other identifiers.  You won't be able to find the definition for such items but other searches like ""Find references"" will work.

This works for things defined in third-party libraries and even libc.  So now you can search for all uses of ""strcpy"" or ""gets"" in your code.
",abbeyj,99402,2018-02-11T01:31:00Z,CONTRIBUTOR,True,133,82,18,Powerful search for large codebases,Python,94882fe50e76f67f1196048df666f43860713ab4,Allow searching for references to things defined in third-party code.
41,https://api.github.com/repos/mozilla/dxr/pulls/665,665,Allow searching for references to things defined in third-party code,"This is split into 3 commits for easier review.

Until now functions, classes and variables that were not defined within the source tree were ""invisible"".  Uses of these things were not hyperlinked and searching for references to them found no results.

With this change we no longer ignore these things and they become searchable just like other identifiers.  You won't be able to find the definition for such items but other searches like ""Find references"" will work.

This works for things defined in third-party libraries and even libc.  So now you can search for all uses of ""strcpy"" or ""gets"" in your code.
",abbeyj,99402,2018-02-11T01:31:00Z,CONTRIBUTOR,True,133,82,18,Powerful search for large codebases,Python,8ce872d273bbe358e7a39d54751769d3be57d3da,Add docstrings for tests.
42,https://api.github.com/repos/mozilla/dxr/pulls/664,664,Don't get confused between the source and object directories.,"To be sure that files are actually under the source directory we need
to check that they begin with ""/path/to/project/"" not merely
""/path/to/project"".

If the source directory is /path/to/project and the object directory is
/path/to/project-obj then we were previously incorrectly treating
generated files under the object directory as if they were in
/path/to/project/obj.",abbeyj,99402,2018-02-10T20:16:36Z,CONTRIBUTOR,True,2,2,1,Powerful search for large codebases,Python,1212e3b8f2076b7c2d0b3a7ac8266d01ad4bd7e1,"Don't get confused between the source and object directories.

To be sure that files are actually under the source directory we need
to check that they begin with ""/path/to/project/"" not merely
""/path/to/project"".

If the source directory is /path/to/project and the object directory is
/path/to/project-obj then we were previously incorrectly treating
generated files under the object directory as if they were in
/path/to/project/obj."
43,https://api.github.com/repos/mozilla/dxr/pulls/663,663,Don't clean the object folder if the user has explicitly requested no…,… cleaning.,abbeyj,99402,2018-02-09T05:52:43Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,8a9e9c3cf9b7bdfbdf72c77732b7a0362dc069a7,Don't clean the object folder if the user has explicitly requested no cleaning.
44,https://api.github.com/repos/mozilla/dxr/pulls/662,662,rewrite docker to reduce layer usage and batch run tasks,,theonlydoo,1903124,2018-02-08T16:37:34Z,NONE,False,28,56,3,Powerful search for large codebases,Python,d5b8363734114124c3a05e79a439aeb979f1de28,rewrite docker to reduce layer usage and batch run tasks
45,https://api.github.com/repos/mozilla/dxr/pulls/661,661,Don't crash when an include file does not exist.,"In this case `file` will be `NULL`.  We have a check for that but we
were dereferencing `file` before the check.",abbeyj,99402,2018-02-07T06:49:10Z,CONTRIBUTOR,True,20,17,1,Powerful search for large codebases,Python,4d669defd03399f2efbdc24f70f4d34ea9a202f0,"Don't crash when an include file does not exist.

In this case `file` will be `NULL`.  We have a check for that but we
were dereferencing `file` before the check."
46,https://api.github.com/repos/mozilla/dxr/pulls/661,661,Don't crash when an include file does not exist.,"In this case `file` will be `NULL`.  We have a check for that but we
were dereferencing `file` before the check.",abbeyj,99402,2018-02-07T06:49:10Z,CONTRIBUTOR,True,20,17,1,Powerful search for large codebases,Python,851ad54442c124401e84e7245a0ffcede927b413,Move definition of `source` down to where it is first needed.
47,https://api.github.com/repos/mozilla/dxr/pulls/660,660,Fix user-defined literals.,"C++ introduced a new thing called ""user-defined literals"".  These have double
quotes in their name.  This was causing problems when writing out the
temporary .csv files.  If there is a double quote in a CSV field then the
quote should be escaped by doubling it.  There was already code to do this
but it was only enabled for certain fields.  Identifiers were assumed to
never contain quotes and thus not need escaping.

Since using the proper quoting algorithm will always produce the correct
result for any type of field, turn it on unconditionally for all fields.

I'm not sure if the query syntax is what we want to use here or not.  Having unescaped literal double quotes inside of a double-quoted string feels odd.  I was a bit surprised that it worked as-is.
Is this guaranteed to do the right thing or is it just a quirk of the way the query parser works?
",abbeyj,99402,2018-02-07T06:48:16Z,CONTRIBUTOR,True,36,14,3,Powerful search for large codebases,Python,c62ae4af8caec0f5127b71a729e50e5688d85ecd,"Fix user-defined literals.

C++ introduced a new thing called ""user-defined literals"".  These have double
quotes in their name.  This was causing problems when writing out the
temporary .csv files.  If there is a double quote in a CSV field then the
quote should be escaped by doubling it.  There was already code to do this
but it was only enabled for certain fields.  Identifiers were assumed to
never contain quotes and thus not need escaping.

Since using the proper quoting algorithm will always produce the correct
result for any type of field, turn it on unconditionally for all fields."
48,https://api.github.com/repos/mozilla/dxr/pulls/659,659,Add support for references to overloaded operators.,"clang doesn't provide an end point for these but since they are a single token
we can use the start point as the end point.",abbeyj,99402,2018-02-07T06:45:16Z,CONTRIBUTOR,True,68,0,2,Powerful search for large codebases,Python,4c098e44612e83c78447d8e70e719b0c822482f7,"Add support for references to overloaded operators.

clang doesn't provide an end point for these but since they are a single token
we can use the start point as the end point."
49,https://api.github.com/repos/mozilla/dxr/pulls/658,658,Analyze files as JavaScript only if their name ends in .js or .jsm.,"Files like ""foojs"" will no longer have a JavaScript analysis attempted
on them.",abbeyj,99402,2018-01-31T04:42:04Z,CONTRIBUTOR,True,2,2,1,Powerful search for large codebases,Python,0c65418e67a111fd5ead88478c74caa3200a5b85,"Analyze files as JavaScript only if their name ends in .js or .jsm.
Files like ""foojs"" will no longer have a JavaScript analysis attempted
on them."
50,https://api.github.com/repos/mozilla/dxr/pulls/657,657,Fix the context menu not appearing when clicking on a call to operator(),"We treat the call as covering just the token `(`.  Since this has no letters or numbers the code decided that a substring search was not appropriate and then didn't display the context menu at all.  But items like ""Jump to definition"" and ""Find references"" are still appropriate and should be shown.

This is on top of #656 since I can no longer build without that patch.",abbeyj,99402,2018-01-23T20:19:23Z,CONTRIBUTOR,True,12,10,1,Powerful search for large codebases,Python,c0c162f6822809223c6e4fbbf9d26978e713e86e,Fix the context menu not appearing when clicking on a call to operator().
51,https://api.github.com/repos/mozilla/dxr/pulls/656,656,Add support for clang 5.0.,,abbeyj,99402,2018-01-23T19:42:36Z,CONTRIBUTOR,True,12,0,1,Powerful search for large codebases,Python,80533c1e79fd3fccda19fe4a292d130a51e88a15,Add support for clang 5.0.
52,https://api.github.com/repos/mozilla/dxr/pulls/655,655,Keep fonts from 404ing when fetched from filter.css. Fixes bug 1356328.,"The cachebusting was failing to find the hashed version of the filename because the static_manifest doesn't include those querystrings. The querystrings don't do anything anyway, so I removed them.",erikrose,295816,2017-11-16T16:28:46Z,MEMBER,True,3,3,1,Powerful search for large codebases,Python,7684609cf255ef00f060b3307ac2356c16828c18,"Keep fonts from 404ing when fetched from filter.css. Fixes bug 1356328.

The cachebusting was failing to find the hashed version of the filename because the static_manifest doesn't include those querystrings. The querystrings don't do anything anyway, so I removed them."
53,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,abe21f783db075e27d8ba7d02aa828d1d181acf4,"DXR elasticsearch 2.4.1 basic port,  first push"
54,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,3a614a7cf1de76e229be8ceaa288ce253d7a72b5,"Merge branch 'modern-es-241' into modern-es

This merge is the first merge to port dxr to elasticsearch 2.4.1

- index create - change payload attribute to ref_payload and region_payload
- add DXR_DEFAULT_ELASTICSEARCH_HOST  environment variable to define default
  elasticsearch host used.
- modify code to use ref_payload and region_payload"
55,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,3afb81feeaa38da2f17e758755279b77873bd59e,cleanup for submission
56,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,c5ff45c87605fbe3cc7827b76de5f2810215330a,"Merge branch 'modern-es-241' into modern-es

Simple cleanup for submission
remove extra comment"
57,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,36de73fed77f9b062e87d6a186848eca87570b5f,checkpoint   mapping updated  serve port changed  index create fix1   remaining- filtered query to bool
58,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,864667ca074aa66e3d19477edf284c4174c762d1,555 all changes except query
59,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,d1482226e6719f8164bd85b4a4390277b7c1ee15,"first round of query changes, stab at 5 syntax"
60,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,15ebd8111a47634b7e3fe97e2e2c23d50b6a39f6,"some query updates, does not impact build"
61,https://api.github.com/repos/mozilla/dxr/pulls/654,654,Modern es 555,current status of work porting dxr to elasticsearch 555 and later,scmikes,31075840,2017-11-14T17:57:19Z,NONE,True,139,87,14,Powerful search for large codebases,Python,63940172887a3f9eea15c6cc6f6b6c9db0fd4721,"changed some filters, forced all qname queries to be case insensitive, added FIXME"
62,https://api.github.com/repos/mozilla/dxr/pulls/653,653,Modern es 241,"Erik,

Thanks for the code review.  I did not  know flakes8 was part of the process, I ran that and cleand up errors.  I had to undo one change because the py code was test case data :-)

1) server.py   very good catch on using elasticsearch default host for dxr web server.  This is fixed. Thank you, sorry I missed this.   

2) config.py fixed typos in comment
    Note: env var for default elastisearch host is used in testing, so even though it is dropped from server.py it is still used

3) es.py
     #wait_for_no_reloacing_shards='true' is commented out.   This is a 5.5.5 thing, but the pyelasticsearch.py lib did not support the new 5.5.5 option.  Not sure what you want to do about that.  The option ""should"" there in 5.5.5, but it is not available in pyelasticsearch.py

4) core.py  - corrected indentation in properties attributes


Note: The code for 2.4.1 should run in both 1.7.5 and 2.4.1.   I use an external 2.4.1 server for def and use the env var.   The current unit test code uses the 1.7.5 docker config, and nothing extra should be needed for unit tests.


3 unit tests are failing, and I am not sure which direction to take.   I was going to complete the 5.5.5 work before working the unit tests.   If you see a fix for the unit tests, please let me know I will apply fixes ASPAP.

Also I am happy to make any further changes to comply with any coding standards, just let me know.  My pyflake8 is slighly newer, so I fixed a few more spacing errors in old code.  That is part of these changes.

The unit tests should run and fail with 3 errors.   The Location attribute of the response dict is not set.  I added code to the test case to dump all dict elements to stdout out.  Please let me know if you see a direction to address these errors.


",scmikes,31075840,2017-08-23T01:26:55Z,NONE,False,77,36,11,Powerful search for large codebases,Python,abe21f783db075e27d8ba7d02aa828d1d181acf4,"DXR elasticsearch 2.4.1 basic port,  first push"
63,https://api.github.com/repos/mozilla/dxr/pulls/653,653,Modern es 241,"Erik,

Thanks for the code review.  I did not  know flakes8 was part of the process, I ran that and cleand up errors.  I had to undo one change because the py code was test case data :-)

1) server.py   very good catch on using elasticsearch default host for dxr web server.  This is fixed. Thank you, sorry I missed this.   

2) config.py fixed typos in comment
    Note: env var for default elastisearch host is used in testing, so even though it is dropped from server.py it is still used

3) es.py
     #wait_for_no_reloacing_shards='true' is commented out.   This is a 5.5.5 thing, but the pyelasticsearch.py lib did not support the new 5.5.5 option.  Not sure what you want to do about that.  The option ""should"" there in 5.5.5, but it is not available in pyelasticsearch.py

4) core.py  - corrected indentation in properties attributes


Note: The code for 2.4.1 should run in both 1.7.5 and 2.4.1.   I use an external 2.4.1 server for def and use the env var.   The current unit test code uses the 1.7.5 docker config, and nothing extra should be needed for unit tests.


3 unit tests are failing, and I am not sure which direction to take.   I was going to complete the 5.5.5 work before working the unit tests.   If you see a fix for the unit tests, please let me know I will apply fixes ASPAP.

Also I am happy to make any further changes to comply with any coding standards, just let me know.  My pyflake8 is slighly newer, so I fixed a few more spacing errors in old code.  That is part of these changes.

The unit tests should run and fail with 3 errors.   The Location attribute of the response dict is not set.  I added code to the test case to dump all dict elements to stdout out.  Please let me know if you see a direction to address these errors.


",scmikes,31075840,2017-08-23T01:26:55Z,NONE,False,77,36,11,Powerful search for large codebases,Python,3afb81feeaa38da2f17e758755279b77873bd59e,cleanup for submission
64,https://api.github.com/repos/mozilla/dxr/pulls/653,653,Modern es 241,"Erik,

Thanks for the code review.  I did not  know flakes8 was part of the process, I ran that and cleand up errors.  I had to undo one change because the py code was test case data :-)

1) server.py   very good catch on using elasticsearch default host for dxr web server.  This is fixed. Thank you, sorry I missed this.   

2) config.py fixed typos in comment
    Note: env var for default elastisearch host is used in testing, so even though it is dropped from server.py it is still used

3) es.py
     #wait_for_no_reloacing_shards='true' is commented out.   This is a 5.5.5 thing, but the pyelasticsearch.py lib did not support the new 5.5.5 option.  Not sure what you want to do about that.  The option ""should"" there in 5.5.5, but it is not available in pyelasticsearch.py

4) core.py  - corrected indentation in properties attributes


Note: The code for 2.4.1 should run in both 1.7.5 and 2.4.1.   I use an external 2.4.1 server for def and use the env var.   The current unit test code uses the 1.7.5 docker config, and nothing extra should be needed for unit tests.


3 unit tests are failing, and I am not sure which direction to take.   I was going to complete the 5.5.5 work before working the unit tests.   If you see a fix for the unit tests, please let me know I will apply fixes ASPAP.

Also I am happy to make any further changes to comply with any coding standards, just let me know.  My pyflake8 is slighly newer, so I fixed a few more spacing errors in old code.  That is part of these changes.

The unit tests should run and fail with 3 errors.   The Location attribute of the response dict is not set.  I added code to the test case to dump all dict elements to stdout out.  Please let me know if you see a direction to address these errors.


",scmikes,31075840,2017-08-23T01:26:55Z,NONE,False,77,36,11,Powerful search for large codebases,Python,f4259d89130c1b1dd40f0ec17cf915e2cf151acb,address review requests from push
65,https://api.github.com/repos/mozilla/dxr/pulls/653,653,Modern es 241,"Erik,

Thanks for the code review.  I did not  know flakes8 was part of the process, I ran that and cleand up errors.  I had to undo one change because the py code was test case data :-)

1) server.py   very good catch on using elasticsearch default host for dxr web server.  This is fixed. Thank you, sorry I missed this.   

2) config.py fixed typos in comment
    Note: env var for default elastisearch host is used in testing, so even though it is dropped from server.py it is still used

3) es.py
     #wait_for_no_reloacing_shards='true' is commented out.   This is a 5.5.5 thing, but the pyelasticsearch.py lib did not support the new 5.5.5 option.  Not sure what you want to do about that.  The option ""should"" there in 5.5.5, but it is not available in pyelasticsearch.py

4) core.py  - corrected indentation in properties attributes


Note: The code for 2.4.1 should run in both 1.7.5 and 2.4.1.   I use an external 2.4.1 server for def and use the env var.   The current unit test code uses the 1.7.5 docker config, and nothing extra should be needed for unit tests.


3 unit tests are failing, and I am not sure which direction to take.   I was going to complete the 5.5.5 work before working the unit tests.   If you see a fix for the unit tests, please let me know I will apply fixes ASPAP.

Also I am happy to make any further changes to comply with any coding standards, just let me know.  My pyflake8 is slighly newer, so I fixed a few more spacing errors in old code.  That is part of these changes.

The unit tests should run and fail with 3 errors.   The Location attribute of the response dict is not set.  I added code to the test case to dump all dict elements to stdout out.  Please let me know if you see a direction to address these errors.


",scmikes,31075840,2017-08-23T01:26:55Z,NONE,False,77,36,11,Powerful search for large codebases,Python,be41d29f024f96c6505b17cacde43079928e1e4a,address review requests from push
66,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,abe21f783db075e27d8ba7d02aa828d1d181acf4,"DXR elasticsearch 2.4.1 basic port,  first push"
67,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,3a614a7cf1de76e229be8ceaa288ce253d7a72b5,"Merge branch 'modern-es-241' into modern-es

This merge is the first merge to port dxr to elasticsearch 2.4.1

- index create - change payload attribute to ref_payload and region_payload
- add DXR_DEFAULT_ELASTICSEARCH_HOST  environment variable to define default
  elasticsearch host used.
- modify code to use ref_payload and region_payload"
68,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,3afb81feeaa38da2f17e758755279b77873bd59e,cleanup for submission
69,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,c5ff45c87605fbe3cc7827b76de5f2810215330a,"Merge branch 'modern-es-241' into modern-es

Simple cleanup for submission
remove extra comment"
70,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,f4259d89130c1b1dd40f0ec17cf915e2cf151acb,address review requests from push
71,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,be41d29f024f96c6505b17cacde43079928e1e4a,address review requests from push
72,https://api.github.com/repos/mozilla/dxr/pulls/652,652,Modern es,"This pull contains the first set of code to upgrade dxr to a modern elasticsearch.  The final target is elasticsearsearch 5.x latest.

This pull target is elasticsearch 2.4.1.  elasticsearch 2.4.1 still supports fieldnames as the default. 5.5.5 and later requires the create index command to specify filednames in the index create statement.

Main Changes:
   - index property name changes.    payload property appears in 2 places.  Under region and ref. Change names to region_payload and ref_payload.   Various py code changes to support this change.

 

dxr index and multiple test cases failed if an index with the same name as the old index tried to be created.

I am not certain if the desired behavior for dxr index , reusing index name is:  delete old index, create new.   I explicitly coded this in es.py.  Please review, if not correct, will fix to correct flow.

3 unit tests fail dealing with url redirect.   I am not sure what path to take to address these three unit tests.

added environment variable to define default elasticsearch host used by dxr DXR_DEFAULT_ELASTICSEARCH_HOST.  This the host to use if no host is defined in any config file or passed in on the command line.  This can be set in docker-compose.yml or on the command line.  The default value is 127.0.0.1.

Note: this code functions on both 1.7.5 (current docker elasticsearch version).   To test with elasticsearch 2.4.1 and this code
    1) setup elasticsearch 2.4.1 server
    2) edit docker-compose.yml   DXR_DEFUALT_ELASTICSEARCH_HOST to 2.4.1 server
    3) make shell
    4) make test

Note 2:   this code has only been validiated the following way so far.  Unit tests are the key validation so far.
     1) run unit tests - 3 fail with redirect LOCATION requrest property value missing
     2) dxr index    vim code base
     3) dxr index our products csv files

Remaining Targets:
    1) switch to scmikes/dxr   modern-es-555 branch to work on 555 work
             - define index create statement to activate fieldnames (in theory, should behave the same as 1.7.5 and 2.4.1 default behavior)
             - change docker env setup to use elasticsearch 5.5.5 (or later if 5.5.6 released).  Target is 5.x
     2) fix 3 unit test cases that fail
     3) very light validation of dxr serve.  This has not been validated at all so far.  Unit tests are key validation tests with the 2.4.1",scmikes,31075840,2017-08-22T08:34:11Z,NONE,False,77,36,11,Powerful search for large codebases,Python,c7dddda6549862a46457e51f802aa9fc4eb9e26f,"Merge branch 'modern-es-241' into modern-es

address review comments

1) fix pyflake8 errors
2) fix default host name in serve.py,  Env var still used in multiple other places
3) Some commented code left in place for review, and FIXME for 5.5.5
4) correctly indent json properties
5) correct typos in comment config.py
6) es.py  leave comment in place for wait_for_relocating_shards 5.5.5 issue

If there are any other issue/ or style  I am happy to change code further"
73,https://api.github.com/repos/mozilla/dxr/pulls/649,649,Align setup.py with requirements.txt.,,erikrose,295816,2017-06-22T14:57:26Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,addafafb35f75553969bcaabd7f3892ac94427f9,Align setup.py with requirements.txt.
74,https://api.github.com/repos/mozilla/dxr/pulls/648,648,Disabmiguate static functions that share the same name but appear in …,"…different files.

Before this change if you had a function like ""static void foo()"" in
one file and another, different function also called ""static void foo()""
in a different file, DXR would not be able to entirely distinguish
between the two.  For instance, if you clicked on one of the
definitions and selected ""Find references"" then the list that was
produced would include references not only to the selected function but
also to the other function.

The way I mangled the name is to add ""(static in filename.cpp)::"" to the beginning.
This is similar to the ""(anonymous namespace in filename.cpp)::"" that we already
use for anonymous namespaces.  If somebody has a suggestion for something
better or different I'm more than willing to change this.

The `test_static` directory is mostly a copy of `test_anon_ns` but with static
functions instead of functions inside of anonymous namespaces.
",abbeyj,99402,2017-05-22T05:09:45Z,CONTRIBUTOR,True,73,0,8,Powerful search for large codebases,Python,78f0a617da9a6d6cea25e5b88a9ad2b756acf43f,"Disabmiguate static functions that share the same name but appear in different files.

Before this change if you had a function like ""static void foo()"" in
one file and another, different function also called ""static void foo()""
in a different file, DXR would not be able to entirely distinguish
between the two.  For instance, if you clicked on one of the
definitions and selected ""Find references"" then the list that was
produced would include references not only to the selected function but
also to the other function."
75,https://api.github.com/repos/mozilla/dxr/pulls/645,645,Pick the source directory specified last in the command line.,,vkalintiris,25480816,2017-03-29T13:09:58Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,5c3e2eb4fd174cf87506c8eed68900609b91ead7,Pick the source directory specified last in the command line.
76,https://api.github.com/repos/mozilla/dxr/pulls/644,644,Add a <noscript> tag to inform user if scripts are disabled/blocked,,KWierso,172215,2017-03-10T21:04:26Z,NONE,False,2,0,1,Powerful search for large codebases,Python,90312ed0a2b5b4a001354c79830386bab514a490,Add a <noscript> tag to warn when scripts are blocked/disabled
77,https://api.github.com/repos/mozilla/dxr/pulls/643,643,Fix anonymous namespaces in headers.,"Previously these namespaces would get a name assigned using the name of the
.cpp file that they were included from.  This caused problems when the header
was included in more than one file.  Searching for references to things
defined in such an anonymous namespace would show only results from a single
.cpp file and not all results.

The new behavior is to assign these namespaces a name based on the header
that they are defined in.  This allows the search to correctly find all references.

For an example, go to https://dxr.mozilla.org/mozilla-central/source/ipc/glue/ProtocolUtils.h#49
and try to find references for `CHANNEL_OPENED_MESSAGE_TYPE`.  The search
will not find any results and the search query shows
`(anonymous namespace in obj-x86_64-pc-linux-gnu/xpcom/threads/Unified_cpp_xpcom_threads1.cpp)`.
That .cpp file is one that includes this header but it doesn't have any references to
this identifier.  Effectively the search is limited to only that .cpp file.
There are actually several references to this identifier, for example:
https://dxr.mozilla.org/mozilla-central/source/ipc/glue/ProtocolUtils.cpp#77

I didn't properly account for the effect of having an anonymous namespace in
a header when I originally wrote this code.  This should do the correct thing now.

I separated the logic out into a helper function because I have a followup change
for static functions that's also going to need this.
",abbeyj,99402,2017-02-28T04:27:16Z,CONTRIBUTOR,True,39,6,5,Powerful search for large codebases,Python,40673a045b258f400520001c8647048e5e03d627,"Fix anonymous namespaces in headers.
Previously these namespaces would get a name assigned using the name of the
.cpp file that they were included from.  This caused problems when the header
was included in more than one file.  Searching for references to things
defined in such an anonymous namespace would show only results from a single
.cpp file and not all results."
78,https://api.github.com/repos/mozilla/dxr/pulls/641,641,Fix 2 gcc warnings,"warning: extra ‘;’ [-Wpedantic]
warning: type qualifiers ignored on function return type [-Wignored-qualifiers]",abbeyj,99402,2017-02-10T05:23:20Z,CONTRIBUTOR,True,2,2,2,Powerful search for large codebases,Python,b7481c40243ef16f23c3a4e2cb09cc4e066abeae,"Fix 2 gcc warnings
warning: extra ‘;’ [-Wpedantic]
warning: type qualifiers ignored on function return type [-Wignored-qualifiers]"
79,https://api.github.com/repos/mozilla/dxr/pulls/640,640,Provide a more friendly error message if we can't run llvm-config.,"This is better than silently ignoring the problem and then failing to
find a required #include file while compiling.",abbeyj,99402,2017-02-10T04:28:38Z,CONTRIBUTOR,True,4,0,1,Powerful search for large codebases,Python,8f610c56c5d022e6ff87508b3baa97b96b01a066,"Provide a more friendly error message if we can't run llvm-config.
This is better than silently ignoring the problem and then failing to
find a required #include file while compiling."
80,https://api.github.com/repos/mozilla/dxr/pulls/639,639,Fix popup menu not showing up when clicking on the far right side,"of an identifer.

It looks like `offset` is a value that has been rounded to the nearest integer.  So if you click on the right-half of the rightmost character in an identifier where you're clicking at, say, `(endIndex - 0.25)` it will get rounded up to `endIndex`.  Then the check would end up discarding the click.  Effectively it can take on values in the range [0, endIndex] instead of [0, endIndex) as one might expect.  

To be honest I'm not sure if this is a bug in Firefox or if this is the right way to fix the problem.
",abbeyj,99402,2017-02-10T04:05:29Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,0586e1c8edacc7f75f595b5bf4fb783cba2944c3,"Fix popup menu not showing up when clicking on the far right side
of an identifer."
81,https://api.github.com/repos/mozilla/dxr/pulls/638,638,Reduce the range covered by references to template member functions.,"Given a call to a template member function with explicit template
arguments, we used to include those arguments in the source range for
the reference.  For instance:

    c.foo<int>()
      ^^^^^^^^-- reference covers this range

This is inconsistent with the behavior for non-member template functions
and it also prevents any references within the template arguments from
being available.  The new behavior only covers the member name:

    c.foo<int>()
      ^^^-- reference covers this range

",abbeyj,99402,2017-02-10T03:24:11Z,CONTRIBUTOR,True,38,1,2,Powerful search for large codebases,Python,d6474a8ad71f7ad84dae30ecc7122381e46a46c1,"Reduce the range covered by references to template member functions.
Given a call to a template member function with explicit template
arguments, we used to include those arguments in the source range for
the reference.  For instance:
    c.foo<int>()
      ^^^^^^^^-- reference covers this range

This is inconsistent with the behavior for non-member template functions
and it also prevents any references within the template arguments from
being available.  The new behavior only covers the member name:
    c.foo<int>()
      ^^^-- reference covers this range"
82,https://api.github.com/repos/mozilla/dxr/pulls/637,637,Unregister ourselves as a DiagnosticsConsumer before we are destroyed.,"This prevents use-after-free bugs in clang 3.9.  It appears that in this new
version of clang, the DiagnosticsConsumer can be used even after the source
file has finished being processed and the ASTConsumer has been destroyed.",abbeyj,99402,2017-02-09T07:05:47Z,CONTRIBUTOR,True,8,0,1,Powerful search for large codebases,Python,68f11821457968708f79150163d55c55420a06af,"Unregister ourselves as a DiagnosticsConsumer before we are destroyed.
This prevents use-after-free bugs in clang 3.9.  It appears that in this new
version of clang, the DiagnosticsConsumer can be used even after the source
file has finished being processed and the ASTConsumer has been destroyed."
83,https://api.github.com/repos/mozilla/dxr/pulls/631,631,Don't treat vertical tabs or form feeds as line ending characters.,"This matches the behavior of clang and most text editors.

Otherwise our line number's don't match up with clang's and we end up trying to put links on the wrong lines.
",abbeyj,99402,2017-01-09T00:52:19Z,CONTRIBUTOR,True,29,1,2,Powerful search for large codebases,Python,85e8af3ccde70b3f34a04a4b4fdbe23206af4f4d,"Don't treat vertical tabs or form feeds as line ending characters.
This matches the behavior of clang and most text editors."
84,https://api.github.com/repos/mozilla/dxr/pulls/631,631,Don't treat vertical tabs or form feeds as line ending characters.,"This matches the behavior of clang and most text editors.

Otherwise our line number's don't match up with clang's and we end up trying to put links on the wrong lines.
",abbeyj,99402,2017-01-09T00:52:19Z,CONTRIBUTOR,True,29,1,2,Powerful search for large codebases,Python,a6fda71b606a503f732913b0814971c86e0d1cae,"Add some additional characters beyond Vertical Tab and Form Feed
that should also not be treated as line ending characters."
85,https://api.github.com/repos/mozilla/dxr/pulls/631,631,Don't treat vertical tabs or form feeds as line ending characters.,"This matches the behavior of clang and most text editors.

Otherwise our line number's don't match up with clang's and we end up trying to put links on the wrong lines.
",abbeyj,99402,2017-01-09T00:52:19Z,CONTRIBUTOR,True,29,1,2,Powerful search for large codebases,Python,96f62fa54d0e2ca73abbf79460f9786f4b0b6a97,"Update comments with more details about alternative solutions for
dealing with Vertical Tabs and Form Feeds and why we're using the
one that we've chosen."
86,https://api.github.com/repos/mozilla/dxr/pulls/629,629,Add more of an inversion-of-control framework to the base TestCase. Make test_unicode work on Mac (HFS+) hosts.,"* Add hooks for generating source and indexing.
* Factor up the ES refresh() and the deletion of ES indices to the base class.
* Factor up this_dir() as well.
* Switch chdir() to cd(), which doesn't leave us in a deleted temp dir which makes future getcwd() calls deep in the stdlib grumpy.",erikrose,295816,2017-01-04T16:03:11Z,MEMBER,True,98,30,2,Powerful search for large codebases,Python,a4f5f3951148303715908641acf9a684256400d6,"Add more of an inversion-of-control framework to the base TestCase. Make test_unicode work on Mac (HFS+) hosts.

* Add hooks for generating source, removing generated source, and indexing.
* Factor up the ES refresh() and the deletion of ES indices to the base class.
* Factor up this_dir() as well.
* Switch chdir() to cd(), which doesn't leave us in a deleted temp dir which makes future getcwd() calls deep in the stdlib grumpy."
87,https://api.github.com/repos/mozilla/dxr/pulls/628,628,"When pulling a file out of a VCS revision, don't assume its containin…","…g folder still exists. Fixes bug 1324026.

It may well have moved in the checkout's revision. So stop cd-ing to its containing folder. Instead, go into the deepest existing folder on its containing path, and run the VCS commands against the remainder of the relative path from there. Going into the deepest existing folder is a way to get the correct VCS invoked, even if there are nested repositories in the tree.

Refactor to create GenerativeTestCase, which should let us write these VCS test cases without tarring up an .hg or .git dir, which is hard to modify or examine and tempts us to couple too many tests together.",erikrose,295816,2017-01-04T14:36:17Z,MEMBER,False,157,60,4,Powerful search for large codebases,Python,afdf6d291f488c23610b396cdaec6e4770465a5e,"When pulling a file out of a VCS revision, don't assume its containing folder still exists. Fixes bug 1324026.

It may well have moved in the checkout's revision. So stop cd-ing to its containing folder. Instead, go into the deepest existing folder on its containing path, and run the VCS commands against the remainder of the relative path from there. Going into the deepest existing folder is a way to get the correct VCS invoked, even if there are nested repositories in the tree.

Refactor to create GenerativeTestCase, which should let us write these VCS test cases without tarring up an .hg or .git dir, which is hard to modify or examine and tempts us to couple too many tests together."
88,https://api.github.com/repos/mozilla/dxr/pulls/626,626,Factor up some repetition in the test harness.,"* Factor up all the `sys.modules[cls.__module__].__file__` stuff to make `test_case_dir()`.
* In SingleFileTestCase, make use of the temp dir creation in the superclass.
* Correct some ReST formatting.",erikrose,295816,2016-12-21T02:52:27Z,MEMBER,True,14,8,1,Powerful search for large codebases,Python,a664b623149203f474abe5499d09c6a94800a4ee,"Factor up some repetition in the test harness.

* Factor up all the `sys.modules[cls.__module__].__file__` stuff to make `test_case_dir()`.
* In SingleFileTestCase, make use of the temp dir creation in the superclass.
* Correct some ReST formatting."
89,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,363a94d1c65501ff5467235054727b0f707ad02a,"Fit switch tree menu

The expanded switch tree menu wasn’t fitting inside viewport. Gave it
max-height limits (70% of viewport for browsers supporting ‘vh’, and
250px for those that don’t), and made it scrollable (if it exceeds
max-height).

Another reason I had to make this change was due to putting the tree in
a fixed nav bar. Setting position to ‘fixed’ was causing the expanded
menu to be clipped, regardless of overflow setting."
90,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,83cd857e211711333046c80cb7cb6b157f3515dd,"Pinned switch tree menu

Moved the switch tree menu and breadcrumbs into their own fixed
position nav bar below the search bar.

Also, in search result pages, the results heading (# of results, and
link to root of the tree), have been moved to the nav bar since it was
located at the same position as the breadcrumb (discussion in bugzilla
1288487 comments)."
91,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,7d6565bca81683a85f47db6e49e744f8ba937f44,Added nav_bar and switch tree to search.html
92,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,83727b8e0fde6d1d73c940f73a6af1d68d4304bd,Merge branch 'mozilla/master' into bug/1288487
93,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,eab43428c064b90efa141a148eaaa70afcd1a02f,"Refactored templates

Moved all of the nav_bar block to layout.html and removed it from both
file.html and folder.html.

Note: In the previous blocks the if-condition inside the loop was a
little different for files and folders (folders had an extra “and
loop.length != 1”, but it seemed safe enough to include the extra
condition in files too (I don't think the loop.length will ever be 1)."
94,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,eb885cdefaf0520d6efe24e00f152f69a0bc9ae1,"Added empty nav_bar block

Added an empty nav_bar block to overwrite the nav_bar inherited from
layout.html"
95,https://api.github.com/repos/mozilla/dxr/pulls/621,621,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.

Attached is a screenshot of the change.

![nav_bar_diff](https://cloud.githubusercontent.com/assets/2381807/18771047/abe35558-8109-11e6-8891-726270300fda.jpg)
",NimaK,2381807,2016-09-23T01:16:26Z,CONTRIBUTOR,True,63,32,12,Powerful search for large codebases,Python,f082aa8692ccaad4bc90f147185a2730610eefb3,"Refactored nav rendering

Moved nav bar rendering to its own renderResultsNav function"
96,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,43ee276a1f09be9e984cfae5c4bb1b7749e752c7,Merge remote-tracking branch 'mozilla/master' into bug/1289597
97,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,ceae47be7e09a2554054a7d8edbfc093c12b94c8,Merge remote-tracking branch 'mozilla/master'
98,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,f37c959f5001a66ca928213d248fca2d143733e8,"Fix Bug 1289597

Fixed errors/behaviour when shift-clicking a line.  Changes made:

- Added a case for no previously selected line.
- Updated case shift-click on single previous selected line.
- Moved current clicked line actions into each case (it was causing the
toggle off case to be re-highlighted)."
99,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,75842046a666fcc660fd85ecc9aa4f0c76e9f559,Merge branch 'bug/1289597'
100,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,8c9adc37699366239a97b4a0fe4e1cbcf45cb912,Merge remote-tracking branch 'mozilla/master' into bug/1288487
101,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,f38c1c8d768b99827b3f62ff96343a9a42096902,"Fit switch tree menu

The expanded switch tree menu wasn’t fitting inside viewport. Gave it
max-height limits (70% of viewport for browsers supporting ‘vh’, and
250px for those that don’t), and made it scrollable (if it exceeds
max-height)."
102,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,cf494f316ad67391263e4bd11dfa83e5f7f2e77c,"Pinned switch tree menu

Moved the switch tree menu and breadcrumbs into their own fixed
position nav bar below the search bar.

Also, in search result pages, the results heading (# of results, and
link to root of the tree), have been moved to the nav bar since it was
located at the same position as the breadcrumb (discussion in bugzilla
1288487 comments)."
103,https://api.github.com/repos/mozilla/dxr/pulls/620,620,Bug 1288487 - Pin Switch Tree menu,"Added a fixed position nav bar below the Search bar containing the Switch Tree menu and breadcrumb.

Also, made the expanded Switch Tree menu scrollable.
",NimaK,2381807,2016-09-22T02:22:25Z,CONTRIBUTOR,False,96,40,11,Powerful search for large codebases,Python,e9f8005e762e881ef249ff276382bbf03d875225,"Reduced height of nav bar

nav bar line height was overlapping the top of the black Navigation
bar/panel a little bit."
104,https://api.github.com/repos/mozilla/dxr/pulls/619,619,Unicode direct search rebased,"Polish-up of #612
",erikrose,295816,2016-09-16T22:34:05Z,MEMBER,True,31,11,11,Powerful search for large codebases,Python,6d89984e55661a2a7e3cdb02d0a809f7ae76804e,Fix direct-search crashes given a unicode search string. Fixes bug 1289576.
105,https://api.github.com/repos/mozilla/dxr/pulls/619,619,Unicode direct search rebased,"Polish-up of #612
",erikrose,295816,2016-09-16T22:34:05Z,MEMBER,True,31,11,11,Powerful search for large codebases,Python,07fc57edd4e16ed319c097f5d160e0a5b3fc4c8d,Fix direct-search crashes on unicode input. Close #612.
106,https://api.github.com/repos/mozilla/dxr/pulls/617,617,Bug/1289597,"Fixed errors/behavior when shift-clicking a line.  Changes made:
- Added a case for no previously selected line.
- Updated case shift-click on single previous selected line.
- Moved current clicked line actions into each case (it was causing the
  toggle off case to be re-highlighted).
",NimaK,2381807,2016-09-08T16:16:59Z,CONTRIBUTOR,True,27,12,1,Powerful search for large codebases,Python,43ee276a1f09be9e984cfae5c4bb1b7749e752c7,Merge remote-tracking branch 'mozilla/master' into bug/1289597
107,https://api.github.com/repos/mozilla/dxr/pulls/617,617,Bug/1289597,"Fixed errors/behavior when shift-clicking a line.  Changes made:
- Added a case for no previously selected line.
- Updated case shift-click on single previous selected line.
- Moved current clicked line actions into each case (it was causing the
  toggle off case to be re-highlighted).
",NimaK,2381807,2016-09-08T16:16:59Z,CONTRIBUTOR,True,27,12,1,Powerful search for large codebases,Python,f37c959f5001a66ca928213d248fca2d143733e8,"Fix Bug 1289597

Fixed errors/behaviour when shift-clicking a line.  Changes made:

- Added a case for no previously selected line.
- Updated case shift-click on single previous selected line.
- Moved current clicked line actions into each case (it was causing the
toggle off case to be re-highlighted)."
108,https://api.github.com/repos/mozilla/dxr/pulls/616,616,Don't crash when encountering an empty git repo. Refs bug 1280948.,,erikrose,295816,2016-09-06T14:55:14Z,MEMBER,True,26,8,6,Powerful search for large codebases,Python,220fd2564683bda434930d4079a0b169f3d3ad53,Don't crash when encountering an empty git repo. Refs bug 1280948.
109,https://api.github.com/repos/mozilla/dxr/pulls/615,615,Upgrade to clang/llvm 3.8 to match prod.,,erikrose,295816,2016-08-30T19:45:18Z,MEMBER,True,4,4,1,Powerful search for large codebases,Python,191c7f33353fc4df6d4e20f228f95e65c3e88ec5,Upgrade to clang/llvm 3.8 to match prod.
110,https://api.github.com/repos/mozilla/dxr/pulls/613,613,Run apt with DEBIAN_FRONTEND=noninteractive,"Sets the debconf frontend to noninteractive, silencing ""debconf: unable to initialize frontend: FOO"" errors emitted during dev container build.
",na-g,2036397,2016-08-05T00:22:00Z,CONTRIBUTOR,True,3,3,1,Powerful search for large codebases,Python,3d517f4bbd92aad3e6f2fbffaaccbc3c36f63f5f,"Run apt with DEBIAN_FRONTEND=noninteractive

Silences readline errors."
111,https://api.github.com/repos/mozilla/dxr/pulls/612,612,Fixes #1289576 - Direct-search crashes given a unicode search string,"This PR is relevant to #610 .

In addition:
- Test files are reduced to minimum required to test.
",ertgl,14248743,2016-08-02T02:01:52Z,CONTRIBUTOR,False,31,11,12,Powerful search for large codebases,Python,1cc40d030e17ae0cda6f5ab380130b21312b944b,Fixes #1289576 - Direct-search crashes given a unicode search string
112,https://api.github.com/repos/mozilla/dxr/pulls/612,612,Fixes #1289576 - Direct-search crashes given a unicode search string,"This PR is relevant to #610 .

In addition:
- Test files are reduced to minimum required to test.
",ertgl,14248743,2016-08-02T02:01:52Z,CONTRIBUTOR,False,31,11,12,Powerful search for large codebases,Python,3ce06e529e965c7080dd5161dde4465694f2600f,Refs 1289576 - Add test file
113,https://api.github.com/repos/mozilla/dxr/pulls/612,612,Fixes #1289576 - Direct-search crashes given a unicode search string,"This PR is relevant to #610 .

In addition:
- Test files are reduced to minimum required to test.
",ertgl,14248743,2016-08-02T02:01:52Z,CONTRIBUTOR,False,31,11,12,Powerful search for large codebases,Python,24c1aff4a9900f075219a451a34437f92a85d67f,Merge test_non_ascii_paths and test_non_ascii_search_string test cases and rename it as test_unicode.
114,https://api.github.com/repos/mozilla/dxr/pulls/611,611,Unicode folders,"Opening this just for CI tests, for the moment. More to come.
",erikrose,295816,2016-08-01T21:24:51Z,MEMBER,True,93,49,10,Powerful search for large codebases,Python,c8924053c7ced8118a2f29c3dcd970f69a9a5f9e,"Change directions. Embrace paths as bags of bytes. Fixes bug 1290945.

This is how Linux handles them, so we may encounted undecodeable names as we traverse the FS. Convert to unicode only at the last minute, for ES and for display on the web. This may cause dirs and files that are named the same except for undecodeable bytes to collide: dirs may merge, or files may be shadowed. This is still an improvement over indexing crashing.

Add an undecodeable folder name and file name to the non-ASCII test.

Clarify that plugins should expect incoming paths to be bytestrings."
115,https://api.github.com/repos/mozilla/dxr/pulls/611,611,Unicode folders,"Opening this just for CI tests, for the moment. More to come.
",erikrose,295816,2016-08-01T21:24:51Z,MEMBER,True,93,49,10,Powerful search for large codebases,Python,f53e7452676e6ee903a4d8c350fa356a718a5fcc,Add a test for file: and path: searches for non-ASCII things.
116,https://api.github.com/repos/mozilla/dxr/pulls/611,611,Unicode folders,"Opening this just for CI tests, for the moment. More to come.
",erikrose,295816,2016-08-01T21:24:51Z,MEMBER,True,93,49,10,Powerful search for large codebases,Python,dab7195b09938671323cd08a9b8c7e7352b485c9,"Skip the test, since it fails on Travis."
117,https://api.github.com/repos/mozilla/dxr/pulls/610,610,"Fix bug 1289576, prevent direct-search crashes given a unicode search string","`test_non_ascii_search_string` test files are copied from `test_basic`.

And the ""hello world"" example over in `code/main.c` is translated to Chinese for testing search giving unicode string.

Index the sample code and run `dxr` typing following commands:

```
cd tests/test_non_ascii_search_string
dxr index
dxr serve -a
```

And search the `世界!`

I hope that this is a welcome contribution. : )
",ertgl,14248743,2016-07-31T02:10:15Z,CONTRIBUTOR,False,162,3,8,Powerful search for large codebases,Python,e9ef94b5d9185456f63ae2b507c186c9697e25cf,fixes #1289576 - Direct-search crashes given a unicode search string
118,https://api.github.com/repos/mozilla/dxr/pulls/610,610,"Fix bug 1289576, prevent direct-search crashes given a unicode search string","`test_non_ascii_search_string` test files are copied from `test_basic`.

And the ""hello world"" example over in `code/main.c` is translated to Chinese for testing search giving unicode string.

Index the sample code and run `dxr` typing following commands:

```
cd tests/test_non_ascii_search_string
dxr index
dxr serve -a
```

And search the `世界!`

I hope that this is a welcome contribution. : )
",ertgl,14248743,2016-07-31T02:10:15Z,CONTRIBUTOR,False,162,3,8,Powerful search for large codebases,Python,97dada10dc4d72490da3519297344ea5fd5973a7,fixes #1289576 - Edit test file name
119,https://api.github.com/repos/mozilla/dxr/pulls/610,610,"Fix bug 1289576, prevent direct-search crashes given a unicode search string","`test_non_ascii_search_string` test files are copied from `test_basic`.

And the ""hello world"" example over in `code/main.c` is translated to Chinese for testing search giving unicode string.

Index the sample code and run `dxr` typing following commands:

```
cd tests/test_non_ascii_search_string
dxr index
dxr serve -a
```

And search the `世界!`

I hope that this is a welcome contribution. : )
",ertgl,14248743,2016-07-31T02:10:15Z,CONTRIBUTOR,False,162,3,8,Powerful search for large codebases,Python,931f36d2cd69034a786257b0df50627cbf33ae03,Fix Travis-CI lint error
120,https://api.github.com/repos/mozilla/dxr/pulls/609,609,"Use var instead of const, fixes bug 1283645.",,pelmers,2406051,2016-07-29T16:41:19Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,6c002ee7d7542da437500d4e09f4bb14025df806,"Use var instead of const, fixes bug 1283645."
121,https://api.github.com/repos/mozilla/dxr/pulls/608,608,Repair broken click on table row.,"Fixes bug 1290286.

It would be cleaner to move to a nicer markup that lets us just use <a> directly, but it looks like this fixes the bug by attaching the click listener to the container of the tree switch menu, which re-renders by nunjucks when a search occurs.
",pelmers,2406051,2016-07-28T22:39:51Z,CONTRIBUTOR,True,1,18,1,Powerful search for large codebases,Python,3d9684171961ed8c411f6367c852b62fd051dbb2,"Repair broken click on table row.

Fixes bug 1290286."
122,https://api.github.com/repos/mozilla/dxr/pulls/607,607,Skip -Zsave-analysis when compiling lib.rs,"/cc @nrc 

The -Z flag is unstable is has been causing rustfmt builds to bomb on an
internal compiler error while building libc: expected expr, found unknown node (id=XXXXXX)

   Compiling libc v0.2.13
     Running `/home/jenkins/dxr/dxr/plugins/rust/dxr-rustc.sh /home/jenkins/src/rustfmt/.cargo/registry/src/github.com-1ecc6299db9ec823/libc-0.2.13/src/lib.rs --crate-name libc --crate-type lib -g --cfg feature=\""default\"" --cfg feature=\""use_std\"" -C metadata=30d46fdd62f8c2eb -C extra-filename=-30d46fdd62f8c2eb --out-dir /home/jenkins/src/rustfmt/target/debug/deps --emit=dep-info,link -L dependency=/home/jenkins/src/rustfmt/target/debug/deps -L dependency=/home/jenkins/src/rustfmt/target/debug/deps --cap-lints allow`
warning: the option `Z` is unstable and should only be used on the nightly compiler, but it is currently accepted for backwards compatibility; this will soon change, see issue #31847 for more details
error: internal compiler error: ../src/librustc/hir/map/mod.rs:550: expected expr, found unknown node (id=12742)

There's already an exception in dxr/plugins/rust/dxr-rustc.sh to not use -Zsave-analysis on build.rs, so this just adds lib.rs. Tested manually and rustfmt builds and indexes correctly.
",klibby,6545859,2016-07-28T14:27:01Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,df0fde2a95fbeb8aa759cf6989ad5294db92b21e,"Skip -Zsave-analysis when compiling lib.rs

The -Z flag is unstable is has been causing rustfmt builds to bomb on an
internal compiler error while building libc: expected expr, found unknown node (id=XXXXXX)"
123,https://api.github.com/repos/mozilla/dxr/pulls/606,606,"Don't ignore failures when running ""node"".","The return value of post_build is ignored so the current code throws
away the exit code of the process.  Any failure is just ignored.
Using subprocess.check_call instead will throw an exception if
node exits with a non-zero status so we'll be sure to notice.
",abbeyj,99402,2016-07-28T05:44:57Z,CONTRIBUTOR,False,5,6,1,Powerful search for large codebases,Python,c8b5f37cb45df2d7ed1c883021d94f4b1db7b89f,"Don't ignore failures when running ""node"".
The return value of post_build is ignored so the current code throws
away the exit code of the process.  Any failure is just ignored.
Using subprocess.check_call instead will throw an exception if
node exits with a non-zero status so we'll be sure to notice."
124,https://api.github.com/repos/mozilla/dxr/pulls/605,605,Use strict mode for JavaScript.,"As an added bonus, this seems to make things work with Node v4.x
for people who may not have v6.x yet.
",abbeyj,99402,2016-07-28T05:44:21Z,CONTRIBUTOR,True,2,0,2,Powerful search for large codebases,Python,5092873c88ed5f5a7e733a478119d5f44fad7013,"Use strict mode for JavaScript.
As an added bonus, this seems to make things work with Node v4.x
for people who may not have v6.x yet."
125,https://api.github.com/repos/mozilla/dxr/pulls/604,604,Allow per-tree specification of worker count. Fixes bug 1288242.,"This way, we can keep RAM use low for hungry plugins but still aggressively parallelize other trees.
",erikrose,295816,2016-07-26T22:12:11Z,MEMBER,True,39,9,4,Powerful search for large codebases,Python,e51c6d798487ea64ba47017c1f593443f5fbdcec,"Allow per-tree specification of worker count. Fixes bug 1288242.

This way, we can keep RAM use low for hungry plugins but still aggressively parallelize other trees."
126,https://api.github.com/repos/mozilla/dxr/pulls/603,603,Fix slow descriptor regex some more,"Replaces #601
",erikrose,295816,2016-07-26T20:26:02Z,MEMBER,False,16,7,5,Powerful search for large codebases,Python,dc8fbac731bb0ed40fe166aef22759d4259b2483,"Stop using lazy regex in description plugin, add test.

Also anchor the comment at start of line."
127,https://api.github.com/repos/mozilla/dxr/pulls/603,603,Fix slow descriptor regex some more,"Replaces #601
",erikrose,295816,2016-07-26T20:26:02Z,MEMBER,False,16,7,5,Powerful search for large codebases,Python,1aed9a7b460ba14170dcef9f88361a0fec4b3d59,"Teach comment_re how to tolerate slashes that don't end the comment.

* No backslash is needed before the * in the characters class because it's in a character class.
* Use a lookahead to include slashes that don't end the comment.
* Remove some logic that's no longer necessary."
128,https://api.github.com/repos/mozilla/dxr/pulls/602,602,Ignore some_bytes.py in linter.,"The line that used to read #noqa now reads # flake8: noqa because of a change in the recently released version 3 of flake8.
",pelmers,2406051,2016-07-25T23:15:03Z,CONTRIBUTOR,True,0,0,1,Powerful search for large codebases,Python,aa498e991dad029cca813244a0417c48aaf66055,Ignore some_bytes.py in linter.
129,https://api.github.com/repos/mozilla/dxr/pulls/601,601,"Stop using lazy regex in description plugin, add test.","Also anchor the comment at start of line.
",pelmers,2406051,2016-07-25T22:13:10Z,CONTRIBUTOR,False,14,3,4,Powerful search for large codebases,Python,dc8fbac731bb0ed40fe166aef22759d4259b2483,"Stop using lazy regex in description plugin, add test.

Also anchor the comment at start of line."
130,https://api.github.com/repos/mozilla/dxr/pulls/600,600,Strip whitespace on path segment renders.,"Removes spaces in copies of paths in results pages.
Fixes bug 1288853.
",pelmers,2406051,2016-07-22T22:18:39Z,CONTRIBUTOR,True,5,7,3,Powerful search for large codebases,Python,d80815462d0fd0b701b74cee669cee223480537a,"Strip whitespace on path segment renders.

Removes spaces in copies of paths in results pages.
Fixes bug 1288853."
131,https://api.github.com/repos/mozilla/dxr/pulls/599,599,Upgrade clang to 3.6 to match production.,,erikrose,295816,2016-07-22T19:36:22Z,MEMBER,True,4,4,1,Powerful search for large codebases,Python,fa629fec374c7cdf4ed82f0ae9bb841d8a6d56d6,Upgrade clang to 3.6 to match production.
132,https://api.github.com/repos/mozilla/dxr/pulls/598,598,Fix for failures in test_vcs_hg/test_vcs_hg.py,"Tests that check for links in tests/test_vcs_hg/test_vcs_hg.py fail when
run as any user other than dxr, with uid=502.

List of failing tests:
- test_blame
- test_diff_file{1,2,3}
- test_log
- test_raw

The tests fail because when tar extracts the test hg archive, it preserves
ownership permissions by default.

This causes hg to complain like so:

```
[root@hostname ~/dxr/dxr/tests/test_vcs_hg/code/.hg]# hg status
not trusting file /home/dxr/dxr/tests/test_vcs_hg/code/.hg/hgrc from untrusted user 502, group staff
not trusting file /home/dxr/dxr/tests/test_vcs_hg/code/.hg/hgrc from untrusted user 502, group staff
? Makefile
? hg.tar
```

The fix is to /not/ preserve ownership permissions while extracting the
test archives.

While this bug affects only Mercurial tests, the fix is applied to all
tests uniformly for consistency and to prevent future failures/bugs
arising out of the same underlying cause.
",ffledgling,1568867,2016-07-20T20:36:44Z,MEMBER,True,3,3,3,Powerful search for large codebases,Python,0b46e861e4bd0f6d81d8a93c51adad5837cdab8a,"Fix for failures in test_vcs_hg/test_vcs_hg.py

Tests that check for links in tests/test_vcs_hg/test_vcs_hg.py fail when
run as any user other than dxr, with uid=502.

List of failing tests:

- test_blame
- test_diff_file{1,2,3}
- test_log
- test_raw

The tests fail because when tar extracts the test hg archive, it preserves
ownership permissions by default.

This causes hg to complain like so:
```
[root@hostname ~/dxr/dxr/tests/test_vcs_hg/code/.hg]# hg status
not trusting file /home/dxr/dxr/tests/test_vcs_hg/code/.hg/hgrc from untrusted user 502, group staff
not trusting file /home/dxr/dxr/tests/test_vcs_hg/code/.hg/hgrc from untrusted user 502, group staff
? Makefile
? hg.tar
```

The fix is to /not/ preserve ownership permissions while extracting the
test archives.

While this bug affects only Mercurial tests, the fix is applied to all
tests uniformly for consistency and to prevent future failures/bugs
arising out of the same underlying cause."
133,https://api.github.com/repos/mozilla/dxr/pulls/595,595,Badge filter and tree menus with supported languages.,"This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969.
",pelmers,2406051,2016-07-15T17:56:06Z,CONTRIBUTOR,True,100,58,15,Powerful search for large codebases,Python,428b3a3a6e8a68e35ffcaedc7f42a492fde756f2,"Badge filter and tree menus with supported languages.

This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969."
134,https://api.github.com/repos/mozilla/dxr/pulls/595,595,Badge filter and tree menus with supported languages.,"This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969.
",pelmers,2406051,2016-07-15T17:56:06Z,CONTRIBUTOR,True,100,58,15,Powerful search for large codebases,Python,4917af475c1303e7e7c19a59bd687a48d8fde31b,Tables all the way down.
135,https://api.github.com/repos/mozilla/dxr/pulls/595,595,Badge filter and tree menus with supported languages.,"This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969.
",pelmers,2406051,2016-07-15T17:56:06Z,CONTRIBUTOR,True,100,58,15,Powerful search for large codebases,Python,ededf06503b606e8dc2e04c464e2d3098c28339e,Fix a couple of other nits.
136,https://api.github.com/repos/mozilla/dxr/pulls/595,595,Badge filter and tree menus with supported languages.,"This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969.
",pelmers,2406051,2016-07-15T17:56:06Z,CONTRIBUTOR,True,100,58,15,Powerful search for large codebases,Python,1c9537b10e2bdc02586b901ddeb79b828e2b9272,"Respond to comments, adjuct spacing and colors."
137,https://api.github.com/repos/mozilla/dxr/pulls/595,595,Badge filter and tree menus with supported languages.,"This patch also columnizes the switch tree menu, like the operator menu.
Fixes bug 1282969.
",pelmers,2406051,2016-07-15T17:56:06Z,CONTRIBUTOR,True,100,58,15,Powerful search for large codebases,Python,de75da36bdc5455b27b4b0207430aed1b473ae08,Align badge column to top.
138,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,ee46369faf5e21770232834d661314a7bed233bc,"Properly index Python method calls, chained calls, and nested calls.

Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490"
139,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,519a42d9206de99ed6047730a1e1aac4015229ae,Added a test for the nested function call case.
140,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,db740233e641648215d4631f61d316762b6cd5b7,Tightened up the exception catching in FileToIndex.advance_node.
141,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,91165519f17faf3edcab9ead04ef41814614e978,Tightened up the paren stack manipulation in analyze_tokens.
142,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,79368c1122710d04a8ab5f8341315b8d55067fac,"Updated the comments and docstring for analyze_tokens.

Hopefully clarifying how all of this works."
143,https://api.github.com/repos/mozilla/dxr/pulls/594,594,"Properly index Python method calls, chained calls, and nested calls","Previous work (#487) broke the behavior of indexing calls that are
anything other than a plain function call.

fixes #490
",jbradberry,685957,2016-07-14T21:11:34Z,CONTRIBUTOR,True,143,63,5,Powerful search for large codebases,Python,c6722188386a7da38a437a7bb8104a5aa2296c00,Add clarifying comments concerning the semantics and use of paren_stack.
144,https://api.github.com/repos/mozilla/dxr/pulls/593,593,Raise max number of entries DXR will show when browsing a folder.,"This fixes a problem when viewing the ridiculously large addons tree. ES makes us specify a ceiling, so we just raise it.
",erikrose,295816,2016-07-11T16:37:40Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,3a44d26b3360cc4125df8239d4f95717a99d848d,"Raise max number of entries DXR will show when browsing a folder.

This fixes a problem when viewing the ridiculously large addons tree. ES makes us specify a ceiling, so we just raise it."
145,https://api.github.com/repos/mozilla/dxr/pulls/592,592,Update docker build trigger to point to new mozilla-org repo.,"I can't tell which of the old encrypted values was the QUAY_AUTH_TOKEN, nor can I think of a way to test them without breaking master (I've lost track of the original GH_TOKEN, and encrypting the original QUAY_AUTH_TOKEN doesn't result in a matching string), so let's just append this new one and hope the last one wins.
",erikrose,295816,2016-07-08T22:01:27Z,MEMBER,True,2,1,2,Powerful search for large codebases,Python,10da58ebf2c596e39f120170412ea12e0079fdc9,"Update docker build trigger to point to new mozilla-org repo.

I can't tell which of the old encrypted values was the QUAY_AUTH_TOKEN, nor can I think of a way to test them without breaking master, so let's just append this new one and hope the last one wins."
146,https://api.github.com/repos/mozilla/dxr/pulls/590,590,Fix jshint errors. Fixes bug 1284767.,,erikrose,295816,2016-07-06T15:27:26Z,MEMBER,True,10,7,1,Powerful search for large codebases,Python,714b26ca585b232f45ea5cf2006cc0693d88b7da,Fix jshint errors. Fixes bug 1284767.
147,https://api.github.com/repos/mozilla/dxr/pulls/589,589,Remove ES6-isms. Fixes bug 1283645.,"The latest Safari (9.1.1) and pre-44 versions of FF can't handle them, so search was broken.
",erikrose,295816,2016-07-05T16:35:22Z,MEMBER,True,25,23,3,Powerful search for large codebases,Python,4f83ae7427a70bb80ffe001c5b8d81573e7ac899,"Remove ES6-isms. Fixes bug 1283645.

The latest Safari (9.1.1) and pre-44 versions of FF can't handle them, so search was broken."
148,https://api.github.com/repos/mozilla/dxr/pulls/585,585,Add /dxr/build to .gitignore.,"When running `make test` after `make shell`, the directory _/dxr/build/_ is created which is not currently covered by _.gitignore_ and therefore shows up as an untracked file on `git status`.
",caugner,495429,2016-07-04T18:19:40Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,077356dd4ef08cc2e26281a69be3c69ce70311d5,Add /dxr/build to .gitignore.
149,https://api.github.com/repos/mozilla/dxr/pulls/584,584,Add context-menu cursor over folder links,"Hi, this should fix [Bug 1282535](https://bugzilla.mozilla.org/show_bug.cgi?id=1282535) 
",dbacarel,1643595,2016-07-03T01:15:31Z,CONTRIBUTOR,True,3,0,1,Powerful search for large codebases,Python,b3af88ea0e40af008ec6b89b798c431a1c2b04ce,Context-menu cursor over folder links
150,https://api.github.com/repos/mozilla/dxr/pulls/584,584,Add context-menu cursor over folder links,"Hi, this should fix [Bug 1282535](https://bugzilla.mozilla.org/show_bug.cgi?id=1282535) 
",dbacarel,1643595,2016-07-03T01:15:31Z,CONTRIBUTOR,True,3,0,1,Powerful search for large codebases,Python,f26a136891707d19dbaaacce615b15e5075d3703,removing additional spaces in css
151,https://api.github.com/repos/mozilla/dxr/pulls/584,584,Add context-menu cursor over folder links,"Hi, this should fix [Bug 1282535](https://bugzilla.mozilla.org/show_bug.cgi?id=1282535) 
",dbacarel,1643595,2016-07-03T01:15:31Z,CONTRIBUTOR,True,3,0,1,Powerful search for large codebases,Python,5db3dcd3eb4c29364470ff9ed92c9f177c862783,Update with upstream
152,https://api.github.com/repos/mozilla/dxr/pulls/583,583,Use ch as unit of width in search results.,"Attempt to avoid columns writing over each other.
",pelmers,2406051,2016-06-30T22:51:43Z,CONTRIBUTOR,True,3,3,1,Powerful search for large codebases,Python,cd38479cff88732a53a4ed897ffad84527c2fd3d,Use ch as unit of width in search results.
153,https://api.github.com/repos/mozilla/dxr/pulls/582,582,Test that plugins can handle non-ascii characters in paths.,"Add a test with all plugins enabled that contains CJK non-ascii (but still unicode) characters in paths, to extend the previous non-utf8 path handling test.
",pelmers,2406051,2016-06-29T21:25:47Z,CONTRIBUTOR,True,56,12,14,Powerful search for large codebases,Python,ed9cbbea85b86eafe48d90fbc52c86c8b533366a,Test that plugins can handle non-ascii characters in paths.
154,https://api.github.com/repos/mozilla/dxr/pulls/582,582,Test that plugins can handle non-ascii characters in paths.,"Add a test with all plugins enabled that contains CJK non-ascii (but still unicode) characters in paths, to extend the previous non-utf8 path handling test.
",pelmers,2406051,2016-06-29T21:25:47Z,CONTRIBUTOR,True,56,12,14,Powerful search for large codebases,Python,cb50cf9951779fe1048741ee74eb6f6a86524c14,Remove 'c' binary file.
155,https://api.github.com/repos/mozilla/dxr/pulls/581,581,Splitlines,"Opening just to run tests on Travis
",erikrose,295816,2016-06-29T14:04:22Z,MEMBER,True,34,19,8,Powerful search for large codebases,Python,ca85cabcc95e7530c988b1fc752fca24bcc9b7dc,Bug 1192290 - Factor up splitlines
156,https://api.github.com/repos/mozilla/dxr/pulls/581,581,Splitlines,"Opening just to run tests on Travis
",erikrose,295816,2016-06-29T14:04:22Z,MEMBER,True,34,19,8,Powerful search for large codebases,Python,f8197ccb73e35fda09c7ccf4b9bb37d66b6e775c,Describe the intent and meaning of split_content_lines().
157,https://api.github.com/repos/mozilla/dxr/pulls/581,581,Splitlines,"Opening just to run tests on Travis
",erikrose,295816,2016-06-29T14:04:22Z,MEMBER,True,34,19,8,Powerful search for large codebases,Python,f44752b1b68763fbbfff3b33d688a01f6fd5dda8,Catch a few more uses of split_content_lines in a test case.
158,https://api.github.com/repos/mozilla/dxr/pulls/581,581,Splitlines,"Opening just to run tests on Travis
",erikrose,295816,2016-06-29T14:04:22Z,MEMBER,True,34,19,8,Powerful search for large codebases,Python,a7e61654a85463a233611a3e8380ab4be1f9d177,Merge factor-up of content-splitting. Fixes bug 1192290. Close #578.
159,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,45696fce4ece86320bd9bc5a8ead6476b5dbb5c3,Add SVN support (#571).
160,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,3873d0dd8dfceb93c84e767577f4dbc37f160236,SVN support (#571): Fix lint errors.
161,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,0c3ab4430cd2286cb92246864088fda0e4f77d0b,SVN support (#571): Add missing self.
162,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,d3c8d0dd95754a3ef030406853408f285bce9010,SVN support (#571): Add tests. Fix unused parameters. Remove unnecessary prints.
163,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,af04b6067f5a57d180afb2b8f45191aea07f7604,omniglot.py: Use single quotes.
164,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,3fae6d148445320b592f45cdddc4785199b3892f,Fix Subversion#has_upstream.
165,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,22150fe578a36f8bfa6e832d7516326df4163b51,vcs.py: Fix lint.
166,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,8281188fed57c6680230eba094bce2eb80ec78f4,Merge branch 'master' of git://github.com/mozilla/dxr
167,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,185b0f647811e2675e09e44bebfe8343ae295b79,Merge branch 'master' into master
168,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,a34f03c0fd98d5a61fe77193d4783a8463bf44d2,Merge remote-tracking branch 'upstream/master'
169,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,69c070d6ed86ca52b58389713711870f11b2a71a,vcs: restore datetime import
170,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,0892d2987598861601deb6e2d1b904411f4d4167,vcs: re.escape prop
171,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,25fde0b3a857d8ef2b263aba0bd55f6cade38f7f,svn-test: split permalink_works test
172,https://api.github.com/repos/mozilla/dxr/pulls/580,580,Add SVN support (#571).,"SVN support: Provide permalink and raw VCS link for subversion repositories.
",caugner,495429,2016-06-28T17:33:23Z,CONTRIBUTOR,False,230,8,7,Powerful search for large codebases,Python,0387e7f30b39cf96027b59bc8ac28424167c6917,svn-test: add es_* to dxr.config
173,https://api.github.com/repos/mozilla/dxr/pulls/579,579,Rust: update the command line flags and env vars,,nrc,762626,2016-06-28T01:54:12Z,CONTRIBUTOR,False,6,4,3,Powerful search for large codebases,Python,49a5d6d89636277be0c3420b919a5420d6dbe369,Rust: update the command line flags and env vars
174,https://api.github.com/repos/mozilla/dxr/pulls/578,578,Bug 1192290 - Factor up splitlines,"refactored the method 
`string.splitlines(True)` with `splitlines_keepends(string)`

the method `splitlines_keepends(string)` is defined in the file **dxr/utils.py**

Appropriate changes were made to 6 files : 
1.  dxr/plugins/python/utils.py
2.  dxr/plugins/xpidl/indexers.py
3.  dxr/plugins/core.py
4.  dxr/indexers.py
5.  dxr/app.py
6.  dxr/build.py
",jay-z007,11008387,2016-06-27T21:05:27Z,NONE,False,16,11,7,Powerful search for large codebases,Python,e25b187360230abf27600419600b41e1fe3fce16,Bug 1192290 - Factor up splitlines
175,https://api.github.com/repos/mozilla/dxr/pulls/578,578,Bug 1192290 - Factor up splitlines,"refactored the method 
`string.splitlines(True)` with `splitlines_keepends(string)`

the method `splitlines_keepends(string)` is defined in the file **dxr/utils.py**

Appropriate changes were made to 6 files : 
1.  dxr/plugins/python/utils.py
2.  dxr/plugins/xpidl/indexers.py
3.  dxr/plugins/core.py
4.  dxr/indexers.py
5.  dxr/app.py
6.  dxr/build.py
",jay-z007,11008387,2016-06-27T21:05:27Z,NONE,False,16,11,7,Powerful search for large codebases,Python,c3109eff439e4e3a3da973c5947b5b33ae4c164f,Bug 1192290 - Factor up splitlines
176,https://api.github.com/repos/mozilla/dxr/pulls/578,578,Bug 1192290 - Factor up splitlines,"refactored the method 
`string.splitlines(True)` with `splitlines_keepends(string)`

the method `splitlines_keepends(string)` is defined in the file **dxr/utils.py**

Appropriate changes were made to 6 files : 
1.  dxr/plugins/python/utils.py
2.  dxr/plugins/xpidl/indexers.py
3.  dxr/plugins/core.py
4.  dxr/indexers.py
5.  dxr/app.py
6.  dxr/build.py
",jay-z007,11008387,2016-06-27T21:05:27Z,NONE,False,16,11,7,Powerful search for large codebases,Python,e5653c3ddec1b8d3a3a07aed6e74cba6eed426fd,Bug 1192290 - Factor up splitlines
177,https://api.github.com/repos/mozilla/dxr/pulls/577,577,"Increase contrast of text in source code, directory listings, and menus.","Philip Chee was having some trouble seeing on his monitor, and there's no reason for the main content not to have the highest possible contrast.
",erikrose,295816,2016-06-27T17:26:19Z,MEMBER,True,1,6,2,Powerful search for large codebases,Python,a0b7afeb82bc9903d8c80494fb487b93ef280b70,"Increase contrast of text in source code, directory listings, and menus.

Philip Chee was having some trouble seeing on his monitor, and there's no reason for the main content not to have the highest possible contrast."
178,https://api.github.com/repos/mozilla/dxr/pulls/576,576,instruct docker to label the mount with the correct selinux label,"because otherwise it won't work on on hosts that use selinux
",db48x,228849,2016-06-25T01:50:16Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,42adde53b611df6c6a590533b700e3598f97d14c,instruct docker to label the mount with the correct selinux label
179,https://api.github.com/repos/mozilla/dxr/pulls/575,575,"Move VIRTUAL_ENV up in the file, scope lint to dxr/","Fix keeps flake8 from recursing into all subfolders from the root, such as virtualenvs kept with the project.
",pelmers,2406051,2016-06-24T22:16:01Z,CONTRIBUTOR,True,6,5,1,Powerful search for large codebases,Python,aff3905e68881e74eda81aab44d4222def007c77,"Move VIRTUAL_ENV up in the file, scope lint to dxr/"
180,https://api.github.com/repos/mozilla/dxr/pulls/574,574,Make wildcard matches anchored to the ends of the string by default.,"For query terms like path: and file: that allow wildcards, ensure that
they match the entire string.  For example, now file:bar.htm matches
only ""bar.htm"" and not ""bar.html"" or ""foobar.htm"".
If a user wants the old behavior of matching anywhere within the name
they can add an asterisk to the beginning and/or end of their search
term.  For example, file:*bar.htm* still matches all of ""bar.htm"",
""bar.html"" and ""foobar.htm"".
",abbeyj,99402,2016-06-24T21:27:03Z,CONTRIBUTOR,True,19,14,5,Powerful search for large codebases,Python,f3ad7b0ec1266efbc097f9ddb5e8501f2059485c,"Make wildcard matches anchored to the ends of the string by default.

For query terms like path: and file: that allow wildcards, ensure that
they match the entire string.  For example, now file:bar.htm matches
only ""bar.htm"" and not ""bar.html"" or ""foobar.htm"".
If a user wants the old behavior of matching anywhere within the name
they can add an asterisk to the beginning and/or end of their search
term.  For example, file:*bar.htm* still matches all of ""bar.htm"",
""bar.html"" and ""foobar.htm""."
181,https://api.github.com/repos/mozilla/dxr/pulls/573,573,"Add flake8 linting to the project, fix all linting errors.","We add a new make target, `lint` to execute flake8 over the project.
",pelmers,2406051,2016-06-24T17:25:36Z,CONTRIBUTOR,True,84,166,42,Powerful search for large codebases,Python,0c707f433109c5e29298f6e785dee827034bb926,"Add flake8 linting to the project, fix all linting errors.

We add a new make target, `lint` to execute flake8 over the project.
And have travis run lint in CI."
182,https://api.github.com/repos/mozilla/dxr/pulls/572,572,Check that paths can decode in utf8 before sending to ES,"There should be a way to index non-utf8 paths, but for now it seems prudent to block them and move on with getting the addon tree up.

Note: The test case does not work on OS X because HFS+ filesystem utf-8 encodes all nodes.
",pelmers,2406051,2016-06-23T22:58:30Z,CONTRIBUTOR,True,35,0,4,Powerful search for large codebases,Python,007ce481ff67a8c4acef6b0dbcf9ca8c9f5a6873,Check that paths decode to utf8
183,https://api.github.com/repos/mozilla/dxr/pulls/572,572,Check that paths can decode in utf8 before sending to ES,"There should be a way to index non-utf8 paths, but for now it seems prudent to block them and move on with getting the addon tree up.

Note: The test case does not work on OS X because HFS+ filesystem utf-8 encodes all nodes.
",pelmers,2406051,2016-06-23T22:58:30Z,CONTRIBUTOR,True,35,0,4,Powerful search for large codebases,Python,7b238f8f6799c4dd2d240c505fabd345923c28ef,Add test
184,https://api.github.com/repos/mozilla/dxr/pulls/572,572,Check that paths can decode in utf8 before sending to ES,"There should be a way to index non-utf8 paths, but for now it seems prudent to block them and move on with getting the addon tree up.

Note: The test case does not work on OS X because HFS+ filesystem utf-8 encodes all nodes.
",pelmers,2406051,2016-06-23T22:58:30Z,CONTRIBUTOR,True,35,0,4,Powerful search for large codebases,Python,1996d6d4ddd024cbf31f044dae2d52b66d78fc81,Make sure the test actually will run.
185,https://api.github.com/repos/mozilla/dxr/pulls/570,570,Try to invoke vcs before claiming source.,"This should prevent errors that would occur with bad .git or
.hg folders present in the source trees.
",pelmers,2406051,2016-06-23T16:36:39Z,CONTRIBUTOR,True,11,0,1,Powerful search for large codebases,Python,edf5f9553e6dffdf99ea6f9f6d75e876253e1468,"Try to invoke vcs before claiming source.

This should prevent errors that would occur with bad .git or
.hg folders present in the source trees."
186,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,7c3fcf0aca2f2868c1956ea6012ae0b0840047d0,"Add an XBL plugin for method identifier searches.

This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files."
187,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,5e61cc2bafae3ee10050931a8e9d041404a1f0ba,Remove copy-paste mistake and some redundant checks.
188,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,e45913a4d233d4b3ab1003aa0f6f2aae38744f9e,Forgot to add refs and filters...
189,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,1be49c9fc9f2d68e5a48674c0ed7c7c8159bdaf1,Respond to review comments.
190,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,8f66ad3fa8a1f447a789db95c1543be7c617fe7f,Reorder checks for xbl.is_interesting
191,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,c08072a7f3fbc524a72c5346ac9dd4b9a3d3c916,Check the current line only from the current column number.
192,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,4c29be0ea2fb3d7575bb7ae333a3f50896d33be2,Add non-ascii XBL test and repair fallout.
193,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,fcca1849ea0551150a08595b6bf150ed43ee492c,"Iterate with islice, add a skipped test for a FIXME feature."
194,https://api.github.com/repos/mozilla/dxr/pulls/569,569,Add an XBL plugin for method identifier searches.,"This plugin adds qualified needles for the method, property, and field
definitions within bindings. It also adds needles and refs for the
implements attr on the implementation tag.

Fixes bug 771004.

Next in the nice-to-have list would be JS analysis of the CDATA sections
of these files.
",pelmers,2406051,2016-06-22T22:10:01Z,CONTRIBUTOR,False,351,0,9,Powerful search for large codebases,Python,42defef24cc6de9e5ede85936cd90c56e5654e95,Revert using islice for iteration.
195,https://api.github.com/repos/mozilla/dxr/pulls/567,567,Update URL to the moved infra repo so Travis jobs can pass again.,,erikrose,295816,2016-06-20T17:10:29Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,089ac8d380eff0c83b08abd51267ad30b02fb355,Update URL to the moved infra repo so Travis jobs can pass again.
196,https://api.github.com/repos/mozilla/dxr/pulls/566,566,Add retries for failed ES queries.,"I hope this will make trees fail less often due to transient network issues. Examples: https://jenkins-dxr.mozilla.org/job/mozilla-aurora/116/console and https://jenkins-dxr.mozilla.org/job/mozilla-beta/92/console.
",erikrose,295816,2016-06-16T09:10:38Z,MEMBER,True,13,2,3,Powerful search for large codebases,Python,6d22db59e17795b997edc612d559f812cdd16f65,"Add retries for failed ES queries.

I hope this will make trees fail less often due to transient network issues. Examples: https://jenkins-dxr.mozilla.org/job/mozilla-aurora/116/console and https://jenkins-dxr.mozilla.org/job/mozilla-beta/92/console."
197,https://api.github.com/repos/mozilla/dxr/pulls/565,565,Fix scrolling to selected line on page load in Chrome.,"Trying to scroll in the document ready handler in Chrome doesn't work
because Chrome will reset the scroll position later.  Delaying the scroll
with setTimeout works around this problem.
",abbeyj,99402,2016-06-13T19:05:38Z,CONTRIBUTOR,True,9,4,1,Powerful search for large codebases,Python,c50493aeaffb85aae75843d06422d73d50e1cad7,"Fix scrolling to selected line on page load in Chrome.
Trying to scroll in the document ready handler in Chrome doesn't work
because Chrome will reset the scroll position later.  Delaying the scroll
with setTimeout works around this problem."
198,https://api.github.com/repos/mozilla/dxr/pulls/565,565,Fix scrolling to selected line on page load in Chrome.,"Trying to scroll in the document ready handler in Chrome doesn't work
because Chrome will reset the scroll position later.  Delaying the scroll
with setTimeout works around this problem.
",abbeyj,99402,2016-06-13T19:05:38Z,CONTRIBUTOR,True,9,4,1,Powerful search for large codebases,Python,d27781df762c2549fe08bbbda7c9541eb5c05c63,Add comment describing why we're using setTimeout.
199,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,c6443c5cee9125ce396af1ee65fc2473501c0c4a,"Display the last-committed time as modified column when possible.

Fixes bug 1189576"
200,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,bc1ca83e147e37e9778641c496f761abd6557f36,"Use NotImplementedError, switch to utc for consistency"
201,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,091899fbe0e4ded002d4c3d480cd8e87a5055b83,Avoid format bumping with a fallback
202,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,2e4c13f6be86c2baa3c4b48569705ddc30fdb528,Document UTC usage
203,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,7e3b567c5e74696460ff20148fd362b3377615aa,Do not use time tag if modified is not available.
204,https://api.github.com/repos/mozilla/dxr/pulls/564,564,Display the last-committed time as modified column when possible.,"Fixes bug 1189576

I'm not sure if the tests depend on the location where it's running, it may be better to generate the tests from timestamps instead in that case, i.e. I record the expected timestamp in the test, then the test case constructs the locale-specific format for it at run time.
",pelmers,2406051,2016-06-09T23:46:35Z,CONTRIBUTOR,True,112,22,8,Powerful search for large codebases,Python,0b298ee270d04da1168ec2b1200f2fcadb0e9053,Remove redundant modified None check.
205,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,f30858983ff4e8a6baa142984a86a8125b54f319,"Update blame links with selected line, fix bug 1007293"
206,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,cea267ed2875557121a4e5b54037adb1232c35c9,Add blame template to tests
207,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,dbc392bfb57b99cec73d88fa56590322038fca25,"Remove console.log, fix naming"
208,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,f240fd65a92fd441dbe3cb5e23f732f26d54d453,String formatting
209,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,b3deab40cb7e48e182ccec5fa162a466b9d51a04,Simplify some js logic
210,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,edf03dbef57f24d98452cc4b2b696a97d6166b6a,"Respond to comments: blame to first line, DRY."
211,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,faa680cd4bf1f1f99438ac5ed0493a7831dd37f2,Merge branch 'master' into syn-clinks2
212,https://api.github.com/repos/mozilla/dxr/pulls/563,563,"Update blame links with selected line, fix bug 1007293","take 2! This time simplified from #448 (no format bump, mostly a javascript update).

Plugins can put {{line}} in the href of any links, and these will be substituted with the most recently selected line number.
",pelmers,2406051,2016-06-09T19:22:59Z,CONTRIBUTOR,True,58,21,7,Powerful search for large codebases,Python,c58293b3655650dd2306f3266233d0f5f9e444b7,Repair misplaced close-quote.
213,https://api.github.com/repos/mozilla/dxr/pulls/562,562,Find overrides/overriddens from different translation units.  Fixes b…,"…ug 1261534.
",kleintom,632915,2016-06-09T16:57:25Z,CONTRIBUTOR,True,59,40,9,Powerful search for large codebases,Python,9e7abb09ce4995cb436ef9bee20484aff204a1e3,Find overrides/overriddens from different translation units.  Fixes bug 1261534.
214,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,adc8428520efe88e4385f5a426fb3c272916387b,"Add a descriptor plugin that emulates MXR's descriptor column.

Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968."
215,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,1a5568ee654683bccd9b29875078805dd367b3f7,Add a try-except and log a warning on error
216,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,1d8b2fe64a3986de2e359a4e02dcec59727c6342,"Use regex's .search method, other misc. fixes"
217,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,e049978e3323b351f77c7f71b75657ecbb0f66f7,Factor out readme description
218,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,f617fd9481c68ade5a91cbde8d0c844bbea5cdbb,"Put docs on FolderToIndex, split docstring_re for performance."
219,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,59858e6f91723c234460e6c1901630e46c0dd86c,Respond to commentary
220,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,4b8f455090bb79d3513b3ca8448cbb4aba677edd,Put the docstring regexes in a list.
221,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,e10c1bfbe465b2b86d82c5671a2e656005548752,Turn paths to utf-8 by having unignored yield only utf-8.
222,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,9bad9e10396e3b73848c6204fadfffb62ed65204,"Be more restrictive on readme check, attempt to decode description.

The descriptor attempted to return the first line of 'threadmessage.o'
in my previous attempt."
223,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,52aac59c1b639123e6f6c618d7e7d82898186aa2,Respond to comments.
224,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,23d90131e70c36231fd32bb58c62e30dc3da9b94,Unignored docstring wording
225,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,f1791a6e3030d3b6d4d8dd77d5020b3dc890204e,Skip license and mode line comments.
226,https://api.github.com/repos/mozilla/dxr/pulls/561,561,Add a descriptor plugin that emulates MXR's descriptor column.,"Also add some framework for plugins to supply needles on folders and
adding headers to the browsing view.

Fixes bug 1157968.
Example
<img width=""871"" alt=""screen shot 2016-06-09 at 8 55 06 am"" src=""https://cloud.githubusercontent.com/assets/2406051/15936441/e474628c-2e1f-11e6-9d92-578802f77a7a.png"">
",pelmers,2406051,2016-06-09T15:55:32Z,CONTRIBUTOR,True,347,35,21,Powerful search for large codebases,Python,35fbef5bc12b7db5f958929ff96ae2abf0e8b8c9,"Respond to comments: docstring_re, docs"
227,https://api.github.com/repos/mozilla/dxr/pulls/560,560,Avoid a second re-layout by attaching the menu to the body.,"Also use a box-shadow to recreate the original padded appearance.
",pelmers,2406051,2016-06-08T21:27:57Z,CONTRIBUTOR,True,7,1,2,Powerful search for large codebases,Python,cc8701c9ea6a34313db8025165fbdd61c6923c4f,"Avoid a second re-layout by attaching the menu to the body.

Also use a box-shadow to recreate the original padded appearance."
228,https://api.github.com/repos/mozilla/dxr/pulls/559,559,Avoid reflow on click by unwrapping and removing padding,"Fixes bug 1279001 by avoiding DOM mutation and box model recalculating (not changing padding).

Unfortunately it looks a little less pretty because we don't have the padding around the background.
<img width=""368"" alt=""screen shot 2016-06-08 at 1 28 38 pm"" src=""https://cloud.githubusercontent.com/assets/2406051/15909824/f63bc01c-2d7c-11e6-8b27-f7689cab49df.png"">
",pelmers,2406051,2016-06-08T20:29:18Z,CONTRIBUTOR,True,6,9,3,Powerful search for large codebases,Python,84cf38c9f032f42dac25fbfd7429094050e2b1db,"Avoid reflow on click by unwrapping and removing padding

Fixes bug 1279001 (probably)"
229,https://api.github.com/repos/mozilla/dxr/pulls/558,558,Reduce memory usage by using __slots__ on frozendict.,"On the largest files (sqlite3.c) this change reduces memory usage around
10%.
",pelmers,2406051,2016-06-06T20:54:35Z,CONTRIBUTOR,False,48,11,2,Powerful search for large codebases,Python,4cf222685f31ca3c1999a9f8d859945004d4a0b4,"Reduce memory usage by using __slots__ on frozendict.

On the largest files (sqlite3.c) this change reduces memory usage around
10%."
230,https://api.github.com/repos/mozilla/dxr/pulls/557,557,Fix fallout from unicode_contents introduction.,"Have the Python and JS extensions calls parent's is_interesting as well.

See https://jenkins-dxr.mozilla.org/job/hgcustom_version-control-tools/lastBuild/console for an example of the error.
",pelmers,2406051,2016-06-06T16:38:57Z,CONTRIBUTOR,True,30,23,10,Powerful search for large codebases,Python,23ea43963e64b1218c2330d8996820fcad57bf29,"Fix fallout from unicode_contents introduction.

Python and JS and xpidl plugins could return is_interesting on binary
files if they had the right extension, now we use the parent's
is_interesting as well to prevent this."
231,https://api.github.com/repos/mozilla/dxr/pulls/557,557,Fix fallout from unicode_contents introduction.,"Have the Python and JS extensions calls parent's is_interesting as well.

See https://jenkins-dxr.mozilla.org/job/hgcustom_version-control-tools/lastBuild/console for an example of the error.
",pelmers,2406051,2016-06-06T16:38:57Z,CONTRIBUTOR,True,30,23,10,Powerful search for large codebases,Python,42e54ef696be48d7b621affaab759a244d2dd709,"De-dup offset-building code, remark that """" contains text.

Use 'is not' to check contents existence."
232,https://api.github.com/repos/mozilla/dxr/pulls/557,557,Fix fallout from unicode_contents introduction.,"Have the Python and JS extensions calls parent's is_interesting as well.

See https://jenkins-dxr.mozilla.org/job/hgcustom_version-control-tools/lastBuild/console for an example of the error.
",pelmers,2406051,2016-06-06T16:38:57Z,CONTRIBUTOR,True,30,23,10,Powerful search for large codebases,Python,1bb842d81ada12476f51cb5ba1d32de40331d75b,"Respond to comments, further de-dup"
233,https://api.github.com/repos/mozilla/dxr/pulls/556,556,Reinstate single-result-redirect with a format bump this time. [DO NOT MERGE until trees are all green.],"This unreverts 7164d985601d1b3f802d54799212a04056a88ad4 with the sole addition
of a format bump.
",kleintom,632915,2016-06-03T15:28:33Z,CONTRIBUTOR,True,237,74,19,Powerful search for large codebases,Python,e54343a1bfb56988657d4a525edc0e2fe402128a,"Reinstate single-result-redirect with a format bump this time.

This unreverts 7164d985601d1b3f802d54799212a04056a88ad4 with the sole addition
of a format bump."
234,https://api.github.com/repos/mozilla/dxr/pulls/555,555,Correct some infra around JS plugin,"- Make `make clean` work properly with recent `npm` versions.
- Check lockdown into the tree for security.
- Update .gitignore.
- Avoid running `npm install` unless needed.
",erikrose,295816,2016-06-02T22:12:49Z,MEMBER,True,34,11,8,Powerful search for large codebases,Python,2e44ec221b90b78c8b7b711bd3bfc3398d2c5db3,"Check lockdown into the JS plugin's tree.

Otherwise, we download it from someplace untrusted, which defeats its purpose. (Really, we just symlink to the copy we already have nearer the root of the tree.)"
235,https://api.github.com/repos/mozilla/dxr/pulls/555,555,Correct some infra around JS plugin,"- Make `make clean` work properly with recent `npm` versions.
- Check lockdown into the tree for security.
- Update .gitignore.
- Avoid running `npm install` unless needed.
",erikrose,295816,2016-06-02T22:12:49Z,MEMBER,True,34,11,8,Powerful search for large codebases,Python,05c291e82074aac404c89b23858f5b8ba87f990d,"Ignore the subdirectories of node_modules that recent npm versions create.

npm used to nest folders according to dependencies. Now it flattens them all out."
236,https://api.github.com/repos/mozilla/dxr/pulls/555,555,Correct some infra around JS plugin,"- Make `make clean` work properly with recent `npm` versions.
- Check lockdown into the tree for security.
- Update .gitignore.
- Avoid running `npm install` unless needed.
",erikrose,295816,2016-06-02T22:12:49Z,MEMBER,True,34,11,8,Powerful search for large codebases,Python,92f7f3727458a93d055ebbfec37ca46651fc69e9,"Update `make clean` to clean up after newer npms which use flat folder structures.

Also, don't run the slow `npm install` unless we need to."
237,https://api.github.com/repos/mozilla/dxr/pulls/555,555,Correct some infra around JS plugin,"- Make `make clean` work properly with recent `npm` versions.
- Check lockdown into the tree for security.
- Update .gitignore.
- Avoid running `npm install` unless needed.
",erikrose,295816,2016-06-02T22:12:49Z,MEMBER,True,34,11,8,Powerful search for large codebases,Python,fb9fccf0fb637fa524d193b7d3a9b46cd7784b07,"Stop using the (imaginery?) `engine` option in packages.json.

I can't find evidence that it ever existed; I think we just cargo-culted it. `engines` is documented.

Still this option remains only advisory. The warning isn't triggered even when you follow the advice at http://www.marcusoft.net/2015/03/packagejson-and-engines-and-enginestrict.html about installing from outside the dir containing package.json. But at least we have the spelling correct now."
238,https://api.github.com/repos/mozilla/dxr/pulls/554,554,Reduce peak memory,"Clear dicts after use, add 'clean' to skip_stages option.
Because a list held references to all the dicts, memory usage increased
as the indexer adds fields to the dict, even though it never used the
dict after yielding it, especially applicable to files with many lines.
Reduce peak memory usage by 10-20%.

I add ""clean"" to skip_stages since I had it for testing and it seems intuitive to have, but I can back that part out.

Also the sorted iterable_per_line only reduces memory usage marginally, because the peak still occurs when all the needles are concretized and then sorted in finished_tags, so I could bring that out too for simplification without much impact (tens of megabytes).

The second change is that files are initially only read up to the first 4kb, and the full contents are not read until either 1) we know it might not be binary, or 2) it's an image whose contents we store.
",pelmers,2406051,2016-06-02T15:28:01Z,CONTRIBUTOR,True,78,49,8,Powerful search for large codebases,Python,d0361789141355317efc925c4de373868f56dfc6,"Clear dicts after use, add 'clean' to skip_stages option.

Because a list held references to all the dicts, memory usage increased
as the indexer adds fields to the dict, even though it never used the
dict after yielding it, especially applicable to files with many lines.
Reduce peak memory usage by 10-20%."
239,https://api.github.com/repos/mozilla/dxr/pulls/554,554,Reduce peak memory,"Clear dicts after use, add 'clean' to skip_stages option.
Because a list held references to all the dicts, memory usage increased
as the indexer adds fields to the dict, even though it never used the
dict after yielding it, especially applicable to files with many lines.
Reduce peak memory usage by 10-20%.

I add ""clean"" to skip_stages since I had it for testing and it seems intuitive to have, but I can back that part out.

Also the sorted iterable_per_line only reduces memory usage marginally, because the peak still occurs when all the needles are concretized and then sorted in finished_tags, so I could bring that out too for simplification without much impact (tens of megabytes).

The second change is that files are initially only read up to the first 4kb, and the full contents are not read until either 1) we know it might not be binary, or 2) it's an image whose contents we store.
",pelmers,2406051,2016-06-02T15:28:01Z,CONTRIBUTOR,True,78,49,8,Powerful search for large codebases,Python,b700b245f90a71c02146c0dba5962a8e57d8198e,"Peek at the first 4kb of a file before loading the whole contents.

Previously DXR reads the entire contents of a file, even if it's just a
big binary blob that it will immediately throw away. On mozilla-central,
the largest of these is 900M. This commit reduces the peak memory usage
of a moz-central index from 1100M to 850M (on sqlite3.c)."
240,https://api.github.com/repos/mozilla/dxr/pulls/554,554,Reduce peak memory,"Clear dicts after use, add 'clean' to skip_stages option.
Because a list held references to all the dicts, memory usage increased
as the indexer adds fields to the dict, even though it never used the
dict after yielding it, especially applicable to files with many lines.
Reduce peak memory usage by 10-20%.

I add ""clean"" to skip_stages since I had it for testing and it seems intuitive to have, but I can back that part out.

Also the sorted iterable_per_line only reduces memory usage marginally, because the peak still occurs when all the needles are concretized and then sorted in finished_tags, so I could bring that out too for simplification without much impact (tens of megabytes).

The second change is that files are initially only read up to the first 4kb, and the full contents are not read until either 1) we know it might not be binary, or 2) it's an image whose contents we store.
",pelmers,2406051,2016-06-02T15:28:01Z,CONTRIBUTOR,True,78,49,8,Powerful search for large codebases,Python,bcd85796eff81f9d78d2dea31b62cdaa7bfec45c,Return None from file_contents if cannot decode
241,https://api.github.com/repos/mozilla/dxr/pulls/554,554,Reduce peak memory,"Clear dicts after use, add 'clean' to skip_stages option.
Because a list held references to all the dicts, memory usage increased
as the indexer adds fields to the dict, even though it never used the
dict after yielding it, especially applicable to files with many lines.
Reduce peak memory usage by 10-20%.

I add ""clean"" to skip_stages since I had it for testing and it seems intuitive to have, but I can back that part out.

Also the sorted iterable_per_line only reduces memory usage marginally, because the peak still occurs when all the needles are concretized and then sorted in finished_tags, so I could bring that out too for simplification without much impact (tens of megabytes).

The second change is that files are initially only read up to the first 4kb, and the full contents are not read until either 1) we know it might not be binary, or 2) it's an image whose contents we store.
",pelmers,2406051,2016-06-02T15:28:01Z,CONTRIBUTOR,True,78,49,8,Powerful search for large codebases,Python,91cdd60e5921498a8961aa5c83bf1d16df01168d,"Rename file_contents to unicode_contents, fix nits"
242,https://api.github.com/repos/mozilla/dxr/pulls/553,553,Reduce memory usage in js plugin,"Mozilla-central has not been able to index since JS landed because of out of memory.
A js-only run's memory profile looks as follows.
![jsonly](https://cloud.githubusercontent.com/assets/2406051/15722572/40bb169a-27f3-11e6-9fa3-8b179fee3e4c.png)
The largest spike corresponds to mandreel.js, a 277k-line file which was the most likely cause of out of memory.
I add a limit of 100k lines to the JS analyzer because even with the improvements this file will still require about 1.4G of memory, which might still be too much given 4 workers at a time.
",pelmers,2406051,2016-06-01T19:34:42Z,CONTRIBUTOR,True,76,73,4,Powerful search for large codebases,Python,6849c6ec2d4239d001c64c1b40cf08d7aedc68ae,"Avoid concretizing refs and needles in js indexer, and namedtuple over
dicts.

Also use warn and error over log."
243,https://api.github.com/repos/mozilla/dxr/pulls/553,553,Reduce memory usage in js plugin,"Mozilla-central has not been able to index since JS landed because of out of memory.
A js-only run's memory profile looks as follows.
![jsonly](https://cloud.githubusercontent.com/assets/2406051/15722572/40bb169a-27f3-11e6-9fa3-8b179fee3e4c.png)
The largest spike corresponds to mandreel.js, a 277k-line file which was the most likely cause of out of memory.
I add a limit of 100k lines to the JS analyzer because even with the improvements this file will still require about 1.4G of memory, which might still be too much given 4 workers at a time.
",pelmers,2406051,2016-06-01T19:34:42Z,CONTRIBUTOR,True,76,73,4,Powerful search for large codebases,Python,3e5f0e4d5a714cba990669da059dfb1d617e10ca,Add a 100k line limit to JS analysis
244,https://api.github.com/repos/mozilla/dxr/pulls/552,552,Update deployment doc node version requirement.,"In terms of non-docker deployment, I get a not-very-helpful error when I try to `make` the new js plugin (congrats on getting that working by the way!!) with an older node :

```
make -C dxr/plugins/js
make[1]: Entering directory '/tmp/dxr/dxr/plugins/js'
cd analyze_js; npm install
npm WARN package.json js_esprima@1.0.0 No repository field.
npm WARN package.json js_esprima@1.0.0 No README data

> js_esprima@1.0.0 preinstall /tmp/dxr/dxr/plugins/js/analyze_js
> lockdown

sh: lockdown: command not found
npm ERR! weird error 127
npm ERR! not ok code 0
makefile:2: recipe for target 'build' failed
make[1]: *** [build] Error 1
make[1]: Leaving directory '/tmp/dxr/dxr/plugins/js'
makefile:100: recipe for target 'plugins' failed
make: *** [plugins] Error 2
```

When I upgrade to node 6.2.0, no problem.  Should we give a heads up in the deployment docs?
",kleintom,632915,2016-05-31T22:24:12Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,d6bb284e072df9c4a0c1c1be299b08cf0dd6e7fa,Update deployment doc node version requirement.
245,https://api.github.com/repos/mozilla/dxr/pulls/551,551,Add support for clang 3.7.,"My system just upgraded to 3.7 - tests pass and m-c compiles; also tests pass on docker at 3.5.  (Cur stable ubuntu is at 3.8, debian is at 3.5, for reference.)

Let me know if you don't like the indenting :-)
",kleintom,632915,2016-05-31T22:15:23Z,CONTRIBUTOR,True,78,40,1,Powerful search for large codebases,Python,20170a9266960ed0bd17878351b093e5cfe9a855,Add support for clang 3.7.
246,https://api.github.com/repos/mozilla/dxr/pulls/550,550,Reload on popState event every time the page being loaded is a search.,"This fixes the case where we start a new page with a search url (which doesn't
trigger a history push), and then search some more, and then go back.
",kleintom,632915,2016-05-27T20:21:59Z,CONTRIBUTOR,True,3,3,1,Powerful search for large codebases,Python,647131cc365838dce366c8c8d9790d33ab1286b0,"Reload on popState event every time the page being loaded is a search.

This fixes the case where we start a new page with a search url (which doesn't
trigger a history push), and then search some more, and then go back."
247,https://api.github.com/repos/mozilla/dxr/pulls/549,549,Remove curl to root shell to install node,"Add the key and sources manually.
",pelmers,2406051,2016-05-27T01:19:23Z,CONTRIBUTOR,True,6,2,1,Powerful search for large codebases,Python,931b2b1622ccabaa9427da8cf07557bc8411df32,Remove curl to root shell to install node
248,https://api.github.com/repos/mozilla/dxr/pulls/548,548,Use lockdown to check analyze_js deps,,pelmers,2406051,2016-05-26T21:50:36Z,CONTRIBUTOR,True,453,0,2,Powerful search for large codebases,Python,36ee0e033f23c7277a123d812a54860935d70f43,Use lockdown to install analyze_js deps
249,https://api.github.com/repos/mozilla/dxr/pulls/547,547,JS testing,"I didn't realize at first that slimerjs (and phantomjs) is not a node module:
https://www.npmjs.com/package/slimerjs#a-note-on-slimerjs
So to get integration with mocha/chai I tried node-phantom-simple, which, in spite of the name, also supports slimerjs (since phantomjs and slimerjs basically have the same api).

I got that working outside docker on my machine, including running inside xvfb-run, but then discovered when I moved it to docker that there's an issue with node-phantom-simple/slimerjs on docker: cf. https://github.com/baudehlo/node-phantom-simple/issues/127 for a vagrant issue that produces what I'm seeing (comment 0 and the node-phantom-simple self-test results in particular), even under xvfb-run and the travis setup he suggests trying.  So right now it's using phantomjs instead of slimerjs (fortunately that's just a path change).
",kleintom,632915,2016-05-26T21:02:07Z,CONTRIBUTOR,False,536,52,9,Powerful search for large codebases,Python,dd69479137cc75d0998afa529f15d14dc6d7046a,"Adding js test harness
Added karma and its plugins as well as mocha and chai into devDependencies
Updated the lockdown.json file
Added a first test into the new directory tests/js/
That's about it for now."
250,https://api.github.com/repos/mozilla/dxr/pulls/547,547,JS testing,"I didn't realize at first that slimerjs (and phantomjs) is not a node module:
https://www.npmjs.com/package/slimerjs#a-note-on-slimerjs
So to get integration with mocha/chai I tried node-phantom-simple, which, in spite of the name, also supports slimerjs (since phantomjs and slimerjs basically have the same api).

I got that working outside docker on my machine, including running inside xvfb-run, but then discovered when I moved it to docker that there's an issue with node-phantom-simple/slimerjs on docker: cf. https://github.com/baudehlo/node-phantom-simple/issues/127 for a vagrant issue that produces what I'm seeing (comment 0 and the node-phantom-simple self-test results in particular), even under xvfb-run and the travis setup he suggests trying.  So right now it's using phantomjs instead of slimerjs (fortunately that's just a path change).
",kleintom,632915,2016-05-26T21:02:07Z,CONTRIBUTOR,False,536,52,9,Powerful search for large codebases,Python,42b14cc95d9a52fdc656f406429a5a84de9da11d,"Remove karma (for now), add slimerjs and node-phantom-simple.

Add sync-exec and sleep utils as well."
251,https://api.github.com/repos/mozilla/dxr/pulls/547,547,JS testing,"I didn't realize at first that slimerjs (and phantomjs) is not a node module:
https://www.npmjs.com/package/slimerjs#a-note-on-slimerjs
So to get integration with mocha/chai I tried node-phantom-simple, which, in spite of the name, also supports slimerjs (since phantomjs and slimerjs basically have the same api).

I got that working outside docker on my machine, including running inside xvfb-run, but then discovered when I moved it to docker that there's an issue with node-phantom-simple/slimerjs on docker: cf. https://github.com/baudehlo/node-phantom-simple/issues/127 for a vagrant issue that produces what I'm seeing (comment 0 and the node-phantom-simple self-test results in particular), even under xvfb-run and the travis setup he suggests trying.  So right now it's using phantomjs instead of slimerjs (fortunately that's just a path change).
",kleintom,632915,2016-05-26T21:02:07Z,CONTRIBUTOR,False,536,52,9,Powerful search for large codebases,Python,c2db954b8b6e6709927d19db9eb2ced19f666c1a,"Add some JS tests, switch to phantomjs.

slimerjs works outside docker, both running in xvfb-run and not, but as it turns
out ... slimerjs may not work (even under xvfb-run) in a docker-type environment
with node-phantom-simple:
https://github.com/baudehlo/node-phantom-simple/issues/127 so I've switched to
phantomjs."
252,https://api.github.com/repos/mozilla/dxr/pulls/547,547,JS testing,"I didn't realize at first that slimerjs (and phantomjs) is not a node module:
https://www.npmjs.com/package/slimerjs#a-note-on-slimerjs
So to get integration with mocha/chai I tried node-phantom-simple, which, in spite of the name, also supports slimerjs (since phantomjs and slimerjs basically have the same api).

I got that working outside docker on my machine, including running inside xvfb-run, but then discovered when I moved it to docker that there's an issue with node-phantom-simple/slimerjs on docker: cf. https://github.com/baudehlo/node-phantom-simple/issues/127 for a vagrant issue that produces what I'm seeing (comment 0 and the node-phantom-simple self-test results in particular), even under xvfb-run and the travis setup he suggests trying.  So right now it's using phantomjs instead of slimerjs (fortunately that's just a path change).
",kleintom,632915,2016-05-26T21:02:07Z,CONTRIBUTOR,False,536,52,9,Powerful search for large codebases,Python,9be213f76ade081089a415bb827b47179bd8c1b4,Be consistent with quotes.
253,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,835f15744ca240687f6c01568af097ea71c277db,"Rewrite 'js' plugin for DXR.

Borrow some of mozsearch's analysis dumping by parsing JS with esprima."
254,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,fecf4a696b01a1cd9b2e5043c8ebf84866ac39f4,Move the JS program to clean up the folder.
255,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,34958e19047c48c9ad8a7ac6778a2d546615ef8e,Move node install to ubuntu.sh
256,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,b131ab19f7ee6e0d0f712dd9615e7755745191e5,Read and document analyze_file.js
257,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,940f15706ac9c880d72ca60efb659bd204de94a5,Add js to manifest
258,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,4b31d30041e9c498c6b0cf53d79a0e64932fea55,"More informative errors, handle more types"
259,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,79d8ee8777dc8cb8147a8f3f5faa0ffd8b2c3102,Give things a qualname by default and write tests.
260,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,5996a5760afa65eb697938b5e61db4f4cb46f6b8,"Refactor slightly the analyze_file

Differentiate between global props and qualified props whose first
segment could not be found."
261,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,7638c4b8cbb68ae8aeefd5f69abb23c80b452c49,Add eslint and --fix
262,https://api.github.com/repos/mozilla/dxr/pulls/546,546,Support Javascript!,"I port over https://github.com/bill-mccloskey/mozsearch/blob/master/js-analyze.js of searchfox.org into DXR.

This plugin splits javascript identifiers into ""vars"" and ""props,"" where ""var"" refers to local variables and ""prop"" refers to either global variables (i.e. properties of the global object) or properties of objects/classes.

At post_build, the plugin calls a node program that walks the source tree, looking for unignored .js files (nb. if we merge https://github.com/mozilla/dxr/pull/535 then I would not have to reimplement this; the Python could give the node these paths), and dumps JSON lines for each file in a mirrored directory tree in the temp folder.

At index the Python reads these file dumps to drop needles and refs to ES.

I intend to run this plugin on mozilla-central in the near future to see how the output looks and how long it takes (perhaps the organization of temp files could borrow from clang's version and use hashes).
",pelmers,2406051,2016-05-25T00:13:24Z,CONTRIBUTOR,True,1190,206,18,Powerful search for large codebases,Python,cdf365a138938b7ad21653bc3d265a3e003050ab,Respond to PR comments
263,https://api.github.com/repos/mozilla/dxr/pulls/545,545,Add context expansion to LINE search results. [ready to merge when things calm down],"Remove tables from the results layout, and add a button on the left to
expand context by querying the new 'lines' app endpoint.

The new layout has space for 5 digits in the line number column.

Maybe fixes [bug 771000](https://bugzilla.mozilla.org/show_bug.cgi?id=771000).

[Example video](https://raw.githubusercontent.com/pelmers/log/master/ctx%20demo.mp4)
",pelmers,2406051,2016-05-20T22:21:27Z,CONTRIBUTOR,True,297,47,9,Powerful search for large codebases,Python,21c456d44051188c6b83779bffc6ec66ceddf46e,"Add context expansion to LINE search results.

Remove tables from the results layout, and add a button on the left to
expand context by querying the new 'lines' app endpoint.
Maybe fixes bug 771000."
264,https://api.github.com/repos/mozilla/dxr/pulls/544,544,Fix up destructor name tokenization in clang.,"- Make sure we're including the full extents of a destructor name and not just the
  leading '~'.
- Allow '~' in the 'Search for the substring' context menu option for C++ files.
",kleintom,632915,2016-05-15T04:45:18Z,CONTRIBUTOR,True,103,12,8,Powerful search for large codebases,Python,11e0f853645d4eac1b02945d35c126e867538ba1,"Fix up destructor name tokenization in clang.

Make sure we're including the full extents of a destructor name and not just the
leading '~'."
265,https://api.github.com/repos/mozilla/dxr/pulls/544,544,Fix up destructor name tokenization in clang.,"- Make sure we're including the full extents of a destructor name and not just the
  leading '~'.
- Allow '~' in the 'Search for the substring' context menu option for C++ files.
",kleintom,632915,2016-05-15T04:45:18Z,CONTRIBUTOR,True,103,12,8,Powerful search for large codebases,Python,4c631bd187bf5b55e7ea4d77e463c61afdb050bc,Allow '~' in the 'Search for the substring' context menu option for C++ files.
266,https://api.github.com/repos/mozilla/dxr/pulls/544,544,Fix up destructor name tokenization in clang.,"- Make sure we're including the full extents of a destructor name and not just the
  leading '~'.
- Allow '~' in the 'Search for the substring' context menu option for C++ files.
",kleintom,632915,2016-05-15T04:45:18Z,CONTRIBUTOR,True,103,12,8,Powerful search for large codebases,Python,0112201d8d082e3e607ea51572f732302af23af5,Move the test_menus ~Z def into its own file.
267,https://api.github.com/repos/mozilla/dxr/pulls/542,542,Upgrade peep to version 3.1.2.,,abbeyj,99402,2016-05-11T22:01:01Z,CONTRIBUTOR,True,10,5,1,Powerful search for large codebases,Python,39a5bffd0d602eef573e74c2344adfa33b0eeb3a,Upgrade peep to version 3.1.2.
268,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,288d8d7345d559d9a311cc2198182a184f9c0035,"Add path promotion and path highlighting.

Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by
kitchen polls, we promote probable paths (e.g. exact path fragment
matches) at the top of ‘single-term’ queries (i.e. queries without a
filter) and offer a link to see all path results.

Also include a path highlighter in `PathFilter` and some tests."
269,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,88cedfad170bb3d6ffe48943e19ea93a1f1c74dc,"Bump the format version.

Added a subfield to the path index, so format needs to bump."
270,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,ad85d384e7d80df77e5e94fe002c2b4871bd87c0,"Respond to PR comments.

Broaden the condition for showing promoted results.
Rename path.parts to path.segments.
Untangle import cycle between core and query.
Clarify method names, refactor up some parameters.
Move promoted box to the right side."
271,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,35d3028a68e5e30bd0afb1940114fa30cbb91896,Use case insensitive match when search is not case sensitive.
272,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,25c1f3beb206077c5395a5c0986cca8cf0a7313c,"Use / rather than sep, reword comment, only use segments in FILE."
273,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,fd065dd2b2dd63e7db15efb34da8edff0f00b5c5,Merge branch 'es' into path_promotion
274,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,0d1bdf85e95ed1a089bf6438edd4e66de7b831e6,Add files for case sensitivity path promotion test.
275,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,75c31c24f0986375861c39c26b71e0d762dda761,"Use flexbox for search results.

Also put the tree-selector and breadcrumbs into flexbox,
and word wrap long lines in search results."
276,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,c5e96f3a468e66e04b46ca60a1e8e16d2a4a2284,"Respond to PR comments.

Refactor Query such that _terms and _filters are private.
Add an __str__ method to Filter. Adjust styles on promoted container."
277,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,7d1aaa9bcb3f1f088c1700b5d97a3ac949b3424e,"Respond to another round of review.

Rename things, handle spaces in terms for __str__ of Filter,
override __str__ for TextFilter."
278,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,f5d8a156db43a80944d74eb5af3b98367d184182,"Rescue colon, fade out binary files."
279,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,015700e6a75fe91bceb9395ac46f59fee2e2f611,"Move promoted paths to float, wrap results around it.

Each file’s results gets its own table, which means that if it starts
after the promoted container, it can wrap across the whole page.
Otherwise, it will wrap around the promoted container."
280,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,2dcaa7e4c1fa960fc1df9911dbbcdaf87b37949e,Force display of long results onto one line.
281,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,3728943b9fe4764ef99734af9add66f08ef1128b,wip
282,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,b5093e6adcbbb79e3ce1a988f4ea5d1f8021a786,"Merge path_promotions, all tests pass."
283,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,ac7a610a1fcfa64a079580dae53729bafa5a3937,"Revert ""wip"" to go back to table-based layout.

This reverts commit 3728943b9fe4764ef99734af9add66f08ef1128b."
284,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,ace7b512e0d06d19b6b3999a3c767a10600f4292,"Merge again to latest master, clean up earlier mistakes."
285,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,e351b7521cfa2ce887dc902419f8f0b269c238b3,Add forgotten files
286,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,d5873da2ef84bfae39c53c3339ce8f8e5edc9244,"Respond to review comments.

Remove duplicated tree menu of empty files.
Put tree menu in the promoted container on the right.
Re-add link to tree in search result.
Clarify promoted results header text.
Return underlining to result hover."
287,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,9bfd04c909023ff901c0d96258d5fa5eddc7a4ed,"Continue responding to PR comments.

Adjust wording, spacing, styling, don't show promoted container when
there can't be promoted results."
288,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,1e1218d9d6957013baeaef6e5f358a4da840668c,Apply wizdom from CSS wizards.
289,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,f2b67007c38d50897d80bb62c2e6017748bcbfa9,Respond to review comments.
290,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,265f09c224c66a9a0558ba1b295de60378ef3903,Remove blank line
291,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,bc170de0cd70e0513875a2f4a8bcfa0654132bca,Merge branch 'master' into master_w_paths
292,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,3805ab14564439cc18b6ef15f16b41fdec44fe1a,"Remove unneeded stuff, light refactory"
293,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,8370e63422b92cc3b73b3310886372d00c35bb6e,Put @ in filter.__str__ and add tests
294,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,b51ffe58f13011e39c80708b83a709176565a910,"Add infix to quoted filter, with test"
295,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,11521f1106fafeb7a0263412892b73cf4c84eb55,"Merge branch 'master' into master_w_paths.

And move promoted results to the top."
296,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,a2c6490515431650c5a06b0f56f05c42e84efcc0,Appease flake8.
297,https://api.github.com/repos/mozilla/dxr/pulls/541,541,"Path promotion, take 2","Replaces #443 

I update the previous work on path promotion to the latest head, passing all tests. I remove the path highlighting code because @kleintom has a much better one in #519.
I draw a box on the right side of search results that holds up to 5 path results for single unfiltered term searches.
Remark: the switch tree selector then shows up to the left of this box, rather than the far right of the screen. When the box does not appear then it's at the far right. (well, it's possible 'absolute' the thing to the right always...)
",pelmers,2406051,2016-05-10T22:26:27Z,CONTRIBUTOR,False,436,178,25,Powerful search for large codebases,Python,ab8b91ff422c19837f7dc53cff244dde1e084998,Respond to comments.
298,https://api.github.com/repos/mozilla/dxr/pulls/540,540,Use the original template pattern for function template qualnames.,"Use the original template pattern rather than the concrete types of an
instantiated template.

This gives all non-specialized templated function decls the same qualname and
thereby fixes search for such functions.

I haven't been able to get clang to normalize template specializations in all
cases, so for now each specialization of a function template gets its own
qualname.
",kleintom,632915,2016-05-10T04:13:15Z,CONTRIBUTOR,True,194,21,8,Powerful search for large codebases,Python,4d6cf9faf9c0256527b0dc16076b9df49599c1e2,"Use the original template pattern for function template qualnames.

Use the original template pattern rather than the concrete types of an
instantiated template.

This gives all non-specialized templated function decls the same qualname and
thereby fixes search for such functions.

I haven't been able to get clang to normalize template specializations in all
cases, so for now each specialization of a function template gets its own
qualname."
299,https://api.github.com/repos/mozilla/dxr/pulls/539,539,Remove case sensitivity checkbox. (take 3),"The previous PR, #482, attempted to unify the symbols '-', '@', and '+' in the query language under a ""modifiers"" category, but I was not able to do so cleanly because then a query such as ""--+"" would no longer parse.

Here I bring back the original, which uses smart case, and '@' to force case-sensitive per term.

One suggestion was to show a bubble when the behavior happens, but to do so, the server must tell the page's javascript, and it seems unnecessary to pass that around on every request when it's only useful the first time.

r? @erikrose 
",pelmers,2406051,2016-05-09T22:43:44Z,CONTRIBUTOR,True,129,208,18,Powerful search for large codebases,Python,34877c9e8613f581824c3509ee19ae37587f956c,"Remove case sensitivity checkbox.

If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to negate the guess."
300,https://api.github.com/repos/mozilla/dxr/pulls/539,539,Remove case sensitivity checkbox. (take 3),"The previous PR, #482, attempted to unify the symbols '-', '@', and '+' in the query language under a ""modifiers"" category, but I was not able to do so cleanly because then a query such as ""--+"" would no longer parse.

Here I bring back the original, which uses smart case, and '@' to force case-sensitive per term.

One suggestion was to show a bubble when the behavior happens, but to do so, the server must tell the page's javascript, and it seems unnecessary to pass that around on every request when it's only useful the first time.

r? @erikrose 
",pelmers,2406051,2016-05-09T22:43:44Z,CONTRIBUTOR,True,129,208,18,Powerful search for large codebases,Python,0a84c4b31a8beb4966aec0bcbe0b8994fe6939d9,"Make @ force case-sensitive, rather than flipping the guess."
301,https://api.github.com/repos/mozilla/dxr/pulls/539,539,Remove case sensitivity checkbox. (take 3),"The previous PR, #482, attempted to unify the symbols '-', '@', and '+' in the query language under a ""modifiers"" category, but I was not able to do so cleanly because then a query such as ""--+"" would no longer parse.

Here I bring back the original, which uses smart case, and '@' to force case-sensitive per term.

One suggestion was to show a bubble when the behavior happens, but to do so, the server must tell the page's javascript, and it seems unnecessary to pass that around on every request when it's only useful the first time.

r? @erikrose 
",pelmers,2406051,2016-05-09T22:43:44Z,CONTRIBUTOR,True,129,208,18,Powerful search for large codebases,Python,2eb91029ad9d033dbb37d1a143aa6a0ad459a0c2,Document case sensitivity in id description
302,https://api.github.com/repos/mozilla/dxr/pulls/539,539,Remove case sensitivity checkbox. (take 3),"The previous PR, #482, attempted to unify the symbols '-', '@', and '+' in the query language under a ""modifiers"" category, but I was not able to do so cleanly because then a query such as ""--+"" would no longer parse.

Here I bring back the original, which uses smart case, and '@' to force case-sensitive per term.

One suggestion was to show a bubble when the behavior happens, but to do so, the server must tell the page's javascript, and it seems unnecessary to pass that around on every request when it's only useful the first time.

r? @erikrose 
",pelmers,2406051,2016-05-09T22:43:44Z,CONTRIBUTOR,True,129,208,18,Powerful search for large codebases,Python,294b2724f6abd91d4f7c9ad589f592de9461f141,Merge branch 'master' into case-sensitivity-at-sigil
303,https://api.github.com/repos/mozilla/dxr/pulls/539,539,Remove case sensitivity checkbox. (take 3),"The previous PR, #482, attempted to unify the symbols '-', '@', and '+' in the query language under a ""modifiers"" category, but I was not able to do so cleanly because then a query such as ""--+"" would no longer parse.

Here I bring back the original, which uses smart case, and '@' to force case-sensitive per term.

One suggestion was to show a bubble when the behavior happens, but to do so, the server must tell the page's javascript, and it seems unnecessary to pass that around on every request when it's only useful the first time.

r? @erikrose 
",pelmers,2406051,2016-05-09T22:43:44Z,CONTRIBUTOR,True,129,208,18,Powerful search for large codebases,Python,37a414d2b3cd852afbac3003432784f55ba482f2,Make description more descriptive
304,https://api.github.com/repos/mozilla/dxr/pulls/538,538,Fix permalinks when the indexed tree uses Perforce.,,abbeyj,99402,2016-05-09T19:38:44Z,CONTRIBUTOR,True,14,2,1,Powerful search for large codebases,Python,51abe47ee42b777e87ef7be5ca8257942e01237c,Fix permalinks when the indexed tree uses Perforce.
305,https://api.github.com/repos/mozilla/dxr/pulls/537,537,Use $(VIRTUAL_ENV) consistently instead of $$VIRTUAL_ENV in the makef…,"…ile.

This allows use of a default virtualenv if the environment variable isn't set.
",abbeyj,99402,2016-05-09T19:37:46Z,CONTRIBUTOR,True,7,7,1,Powerful search for large codebases,Python,d6898d0261ac9d355c32879c73fd1fb8b97793bd,"Use $(VIRTUAL_ENV) consistently instead of $$VIRTUAL_ENV in the makefile.
This allows use of a default virtualenv if the environment variable isn't set."
306,https://api.github.com/repos/mozilla/dxr/pulls/536,536,Correctly set 'limit' in JS doQuery when a queryString exists.,"- On an initial (i.e. non-append) search-results load we were setting
  previousDataLimit to the computed 'limit' var, but the actual limit (explicit
  or implicit) in the case of a pre-existing queryString passed into doQuery can
  be larger than 'limit', in which case we wind up rerequesting results starting
  from the smaller 'limit' when we infinite scroll.  This was only an issue when
  loading a url with an existing query in it and enough search results to
  require infinite scroll.
- Also don't update global search result variables like 'previousDataLimit' and
  'dataOffset' when we receive old outdated results that we ignore.
- Stop infinite scroll when a query returns no results:
  If previousDataLimit == resultsLineCount (e.g. there are 100 total results and
  we use the default limit of 100) then we used to get into endless infinite
  scroll queries returning 0 results everytime we scrolled.  Now we stop
  infinite scroll when a query returns 0 results.
",kleintom,632915,2016-05-07T04:59:26Z,CONTRIBUTOR,True,23,11,1,Powerful search for large codebases,Python,d2af74967466b275c57648ea12d2e7f73bcc166a,"Correctly set 'limit' in JS doQuery when a queryString exists.  Fixes bug 1256263.

* On an initial (i.e. non-append) search-results load we were setting
  previousDataLimit to the computed 'limit' var, but the actual limit (explicit
  or implicit) in the case of a pre-existing queryString passed into doQuery can
  be larger than 'limit', in which case we wind up rerequesting results starting
  from the smaller 'limit' when we infinite scroll.  This was only an issue when
  loading a url with an existing query in it and enough search results to
  require infinite scroll.

* Also don't update global search result variables like 'previousDataLimit' and
  'dataOffset' when we receive old outdated results that we ignore."
307,https://api.github.com/repos/mozilla/dxr/pulls/536,536,Correctly set 'limit' in JS doQuery when a queryString exists.,"- On an initial (i.e. non-append) search-results load we were setting
  previousDataLimit to the computed 'limit' var, but the actual limit (explicit
  or implicit) in the case of a pre-existing queryString passed into doQuery can
  be larger than 'limit', in which case we wind up rerequesting results starting
  from the smaller 'limit' when we infinite scroll.  This was only an issue when
  loading a url with an existing query in it and enough search results to
  require infinite scroll.
- Also don't update global search result variables like 'previousDataLimit' and
  'dataOffset' when we receive old outdated results that we ignore.
- Stop infinite scroll when a query returns no results:
  If previousDataLimit == resultsLineCount (e.g. there are 100 total results and
  we use the default limit of 100) then we used to get into endless infinite
  scroll queries returning 0 results everytime we scrolled.  Now we stop
  infinite scroll when a query returns 0 results.
",kleintom,632915,2016-05-07T04:59:26Z,CONTRIBUTOR,True,23,11,1,Powerful search for large codebases,Python,1f691fe385bf85ba547a6f21bcea624f5a511d63,"Stop infinite scroll when a query returns no results.

If previousDataLimit == resultsLineCount (e.g. there are 100 total results and
we use the default limit of 100) then we used to get into endless infinite
scroll queries returning 0 results everytime we scrolled.  Now we stop
infinite scroll when a query returns 0 results."
308,https://api.github.com/repos/mozilla/dxr/pulls/535,535,Expose pieces of build.unignored so that plugins can do their own ver…,"…sion.
",kleintom,632915,2016-05-06T04:59:33Z,CONTRIBUTOR,False,64,27,1,Powerful search for large codebases,Python,41e09bf27bf6456c034cfe64adfb33e56573184e,Expose pieces of build.unignored so that plugins can do their own version.
309,https://api.github.com/repos/mozilla/dxr/pulls/534,534,Binary browse and image rev,"- Allow browsing to binary files.
- Display the nav pane for binary images and support viewing binary images on /rev/.
- Support viewing of textual images on /rev/.
",kleintom,632915,2016-05-05T04:57:07Z,CONTRIBUTOR,True,142,112,19,Powerful search for large codebases,Python,f6d462d3c2573b2800c8b24d1310eb37164b419a,"Allow browsing to binary files.

* Copy 'icons/raw.png' to a new mimetype 'binary.png' and use it for binary
  files we don't otherwise know the mimetype of, mostly to make it easy to
  recognize binaries in /browse/ and search results now that they're not greyed
  out.

* Remove is_binary from JS results processing, and, since that's the only place
  it was used, remove it from query results as well."
310,https://api.github.com/repos/mozilla/dxr/pulls/534,534,Binary browse and image rev,"- Allow browsing to binary files.
- Display the nav pane for binary images and support viewing binary images on /rev/.
- Support viewing of textual images on /rev/.
",kleintom,632915,2016-05-05T04:57:07Z,CONTRIBUTOR,True,142,112,19,Powerful search for large codebases,Python,1bf39943080f19ce212dbe65b3a9be0ec41e4bb0,"Display the nav pane for binary images and support binary images on /rev/.

* Add a '/<tree>/raw-rev/<revision>/<path:path>' route so that we can link
  to past revisions of binary image files in the output served by /rev/.

* Turn on omniglot links for binary files in general."
311,https://api.github.com/repos/mozilla/dxr/pulls/534,534,Binary browse and image rev,"- Allow browsing to binary files.
- Display the nav pane for binary images and support viewing binary images on /rev/.
- Support viewing of textual images on /rev/.
",kleintom,632915,2016-05-05T04:57:07Z,CONTRIBUTOR,True,142,112,19,Powerful search for large codebases,Python,477b304e366dc059abad53973665e3febefb61be,Support viewing of textual images on /rev/.
312,https://api.github.com/repos/mozilla/dxr/pulls/533,533,Add 'extmatch' plugin for matching files in a folder by extension.,"Matched files get nav pane links to each other.
As a start we're just matching ""header"" files with ""implementation"" files, with
no configuration.
",kleintom,632915,2016-05-03T18:22:01Z,CONTRIBUTOR,True,116,1,9,Powerful search for large codebases,Python,218349f89b946a95a8acd73a56cade88be7e8beb,"Add 'extmatch' plugin for matching files in a folder by extension.

Matched files get nav pane links to each other.
As a start we're just matching ""header"" files with ""implementation"" files, with
no configuration."
313,https://api.github.com/repos/mozilla/dxr/pulls/533,533,Add 'extmatch' plugin for matching files in a folder by extension.,"Matched files get nav pane links to each other.
As a start we're just matching ""header"" files with ""implementation"" files, with
no configuration.
",kleintom,632915,2016-05-03T18:22:01Z,CONTRIBUTOR,True,116,1,9,Powerful search for large codebases,Python,86f07a91f139e673f6be51d05bafb247854703f1,Change is_unignored to is_indexed and fixup whitespace.
314,https://api.github.com/repos/mozilla/dxr/pulls/532,532,Add hash for both sdist and wheel in requirements.txt when both exist.,"Which one is chosen is a matter of pip version and flags (thanks Erik!).
",kleintom,632915,2016-05-02T04:46:41Z,CONTRIBUTOR,True,4,0,1,Powerful search for large codebases,Python,b5ad320c24ec82f3de278c19d372c23eb993dca3,"Add hash for both sdist and wheel in requirements.txt when both exist.

Which one is chosen is a matter of pip version and flags (thanks Erik!)."
315,https://api.github.com/repos/mozilla/dxr/pulls/531,531,Use binaryornot and chardet (as a backup) for text detection.,"binaryornot is replacing our old simple is_text, and chardet is being used
as a backup when we think a file is text but we're unable to decode it using
the configured source_encoding.  It might be nice if we could just drop
source_encoding all together, but chardet is quite slow - running chardet over
every is_text file in mozilla-central leads to indexing times nearly twice
their current length.
",kleintom,632915,2016-04-29T03:15:03Z,CONTRIBUTOR,False,81,25,9,Powerful search for large codebases,Python,71d8f01db5d3ac6f4319c1055fdaef5bab92ef22,"Use binaryornot and chardet (as a backup) for text detection.

binaryornot is replacing our old simple is_text, and chardet is being used
as a backup when we think a file is text but we're unable to decode it using
the configured source_encoding.  It might be nice if we could just drop
source_encoding all together, but chardet is quite slow - running chardet over
every is_text file in mozilla-central leads to indexing times nearly twice
their current length."
316,https://api.github.com/repos/mozilla/dxr/pulls/530,530,Canonicalize clang function decls before pulling parameter names.,"The current practice of using non-canonical decls leads to parameter names
depending on which ref to the function they're pulled from, which means
function qualnames for a given function vary across refs, and then search is
broken.
",kleintom,632915,2016-04-27T04:58:26Z,CONTRIBUTOR,True,166,6,7,Powerful search for large codebases,Python,21ba030b5a1c46e7425d289a89823c47fb217a37,"Canonicalize clang function decls before pulling parameter names.

The current practice of using non-canonical decls leads to parameter names
depending on which ref to the function they're pulled from, which means
function qualnames for a given function vary across refs, and then search is
broken."
317,https://api.github.com/repos/mozilla/dxr/pulls/530,530,Canonicalize clang function decls before pulling parameter names.,"The current practice of using non-canonical decls leads to parameter names
depending on which ref to the function they're pulled from, which means
function qualnames for a given function vary across refs, and then search is
broken.
",kleintom,632915,2016-04-27T04:58:26Z,CONTRIBUTOR,True,166,6,7,Powerful search for large codebases,Python,42849f6234de299193db7d9b4b618f360e2f0865,"Use PrintingPolicy to format clang type output.

* print 'bool' instead of '_Bool'
* print just 'mytype' instead of 'class mytype' or 'enum mytype' etc."
318,https://api.github.com/repos/mozilla/dxr/pulls/529,529,Support clang 3.6,"dxr doesn't support clang 3.6.  clang 3.6 have a few changes to use std::unique_ptr instead.
",makotokato,965338,2016-04-26T01:20:55Z,CONTRIBUTOR,True,14,0,1,Powerful search for large codebases,Python,51cba75d2843eed57b62f3a66be94d0ac6a4ff69,Support clang 3.6
319,https://api.github.com/repos/mozilla/dxr/pulls/528,528,File operator,"Add a 'file:' operator for matching on file names only. Fixes bug 1249325.
",kleintom,632915,2016-04-21T20:24:52Z,CONTRIBUTOR,True,125,49,12,Powerful search for large codebases,Python,ce0d50385b66b45b6f703dd6c92fc032ae774de0,Add a 'file:' operator for matching on file names only. Fixes bug 1249325.
320,https://api.github.com/repos/mozilla/dxr/pulls/528,528,File operator,"Add a 'file:' operator for matching on file names only. Fixes bug 1249325.
",kleintom,632915,2016-04-21T20:24:52Z,CONTRIBUTOR,True,125,49,12,Powerful search for large codebases,Python,9dbca1d8a2f2ea1ddd717149ef44a9a18271255a,Add an UNANALYZED_STRING es mapping shorthand.
321,https://api.github.com/repos/mozilla/dxr/pulls/528,528,File operator,"Add a 'file:' operator for matching on file names only. Fixes bug 1249325.
",kleintom,632915,2016-04-21T20:24:52Z,CONTRIBUTOR,True,125,49,12,Powerful search for large codebases,Python,e418a0a5498fec91fe95c780a55c2ff1d111ea64,"Give PathFilter and FilenameFilter a common base.

And address other reviewer comments."
322,https://api.github.com/repos/mozilla/dxr/pulls/528,528,File operator,"Add a 'file:' operator for matching on file names only. Fixes bug 1249325.
",kleintom,632915,2016-04-21T20:24:52Z,CONTRIBUTOR,True,125,49,12,Powerful search for large codebases,Python,fbba44464901914b1f6f7eaf3dc0c542d818da12,"Bump format.

Bump the format number so that the 'file:' operator doesn't appear in UI
before it actually works."
323,https://api.github.com/repos/mozilla/dxr/pulls/526,526,Upgrade Pygments.  Fixes bug 1241636.,"Version 2.1.3 contains both Erik's fix for a slowdown which had caused us to
switch to a patched version of Pygments:
https://bitbucket.org/birkenfeld/pygments-main/commits/8e3e7dd549e5
and Javascript ES6 support to fix bug 1241636:
https://bitbucket.org/birkenfeld/pygments-main/commits/3ecc5b1c8c30
",kleintom,632915,2016-04-19T20:37:52Z,CONTRIBUTOR,True,3,6,2,Powerful search for large codebases,Python,1f377cebe857d50f88031b3e15e261c9a82b3ca3,"Upgrade Pygments.  Fixes bug 1241636.

Version 2.1.3 contains both Erik's fix for a slowdown which had caused us to
switch to a patched version of Pygments:
https://bitbucket.org/birkenfeld/pygments-main/commits/8e3e7dd549e5
and Javascript ES6 support to fix bug 1241636:
https://bitbucket.org/birkenfeld/pygments-main/commits/3ecc5b1c8c30"
324,https://api.github.com/repos/mozilla/dxr/pulls/525,525,"Show '(binary file)' for /source/binary, don't assert on /rev/binary.…","…  Fixes bug 1222572.

Also, in test_binary_files.py, don't allow redirect on the 'path:some_bytes'
query since if/when we switch to jumping to a single result, that test would
still pass (for the wrong reasons).
",kleintom,632915,2016-04-18T20:58:12Z,CONTRIBUTOR,True,52,17,6,Powerful search for large codebases,Python,abd20fe833d63f2c5bb81d452fba227da3c68967,"Show '(binary file)' for /source/binary, don't assert on /rev/binary.  Fixes bug 1222572.

Also, in test_binary_files.py, don't allow redirect on the 'path:some_bytes'
query since if/when we switch to jumping to a single result, that test would
still pass (for the wrong reasons)."
325,https://api.github.com/repos/mozilla/dxr/pulls/524,524,Cut off python name inheritance cycles.  Fixes bug 1264627.,"The bug is caused by a class definition in
mozilla-central/testing/web-platform/tests/tools/py/py/_log/warning.py of
'class DeprecationWarning(DeprecationWarning):', where the base
DeprecationWarning is a built-in which is never explicitly imported.  We don't
distinguish between the new DeprecationWarning name and the built-in name, so
it looks to us like we have an inheritance cycle.  Similar bugs can occur
with longer cycles.

The fix here cuts those off so that we don't crash on indexing when we exceed
the allowed recursion depth.
",kleintom,632915,2016-04-15T18:14:04Z,CONTRIBUTOR,True,84,18,3,Powerful search for large codebases,Python,6e9449090820a1ba91dd7437fac9b107fa8bb61c,"Cut off python name inheritance cycles.  Fixes bug 1264627.

The bug is caused by a class definition in
mozilla-central/testing/web-platform/tests/tools/py/py/_log/warning.py of
'class DeprecationWarning(DeprecationWarning):', where the base
DeprecationWarning is a built-in which is never explicitly imported.  We don't
distinguish between the new DeprecationWarning name and the built-in name, so
it looks to us like we have an inheritance cycle.  Similar bugs can occur
with longer cycles.

The fix here cuts those off so that we don't crash on indexing when we exceed
the allowed recursion depth."
326,https://api.github.com/repos/mozilla/dxr/pulls/524,524,Cut off python name inheritance cycles.  Fixes bug 1264627.,"The bug is caused by a class definition in
mozilla-central/testing/web-platform/tests/tools/py/py/_log/warning.py of
'class DeprecationWarning(DeprecationWarning):', where the base
DeprecationWarning is a built-in which is never explicitly imported.  We don't
distinguish between the new DeprecationWarning name and the built-in name, so
it looks to us like we have an inheritance cycle.  Similar bugs can occur
with longer cycles.

The fix here cuts those off so that we don't crash on indexing when we exceed
the allowed recursion depth.
",kleintom,632915,2016-04-15T18:14:04Z,CONTRIBUTOR,True,84,18,3,Powerful search for large codebases,Python,d9e75cab015d109a62a77d54105da5e9d49090e4,"Fix up indentation style on ':arg' documentation in the python plugin.

Also import more deeply from nose.tests."
327,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,2262185c0f9f0ac5195c59a69140c264e144d9d5,Auto-redirect to the result when a redirect query returns exactly one result.
328,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,951dc8a8dc32849d681e034069090e58efef85e7,"Implement clang 'Jump to definition' for a function using a query.

Make the 'Jump to definition' link for a function a query for the qualname of
the function, and then rely on auto-redirect to jump to the one result."
329,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,2c18734a99aaa0fef1de7afcddfdf4b09092f5ab,"Redirect to a file when a query returns a single file result.

This matches the behavior of the core plugin direct_path direct search."
330,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,1004a29f65802e895a53aa7678b8f3dd2366af69,FunctionRef is no longer derived from _RefWithDefinition.
331,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,ea75eb0dafa84cf3e1a4767c2b4f6f0cb521c355,Move bubble display for direct query results into templates.
332,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,0cd83ee283dc1037881e02fef5d45947d432f185,Add some documentation on the various flavors of direct results.
333,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,b887bb104bcca20f99204f4f5d12a699530c9a74,Add testing for single-result queries and new 'Jump to definition' behavior.
334,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,29ca4df87194ec8ccecdfbfd94063a436b977cce,"Introduce redirect_type query parameter to replace 'from' and 'from_q'.

Also respond to other review comments."
335,https://api.github.com/repos/mozilla/dxr/pulls/522,522,"Single result behavior and clang ""Jump to definition""","feedback?

Commit 1 jumps to a unique result when a redirect query returns a single result.  It doesn't give an indication bubble the way direct search does (though it could), but it does maintain the query string in both the url and in the query field, so the user can easily edit their query if they change their mind.

Commit 2 uses the commit 1 behavior to reimplement clang's ""Jump to definition"" menu for a function by making that link a query for the qualname of the function, and then relying on the commit 1 behavior to jump to the func def location when the query returns a single result.  This is based  on Erik's idea at https://bugzilla.mozilla.org/show_bug.cgi?id=986522#c13

The main issue I can see with doing it this way is that I don't see any way to know for sure whether the actual function def location lies in or outside of the source tree (you don't know until you do the search).  If the function def location clang returns is in the source tree and the actual def location is not, then the ""Jump to definition"" link will just return 0 results, while if the actual def location is in the search tree but the location clang returns is not then the ""Jump to definition"" menu option won't be shown at all (as currently written).

(The other (minor) issue is that if the def of a function is in the same file as the ref, then ""Jump to definition"" will reload the page, something the current code doesn't require.)

If this basically looks good let me know and I'll write some tests.
",kleintom,632915,2016-03-22T22:28:45Z,CONTRIBUTOR,True,236,73,18,Powerful search for large codebases,Python,f74892780d10d44b0454b78b6bbeac1d547c127d,"Remove 'no_from'; break back button redirect-to-single-result loop.

""Jump to definition"" is a link to a redirect query which creates its own history
entry, so you click ""Jump to definition"", it loads the query page, and the query
runs and redirects to a single result.  With the previous behavior, if you then
clicked back you would go back to a redirect query which then just redirects you
back to the single result again.  Now when we load a page with a redirect query,
we do the query but then replace the url with its non-redirect version so that
when you go back to the query page you stay there."
336,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,407fc94f9344f750f2b11937fcbad2a280da5581,"Only push browser history for user-typed queries.

Currently we push the result of every doQuery to the browser history, which
leads to history squashing in certain cases.  For example if we load a page
containing a search query (either from reloading a page or browsing through
history), then the page load gets a history entry, and then we do a doQuery for
the url query and that produces an identical history entry which deletes any
forward history.  It can also require (depending on where in history you're at)
two quick backs (before the next doQuery completes on the first back!) to
escape.

We now only push a new history item when it's the result of user typing in the
query box."
337,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,97eb2dd31d07de356e9ed9fe568bc3b89cc23fa3,"Don't delete the query string '?' character in pushHistory's URL.

It's probably the case that 'limit' and 'offset' will always come after 'q' in
the query string, but in case that ever changes, make sure we're preserving the
'?' to start the query string."
338,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,f8e08202c77d89012bf86f98a7b72ae7cab50949,"Update view correctly on popState browser history events.

* Reload non-search views when history goes from a search view to a non-search
  view (we already reload search views).
* Handle highlighting correctly.  In particular, add and remove highlighting as
  the history URLs dictate, and handle the case where we start the history with
  a highlight hash and then ""Jump to definition"" to a different hash in the same
  file."
339,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,19edacbcd245c7c315878df7cac7fe73a2389016,Remove the context menu on user clicks and on browser history changes.
340,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,d1f0dc190c68a08d1cb2c4f6c004d56802e7ec39,Handle direct results properly with respect to browser history loading.
341,https://api.github.com/repos/mozilla/dxr/pulls/521,521,Browser history processing,"Handle browser history moves better:
- Don't push history every time we run a doQuery since that leads to duplicate history entries (one on the page load, then another a couple seconds later when the doQuery pushHistory timer pops).
- Run a reload on popstate when we go from a query url to a non-query url.
- Now that non-query views can be reloaded in history, make sure we're handling highlighting correctly on re-views.
- Correctly handle (with regard to history) the case where a context menu entry points to an anchor on the current page.
- Dismiss the context menu when we change history and when we click a link on the context menu.
",kleintom,632915,2016-03-18T19:50:47Z,CONTRIBUTOR,True,79,41,3,Powerful search for large codebases,Python,927358abe9d540ddb2088d28515507b94fd562c0,"Only cancel historyWaiter timer on new searches.

Infinite scroll shouldn't cancel a history push for the results being displayed
by infinite scroll!

Also respond to PR comment."
342,https://api.github.com/repos/mozilla/dxr/pulls/520,520,Vcs remotes," Add support for additional upstream providers in VCS.
- Add support for Bitbucket Git and Hg repos.
- Miscellaneous changes in vcs.py.
",kleintom,632915,2016-03-11T00:19:48Z,CONTRIBUTOR,False,470,162,24,Powerful search for large codebases,Python,60e2973ce4d6644e215fb4fe642b3ac8e45544f9,"Add support for additional upstream providers in VCS.

* Add support for Bitbucket Git and Hg repos.
* Miscellaneous changes in vcs.py."
343,https://api.github.com/repos/mozilla/dxr/pulls/520,520,Vcs remotes," Add support for additional upstream providers in VCS.
- Add support for Bitbucket Git and Hg repos.
- Miscellaneous changes in vcs.py.
",kleintom,632915,2016-03-11T00:19:48Z,CONTRIBUTOR,False,470,162,24,Powerful search for large codebases,Python,97f7cccc03082ac624458aeb7d9b717de6d2b2b5,Additional testing for VCSes.
344,https://api.github.com/repos/mozilla/dxr/pulls/519,519,Highlight paths,"I missed wildcards and case-sensitivity for highlighting `path:` query file results in commit one, and fixed those in commit three.
",kleintom,632915,2016-03-03T00:46:44Z,CONTRIBUTOR,False,208,34,12,Powerful search for large codebases,Python,8b54e792dc9ce45b8996dbcda6157a48dc03707b,"Enable/fix highlighting of paths in query results.

Query result paths are linked segment by segment, with each linked segment of
text containing highlighting determined by the query, so queries now return a
path object containing the plain path (for pulling urls) as well as a list of
highlighted path segments (for pulling highlighted text for a given url)."
345,https://api.github.com/repos/mozilla/dxr/pulls/519,519,Highlight paths,"I missed wildcards and case-sensitivity for highlighting `path:` query file results in commit one, and fixed those in commit three.
",kleintom,632915,2016-03-03T00:46:44Z,CONTRIBUTOR,False,208,34,12,Powerful search for large codebases,Python,a0e93378d6da0db1663fc85f2dbf475cc69b178d,Add tests for query results highlighting.
346,https://api.github.com/repos/mozilla/dxr/pulls/519,519,Highlight paths,"I missed wildcards and case-sensitivity for highlighting `path:` query file results in commit one, and fixed those in commit three.
",kleintom,632915,2016-03-03T00:46:44Z,CONTRIBUTOR,False,208,34,12,Powerful search for large codebases,Python,7b5375193e6bd36bae19e1c3d55a2e386e5ab6b0,Support highlighting of 'path:' query results when the query uses wildcards.
347,https://api.github.com/repos/mozilla/dxr/pulls/518,518,Place clang macro definition tooltip on macro refs instead of macro def.,,kleintom,632915,2016-03-02T16:12:01Z,CONTRIBUTOR,True,66,14,2,Powerful search for large codebases,Python,b673e30b1d01a8a756e6a2fb69a36b6fa7b095cb,Place clang macro definition tooltip on macro refs instead of macro def.
348,https://api.github.com/repos/mozilla/dxr/pulls/518,518,Place clang macro definition tooltip on macro refs instead of macro def.,,kleintom,632915,2016-03-02T16:12:01Z,CONTRIBUTOR,True,66,14,2,Powerful search for large codebases,Python,25081da382fe3170a94286ee82c31c66287ffe1f,"Add macro argument list (when it exists) to macro ref tooltips.

Also make the original macro tooltip test less fragile."
349,https://api.github.com/repos/mozilla/dxr/pulls/517,517,Fix bugzilla 1223442,"Had lifetime problems with the module scope variable so switched to
using function scope.
",jlmarr10824,12816924,2016-02-11T17:36:12Z,CONTRIBUTOR,False,48,8,2,Powerful search for large codebases,Python,31c8574d5f64412da5a0faca69af5fd1254f308c,"replace glob with dict

Create dict with a list of csv’s for each file path digest; create
lines_from_csvs_with_path_digest(folder, path_digest) to be used
instead of lines_from_csvs(folder, file_glob)"
350,https://api.github.com/repos/mozilla/dxr/pulls/517,517,Fix bugzilla 1223442,"Had lifetime problems with the module scope variable so switched to
using function scope.
",jlmarr10824,12816924,2016-02-11T17:36:12Z,CONTRIBUTOR,False,48,8,2,Powerful search for large codebases,Python,2dd11cc5566c236d8d2712e38c2369f956fa978a,"convert csvfiles from file to function scope

Don’t use the global keyword on it; init in the function where it’s
used.  Add a print statement to track which file is being processed
when in 0 worker mode."
351,https://api.github.com/repos/mozilla/dxr/pulls/517,517,Fix bugzilla 1223442,"Had lifetime problems with the module scope variable so switched to
using function scope.
",jlmarr10824,12816924,2016-02-11T17:36:12Z,CONTRIBUTOR,False,48,8,2,Powerful search for large codebases,Python,b2e110ea8619dc6eabb9076c87fecd213667edc1,"remove the progress print statement

remove the progress print statement and associated variable ii."
352,https://api.github.com/repos/mozilla/dxr/pulls/517,517,Fix bugzilla 1223442,"Had lifetime problems with the module scope variable so switched to
using function scope.
",jlmarr10824,12816924,2016-02-11T17:36:12Z,CONTRIBUTOR,False,48,8,2,Powerful search for large codebases,Python,bea6f00ce9bd32d72613abd83848eaa1fec39b7d,"Add csvdict

Add csvdict, a dict whose keys are the sha1 hex digest prefixes of all
csv files, and corresponding value being a list of the csv files having
that prefix."
353,https://api.github.com/repos/mozilla/dxr/pulls/517,517,Fix bugzilla 1223442,"Had lifetime problems with the module scope variable so switched to
using function scope.
",jlmarr10824,12816924,2016-02-11T17:36:12Z,CONTRIBUTOR,False,48,8,2,Powerful search for large codebases,Python,aafdc407876626164872fbe5ff8844bfcd9d1614,"replace module variable 'db' with function scope variable 'csvdict'

Had lifetime problems with the module scope variable so switched to
using function scope."
354,https://api.github.com/repos/mozilla/dxr/pulls/516,516,Fix CSV ingestion segfault.,,erikrose,295816,2016-02-09T17:07:45Z,MEMBER,True,61,31,4,Powerful search for large codebases,Python,05dc39a81ae173940dcc9fa0779c06c6cbd18e84,Add commented-out instructions for xhyve-based docker-machine invocations.
355,https://api.github.com/repos/mozilla/dxr/pulls/516,516,Fix CSV ingestion segfault.,,erikrose,295816,2016-02-09T17:07:45Z,MEMBER,True,61,31,4,Powerful search for large codebases,Python,04507c86cb51b836da1a9b2366687587c9d56915,"Fix a segfault during clang CSV ingestion. Fixes bug 1246700.

It was triggered by the compiler plugin emitting cycles and then manifested as a segfault rather than a RuntimeError because we were nesting itertools.chain() so deeply.

For now (since moz-central is a week behind), I've simply added detection of cycles to _walk_graph()--and moved detection of dupes up into it, since it happens as a natural matter of course. Ehsan has expressed interest in moving the full inheritance computation to the compiler plugin in the longer term. Got through an entire moz-central index with workers=0. The chain() calls didn't survive, since they no longer fit with the imperative style needed to keep track of the seen set. It would be interesting to see if this is faster (since it prunes the graph traversal earlier) or slower (since it spends more time in the interpreter) than the old impl."
356,https://api.github.com/repos/mozilla/dxr/pulls/516,516,Fix CSV ingestion segfault.,,erikrose,295816,2016-02-09T17:07:45Z,MEMBER,True,61,31,4,Powerful search for large codebases,Python,22988bd3dc1ad26cca636e1bafa4f424b81e1dc1,Move test_sig_needles() into test_needles.py.
357,https://api.github.com/repos/mozilla/dxr/pulls/515,515,Added support for Rust macros and macro calls,"r? @nrc 

Also I've removed the std hack stuff - with the changes to save-analysis re: generated-code, the std crate is already being written out to the CSV file.
",DanielJCampbell,5915731,2016-02-04T04:00:07Z,NONE,False,55,26,4,Powerful search for large codebases,Python,14386827ac9e8b1f4ade28b7051b85bb4c25e3cd,Added support for Rust macros and macro calls
358,https://api.github.com/repos/mozilla/dxr/pulls/514,514,fix bugzilla 1223442,"Replace glob with dict in phase 2 of condense.py csv file processing. 
",jlmarr10824,12816924,2016-02-02T16:49:35Z,CONTRIBUTOR,False,41,2,1,Powerful search for large codebases,Python,31c8574d5f64412da5a0faca69af5fd1254f308c,"replace glob with dict

Create dict with a list of csv’s for each file path digest; create
lines_from_csvs_with_path_digest(folder, path_digest) to be used
instead of lines_from_csvs(folder, file_glob)"
359,https://api.github.com/repos/mozilla/dxr/pulls/514,514,fix bugzilla 1223442,"Replace glob with dict in phase 2 of condense.py csv file processing. 
",jlmarr10824,12816924,2016-02-02T16:49:35Z,CONTRIBUTOR,False,41,2,1,Powerful search for large codebases,Python,2dd11cc5566c236d8d2712e38c2369f956fa978a,"convert csvfiles from file to function scope

Don’t use the global keyword on it; init in the function where it’s
used.  Add a print statement to track which file is being processed
when in 0 worker mode."
360,https://api.github.com/repos/mozilla/dxr/pulls/514,514,fix bugzilla 1223442,"Replace glob with dict in phase 2 of condense.py csv file processing. 
",jlmarr10824,12816924,2016-02-02T16:49:35Z,CONTRIBUTOR,False,41,2,1,Powerful search for large codebases,Python,b2e110ea8619dc6eabb9076c87fecd213667edc1,"remove the progress print statement

remove the progress print statement and associated variable ii."
361,https://api.github.com/repos/mozilla/dxr/pulls/514,514,fix bugzilla 1223442,"Replace glob with dict in phase 2 of condense.py csv file processing. 
",jlmarr10824,12816924,2016-02-02T16:49:35Z,CONTRIBUTOR,False,41,2,1,Powerful search for large codebases,Python,0836cf941df347ee9bb98e1b8686995c7f307f7a,"Merge pull request #1 from jlmarr10824/fix-bugzilla-1223442

Fix bugzilla 1223442"
362,https://api.github.com/repos/mozilla/dxr/pulls/513,513,Pin the version of rust we're using.,"Pin the version of rust we're using.

They changed something after this date that broke our tests. We should still fix them, but it's annoying when our tests aren't deterministic.

Also stop blowing ES logs onto the test console. More often than not, they obscure what we really want to read.
",erikrose,295816,2016-01-29T17:06:03Z,MEMBER,True,2,2,2,Powerful search for large codebases,Python,4a349042997a77b48dc046d99b5fc39af38a4b87,"Pin the version of rust we're using.

They changed something after this date that broke our tests. We should still fix them, but it's annoying when our tests aren't deterministic.

Also stop blowing ES logs onto the test console. More often than not, they obscure what we really want to read."
363,https://api.github.com/repos/mozilla/dxr/pulls/512,512,Add something inconsequential. Let's see if Travis passes.,"If it does, something is wrong with https://travis-ci.org/mozilla/dxr/builds/105605574, and it's not Travis being flakey.
",erikrose,295816,2016-01-29T05:56:29Z,MEMBER,False,2,0,1,Powerful search for large codebases,Python,ee0fc8902b3975cd4bc1002b8f0a15deb967f5fd,"Add something inconsequential. Let's see if Travis passes.

If it does, something is wrong with https://travis-ci.org/mozilla/dxr/builds/105605574, and it's not Travis being flakey."
364,https://api.github.com/repos/mozilla/dxr/pulls/510,510,Fix scroll blanking issues,"This is sort of a wallpaper, but even so. We shouldn't clear the result page if we're appending.

I'll look at setting up docker. The other issue here is that we're assuming that if the resultLineCount is equal or bigger than the previous limit, we want more stuff. That isn't the case if the total number of results we expect is equal to that number. That is, on my MBP, the limit that gets determined based on my screen height is 40 + 25 = 65. So if I load a query with exactly 65 results, and scroll down, it triggers a request for more data, because the number of results I got (65) matches the limit we used (65), and because it also matches the total number of results, the next set of results comes in empty, causing the bug.
",gijsk,375983,2016-01-25T21:32:00Z,CONTRIBUTOR,False,5,3,1,Powerful search for large codebases,Python,b63e59a742e3abcd9a13054aeefb14e8e5ae1482,"Fix scroll blanking issues

This is sort of a wallpaper, but even so. We shouldn't clear the result page if we're appending."
365,https://api.github.com/repos/mozilla/dxr/pulls/508,508,"Only display ""VCS Links"" when there's a useable upstream link.","This also prevents exceptions when indexing a mercurial repository with no
default path or a git repository with the omniglot plugin and no github
upstream.
",kleintom,632915,2016-01-03T23:49:04Z,CONTRIBUTOR,True,26,3,2,Powerful search for large codebases,Python,129001b8fd0443776002333502b861362f37c424,"Only display ""VCS Links"" when there's a useable upstream link.

This also prevents exceptions when indexing a mercurial repository with no
default path or a git repository with the omniglot plugin and no github
upstream."
366,https://api.github.com/repos/mozilla/dxr/pulls/507,507,dxr-index.cpp updates,"I indexed (a couple weeks old version of) firefox several times with and without the patch, and all runs were within a minute of each other, sometimes slower, sometimes faster with the patch.  (That's a little surprising to me, but I also ran a debug indexing version where I was writing to files from the plugin, and the writes were definitely happening, so I'm pretty sure those indexing runs actually used the patches...)

I tried not to be too draconian on the style ""cleanup"", so in the end maybe no one will be happy!  :P  Feel free to suggest more changes, or changes you prefer should be taken back.
",kleintom,632915,2015-12-30T22:34:02Z,CONTRIBUTOR,False,271,229,1,Powerful search for large codebases,Python,d63f373e119034eadb9b2654609867695587376f,"Avoid memory leaks in dxr-index.cpp.

Switch raw FileInfo pointer to shared_ptr; free memory allocated by realpath."
367,https://api.github.com/repos/mozilla/dxr/pulls/507,507,dxr-index.cpp updates,"I indexed (a couple weeks old version of) firefox several times with and without the patch, and all runs were within a minute of each other, sometimes slower, sometimes faster with the patch.  (That's a little surprising to me, but I also ran a debug indexing version where I was writing to files from the plugin, and the writes were definitely happening, so I'm pretty sure those indexing runs actually used the patches...)

I tried not to be too draconian on the style ""cleanup"", so in the end maybe no one will be happy!  :P  Feel free to suggest more changes, or changes you prefer should be taken back.
",kleintom,632915,2015-12-30T22:34:02Z,CONTRIBUTOR,False,271,229,1,Powerful search for large codebases,Python,9c12dc2cef720249d0e628bd2a013fe1568d2548,Move directory string globals into static members in dxr-index.cpp.
368,https://api.github.com/repos/mozilla/dxr/pulls/507,507,dxr-index.cpp updates,"I indexed (a couple weeks old version of) firefox several times with and without the patch, and all runs were within a minute of each other, sometimes slower, sometimes faster with the patch.  (That's a little surprising to me, but I also ran a debug indexing version where I was writing to files from the plugin, and the writes were definitely happening, so I'm pretty sure those indexing runs actually used the patches...)

I tried not to be too draconian on the style ""cleanup"", so in the end maybe no one will be happy!  :P  Feel free to suggest more changes, or changes you prefer should be taken back.
",kleintom,632915,2015-12-30T22:34:02Z,CONTRIBUTOR,False,271,229,1,Powerful search for large codebases,Python,c93395fbd4f797746c568a12a29dce2cca6b90ea,"Use override and nullptr instead of virtual and NULL in dxr-index.cpp.

Clang support for override and nullptr was added in 3.0.

Also remove virtual specifier on functions that don't override and remove
the override definition of TraverseDecl (and its associated m_currentFunction)
since effectively all it did was call the base TraverseDecl."
369,https://api.github.com/repos/mozilla/dxr/pulls/507,507,dxr-index.cpp updates,"I indexed (a couple weeks old version of) firefox several times with and without the patch, and all runs were within a minute of each other, sometimes slower, sometimes faster with the patch.  (That's a little surprising to me, but I also ran a debug indexing version where I was writing to files from the plugin, and the writes were definitely happening, so I'm pretty sure those indexing runs actually used the patches...)

I tried not to be too draconian on the style ""cleanup"", so in the end maybe no one will be happy!  :P  Feel free to suggest more changes, or changes you prefer should be taken back.
",kleintom,632915,2015-12-30T22:34:02Z,CONTRIBUTOR,False,271,229,1,Powerful search for large codebases,Python,201acf46ff87f257c0c9bd53c52feb2533a12c02,"Use more consistent style in dxr-index.cpp.

Use consistent brace placement; move closer to 80-character columns."
370,https://api.github.com/repos/mozilla/dxr/pulls/506,506,Make the latest clang compiler plugin build under clang 3.4. Fixes bug 1235053.,,erikrose,295816,2015-12-30T21:18:53Z,MEMBER,True,1,2,1,Powerful search for large codebases,Python,4cf94e6a3ee0ef47f0b060a00bb95da44743c307,Make the latest clang compiler plugin build under clang 3.4. Fixes bug 1235053.
371,https://api.github.com/repos/mozilla/dxr/pulls/505,505,"Don't show ""Untracked file"" in the Nav pane when a file is tracked.",,kleintom,632915,2015-12-29T05:14:35Z,CONTRIBUTOR,True,3,2,1,Powerful search for large codebases,Python,b21068165de744778b0039645a0b3f39f326d068,"Don't show ""Untracked file"" in the Nav pane when a file is tracked."
372,https://api.github.com/repos/mozilla/dxr/pulls/503,503,Add dxr-rustc.sh to the repo,,nrc,762626,2015-12-18T00:49:21Z,CONTRIBUTOR,True,17,2,4,Powerful search for large codebases,Python,937c0822fedefc5cbdfb386c0be186d05726a222,Add dxr-rustc.sh to the repo
373,https://api.github.com/repos/mozilla/dxr/pulls/502,502,"Show the ""Find base classes""/""Find subclasses"" clang menu option only…","… when base classes, respectively subclasses, exist.

Also added some new ""Find overrides""/""Find overriddens"" menu tests.
",kleintom,632915,2015-12-17T21:01:27Z,CONTRIBUTOR,True,227,46,12,Powerful search for large codebases,Python,e4abb91172373b8a61af392392b95db9a01f2d33,"Show the ""Find base classes""/""Find subclasses"" clang menu option only when base classes, respectively subclasses, exist.

Also added some new ""Find overrides""/""Find overriddens"" menu tests."
374,https://api.github.com/repos/mozilla/dxr/pulls/502,502,"Show the ""Find base classes""/""Find subclasses"" clang menu option only…","… when base classes, respectively subclasses, exist.

Also added some new ""Find overrides""/""Find overriddens"" menu tests.
",kleintom,632915,2015-12-17T21:01:27Z,CONTRIBUTOR,True,227,46,12,Powerful search for large codebases,Python,27813d8471613533b4031dedc71539409cafcd84,"Use ""class"" or ""struct"" in clang context menu as appropriate."
375,https://api.github.com/repos/mozilla/dxr/pulls/502,502,"Show the ""Find base classes""/""Find subclasses"" clang menu option only…","… when base classes, respectively subclasses, exist.

Also added some new ""Find overrides""/""Find overriddens"" menu tests.
",kleintom,632915,2015-12-17T21:01:27Z,CONTRIBUTOR,True,227,46,12,Powerful search for large codebases,Python,d09f718a9fb8eb63175262207bf04ab31cf12a99,Add struct overrides/overridden needles to the clang plugin so that search works.
376,https://api.github.com/repos/mozilla/dxr/pulls/502,502,"Show the ""Find base classes""/""Find subclasses"" clang menu option only…","… when base classes, respectively subclasses, exist.

Also added some new ""Find overrides""/""Find overriddens"" menu tests.
",kleintom,632915,2015-12-17T21:01:27Z,CONTRIBUTOR,True,227,46,12,Powerful search for large codebases,Python,07a257f612244217752eed3fee201d3f1a02ebe0,"Address review comments.

Add docstring comments for some process_* functions in clang/condense.py; remove
a user-side exception in clang/menus.py; restructure clang test_menus.py sample
code to make tests less brittle."
377,https://api.github.com/repos/mozilla/dxr/pulls/501,501,Unpin Rust,"On top of #495, those commits should disappear once that is merged.
",nrc,762626,2015-12-17T20:57:31Z,CONTRIBUTOR,False,131,65,21,Powerful search for large codebases,Python,2ce40c470bdf7f0f490ecdf703c5be61d86942b0,Misc. changes to build Cargo projects
378,https://api.github.com/repos/mozilla/dxr/pulls/501,501,Unpin Rust,"On top of #495, those commits should disappear once that is merged.
",nrc,762626,2015-12-17T20:57:31Z,CONTRIBUTOR,False,131,65,21,Powerful search for large codebases,Python,871bfbd8287459a2e0940d084c3e41fb0e24b2bd,"Testing

note that the newly commented out tests were failing before this patch queue"
379,https://api.github.com/repos/mozilla/dxr/pulls/501,501,Unpin Rust,"On top of #495, those commits should disappear once that is merged.
",nrc,762626,2015-12-17T20:57:31Z,CONTRIBUTOR,False,131,65,21,Powerful search for large codebases,Python,a33d283b279766e7422802f00c75b48ed75836d4,Address reviewer comments
380,https://api.github.com/repos/mozilla/dxr/pulls/501,501,Unpin Rust,"On top of #495, those commits should disappear once that is merged.
",nrc,762626,2015-12-17T20:57:31Z,CONTRIBUTOR,False,131,65,21,Powerful search for large codebases,Python,2147f9b08023cba1642f3230817d9c6da949203a,Unpin Rust
381,https://api.github.com/repos/mozilla/dxr/pulls/500,500,Get the clang plugin to recognize multiple directly overridden functions,"If a virtual function overrides virtuals in multiple direct base classes, all of
the overriddens should be recognized.
",kleintom,632915,2015-12-16T21:54:13Z,CONTRIBUTOR,True,22,23,3,Powerful search for large codebases,Python,2f2b0dd28c09dfee9a1949fd76d1164200f6590c,"Get the clang plugin to recognize multiple directly overridden functions

If a virtual function overrides virtuals in multiple direct base classes, all of
the overriddens should be recognized."
382,https://api.github.com/repos/mozilla/dxr/pulls/498,498,Unpin the version of rust.,"Nightly seems to have been working in prod for some time, so let's track it for awhile.
",erikrose,295816,2015-12-10T15:46:32Z,MEMBER,False,1,1,1,Powerful search for large codebases,Python,338451e036c22991ae694ef10613b3ade7f8ad00,"Unpin the version of rust.

Nightly seems to have been working in prod for some time, so let's track it for awhile."
383,https://api.github.com/repos/mozilla/dxr/pulls/497,497,Get the clang plugin to recognize pure virtuals for overrides/overrid…,"…dens
",kleintom,632915,2015-12-03T18:57:03Z,CONTRIBUTOR,True,13,10,2,Powerful search for large codebases,Python,b7d0ff73ffb28c7e6b0bd6c446963906bd811f44,Get the clang plugin to recognize pure virtuals for overrides/overriddens
384,https://api.github.com/repos/mozilla/dxr/pulls/496,496,Remove ARG command from Dockerfile.,"Travis's Docker no longer seems to understand it. Perhaps they downgraded? Anyway, we're not really using it yet.
",erikrose,295816,2015-12-01T22:03:29Z,MEMBER,True,1,6,1,Powerful search for large codebases,Python,4dc0715073defcc66ec94b0e511d28430d821615,"Remove ARG command from Dockerfile.

Travis's Docker no longer seems to understand it. Perhaps they downgraded? Anyway, we're not really using it yet."
385,https://api.github.com/repos/mozilla/dxr/pulls/495,495,Some changes to the Rust plugin,"These are needed to build Cargo projects such as Rustfmt and Servo. There are a couple of fixes outside the plugin too - I think these are just minor bug fixes.
",nrc,762626,2015-11-28T01:18:07Z,CONTRIBUTOR,True,130,64,20,Powerful search for large codebases,Python,2ce40c470bdf7f0f490ecdf703c5be61d86942b0,Misc. changes to build Cargo projects
386,https://api.github.com/repos/mozilla/dxr/pulls/495,495,Some changes to the Rust plugin,"These are needed to build Cargo projects such as Rustfmt and Servo. There are a couple of fixes outside the plugin too - I think these are just minor bug fixes.
",nrc,762626,2015-11-28T01:18:07Z,CONTRIBUTOR,True,130,64,20,Powerful search for large codebases,Python,871bfbd8287459a2e0940d084c3e41fb0e24b2bd,"Testing

note that the newly commented out tests were failing before this patch queue"
387,https://api.github.com/repos/mozilla/dxr/pulls/495,495,Some changes to the Rust plugin,"These are needed to build Cargo projects such as Rustfmt and Servo. There are a couple of fixes outside the plugin too - I think these are just minor bug fixes.
",nrc,762626,2015-11-28T01:18:07Z,CONTRIBUTOR,True,130,64,20,Powerful search for large codebases,Python,5a5aca2c635a85fb74683850947a53e997a4005e,Address reviewer comments
388,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,9f383744d302b8133e71c8f3efff8def95bb8056,"Add dockerfiles for dxr and elasticsearch development, and makefile
targets."
389,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,56f0708d0a28d67c9e2ae3ae5e1be5d45611fb71,Update docker readme
390,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,06b34370ce227b2a346e0b2d116e295f1cdd19d8,"Make DXR's docker image independent of the prod one; we'll have prod depend on this.

Both the docker images now build. Other stuff is probably broken.

Start combining the best of klibby, peter, and jamon's PRs, along with some Docker-recommended best practices.

Sources:
* https://github.com/mozilla/dxr/pull/488
* https://github.com/mozilla/dxr/pull/415
* https://github.com/klibby/dxr-docker/tree/master/docker/ubuntu-indexer"
391,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,fb97d03e67651dcbb50a0b7efe81a6c2de744fde,"Get the basics of docker development working.

* `make shell` from host provides interactive use and debugging.
* `make docs` is a new target that builds the docs, making sure Sphinx and dxr itself are installed to ward off import errors.
* `make dev` installs some developer conveniences.
* Run `make docker_test` on the host to runs tests in a container and exit.
* Have make install dxr itself, and be smart about when to redo it, like when entry points or Dockerfiles change. Also support a DXR_PROD=1 option for non-editable installs.
* Put make in charge of creating a venv if there isn't an active one already. This enables us to keep our installed requirements across container instantiations.

To come: move files around. Delete vagrant stuff. Use docker-compose probably."
392,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,4704da7bb9cc85e5ef2054dbc02a204348b93760,Clean up unused stuff.
393,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,c37aa17df2dabb4b50e83c596f20fbbf23c20ad4,"Switch to docker-compose, which simplifies things greatly.

Add an untested Travis file."
394,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,39f819aa5ba20d3340fa7a749f914665d1245b30,"Forward the ES container's ports to the docker-machine machine.

This works because the dev container is sharing the ES one's network stack. We can visit http://ip-of-docker-machine:8000/ and see whatever we're `dxr serve -a`-ing from the dev container."
395,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,a34a0b519f3fded43c50c7739df5ca09deaaeb74,"Stop calling setup.py from make test. Fixes bug 1220965.

Now that the makefile is responsible for installing not only the dependencies but dxr itself, we can know that everything is set up before attempting to run the tests, not needing setuptools to do it for us."
396,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,6fe95e13c2d3b89de0e7e9fbab51a81afce6c219,Automatically update images before running.
397,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,a3d5ba5f936fc29cd4d9f44a5a8fdf30e5b7bed5,"chown the source checkout's contents to the container user.

This dodges permission errors when writing. Travis now works!"
398,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,79ba723588a109f7e89827f52e46cc449af904fd,Set DXR_PROD=1 so Travis tests that our MANIFEST.in is right.
399,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,86bcaffb024a5b6053e3f7396c3d483eb01d43e6,Move all the top-level cruft we can to a tooling dir.
400,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,db80bc5ae5b44467fd8a0734a05f2119f3fdc59c,"Add a --uid arg to the dev Dockerfile for those intrepid souls on Linux and calling docker directly.

docker-compose does not yet support the --build-arg arg: https://github.com/docker/compose/issues/2111. When it does, we can set this from the makefile, solve the problem of non-matching UIDs for Linux devs, and let us get rid of the chmod in Travis.

Also combine 2 ENV commands to save a snapshot."
401,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,fba902af2a0cf67a71aec181131d85a3e747d604,Move node cruft to tooling/.
402,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,0a36bd480d8700e45ee436bf6ee5a36e3dc72951,Merge master into docking to get Tom's deployment doc edits.
403,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,0c3a6982c55ac04b95e5dbb9ada303c9c68fb7a6,Update docs for Docker.
404,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,c04627aaa29fc63b3cc9a434b4d9ff2ef2f5eb86,"More explicitly set DXR_PROD=1 in Travis.

Maybe it will work now."
405,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,9b571c870e19c251a34bd73a27ae0daaf95facea,List Travis as our CI in contribute.json.
406,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,0172a686de8d977dfbf27d781534e835d962e042,"Add a deploy step in which Travis slides a ""ci"" branch to the latest passing commit.

Our servers can periodically fetch this and compare it with the currently deployed hash."
407,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,3cee34faad8a413bfc871a5b49f5adcba9bdd8a1,"Skip the ""git stash"" step before deploy, which should make our Travis logs a great deal shorter.

There's probably something about our chown that's ruining stash's day: https://github.com/kubernetes/kubernetes/issues/14378."
408,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,5f56baccd2d2ce93db47c270f79f8316593b4acf,Add Travis IRC notifications.
409,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,82917417f9272367b4189280fbdb42400b03a6ae,"Tersen IRC template, and add commit message."
410,https://api.github.com/repos/mozilla/dxr/pulls/494,494,Mix the best of pelmers' and jamonation's work to get DXR running on Docker on Travis,"…because they're about to box up our Jenkins server.

Especially interesting are the new make targets. See the commit message on fb97d03e67651dcbb50a0b7efe81a6c2de744fde.

Future:
- Refactor things so they're more reusable in prod.
- Maybe publish docker images. What use is this? Will it make deploys any faster or more reliable? How do people trust them?
- Pass ES_HEAP_SIZE (or something) env var through to the es container, as described at https://hub.docker.com/r/library/elasticsearch/.
- Make sure ES data persists across container instantiations.
- Call docker-machine automatically on the Mac.
- Maybe we can move the venv back out of the source dir for performance. With docker-compose in the picture now, we may be able to convince it with volumes-from or something to not evaporate things outside the source dir from one ""make shell"" to the next.
- When docker-compose supports --build-arg (https://github.com/docker/compose/issues/2111), we can add one for UID so we can, from an env var on the host, set the UID of the unprivileged user in the container. This will solve the problem of non-matching UIDs for Linux devs and let us get rid of the chmod in Travis.
",erikrose,295816,2015-11-24T05:24:26Z,MEMBER,True,343,354,474,Powerful search for large codebases,Python,060137c2e17ba5744ccc190f0e1c98f41a9879f1,"Port `dxr deploy` to Travis. Remove `branch` option for now.

I didn't set up any staging branches in Travis since we rarely use them."
411,https://api.github.com/repos/mozilla/dxr/pulls/493,493,Doc updates,,kleintom,632915,2015-11-19T05:25:18Z,CONTRIBUTOR,True,97,40,5,Powerful search for large codebases,Python,04516b1f2ceb21681f33e8b1d48e41d09c9a6cb2,Doc updates
412,https://api.github.com/repos/mozilla/dxr/pulls/492,492,Catch UnicodeDecodeError when doing the initial analysis on Python files,"If a file is encoded in some other encoding and has a sequence of
bytes that prevents it from being interpreted as UTF-8, it'll get
slurped up as a bytestring instead of a unicode string.  And in that
case, it'll probably hit the ast_parse utility function and throw this
error.
",jbradberry,685957,2015-11-18T23:41:49Z,CONTRIBUTOR,True,20,20,2,Powerful search for large codebases,Python,6f48fabcb263e88a7caac6cc955d5be995877633,"Catch UnicodeDecodeError when doing the initial analysis on Python files.

If a file is encoded in some other encoding and has a sequence of
bytes that prevents it from being interpreted as UTF-8, it'll get
slurped up as a bytestring instead of a unicode string.  And in that
case, it'll probably hit the ast_parse utility function and throw this
error."
413,https://api.github.com/repos/mozilla/dxr/pulls/492,492,Catch UnicodeDecodeError when doing the initial analysis on Python files,"If a file is encoded in some other encoding and has a sequence of
bytes that prevents it from being interpreted as UTF-8, it'll get
slurped up as a bytestring instead of a unicode string.  And in that
case, it'll probably hit the ast_parse utility function and throw this
error.
",jbradberry,685957,2015-11-18T23:41:49Z,CONTRIBUTOR,True,20,20,2,Powerful search for large codebases,Python,fea7d3c842ba07d9a0b0b6492413f781fd692f46,Fixed some yield_needle calls that weren't covered by the null start check.
414,https://api.github.com/repos/mozilla/dxr/pulls/491,491,Deal with Python node location lookups that fail to exist in the lookup tables,"Currently, this should only be method calls.  This happens because the
ast node for calls point to the first token in the chain, instead of
the method token.
",jbradberry,685957,2015-11-17T23:17:35Z,CONTRIBUTOR,True,33,5,2,Powerful search for large codebases,Python,07436585e4d57f020cb0bc874fd1f103ac225f05,"Deal with Python node location lookups that fail to exist in the lookup tables.

Currently, this should only be method calls.  This happens because the
ast node for calls point to the first token in the chain, instead of
the method token."
415,https://api.github.com/repos/mozilla/dxr/pulls/489,489,Get clang plugin overrides and overriddens menu entries working again.,"Partially fixes bug 1191562.  The remaining cases where the
overrides and overriddens menu options still don't appear are for a
pure virtual function and its override.
",kleintom,632915,2015-11-11T22:35:29Z,CONTRIBUTOR,True,153,24,9,Powerful search for large codebases,Python,ac2b517e643e40850de28131ca3ecdd1548220a2,"Get clang plugin overrides and overriddens menu entries working again.

Partially fixes bug 1191562.  The remaining cases where the
overrides and overriddens menu options still don't appear are for a
pure virtual function and its override."
416,https://api.github.com/repos/mozilla/dxr/pulls/489,489,Get clang plugin overrides and overriddens menu entries working again.,"Partially fixes bug 1191562.  The remaining cases where the
overrides and overriddens menu options still don't appear are for a
pure virtual function and its override.
",kleintom,632915,2015-11-11T22:35:29Z,CONTRIBUTOR,True,153,24,9,Powerful search for large codebases,Python,62eabc5c20f6e295160f3c043bcf95d1485b3e68,"Show the ""Find Overriden""/""Find Overrides"" menu option only when overridens, respectively overrides, exist.

This commit also addresses review comments on the previous commit."
417,https://api.github.com/repos/mozilla/dxr/pulls/488,488,Simple docker dev environment,"Add dockerfiles for dxr and elasticsearch development, and makefile targets.

Taking a different approach from #415, I build upon fubar's dxr-docker image to make a dev image by replacing the Github DXR pull with the local copy.

Usage:
Prereq: Have docker running.
1. Build elasticsearch image and run it. `make es`
2. Build DXR image. `make image`
3. Run tests/index some code. `make tests` or `make index clean serve`
Remark: can specify tests via `make tests TESTS=tests/test_<...>.py`

TODO:
update docs.
maybe use docker-compose to setup the two docker images at once.

Some questions:
Would it be better to bring dxr-docker in first?
",pelmers,2406051,2015-11-09T17:45:31Z,CONTRIBUTOR,True,69,2,7,Powerful search for large codebases,Python,9f383744d302b8133e71c8f3efff8def95bb8056,"Add dockerfiles for dxr and elasticsearch development, and makefile
targets."
418,https://api.github.com/repos/mozilla/dxr/pulls/488,488,Simple docker dev environment,"Add dockerfiles for dxr and elasticsearch development, and makefile targets.

Taking a different approach from #415, I build upon fubar's dxr-docker image to make a dev image by replacing the Github DXR pull with the local copy.

Usage:
Prereq: Have docker running.
1. Build elasticsearch image and run it. `make es`
2. Build DXR image. `make image`
3. Run tests/index some code. `make tests` or `make index clean serve`
Remark: can specify tests via `make tests TESTS=tests/test_<...>.py`

TODO:
update docs.
maybe use docker-compose to setup the two docker images at once.

Some questions:
Would it be better to bring dxr-docker in first?
",pelmers,2406051,2015-11-09T17:45:31Z,CONTRIBUTOR,True,69,2,7,Powerful search for large codebases,Python,56f0708d0a28d67c9e2ae3ae5e1be5d45611fb71,Update docker readme
419,https://api.github.com/repos/mozilla/dxr/pulls/487,487,Change the Python callers needle to point to the call site,"This is desirable for consistency with the clang plugin.

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1221137
",jbradberry,685957,2015-11-07T17:22:07Z,CONTRIBUTOR,True,75,45,2,Powerful search for large codebases,Python,0441599612d001aefc4a563f478d638b6c9799c6,"Renamed test_calls.py to test_callers.py in the Python plugin.

For consistency with the clang plugin's test modules and the actual
needle name."
420,https://api.github.com/repos/mozilla/dxr/pulls/487,487,Change the Python callers needle to point to the call site,"This is desirable for consistency with the clang plugin.

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1221137
",jbradberry,685957,2015-11-07T17:22:07Z,CONTRIBUTOR,True,75,45,2,Powerful search for large codebases,Python,a1d242e1921f5fc5c8c25a682665c9b2e908d6e8,"Adjusted the tests of py-callers to match the desired behavior.

Pointing to the call site, not the function header of the function
they were called within."
421,https://api.github.com/repos/mozilla/dxr/pulls/487,487,Change the Python callers needle to point to the call site,"This is desirable for consistency with the clang plugin.

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1221137
",jbradberry,685957,2015-11-07T17:22:07Z,CONTRIBUTOR,True,75,45,2,Powerful search for large codebases,Python,e66555345fde1879933733732088aa873d68a191,"Removed the function call stack.

Needles for py-callers now point to the start and end of the token of
the called function.  However, we still need to include the parameters
of the calls."
422,https://api.github.com/repos/mozilla/dxr/pulls/487,487,Change the Python callers needle to point to the call site,"This is desirable for consistency with the clang plugin.

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1221137
",jbradberry,685957,2015-11-07T17:22:07Z,CONTRIBUTOR,True,75,45,2,Powerful search for large codebases,Python,571b1c4170842e730ad53473b4735f32b6c330dd,Include the call parameters in the py-callers needle.
423,https://api.github.com/repos/mozilla/dxr/pulls/487,487,Change the Python callers needle to point to the call site,"This is desirable for consistency with the clang plugin.

See also: https://bugzilla.mozilla.org/show_bug.cgi?id=1221137
",jbradberry,685957,2015-11-07T17:22:07Z,CONTRIBUTOR,True,75,45,2,Powerful search for large codebases,Python,a3cf1e083a6e35c9a028c23612d644d3cd246ac6,Minor adjustment to make sure that token state gets cleared.
424,https://api.github.com/repos/mozilla/dxr/pulls/486,486,Move the remaining C++-specific assumptions out of dxr.testing.,"SingleFileTestCase is now language-agnostic but still concrete.

Deleted a few MINIMAL_MAINs that were there only to make the compiler happy. Now we don't run the compiler in those cases. As a bonus, those tests will be a bit faster.
",erikrose,295816,2015-11-06T22:54:43Z,MEMBER,True,113,95,24,Powerful search for large codebases,Python,ea076e827004d7d40bc307a82c8617bb44998a78,"Move the remaining C++-specific assumptions out of dxr.testing.

SingleFileTestCase is now language-agnostic but still concrete.

Deleted a few MINIMAL_MAINs that were there only to make the compiler happy. Now we don't run the compiler in those cases. As a bonus, those tests will be a bit faster."
425,https://api.github.com/repos/mozilla/dxr/pulls/485,485,Quadruple the speed of long page renders. Fixes bug #1216266.,"Replace url_for() with simple, specialized implementations for tight loops. Leave it alone elsewhere, because I still trust the Flask version more.

Flask's url_for() does a lot of fancy adapter stuff. And then fully 1/3 of its run time is Werkzeug's custom impl of url_quote(), which iterates over each char in every substituted value and encodes them individually. I'm not sure what the advantage of that is: perhaps something Python-3-specific.

For the record, the alternative gymnastics for getting the blueprint's url_prefix was current_app.url_map._rules_by_endpoint['dxr_blueprint.index'][0].rule[:-1]. Just tacking a global onto the app was less likely to break, I judged.

I looked into using various methods to hook url_for() so I could still use it everywhere but specialize it in certain cases. The proper hooks weren't there, and using the improper ones (like overriding the Rule class) would bring in so much complexity as to not be worth the more uniform API.

TestCase is no longer abstract. Now it can serve for tests that need no build step: only an application context. Remove the calling order dependency between url_for() and client().

Stop passing entire TreeConfigs into the URL builders; they don't need them.
",erikrose,295816,2015-11-06T00:26:48Z,MEMBER,True,143,66,8,Powerful search for large codebases,Python,c2cf2a39ec920d8bbf17797bce6dfc1b3ad39e5c,"Quadruple the speed of long page renders. Fixes bug #1216266.

Replace url_for() with simple, specialized implementations for tight loops. Leave it alone elsewhere, because I still trust the Flask version more, and it's more flexible.

Flask's url_for() does a lot of fancy adapter stuff. And then fully 1/3 of its run time is Werkzeug's custom impl of url_quote(), which iterates over each char in every substituted value and encodes them individually. I'm not sure what the advantage of that is: perhaps something Python-3-specific.

For the record, the alternative gymnastics for getting the blueprint's url_prefix was current_app.url_map._rules_by_endpoint['dxr_blueprint.index'][0].rule[:-1]. Just tacking a global onto the app was less likely to break, I judged.

I looked into using various methods to hook url_for() so I could still use it everywhere but specialize it in certain cases. The proper hooks weren't there, and using the improper ones (like overriding the Rule class) would bring in so much complexity as to not be worth the more uniform API.

TestCase is no longer abstract. Now it can serve for tests that need no build step: only an application context. Remove the calling order dependency between url_for() and client().

Stop passing entire TreeConfigs into the URL builders; they don't need them."
426,https://api.github.com/repos/mozilla/dxr/pulls/483,483,Fix a bug which causes field and variable references to be self-links,"Can we test this? It only manifests when you click 'jump to definition' on a variable's menu.
",nrc,762626,2015-11-04T04:33:55Z,CONTRIBUTOR,True,32,1,3,Powerful search for large codebases,Python,b15c093acce353ba33f53554b822f4981b8281ad,Fix a bug which causes field and variable references to be self-links
427,https://api.github.com/repos/mozilla/dxr/pulls/482,482,Remove case sensitivity checkbox.,"Remark: the previous PR, #460 targeted the 'es' branch, but that has since merged into 'master.' So I have to open a new PR. The contents should be the same.

If any text is uppercase, then assume case sensitive. Otherwise, assume it’s insensitive. Use an @ sigil in front of a text term to force case sensitive. This also gives us per-term case sensitivity.

Notes from 11/3:
- Create a 'case' operator modifier, and consider turning '+' and '-' into operators too (qual, not).
  My initial idea is to expand the grammar to differentiate between ""operators"" (var, ref, id, etc.) which affect the _filter query_ and ""modifiers"" (not, qual, case) which affect the _search term_ itself.
",pelmers,2406051,2015-11-04T03:31:32Z,CONTRIBUTOR,False,96,191,17,Powerful search for large codebases,Python,ce4e4c2b7bac81714cbe996a161d562dfe3998f3,"Remove case sensitivity checkbox.

Case sensitivity is implicit: any uppercase characters in a term forces
the term to case-sensitive."
428,https://api.github.com/repos/mozilla/dxr/pulls/480,480,Adjust pop-up event handling.,"This changes three things:
1) A right or middle click on the tree selector (or filter) menu
   no longer dismisses the menu;
2) As a side effect, Bug 965666 is fixed (opening a menu or help or
   the context menu closes any other open pop-up).
3) The Help menu now closes on Escape.
",kleintom,632915,2015-11-03T19:47:04Z,CONTRIBUTOR,True,51,24,4,Powerful search for large codebases,Python,d8ce5414cbc3574a33dd19e5666cf4b83436822a,"Adjust pop-up event handling.

This changes three things:
1) A right or middle click on the tree selector (or filter) menu
   no longer dismisses the menu;
2) As a side effect, Bug 965666 is fixed (opening a menu or help or
   the context menu closes any other open pop-up).
3) The Help menu now closes on Escape."
429,https://api.github.com/repos/mozilla/dxr/pulls/478,478,Get Escape key handling working again.,"Re-fix Bug 1153726 by updating the event key value for Escape for
recent versions of gecko: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key
",kleintom,632915,2015-11-03T16:41:05Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,766d0f8dad0c1f68ce4c4cab61584d89d2e39cb6,"Get Escape key handling working again.

Re-fix Bug 1153726 by updating the event key value for Escape for
recent versions of gecko."
430,https://api.github.com/repos/mozilla/dxr/pulls/477,477,Make make responsible for installing python requirements. Fixes bug #…,"…1060463.

This gives contribs who are new to Python a fighting chance to get their requirements updated without bothering me: when they run make.

For now, uninstalling the Python requirements isn't included in `make clean`. Development may or may not take place inside the vagrant box, and, if it isn't, wiping out somebody's venv (hopefully it's a venv!) would be surprising.

Also...
- Modernize setup.py develop call to a pip call.
- Remove a stray reference to the deleted ""templates"" make target.
- Requirements no longer get installed during vagrant provisioning. They'll get installed when make is run.
",erikrose,295816,2015-11-02T22:34:39Z,MEMBER,True,18,11,4,Powerful search for large codebases,Python,a7daaaaad2d0f8ed54c0a5385347b597489463f8,"Make make responsible for installing python requirements. Fixes bug #1060463.

This gives contribs who are new to Python a fighting chance to get their requirements updated without bothering me: when they run make.

For now, uninstalling the Python requirements isn't included in `make clean`. Development may or may not take place inside the vagrant box, and, if it isn't, wiping out somebody's venv (hopefully it's a venv!) would be surprising.

Also...
* Modernize setup.py develop call to a pip call.
* Remove a stray reference to the deleted ""templates"" make target.
* Requirements no longer get installed during vagrant provisioning. They'll get installed when make is run."
431,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,0441599612d001aefc4a563f478d638b6c9799c6,"Renamed test_calls.py to test_callers.py in the Python plugin.

For consistency with the clang plugin's test modules and the actual
needle name."
432,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,a1d242e1921f5fc5c8c25a682665c9b2e908d6e8,"Adjusted the tests of py-callers to match the desired behavior.

Pointing to the call site, not the function header of the function
they were called within."
433,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,e66555345fde1879933733732088aa873d68a191,"Removed the function call stack.

Needles for py-callers now point to the start and end of the token of
the called function.  However, we still need to include the parameters
of the calls."
434,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,571b1c4170842e730ad53473b4735f32b6c330dd,Include the call parameters in the py-callers needle.
435,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,a3cf1e083a6e35c9a028c23612d644d3cd246ac6,Minor adjustment to make sure that token state gets cleared.
436,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,5f57eda037138f168de20144e60dde442090e216,"Added a wrapper around ast.parse to strip the encoding declaration comment.

Due to Python issue #22221, compiling a unicode string that contains
an encoding declaration comment raises a SyntaxError.  Here we strip
it out if there is a match in the first two lines of the file (since
such declarations are only active in the top two lines) and replace
with an empty line.  The resultant modified file content lines are
then passed to ast.parse after being rejoined.

These modifications are not disruptive since there will be no further
column offsets after the newline, and the encoding declaration line
must contain nothing other than whitespace and the comment."
437,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,f55333defca73a38cd2f09a760565ce43763f304,"Modified analyze_tokens to tokenize the unicode and utf-8 versions of the file.

Python's tokenize library will accept either unicode or strings, and
will give you column offsets for the tokens in characters for unicode
and in bytes for strings.

We now pass both versions of the file to tokenize, and build up the
node_start_table using the utf-8 byte offset that the ast module's
nodes would provide as the keys, and the tuple of unicode character
offsets of both the start and end of the token for the values.  And
since we now provide the full start and end, don't bother to calculate
it based on the node name length in get_node_start_end."
438,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,258691939753be6a345ad21a70994e81747bae34,Added a test checking that Python files with an encoding comment aren't skipped.
439,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,5fdada0e9a45f3c154ec6ed8bbb538bd5e2cb521,Added test checking utf-8 bytes vs unicode character offsets.
440,https://api.github.com/repos/mozilla/dxr/pulls/476,476,Fix problems with Python encoding declarations and column offsets,"Due to https://bugs.python.org/issue22221, attempts to index Python files that contain encoding declarations at the top (e.g. `# -*- coding: utf-8 -*-`) will raise a SyntaxError, causing those files to be skipped.

Additionally, the ast.parse function will yield nodes with column offsets calculated in utf-8 bytes, not unicode characters.
",jbradberry,685957,2015-10-31T17:02:23Z,CONTRIBUTOR,True,151,51,5,Powerful search for large codebases,Python,5cbd00eb779600af29549895d8594128915c4b7d,Made the test comments into docstrings.
441,https://api.github.com/repos/mozilla/dxr/pulls/475,475,"Fix bug 1195855, prevent error on some Rust ref: searches.","https://bugzilla.mozilla.org/show_bug.cgi?id=1195855.
It looks like for crates in rustc, the 'name' field of the needle is an integer, which breaks maybe_lower of filter highlighting. For example, consider the query https://dxr.mozilla.org/rust/search?q=ref:std

It also seems that in some cases the 'name' field of the needle is not even present, which seems to be the case for searches such as https://dxr.mozilla.org/rust/search?q=ref:test
However I haven't had any luck constructing a minimal test case for this part of the bug.
@nrc any ideas?

The fix simply makes sure that 'name' exists and is a string.
",pelmers,2406051,2015-10-29T15:37:39Z,CONTRIBUTOR,False,57,1,6,Powerful search for large codebases,Python,14f5ee3c596c913a08184fc30d192b3ea546faaa,"Fix bug 1195855, prevent error on some Rust ref: searches."
442,https://api.github.com/repos/mozilla/dxr/pulls/474,474,"Delete the ""templates"" make target.","The new deploy script is in place.
",erikrose,295816,2015-10-26T17:25:41Z,MEMBER,True,0,3,1,Powerful search for large codebases,Python,65baabfa0518f726c69df45a68952ca51dcab5a3,"Delete the ""templates"" make target.

The new deploy script is in place."
443,https://api.github.com/repos/mozilla/dxr/pulls/473,473,Removed the called-by filter.,"Support had already been removed, this just cleans up the last
vestiges.  See #399.
",jbradberry,685957,2015-10-24T01:26:19Z,CONTRIBUTOR,True,5,16,5,Powerful search for large codebases,Python,0e7d98f64001db3b8cbcdbe0b0763e8faee213b5,"Removed the called-by filter.

Support had already been removed, this just cleans up the last
vestiges.  See #399."
444,https://api.github.com/repos/mozilla/dxr/pulls/472,472,"Display SVGs as XML, and add link to view as image.","Fixes bug 1202598. https://bugzilla.mozilla.org/show_bug.cgi?id=1202598

Also normalize extension to lowercase when looking up in the extension map, so that .svg and .SVG are treated the same.
",pelmers,2406051,2015-10-21T16:32:59Z,CONTRIBUTOR,True,33,19,6,Powerful search for large codebases,Python,f36c41e961ab411da8cb0e4d59f6b9257ee17a5c,"Display SVGs as XML, and add link to view as image.

Fixes bug 1202598."
445,https://api.github.com/repos/mozilla/dxr/pulls/472,472,"Display SVGs as XML, and add link to view as image.","Fixes bug 1202598. https://bugzilla.mozilla.org/show_bug.cgi?id=1202598

Also normalize extension to lowercase when looking up in the extension map, so that .svg and .SVG are treated the same.
",pelmers,2406051,2015-10-21T16:32:59Z,CONTRIBUTOR,True,33,19,6,Powerful search for large codebases,Python,9c747393e8cbfda826d0eaa56501fc9433c71354,"Respond to comments, factor svg detection into mime.is_indexable_image."
446,https://api.github.com/repos/mozilla/dxr/pulls/472,472,"Display SVGs as XML, and add link to view as image.","Fixes bug 1202598. https://bugzilla.mozilla.org/show_bug.cgi?id=1202598

Also normalize extension to lowercase when looking up in the extension map, so that .svg and .SVG are treated the same.
",pelmers,2406051,2015-10-21T16:32:59Z,CONTRIBUTOR,True,33,19,6,Powerful search for large codebases,Python,849f0095878896424f310e917151c34e19d6b7ef,Remove inconsistent usage of lower() on extension.
447,https://api.github.com/repos/mozilla/dxr/pulls/471,471,Fix crashes in Rust plugin.,"This is a stop gap fix, the real fix is in the compiler and I'm working on it, in the meantime this stops crashes during indexing so at least we'll have an index, even if some links are incomplete.
",nrc,762626,2015-10-13T22:00:02Z,CONTRIBUTOR,True,3,0,1,Powerful search for large codebases,Python,fa4c910671dd6396a8697e140204d3b07c757ce6,"Fix crashes in Rust plugin.

This is a stop gap fix, the real fix is in the compiler and I'm working on it, in the meantime this stops crashes during indexing so at least we'll have an index, even if some links are incomplete."
448,https://api.github.com/repos/mozilla/dxr/pulls/470,470,Static Asset Cachebusting,"Add hashes to all static assets so we can deploy with impunity. No more clusters of 6 ""yeah, you have to reload"" bugs every time we update the JS.

Webpack turns out to be a dead end; it requires us to eat the elephant of re-expressing the entire app in ES6 modules. It's also another 30MB of nodejs.

This is 46 lines of makefile and a little Python. It's not the prettiest thing in the world, but it doesn't require a whole new flavor of tooling, it runs fast, and it's mostly smart about avoiding unnecessary work at build time. There's still a bit more repetition in there than I'd like, but we can evolve from here.
",erikrose,295816,2015-10-05T06:26:43Z,MEMBER,True,346,211,105,Powerful search for large codebases,Python,6d18dbf2cf38ccbdb39fbe75659204e0645aa526,"Move templates out of static folder.

There's no sense serving them to the public. The built templates.js lives in static/js.

Also remove unused dxr.icons and dxr.views vars."
449,https://api.github.com/repos/mozilla/dxr/pulls/470,470,Static Asset Cachebusting,"Add hashes to all static assets so we can deploy with impunity. No more clusters of 6 ""yeah, you have to reload"" bugs every time we update the JS.

Webpack turns out to be a dead end; it requires us to eat the elephant of re-expressing the entire app in ES6 modules. It's also another 30MB of nodejs.

This is 46 lines of makefile and a little Python. It's not the prettiest thing in the world, but it doesn't require a whole new flavor of tooling, it runs fast, and it's mostly smart about avoiding unnecessary work at build time. There's still a bit more repetition in there than I'd like, but we can evolve from here.
",erikrose,295816,2015-10-05T06:26:43Z,MEMBER,True,346,211,105,Powerful search for large codebases,Python,19ca79cae3963d718a9eca164d9fc8afcadafd1d,"Teach the makefile how to hash static assets.

To come: teach the web app how to find them."
450,https://api.github.com/repos/mozilla/dxr/pulls/470,470,Static Asset Cachebusting,"Add hashes to all static assets so we can deploy with impunity. No more clusters of 6 ""yeah, you have to reload"" bugs every time we update the JS.

Webpack turns out to be a dead end; it requires us to eat the elephant of re-expressing the entire app in ES6 modules. It's also another 30MB of nodejs.

This is 46 lines of makefile and a little Python. It's not the prettiest thing in the world, but it doesn't require a whole new flavor of tooling, it runs fast, and it's mostly smart about avoiding unnecessary work at build time. There's still a bit more repetition in there than I'd like, but we can evolve from here.
",erikrose,295816,2015-10-05T06:26:43Z,MEMBER,True,346,211,105,Powerful search for large codebases,Python,13451f6457bc479da9c95cf736a303bf9029848a,"Teach web app how to ask for hashed assets.

* Add a HashedStatics Flask extension that intercepts static url_fors and inserts hashes.
* Stop assembling the favicon in the file.html template, because that prevents us from hashing it.
* Quit putting ""/static/"" at the front of every manifest line. It turns out the implementation is easier without.
* Make leaf_manifest target depend on templates.js; we were missing out on hashing that."
451,https://api.github.com/repos/mozilla/dxr/pulls/468,468,Random change to test VirtualBox on Jenkins,,erikrose,295816,2015-09-02T16:14:21Z,MEMBER,False,0,0,1,Powerful search for large codebases,Python,bff0096c8a7c2511e32fa9a769bd73130017adec,Random change to test VirtualBox on Jenkins
452,https://api.github.com/repos/mozilla/dxr/pulls/467,467,Better makefile,"f? I haven't tested the JS yet.

Makefile is now sane. You can run ""make"" with impunity.
- It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
- It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
- `make clean` now removes the installed node modules.

Also upgrade nunjucks to 2.0 and npm-lockdown to 0.0.6.

Also also remove Grunt, so we only need 5MB of node modules rather than 30MB.
",erikrose,295816,2015-08-30T01:41:53Z,MEMBER,True,28496,8640,495,Powerful search for large codebases,Python,a61c5283abbdef00c67089c05276a4249bb30c15,"Rewrite makefile.

You can now run ""make"" with impunity.

* It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
* It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
* `make clean` now removes the installed node modules.

Move the client-side templates into a nunjucks folder so we can find them all with a glob. The ""partial"" folder didn't have a well-defined semantic."
453,https://api.github.com/repos/mozilla/dxr/pulls/467,467,Better makefile,"f? I haven't tested the JS yet.

Makefile is now sane. You can run ""make"" with impunity.
- It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
- It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
- `make clean` now removes the installed node modules.

Also upgrade nunjucks to 2.0 and npm-lockdown to 0.0.6.

Also also remove Grunt, so we only need 5MB of node modules rather than 30MB.
",erikrose,295816,2015-08-30T01:41:53Z,MEMBER,True,28496,8640,495,Powerful search for large codebases,Python,f8618cbfe7acd6592de6b32bc13bae6d3fb5a547,"Get rid of Grunt. That was 30MB of node modules we didn't need. Upgrade to nunjucks 2.0.

We never used any of that gadgetry. We can reintroduce the pieces we need when we get around to a JS test harness. Until then, we can enjoy lighter-weight installs.

WTF: Why no shasums for certain packages?"
454,https://api.github.com/repos/mozilla/dxr/pulls/467,467,Better makefile,"f? I haven't tested the JS yet.

Makefile is now sane. You can run ""make"" with impunity.
- It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
- It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
- `make clean` now removes the installed node modules.

Also upgrade nunjucks to 2.0 and npm-lockdown to 0.0.6.

Also also remove Grunt, so we only need 5MB of node modules rather than 30MB.
",erikrose,295816,2015-08-30T01:41:53Z,MEMBER,True,28496,8640,495,Powerful search for large codebases,Python,fa4ebb6236b0dfd1b5f48d9fa8562d0b6ed0a202,Upgrade npm-lockdown to 0.0.6.
455,https://api.github.com/repos/mozilla/dxr/pulls/467,467,Better makefile,"f? I haven't tested the JS yet.

Makefile is now sane. You can run ""make"" with impunity.
- It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
- It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
- `make clean` now removes the installed node modules.

Also upgrade nunjucks to 2.0 and npm-lockdown to 0.0.6.

Also also remove Grunt, so we only need 5MB of node modules rather than 30MB.
",erikrose,295816,2015-08-30T01:41:53Z,MEMBER,True,28496,8640,495,Powerful search for large codebases,Python,5d2227cb1b6c0d53ef69810b7031ef170baf3f77,"lockdown-relock under 0.0.6, fixing the sha-less dependencies."
456,https://api.github.com/repos/mozilla/dxr/pulls/467,467,Better makefile,"f? I haven't tested the JS yet.

Makefile is now sane. You can run ""make"" with impunity.
- It will no longer run `npm install` if it doesn't need to, so it will be fast and not hit the network.
- It will rebuild the nunjucks templates if necessary and leave them alone otherwise. You don't need to call `make templates` manually anymore (though it continues to exist so the deploy process can call it and not bother compiling the clang plugin).
- `make clean` now removes the installed node modules.

Also upgrade nunjucks to 2.0 and npm-lockdown to 0.0.6.

Also also remove Grunt, so we only need 5MB of node modules rather than 30MB.
",erikrose,295816,2015-08-30T01:41:53Z,MEMBER,True,28496,8640,495,Powerful search for large codebases,Python,0d77d1e5cf888bc602debf72c3f2ae56c9ccf661,"Update docs with new, simpler make invocation."
457,https://api.github.com/repos/mozilla/dxr/pulls/466,466,Bugs 1183885 and 1191979 regarding offset and limit.,"The first commit of this pair was already reviewed in https://github.com/mozilla/dxr/pull/455, but it was dropped from the master branch most likely when I accidentally temporarily merged to path promotion.

To fix 1191979 (the second commit here), I string.replace offset= and limit= by '' from the ajax URL before updating the history state.
",pelmers,2406051,2015-08-27T15:17:53Z,CONTRIBUTOR,True,26,54,1,Powerful search for large codebases,Python,89c460d8392926f75e41725409fa1251682d4841,"Do not request results when viewing files, fixes bug 1183885.

Previously we were requesting the results of q=“” when viewing files
and scrolling around. Now only start infinite scroll polling
after we do a request.

As a side effect we longer update the URL with unintuitive offset
when we scroll around."
458,https://api.github.com/repos/mozilla/dxr/pulls/466,466,Bugs 1183885 and 1191979 regarding offset and limit.,"The first commit of this pair was already reviewed in https://github.com/mozilla/dxr/pull/455, but it was dropped from the master branch most likely when I accidentally temporarily merged to path promotion.

To fix 1191979 (the second commit here), I string.replace offset= and limit= by '' from the ajax URL before updating the history state.
",pelmers,2406051,2015-08-27T15:17:53Z,CONTRIBUTOR,True,26,54,1,Powerful search for large codebases,Python,4716d330eb5b6b4e9c8c178c715899f5197ab540,"Remove offset= and limit= from search URL, fixes bug 1191979"
459,https://api.github.com/repos/mozilla/dxr/pulls/466,466,Bugs 1183885 and 1191979 regarding offset and limit.,"The first commit of this pair was already reviewed in https://github.com/mozilla/dxr/pull/455, but it was dropped from the master branch most likely when I accidentally temporarily merged to path promotion.

To fix 1191979 (the second commit here), I string.replace offset= and limit= by '' from the ajax URL before updating the history state.
",pelmers,2406051,2015-08-27T15:17:53Z,CONTRIBUTOR,True,26,54,1,Powerful search for large codebases,Python,113ed0eb9a87c78ba988758f654cae37e257734c,Enforce & or ? before offset and limit parameters in regex.
460,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,800585c4fe9573f99cb629f28d74fb6427d44b13,"This works at least for Python menus, as in python.tests.test_types.

* Move Ref and Region to dxr.lines to avoid a circular import.
* Introduce MenuMakers, which enable us to keep the bulk of context menu data in the code and reconstruct it from much more minimal ES data at request time. Profiles suggest this should cut index time substantially by moving the expensive url_for() calls to request time, where they shouldn't be noticed.
* MenuMakers get registered against the plugins that use them so that we can look them up by a dual key of (plugin name, munged class name), without making class names brittle or threatening to load arbitrary classes.
* Toy with clang's menus a bit, but they don't work yet."
461,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,829133c8a4d5e63e9eb5d8d67373545a2eec1d86,"Clang's menus work now, and clang and top-level tests pass.

* Smash the menu data into a string so ES doesn't get whiny about schemas differing from doc to doc. These are meant to be opaque blobs.
* Rename menus() to menu_items(), which is more accurate.
* Move all things to do with self.data to the SingleDatumMenuMaker subclass. Multidata subclasses should feel free to use whatever attrs they like."
462,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,478fd15f451626ad91ef4cc647973bf5f1e3697e,"Bring buglink and urllink plugins up to date.

That should cover all the plugins except rust."
463,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,9a211c5aa353f19d1d1cd8ea51869a52f26efbb6,"Start porting rust menu module to MenuMakers framework.

So far, the Jump*-type menu items are ported.

* Swap order of lines to mostly preserve the jumps-first ordering. (add_jump_definition() used to insert its menu at the front of the list.)
* Transmute some print statements to warnings for consistency with other plugins.
* Fix a bug in add_jump_definition() (which has now become the JumpTo*MenuMaker family of classes) in which it never used the passed-in label but always overwrote it with ""Jump to definition"".
* Remove some useless ""return None""s.
* Make some whitespace conform to PEP 8."
464,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,8328466192f7ef274de927968cf151d6b18b1394,"Convert add_find_references and std_lib_links, and finish function_menu.

Also, quit putting ""ref"" after everything. It's more accurate but confusing when it's a symbol reference in addition to a Ref. We'll think of something else, or maybe those helpers will be factored away altogether."
465,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,5de5ac22a125898674110305d15c8b1cc40fc731,This is actually shorter and just as clean as a SingleDatum.
466,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,6c4e3d5af5e100248528c75f603535c022bc00c4,Port module_menu_generic.
467,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,92ae52271eba9674cfd563dc26de4b1094a71bba,"Port type_menu_generic.

That should be the last of the maker-maker functions. Now to debug."
468,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,15dd39e612dec203a17c577f358b491c5ac98bca,Change the last of the prints to warnings.
469,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,0cef6dc071d87f28ed907833eec451bd3b5a001b,Fix miscellaneous bugs in rust menus and get tests passing.
470,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,34fbd2c13f6ae4774c92b449dbde966e7d63a7e7,Make use of MultiDatumMenuMaker in clang's DefinitionMenuMaker.
471,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,2834a6ceca850ec4e1176bae83fcc26fa334e61c,"Don't register the abstract MenuMaker superclasses.

It didn't hurt anything, but it was kind of silly."
472,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,7af4d4b46c670e8d2a9da5680588512b6d052e01,"Unskip the rust smoketests, and fix the bugs that reveals."
473,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,3165025b2a031fc726629055f196bd85f36aabb7,"Start refactoring to move everything into Ref subclasses and get rid of menumakers, which are just One More Thing and perhaps premature framework.

NEXT: Rewrite some of the clang or rust plugins to the new Ref contract. Then go do Ref registration."
474,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,ac978cd4a6fe9dda5436c373f078f3617e6405b7,"Port clang menus to Ref subclasses. Implement registration of Ref-subclass-based menus.

All tests pass but rust ones.

Also...
* Make kind_getter() tolerate missing fields. I didn't actually run into a missing field, but the other getters tolerate them."
475,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,1db22d7d0570183b965461d2e120034b02171686,"Merge in master, port xpidl and urllink to new Refs."
476,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,f40952d8ec25b585709fe62b77efa6d5e14a242c,Start porting rust plugin to new refs.
477,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,1b51feb8182fd759b8f474b1f8ff151d18223e10,Be more careful about which are iterable.
478,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,fb74b6df9485c308793905f27c5749e1766fe30e,Port ModuleAliasRef and ModuleRefRef.
479,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,f474928e3d34f5f2acd8c3b037741769e610b510,Flip the switches… and things work !???
480,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,e50a09cee77d3d5792fb44656f9f491aa61d7785,Bump jump menus to the top.
481,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,3cadb97016f94df2e0fd1ca3a7e05b80799c67ed,Move preparation out of constructor.
482,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,e971cac80839feefd57044cb97149d5635e4e519,Remove menus.py
483,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,a789f66875d89967b083ce7f5dc08a08e52674e2,"More consistent naming and more docstrings.

Functions that return a single menu item are named _menu_item,
and if they return a list or iterable of items then name them _menu.

Also add ‘find uses’ and ‘find references’ to module refs."
484,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,ce2a30929274895bfa2541f828d24e53c567c28d,Quit hard-coding the plugin name in rust.
485,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,58808915cde0dc64801134df1c9c99cf648f9916,"Fix urllink plugin and add a test.

self.data should be self.menu_data."
486,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,b571654e8e977de7fe17c86ffa88e8b4b42943b9,Compact and simplify Rust's refs() method.
487,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,30b9d04e45c2823117cbacc8c0e7814bd3378f0c,Add a docstring for Ref.opener().
488,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,3c43fee24bfa4d6257b1e240534242b3c87b8878,"Remove duplicate comment which somehow escaped.

(SQUASH with ""Compact and simplify"".)"
489,https://api.github.com/repos/mozilla/dxr/pulls/465,465,Optimize indexing by deferring menu generation to request time.,"The intent is to make clang indexing faster. Benchmarks on the earlier, menu-maker-based version of this showed a 25-50% speed boost.
",erikrose,295816,2015-08-17T21:01:32Z,MEMBER,True,1264,850,33,Powerful search for large codebases,Python,8000d9f8fcd2221beb8155a2e80e684ec683ef95,Wrap some comments and docstrings.
490,https://api.github.com/repos/mozilla/dxr/pulls/464,464,Keep core plugin from double-contributing. Fixes bug 1191537.,"core would get included in the frozen config's enabled_plugins, and then TreeConfig would happily re-add core again at request time. We no longer freeze 'core' as part of an index's catalog entry.

all_plugins() no longer returns core, and neither does plugins_named() (which has been renamed to provide a reminder). core is no longer part of Config's enabled_plugins, either. The only place core comes from now is a TreeConfig's enabled_plugins attr.

Also, make skimmers run in the order that plugins are specified in the config file.
",erikrose,295816,2015-08-11T21:55:56Z,MEMBER,True,54,29,4,Powerful search for large codebases,Python,3ad80cbf4d7fc5e531f935e6f225f28526b52058,"Keep core plugin from multiply contributing. Fixes bug 1191537.

Config would call all_plugins(), which includes core, and then TreeConfig would add core again.

core is no longer part of Config's enabled_plugins. The only places core comes from now are a TreeConfig's enabled_plugins attr and plugins_named(), which is always fed a frozen list of names from the catalog. Introduce all_plugins_but_core() and core_plugin() for DRY.

Switch the order of some blocks in dxr.plugins to avoid multiple returns.

Also, make skimmers run in the order that plugins are specified in the config file."
491,https://api.github.com/repos/mozilla/dxr/pulls/463,463,"Add a SyntaxFilter to pygmentize plugin, bug 1190587","_Incomplete!_ I'm putting this up as RFC.

Some notes/questions:
- Filtering by region filters for all the lines that contain the region. So if we want to search within a region, the filter needs two pieces of information: 1) the region and 2) the text. If we just did a region filter, then a text search, we would match the text on any part of the line that contains the region.
- What should we call the filter?
- How does the class.text filter syntax feel? Is there a nicer way to combine two pieces of information in the filter?

What's not done:
- Cleaning up the code.
- Adding tests, docstrings.
- Figuring out why all the search is lowercase (or something like that, I'm not really handling case right now).
",pelmers,2406051,2015-08-03T22:00:51Z,CONTRIBUTOR,False,71,22,6,Powerful search for large codebases,Python,92ad1c1a4dffa8fc45769ee1c9ac6b174b157ee4,"Add a SyntaxFilter to pygmentize plugin.

ToDO: stop relying on private function from plugins.core.
Add some tests
Figure out what’s making case-sensitive wonky."
492,https://api.github.com/repos/mozilla/dxr/pulls/462,462,"Make es_index per tree, fixes bug 1177113.","If es_index is provided for a tree, use that;
otherwise default to the original format.

https://bugzilla.mozilla.org/show_bug.cgi?id=1177113
",pelmers,2406051,2015-07-31T21:11:35Z,CONTRIBUTOR,True,27,7,3,Powerful search for large codebases,Python,54df5c32d28f89083b6539848c8bd9795906e287,"Make es_index per tree, fixes bug 1177113.

If es_index is provided for a tree, use that;
otherwise default to the original format."
493,https://api.github.com/repos/mozilla/dxr/pulls/461,461,Upgrade python-hglib to 1.7.,"This version should fix the version ‘unknown’ bug (knock on wood).
",pelmers,2406051,2015-07-31T17:51:06Z,CONTRIBUTOR,False,3,3,2,Powerful search for large codebases,Python,b29c0d4f204e67dda5a49097e253b185352ff775,"Upgrade python-hglib to 1.7.

This version should fix the version ‘unknown’ bug (knock on wood)."
494,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,800585c4fe9573f99cb629f28d74fb6427d44b13,"This works at least for Python menus, as in python.tests.test_types.

* Move Ref and Region to dxr.lines to avoid a circular import.
* Introduce MenuMakers, which enable us to keep the bulk of context menu data in the code and reconstruct it from much more minimal ES data at request time. Profiles suggest this should cut index time substantially by moving the expensive url_for() calls to request time, where they shouldn't be noticed.
* MenuMakers get registered against the plugins that use them so that we can look them up by a dual key of (plugin name, munged class name), without making class names brittle or threatening to load arbitrary classes.
* Toy with clang's menus a bit, but they don't work yet."
495,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,829133c8a4d5e63e9eb5d8d67373545a2eec1d86,"Clang's menus work now, and clang and top-level tests pass.

* Smash the menu data into a string so ES doesn't get whiny about schemas differing from doc to doc. These are meant to be opaque blobs.
* Rename menus() to menu_items(), which is more accurate.
* Move all things to do with self.data to the SingleDatumMenuMaker subclass. Multidata subclasses should feel free to use whatever attrs they like."
496,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,478fd15f451626ad91ef4cc647973bf5f1e3697e,"Bring buglink and urllink plugins up to date.

That should cover all the plugins except rust."
497,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,580f2653461e2524f19e2902606b75dd5b0de7c6,"Color XUL files as XML, and IDL files as C++.

Also, color moz.build as Python.
Fixes bug 1168878 and fixes bug 1110593."
498,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,a7b6a86065f91a98e9b2f86118c5fe24dd193e0c,"Write plugin to support XPIDL files.

The xpidl plugin borrows the xpidl.py parser from mozilla-central to
attach structural data and refs to Cross-Platform IDL files, used in the
Mozilla codebase.
The plugin implements jumps to generated header code, search by
interface, method, const, and attribute declarations, and search by
interface subclassing.
The plugin accepts two options: header_bucket to control where C++
headers are dumped include_folders to define the search path for IDL
include statements.

Fixes bug 1109804."
499,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,234f58937d876c3d6e7bab546d4f0501497a70b7,Add ply to requirements.txt and xpidl to install_requires.
500,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,0c3a85946b6af1431913d9378eca96851e548da7,"Respond to the first round of PR comments.

More docstrings, better makefiles, shorter test, xpidl on PyPI."
501,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,742a6d9bd407a35907fa60a7efea458eb316b179,Fix xpidl hash.
502,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,9a211c5aa353f19d1d1cd8ea51869a52f26efbb6,"Start porting rust menu module to MenuMakers framework.

So far, the Jump*-type menu items are ported.

* Swap order of lines to mostly preserve the jumps-first ordering. (add_jump_definition() used to insert its menu at the front of the list.)
* Transmute some print statements to warnings for consistency with other plugins.
* Fix a bug in add_jump_definition() (which has now become the JumpTo*MenuMaker family of classes) in which it never used the passed-in label but always overwrote it with ""Jump to definition"".
* Remove some useless ""return None""s.
* Make some whitespace conform to PEP 8."
503,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,8328466192f7ef274de927968cf151d6b18b1394,"Convert add_find_references and std_lib_links, and finish function_menu.

Also, quit putting ""ref"" after everything. It's more accurate but confusing when it's a symbol reference in addition to a Ref. We'll think of something else, or maybe those helpers will be factored away altogether."
504,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,5de5ac22a125898674110305d15c8b1cc40fc731,This is actually shorter and just as clean as a SingleDatum.
505,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,6c4e3d5af5e100248528c75f603535c022bc00c4,Port module_menu_generic.
506,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,92ae52271eba9674cfd563dc26de4b1094a71bba,"Port type_menu_generic.

That should be the last of the maker-maker functions. Now to debug."
507,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,15dd39e612dec203a17c577f358b491c5ac98bca,Change the last of the prints to warnings.
508,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,0cef6dc071d87f28ed907833eec451bd3b5a001b,Fix miscellaneous bugs in rust menus and get tests passing.
509,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,34fbd2c13f6ae4774c92b449dbde966e7d63a7e7,Make use of MultiDatumMenuMaker in clang's DefinitionMenuMaker.
510,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,2834a6ceca850ec4e1176bae83fcc26fa334e61c,"Don't register the abstract MenuMaker superclasses.

It didn't hurt anything, but it was kind of silly."
511,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,d2b876f181b13b8678edfed147b403cea637b38d,"Remove case sensitivity checkbox.

If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to negate the guess."
512,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,7af4d4b46c670e8d2a9da5680588512b6d052e01,"Unskip the rust smoketests, and fix the bugs that reveals."
513,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,7f193015d7597a32c4fb8dcaed1769f20a2aa983,"Make @ force case-sensitive, rather than flipping the guess."
514,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,3165025b2a031fc726629055f196bd85f36aabb7,"Start refactoring to move everything into Ref subclasses and get rid of menumakers, which are just One More Thing and perhaps premature framework.

NEXT: Rewrite some of the clang or rust plugins to the new Ref contract. Then go do Ref registration."
515,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,ccaa4dd9ac9e0e55a77d7175f0b952aff16a1fbf,Respond to review comments. (read: docstrings)
516,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,b29c0d4f204e67dda5a49097e253b185352ff775,"Upgrade python-hglib to 1.7.

This version should fix the version ‘unknown’ bug (knock on wood)."
517,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,fce834cea658a2cf44f3d4f38ad402085b417388,"Fix bug 1185687, stop showing symlinks in search results.

New behaviors:
We do not call the by lines processing for symlinks at index time.
Symlinks do not appear in search results (lines and files).
A symlink in folder browsing will have its href set to the real target.
A direct link to symlink will redirect to its real target."
518,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,b2b554f804a5ab45c4739c2e3258b7b10ef69459,"Respond to PR comments.

Improve docstrings on needles_by_line and is_interesting.
Use islink in python’s is_interesting. Do not call links() on symlinks."
519,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,54df5c32d28f89083b6539848c8bd9795906e287,"Make es_index per tree, fixes bug 1177113.

If es_index is provided for a tree, use that;
otherwise default to the original format."
520,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,a7d9ddd7242160fde9d82fbdba3f1c2ec4b4a8ec,"Merge es into master!

It's been a long time coming. Switching to an entirely different data model was hard work, but the speed, multilanguage support, and the rest of the new features will be enjoyed for years to come. Thanks to all who contributed!

In the merge commit...
* Update some docs to stop referring to the es branch.
* Bump setup.py version to 2.0.
* Fix a mismatch in the requirements.txt and setup.py versions of parsimonious that would cause DistributionNotFound errors if `peep install` were run last and insecure downloads if `setup.py develop/install` were run last."
521,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,94f3b245e59332fa059f446c7a154687e7d35ea0,"Tweak some docs in the vcs module.

This is an effective no-op to test deploys of the newly merged es branch."
522,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,210d37fe75f9151b149cc4342b8fa7c72817f292,"Look under a different key for Jenkins' latest successful build. This should fix deploys.

Its behavior changed when I deleted the es branch from the config, apparently."
523,https://api.github.com/repos/mozilla/dxr/pulls/460,460,Remove case sensitivity checkbox.,"If any text is uppercase, then assume case sensitive.
Otherwise, assume it’s insensitive. Use an @ sigil
in front of a text term to force case sensitive.

This also gives us per-term case sensitivity.

I've been thinking about using showBubble to remark when we guess case sensitive.

Also, it collides slightly with path promotion, and it may be better to finish that first.
",pelmers,2406051,2015-07-29T19:54:03Z,CONTRIBUTOR,False,31784,9975,666,Powerful search for large codebases,Python,0b32af756428cc490736fbd45733157610c089d2,Add is_link to FileToSkim.
524,https://api.github.com/repos/mozilla/dxr/pulls/459,459,Include more menu refs in the Python plugin.,"Playing around with the Python plugin, I didn't even realize that we had many function filters until I checked the ES mapping. I think that putting ref menus on things makes them more discoverable, so here I add refs for function definitions and function calls.

Add refs to find function usages and definitions to call sites and definitions.
Use id: and ref: filters in the calls because Python’s AST does not
differentiate between class instantiation and function calls — both are Calls.
",pelmers,2406051,2015-07-27T15:36:18Z,CONTRIBUTOR,False,61,10,5,Powerful search for large codebases,Python,29d4c240c9137480c647e6379a4a4c63d92b91db,"Include more menu refs in the Python plugin.

Add refs to find function usages and definitions to call sites and definitions.
Use id: and ref: filters in the calls because Python’s AST does not
differentiate between class instantiation and function calls — both are Calls."
525,https://api.github.com/repos/mozilla/dxr/pulls/458,458,"Fix bug 1185687, stop showing symlinks in search results.","New behaviors:
We do not call the by lines processing for symlinks at index time.
Symlinks do not appear in search results (lines and files).
A symlink in folder browsing will have its href set to the real target.
A direct link to symlink will redirect to its real target.
",pelmers,2406051,2015-07-21T18:38:18Z,CONTRIBUTOR,False,99,15,10,Powerful search for large codebases,Python,fce834cea658a2cf44f3d4f38ad402085b417388,"Fix bug 1185687, stop showing symlinks in search results.

New behaviors:
We do not call the by lines processing for symlinks at index time.
Symlinks do not appear in search results (lines and files).
A symlink in folder browsing will have its href set to the real target.
A direct link to symlink will redirect to its real target."
526,https://api.github.com/repos/mozilla/dxr/pulls/458,458,"Fix bug 1185687, stop showing symlinks in search results.","New behaviors:
We do not call the by lines processing for symlinks at index time.
Symlinks do not appear in search results (lines and files).
A symlink in folder browsing will have its href set to the real target.
A direct link to symlink will redirect to its real target.
",pelmers,2406051,2015-07-21T18:38:18Z,CONTRIBUTOR,False,99,15,10,Powerful search for large codebases,Python,b2b554f804a5ab45c4739c2e3258b7b10ef69459,"Respond to PR comments.

Improve docstrings on needles_by_line and is_interesting.
Use islink in python’s is_interesting. Do not call links() on symlinks."
527,https://api.github.com/repos/mozilla/dxr/pulls/458,458,"Fix bug 1185687, stop showing symlinks in search results.","New behaviors:
We do not call the by lines processing for symlinks at index time.
Symlinks do not appear in search results (lines and files).
A symlink in folder browsing will have its href set to the real target.
A direct link to symlink will redirect to its real target.
",pelmers,2406051,2015-07-21T18:38:18Z,CONTRIBUTOR,False,99,15,10,Powerful search for large codebases,Python,0b32af756428cc490736fbd45733157610c089d2,Add is_link to FileToSkim.
528,https://api.github.com/repos/mozilla/dxr/pulls/457,457,Make README link to es branch docs,"The others, ""latest"" (i.e., master, I guess) are having CSS trouble, too...
",srenatus,870638,2015-07-21T07:18:37Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,2ce54577b668ce3f314678f23af3f50ca7d72fce,"Make README link to es branch docs

The others, ""latest"" (i.e., master, I guess) are having CSS trouble, too..."
529,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,580f2653461e2524f19e2902606b75dd5b0de7c6,"Color XUL files as XML, and IDL files as C++.

Also, color moz.build as Python.
Fixes bug 1168878 and fixes bug 1110593."
530,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,a7b6a86065f91a98e9b2f86118c5fe24dd193e0c,"Write plugin to support XPIDL files.

The xpidl plugin borrows the xpidl.py parser from mozilla-central to
attach structural data and refs to Cross-Platform IDL files, used in the
Mozilla codebase.
The plugin implements jumps to generated header code, search by
interface, method, const, and attribute declarations, and search by
interface subclassing.
The plugin accepts two options: header_bucket to control where C++
headers are dumped include_folders to define the search path for IDL
include statements.

Fixes bug 1109804."
531,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,234f58937d876c3d6e7bab546d4f0501497a70b7,Add ply to requirements.txt and xpidl to install_requires.
532,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,0c3a85946b6af1431913d9378eca96851e548da7,"Respond to the first round of PR comments.

More docstrings, better makefiles, shorter test, xpidl on PyPI."
533,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,742a6d9bd407a35907fa60a7efea458eb316b179,Fix xpidl hash.
534,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,ccaa4dd9ac9e0e55a77d7175f0b952aff16a1fbf,Respond to review comments. (read: docstrings)
535,https://api.github.com/repos/mozilla/dxr/pulls/456,456,XPIDL support,"Add plugin for XPIDL files.

Riding along is syntax highlighting for IDL, XUL, and moz.build files.
",pelmers,2406051,2015-07-16T16:22:45Z,CONTRIBUTOR,False,1244,6,23,Powerful search for large codebases,Python,7417630fcd993b3e640a30e1649f0970c94ca2b7,"Add xpidl options to configuration.rst, and some rewording."
536,https://api.github.com/repos/mozilla/dxr/pulls/455,455,"Do not request results when viewing files, fixes bug 1183885.","Previously we were requesting the results of q=“” when viewing files
and scrolling around. Now only request more results on search pages.

example: https://dxr.allizom.org/mozilla-central/source/moz.build
",pelmers,2406051,2015-07-15T22:37:33Z,CONTRIBUTOR,False,22,49,1,Powerful search for large codebases,Python,857e1a8dd275ec7dcaba8a7b9f4a268448229379,"Do not request results when viewing files, fixes bug 1183885.

Previously we were requesting the results of q=“” when viewing files
and scrolling around. Now only start infinite scroll polling
after we do a request.

As a side effect we longer update the URL with unintuitive offset
when we scroll around."
537,https://api.github.com/repos/mozilla/dxr/pulls/454,454,hash() results in CPython are 64 bits on 64-bit archs.,,erikrose,295816,2015-07-07T20:16:53Z,MEMBER,True,8,2,2,Powerful search for large codebases,Python,b3cd52f108a8f20f6e982a575ebdd8f4646dbdb4,hash() results in CPython are 64 bits on 64-bit archs.
538,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,800585c4fe9573f99cb629f28d74fb6427d44b13,"This works at least for Python menus, as in python.tests.test_types.

* Move Ref and Region to dxr.lines to avoid a circular import.
* Introduce MenuMakers, which enable us to keep the bulk of context menu data in the code and reconstruct it from much more minimal ES data at request time. Profiles suggest this should cut index time substantially by moving the expensive url_for() calls to request time, where they shouldn't be noticed.
* MenuMakers get registered against the plugins that use them so that we can look them up by a dual key of (plugin name, munged class name), without making class names brittle or threatening to load arbitrary classes.
* Toy with clang's menus a bit, but they don't work yet."
539,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,829133c8a4d5e63e9eb5d8d67373545a2eec1d86,"Clang's menus work now, and clang and top-level tests pass.

* Smash the menu data into a string so ES doesn't get whiny about schemas differing from doc to doc. These are meant to be opaque blobs.
* Rename menus() to menu_items(), which is more accurate.
* Move all things to do with self.data to the SingleDatumMenuMaker subclass. Multidata subclasses should feel free to use whatever attrs they like."
540,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,478fd15f451626ad91ef4cc647973bf5f1e3697e,"Bring buglink and urllink plugins up to date.

That should cover all the plugins except rust."
541,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,9a211c5aa353f19d1d1cd8ea51869a52f26efbb6,"Start porting rust menu module to MenuMakers framework.

So far, the Jump*-type menu items are ported.

* Swap order of lines to mostly preserve the jumps-first ordering. (add_jump_definition() used to insert its menu at the front of the list.)
* Transmute some print statements to warnings for consistency with other plugins.
* Fix a bug in add_jump_definition() (which has now become the JumpTo*MenuMaker family of classes) in which it never used the passed-in label but always overwrote it with ""Jump to definition"".
* Remove some useless ""return None""s.
* Make some whitespace conform to PEP 8."
542,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,8328466192f7ef274de927968cf151d6b18b1394,"Convert add_find_references and std_lib_links, and finish function_menu.

Also, quit putting ""ref"" after everything. It's more accurate but confusing when it's a symbol reference in addition to a Ref. We'll think of something else, or maybe those helpers will be factored away altogether."
543,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,5de5ac22a125898674110305d15c8b1cc40fc731,This is actually shorter and just as clean as a SingleDatum.
544,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,6c4e3d5af5e100248528c75f603535c022bc00c4,Port module_menu_generic.
545,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,92ae52271eba9674cfd563dc26de4b1094a71bba,"Port type_menu_generic.

That should be the last of the maker-maker functions. Now to debug."
546,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,15dd39e612dec203a17c577f358b491c5ac98bca,Change the last of the prints to warnings.
547,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,0cef6dc071d87f28ed907833eec451bd3b5a001b,Fix miscellaneous bugs in rust menus and get tests passing.
548,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,34fbd2c13f6ae4774c92b449dbde966e7d63a7e7,Make use of MultiDatumMenuMaker in clang's DefinitionMenuMaker.
549,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,2834a6ceca850ec4e1176bae83fcc26fa334e61c,"Don't register the abstract MenuMaker superclasses.

It didn't hurt anything, but it was kind of silly."
550,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,7af4d4b46c670e8d2a9da5680588512b6d052e01,"Unskip the rust smoketests, and fix the bugs that reveals."
551,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,3165025b2a031fc726629055f196bd85f36aabb7,"Start refactoring to move everything into Ref subclasses and get rid of menumakers, which are just One More Thing and perhaps premature framework.

NEXT: Rewrite some of the clang or rust plugins to the new Ref contract. Then go do Ref registration."
552,https://api.github.com/repos/mozilla/dxr/pulls/453,453,Optimize indexing by deferring menu generation to request time.,"Based on profiles, this should make clang indexing 25-50% faster.

Reviewing one commit at a time will probably be easiest for this.
",erikrose,295816,2015-07-07T03:05:13Z,MEMBER,False,972,584,24,Powerful search for large codebases,Python,ac978cd4a6fe9dda5436c373f078f3617e6405b7,"Port clang menus to Ref subclasses. Implement registration of Ref-subclass-based menus.

All tests pass but rust ones.

Also...
* Make kind_getter() tolerate missing fields. I didn't actually run into a missing field, but the other getters tolerate them."
553,https://api.github.com/repos/mozilla/dxr/pulls/452,452,Fix alignment between line and code columns.,"We stop stripping empty lines in multi-line regions,
especially prevent in Python docstrings.

Example of the issue: https://dxr.allizom.org/mozilla-central/source/python/mozbuild/mozbuild/frontend/context.py#1218
Here the highlighted line number is about a hundred lines below the highlighted line of source code.
",pelmers,2406051,2015-07-06T20:27:24Z,CONTRIBUTOR,True,4,4,3,Powerful search for large codebases,Python,a24f64834ad4e963de27369e10b29bfb89f562da,"Fix alignment between line and code columns.

We stop stripping empty lines in multi-line regions,
especially prevent in Python docstrings."
554,https://api.github.com/repos/mozilla/dxr/pulls/452,452,Fix alignment between line and code columns.,"We stop stripping empty lines in multi-line regions,
especially prevent in Python docstrings.

Example of the issue: https://dxr.allizom.org/mozilla-central/source/python/mozbuild/mozbuild/frontend/context.py#1218
Here the highlighted line number is about a hundred lines below the highlighted line of source code.
",pelmers,2406051,2015-07-06T20:27:24Z,CONTRIBUTOR,True,4,4,3,Powerful search for large codebases,Python,e21e56ee3f9729d13e4cfe8e7665231605d4d869,Fix tests.
555,https://api.github.com/repos/mozilla/dxr/pulls/451,451,Bug 1052572 - Check if Vcs can make links before trying,,djc,158471,2015-07-03T11:55:08Z,MEMBER,False,14,1,2,Powerful search for large codebases,Python,654d51fcc29b00c4b89f1b1228a673a763f8c970,Bug 1052572 - Check if Vcs can make links before trying
556,https://api.github.com/repos/mozilla/dxr/pulls/450,450,Update most of our requirements.,"If a newer Flask optimizes url_for() at all, I want it; it's a hot spot for us. Update most of the rest while we're at it.

Maybe futures will stop hanging on Vagrant. It looks like it at least improves exception handling; maybe we can get rid of our custom stuff.

Didn't upgrade funcy or elasticsearch because I don't trust their quality in general.
",erikrose,295816,2015-07-02T20:53:33Z,MEMBER,True,29,26,2,Powerful search for large codebases,Python,c39118269de1d73ec37f6872c6c0388069989899,"Update most of our requirements.

If a newer Flask optimizes url_for() at all, I want it; it's a hot spot for us. Update most of the rest while we're at it.

Maybe futures will stop hanging on Vagrant. It looks like it at least improves exception handling; maybe we can get rid of our custom stuff.

Didn't upgrade funcy or elasticsearch because I don't trust their quality in general."
557,https://api.github.com/repos/mozilla/dxr/pulls/449,449,Restore same-symbol highlighting,"Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1123877

While we're at it, clean up the API and implementation. regions() and refs() now return Region and Ref classes which will be extensible in the future as we add things (like we've added `hover` and `qualname_hash` to refs).
",erikrose,295816,2015-07-01T21:06:43Z,MEMBER,True,191,151,12,Powerful search for large codebases,Python,16c97e2a3697ea700b361a09b9841478049ab148,"Add same-symbol highlighting. Fixes bug 1123877.

This is a quick and dirty pass to bench against. This still returns tuples from refs(), but I'm starting to see that we'll need to expand the return values in the future, so we should probably switch to class instances or something. However, I'm concerned about performance, since tuples construct about 4x faster than even slotted instances. So this implementation is a mostly a version to bench against, to see if that's even a significant part of the build time."
558,https://api.github.com/repos/mozilla/dxr/pulls/449,449,Restore same-symbol highlighting,"Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1123877

While we're at it, clean up the API and implementation. regions() and refs() now return Region and Ref classes which will be extensible in the future as we add things (like we've added `hover` and `qualname_hash` to refs).
",erikrose,295816,2015-07-01T21:06:43Z,MEMBER,True,191,151,12,Powerful search for large codebases,Python,25eeba292799caba1b2fba7a6ef042be74be976d,"Switch to a __slots__-based implementation of Refs.

It's more readable, more extensible, and (*boggle*) faster: 2:10 to index moz-central rather than 2:24."
559,https://api.github.com/repos/mozilla/dxr/pulls/449,449,Restore same-symbol highlighting,"Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1123877

While we're at it, clean up the API and implementation. regions() and refs() now return Region and Ref classes which will be extensible in the future as we add things (like we've added `hover` and `qualname_hash` to refs).
",erikrose,295816,2015-07-01T21:06:43Z,MEMBER,True,191,151,12,Powerful search for large codebases,Python,55888117374aaf9399d14a59abd01cc5f593ec7a,Move ES-format-reading code into Ref so it's near the code that writes it.
560,https://api.github.com/repos/mozilla/dxr/pulls/449,449,Restore same-symbol highlighting,"Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1123877

While we're at it, clean up the API and implementation. regions() and refs() now return Region and Ref classes which will be extensible in the future as we add things (like we've added `hover` and `qualname_hash` to refs).
",erikrose,295816,2015-07-01T21:06:43Z,MEMBER,True,191,151,12,Powerful search for large codebases,Python,9aff83b58d7b426ab08ec747d91fdca917f0eb19,"Wrap regions in classes as well to future-proof them.

This cleans up html_line() and other spots by letting us take advantage of polymorphism."
561,https://api.github.com/repos/mozilla/dxr/pulls/448,448,"Fix bug 1007293, blame link scrolls to selected line.","Add an extra field to the FileToSkim.links() return tuple to indicate
whether to update to the selected line. Allow the code highlighter to
handle #l{number} in addition to #{number} so that we can re-use the
same code for links to Github, hg web, and permalinks.
",pelmers,2406051,2015-07-01T20:12:20Z,CONTRIBUTOR,False,83,60,12,Powerful search for large codebases,Python,a119d891aa0e2895c8853c1043f9543e8fa7ca5b,"Fix bug 1007293, blame link scrolls to selected line.

Add an extra field to the FileToSkim.links() return tuple to indicate
whether to update to the selected line. Allow the code highlighter to
handle #l{number} in addition to #{number} so that we can re-use the
same code for links to Github, hg web, and permalinks."
562,https://api.github.com/repos/mozilla/dxr/pulls/448,448,"Fix bug 1007293, blame link scrolls to selected line.","Add an extra field to the FileToSkim.links() return tuple to indicate
whether to update to the selected line. Allow the code highlighter to
handle #l{number} in addition to #{number} so that we can re-use the
same code for links to Github, hg web, and permalinks.
",pelmers,2406051,2015-07-01T20:12:20Z,CONTRIBUTOR,False,83,60,12,Powerful search for large codebases,Python,a00a3085d109cf5fe9fb5fadb96601e35b05e6fe,"Respond to pull request comments.

Instead of True/False, links can return an anchor template string, where
{{start}} and {{end}} are replaced at highlight time by the selected
highlight range, if only one range is highlighted."
563,https://api.github.com/repos/mozilla/dxr/pulls/448,448,"Fix bug 1007293, blame link scrolls to selected line.","Add an extra field to the FileToSkim.links() return tuple to indicate
whether to update to the selected line. Allow the code highlighter to
handle #l{number} in addition to #{number} so that we can re-use the
same code for links to Github, hg web, and permalinks.
",pelmers,2406051,2015-07-01T20:12:20Z,CONTRIBUTOR,False,83,60,12,Powerful search for large codebases,Python,a067a5d45a3f46a449dad9c2694c63ff9336372d,"Remove {{end}} from Mercurial region template, not supported by hg web."
564,https://api.github.com/repos/mozilla/dxr/pulls/448,448,"Fix bug 1007293, blame link scrolls to selected line.","Add an extra field to the FileToSkim.links() return tuple to indicate
whether to update to the selected line. Allow the code highlighter to
handle #l{number} in addition to #{number} so that we can re-use the
same code for links to Github, hg web, and permalinks.
",pelmers,2406051,2015-07-01T20:12:20Z,CONTRIBUTOR,False,83,60,12,Powerful search for large codebases,Python,033e577adbdbbd12a29228a75078e0abaed3ec46,Add sync field to links mapping
565,https://api.github.com/repos/mozilla/dxr/pulls/447,447,"Fix bug 1177761, non-root directory git permalinks.","git’s show command requires a ""./"" prepended to the file name to make
it relative to cwd, rather than the git root.
Add a test to make sure this does not regress.
",pelmers,2406051,2015-07-01T17:55:46Z,CONTRIBUTOR,True,30,13,4,Powerful search for large codebases,Python,eb45c23236b3099ca965fe30cce16e2eee41aa7d,"Fix bug 1177761, non-root directory git permalinks.

git’s show command requires a ""./"" prepended to the file name to make
it relative to cwd, rather than the git root.
Add a test to make sure this does not regress."
566,https://api.github.com/repos/mozilla/dxr/pulls/447,447,"Fix bug 1177761, non-root directory git permalinks.","git’s show command requires a ""./"" prepended to the file name to make
it relative to cwd, rather than the git root.
Add a test to make sure this does not regress.
",pelmers,2406051,2015-07-01T17:55:46Z,CONTRIBUTOR,True,30,13,4,Powerful search for large codebases,Python,a241f55ff8d0b944ef0d86f544cceef9338f75f2,"Factor revision hash out of strings.

Also explain motivation for testing permalinks in subdirectories."
567,https://api.github.com/repos/mozilla/dxr/pulls/446,446,"Fix bug 770998, ability to search all javascript files.","Implement a field `union_only` on the Filter class, which tells
query construction that the filter should always be `or` with
other filters of the same name.

We can consider adding the union_only field to the NameFilter (and IdFilter/RefFilter) as well, which would let us search for functions of name `append` or `extend`, for example, where currently the intersection of these filters would always be empty since they go by exact matches (edit: unless they occur on the same line).

remark: This work would be obsoleted if we in the future implement a general boolean query language, but I feel that the functionality here is not worth delaying.
",pelmers,2406051,2015-07-01T17:02:29Z,CONTRIBUTOR,True,35,4,4,Powerful search for large codebases,Python,08577986ab5bff107674317986b8ce301f0f9e69,"Fix bug 770998, ability to search all javascript files.

Implement a field `union_only` on the Filter class, which tells
query construction that the filter should always be `or` with
other filters of the same name."
568,https://api.github.com/repos/mozilla/dxr/pulls/446,446,"Fix bug 770998, ability to search all javascript files.","Implement a field `union_only` on the Filter class, which tells
query construction that the filter should always be `or` with
other filters of the same name.

We can consider adding the union_only field to the NameFilter (and IdFilter/RefFilter) as well, which would let us search for functions of name `append` or `extend`, for example, where currently the intersection of these filters would always be empty since they go by exact matches (edit: unless they occur on the same line).

remark: This work would be obsoleted if we in the future implement a general boolean query language, but I feel that the functionality here is not worth delaying.
",pelmers,2406051,2015-07-01T17:02:29Z,CONTRIBUTOR,True,35,4,4,Powerful search for large codebases,Python,ee9c0bfacbfbf9c60d05e8eeb1cfc409768cb3ca,"Respond to PR comments.

Clarify comments and use docstrings, chain generators rather than
concatenating lists, and factor union_only into its own test case."
569,https://api.github.com/repos/mozilla/dxr/pulls/446,446,"Fix bug 770998, ability to search all javascript files.","Implement a field `union_only` on the Filter class, which tells
query construction that the filter should always be `or` with
other filters of the same name.

We can consider adding the union_only field to the NameFilter (and IdFilter/RefFilter) as well, which would let us search for functions of name `append` or `extend`, for example, where currently the intersection of these filters would always be empty since they go by exact matches (edit: unless they occur on the same line).

remark: This work would be obsoleted if we in the future implement a general boolean query language, but I feel that the functionality here is not worth delaying.
",pelmers,2406051,2015-07-01T17:02:29Z,CONTRIBUTOR,True,35,4,4,Powerful search for large codebases,Python,45431dae8bf99101537a8d0f125c97a0f439a85e,Clarify a comment and move union_only test back into extension test.
570,https://api.github.com/repos/mozilla/dxr/pulls/445,445,Let searches for qualified but argless functions work,"Now we can search for Scoped::function rather than needing to say Scoped::function(int, char). Fix https://bugzilla.mozilla.org/show_bug.cgi?id=1171242
",erikrose,295816,2015-06-30T20:56:49Z,MEMBER,True,114,42,6,Powerful search for large codebases,Python,3ce0715b283bec5a50b6df146c30aed15eb0c35e,"Remove qualified_needles(), which was no different than needles()."
571,https://api.github.com/repos/mozilla/dxr/pulls/445,445,Let searches for qualified but argless functions work,"Now we can search for Scoped::function rather than needing to say Scoped::function(int, char). Fix https://bugzilla.mozilla.org/show_bug.cgi?id=1171242
",erikrose,295816,2015-06-30T20:56:49Z,MEMBER,True,114,42,6,Powerful search for large codebases,Python,a1cd5198a1532deeb85d455cdc2f98a08660e044,"Store type-stripped qualnames for functions as well, so we can search for Scoped::function rather than needing to say Scoped::function(int, char). Fixes bug 1171242.

We store them as a second item in function needles' qualname properties, which becomes a list. This causes the right thing to Just Happen in QualifiedNameFilterBase, which needed only a slight adjustment to tolerate qualnames that are lists.

Added an arg to some cases in test_functions, because we weren't testing that anywhere, and I don't trust future versions of clang to keep the ""()"" on the end of argless function qualnames.

Also, replace the keys kwarg of needles() with a simple include_qualname boolean. The desired keys don't seem to be expanding, and this way we don't have to repeat the names of the keys in the callers."
572,https://api.github.com/repos/mozilla/dxr/pulls/445,445,Let searches for qualified but argless functions work,"Now we can search for Scoped::function rather than needing to say Scoped::function(int, char). Fix https://bugzilla.mozilla.org/show_bug.cgi?id=1171242
",erikrose,295816,2015-06-30T20:56:49Z,MEMBER,True,114,42,6,Powerful search for large codebases,Python,875a3b703c0c233e93978fd2e4906ccd87c0629e,Clarify ref_needles()'s docstring.
573,https://api.github.com/repos/mozilla/dxr/pulls/444,444,"Fix bug 1178882, extra line breaks on copy.","Avoid inserting extra whitespace in the page by asking Jinja to strip
the template block.

Thanks to @potch for help in fixing this!

Funnily enough, Chrome was working correctly before this fix, and now copying there is broken (no line breaks are kept on copy).
",pelmers,2406051,2015-06-30T20:38:43Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,0fa46f689f053bad2b2e081f3a8688215c001718,"Fix bug 1178882, extra line breaks on copy.

Avoid inserting extra whitespace in the page by asking Jinja to strip
the template block."
574,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,288d8d7345d559d9a311cc2198182a184f9c0035,"Add path promotion and path highlighting.

Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by
kitchen polls, we promote probable paths (e.g. exact path fragment
matches) at the top of ‘single-term’ queries (i.e. queries without a
filter) and offer a link to see all path results.

Also include a path highlighter in `PathFilter` and some tests."
575,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,88cedfad170bb3d6ffe48943e19ea93a1f1c74dc,"Bump the format version.

Added a subfield to the path index, so format needs to bump."
576,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,ad85d384e7d80df77e5e94fe002c2b4871bd87c0,"Respond to PR comments.

Broaden the condition for showing promoted results.
Rename path.parts to path.segments.
Untangle import cycle between core and query.
Clarify method names, refactor up some parameters.
Move promoted box to the right side."
577,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,35d3028a68e5e30bd0afb1940114fa30cbb91896,Use case insensitive match when search is not case sensitive.
578,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,25c1f3beb206077c5395a5c0986cca8cf0a7313c,"Use / rather than sep, reword comment, only use segments in FILE."
579,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,fd065dd2b2dd63e7db15efb34da8edff0f00b5c5,Merge branch 'es' into path_promotion
580,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,0d1bdf85e95ed1a089bf6438edd4e66de7b831e6,Add files for case sensitivity path promotion test.
581,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,75c31c24f0986375861c39c26b71e0d762dda761,"Use flexbox for search results.

Also put the tree-selector and breadcrumbs into flexbox,
and word wrap long lines in search results."
582,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,c5e96f3a468e66e04b46ca60a1e8e16d2a4a2284,"Respond to PR comments.

Refactor Query such that _terms and _filters are private.
Add an __str__ method to Filter. Adjust styles on promoted container."
583,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,7d1aaa9bcb3f1f088c1700b5d97a3ac949b3424e,"Respond to another round of review.

Rename things, handle spaces in terms for __str__ of Filter,
override __str__ for TextFilter."
584,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,f5d8a156db43a80944d74eb5af3b98367d184182,"Rescue colon, fade out binary files."
585,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,015700e6a75fe91bceb9395ac46f59fee2e2f611,"Move promoted paths to float, wrap results around it.

Each file’s results gets its own table, which means that if it starts
after the promoted container, it can wrap across the whole page.
Otherwise, it will wrap around the promoted container."
586,https://api.github.com/repos/mozilla/dxr/pulls/443,443,Add path promotion and path highlighting.,"Inspired by https://wiki.mozilla.org/DXR_Result_Mixing and refined by kitchen polls, we promote probable paths (e.g. exact path fragment matches) at the top of ‘single-term’ queries (i.e. queries without a filter) and offer a link to see all path results.
Also include a path highlighter in `PathFilter` and some tests.
![screen shot](https://cloud.githubusercontent.com/assets/2406051/8436632/8455b174-1f0e-11e5-858e-e32d346d8a57.png)
^note the `sub` exact filename match listed first
",pelmers,2406051,2015-06-30T17:02:20Z,CONTRIBUTOR,False,514,205,29,Powerful search for large codebases,Python,2dcaa7e4c1fa960fc1df9911dbbcdaf87b37949e,Force display of long results onto one line.
587,https://api.github.com/repos/mozilla/dxr/pulls/442,442,"Fix bug 1178103, 404 on dir/ listings.","Quick fix for https://bugzilla.mozilla.org/show_bug.cgi?id=1178103
",pelmers,2406051,2015-06-29T17:37:37Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,d6348e2a6a1dbe1abd87e334f7a42f3ac9057ef0,"Fix bug 1178103, 404 on dir/ listings."
588,https://api.github.com/repos/mozilla/dxr/pulls/441,441,"Fix bug 1177191, pass devnull as the stderr stream for get_contents.","I am not sure whether the [404's](https://dxr.allizom.org/rust/rev/6065bed37be55427ed0ac888b863a85696b28f9b/mk/llvm.mk) on the Rust tree are related to this.
ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1177191
",pelmers,2406051,2015-06-26T16:57:00Z,CONTRIBUTOR,True,15,14,1,Powerful search for large codebases,Python,21d08150a7608285d0a054775ca772c76e2d87a0,"Fix bug 1177191, pass devnull as the stderr stream for get_contents."
589,https://api.github.com/repos/mozilla/dxr/pulls/441,441,"Fix bug 1177191, pass devnull as the stderr stream for get_contents.","I am not sure whether the [404's](https://dxr.allizom.org/rust/rev/6065bed37be55427ed0ac888b863a85696b28f9b/mk/llvm.mk) on the Rust tree are related to this.
ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1177191
",pelmers,2406051,2015-06-26T16:57:00Z,CONTRIBUTOR,True,15,14,1,Powerful search for large codebases,Python,7e36a94a79d7e5cd0b996ae215a52df9ace31bd8,"Respond to PR comments, make cwd non-optional."
590,https://api.github.com/repos/mozilla/dxr/pulls/440,440,Add direct search for exact matches of filenames or trailing path seg…,"…ments. Fixes bug 1171313.
- Introduce a new type of direct searcher than can return LINE-domain results.
- Add a new filename direct searcher that uses it.
- Switch test harness to use url_for() rather than hard-coding URLs.
- Change direct_result_eq(..., None) to mean ""returns a FILE-domain direct result"" rather than ""doesn't return a direct result"".
",erikrose,295816,2015-06-25T00:32:40Z,MEMBER,True,117,47,6,Powerful search for large codebases,Python,268093f4666cfdcf81a6ceea92ce34e9caddad98,"Add direct search for exact matches of filenames or trailing path segments. Fixes bug 1171313.

* Introduce a new type of direct searcher than can return LINE-domain results.
* Add a new filename direct searcher that uses it.
* Switch test harness to use url_for() rather than hard-coding URLs.
* Change direct_result_eq(..., None) to mean ""returns a FILE-domain direct result"" rather than ""doesn't return a direct result""."
591,https://api.github.com/repos/mozilla/dxr/pulls/440,440,Add direct search for exact matches of filenames or trailing path seg…,"…ments. Fixes bug 1171313.
- Introduce a new type of direct searcher than can return LINE-domain results.
- Add a new filename direct searcher that uses it.
- Switch test harness to use url_for() rather than hard-coding URLs.
- Change direct_result_eq(..., None) to mean ""returns a FILE-domain direct result"" rather than ""doesn't return a direct result"".
",erikrose,295816,2015-06-25T00:32:40Z,MEMBER,True,117,47,6,Powerful search for large codebases,Python,4703c8bab73f3cdfca306daa8445efe515e5737e,Correct test docstrings to jibe with test harness API changes.
592,https://api.github.com/repos/mozilla/dxr/pulls/439,439,"Fix bug 1176098, infinite scroll with file results.","Paths that contain no lines are results too, so make sure to add 1 to the result count.

https://bugzilla.mozilla.org/show_bug.cgi?id=1176098
",pelmers,2406051,2015-06-24T17:08:57Z,CONTRIBUTOR,True,8,3,1,Powerful search for large codebases,Python,6a1a7f276f533921d378e32eadef1fe1006eef21,"Fix bug 1176098, infinite scroll with file results.

Paths that contain no lines are results too, so make sure
to add 1 to the result count."
593,https://api.github.com/repos/mozilla/dxr/pulls/438,438,Updated Getting Started docs about trilite,"Someone will need to set `LD_LIBRARY_PATH` env variable to make commands work.
",coldmind,1932804,2015-06-20T23:19:35Z,NONE,False,7,0,1,Powerful search for large codebases,Python,2d5e263192312e8f67ca3809900c6cc32613189d,"Updated Getting Started docs about trilite

Someone will need to set LD_LIBRARY_PATH env variable
to make commands work."
594,https://api.github.com/repos/mozilla/dxr/pulls/437,437,Fix Rust indexing,,nrc,762626,2015-06-18T23:07:19Z,CONTRIBUTOR,True,7,2,1,Powerful search for large codebases,Python,c0099e6cc1922cff1731f09bdcf2886042589307,rust plugin: fix a bug by canonicalising paths
595,https://api.github.com/repos/mozilla/dxr/pulls/436,436,Do not build any vcs_cache in make_app.,"Make get_contents of Vcs a classmethod, and when we request a specific
revision just try to invoke each vcs to get that contents.
This address bug [1175137](https://bugzilla.mozilla.org/show_bug.cgi?id=1175137).
",pelmers,2406051,2015-06-16T22:42:01Z,CONTRIBUTOR,True,57,50,4,Powerful search for large codebases,Python,fe9b69d28fb831ed1953be5d44594a73f3319cce,"Do not build any vcs_cache in make_app.

Make get_contents of Vcs a classmethod, and when we request a specific
revision just try to invoke each vcs to get that contents.
This address bug 1175137."
596,https://api.github.com/repos/mozilla/dxr/pulls/435,435,Bring back flag to allow post-test interaction.,"Revive the flag should_delete_instance as stop_for_interaction, which
allows hosting a single-file test case after running tests for
interaction via web browser. Update the docs appropriately.
",pelmers,2406051,2015-06-15T23:12:24Z,CONTRIBUTOR,True,12,15,4,Powerful search for large codebases,Python,a3deba57d9f53a4a400a551ec12375706c4d2be4,"Bring back flag to allow post-test interaction.

Revive the flag should_delete_instance as stop_for_interaction, which
allows hosting a single-file test case after running tests for
interaction via web browser. Update the docs appropriately."
597,https://api.github.com/repos/mozilla/dxr/pulls/434,434,Fix closing extent on the call filter.,"For call expressions, Clang gives us the span of the entire foo(x,y,z)
expression, except the closing parenthesis. Subtracting one from the
span ends up cutting off the last two character of the argument list and
the closing parenthesis. We manually add one back to get the right span.
",pelmers,2406051,2015-06-15T23:02:11Z,CONTRIBUTOR,True,21,20,6,Powerful search for large codebases,Python,a745c016835faefb76758a33ffb060d11f88d167,"Fix closing extent on the call filter.

For call expressions, Clang gives us the span of the entire foo(x,y,z)
expression, except the closing parenthesis. Subtracting one from the
span ends up cutting off the last two character of the argument list and
the closing parenthesis. We manually add one back to get the right span."
598,https://api.github.com/repos/mozilla/dxr/pulls/433,433,Pin to a version of rust that causes our tests to pass.,"https://ci.mozilla.org/job/dxr/578/console was failing with the 6/15 nightly.
",erikrose,295816,2015-06-15T17:24:07Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,af9d9e45a35115f0d19249d9ffd5facf337f1d44,"Pin to a version of rust that causes our tests to pass.

https://ci.mozilla.org/job/dxr/578/console was failing with the 6/15 nightly."
599,https://api.github.com/repos/mozilla/dxr/pulls/432,432,Bug fixes and PEP-8 conformance in vcs.py,"The main issue is that find_previous_revisions was rather delicate and would fail the entire deploy if hg hiccups at all. Now the function should continue regardless of what `hg previous-revisions` prints. 

I changed a few style nits while I was in there, and fixed an extra `=` in the hg upstream url handling code.
",pelmers,2406051,2015-06-13T00:15:56Z,CONTRIBUTOR,True,21,17,5,Powerful search for large codebases,Python,7138f83a07a987af61147e2f28f3e21b8e8184ec,"Bug fixes and PEP-8 conformance in vcs.py

Adjust output of previous-revisions to handle paths with colon to fix
the ValueError of unpacking paths that contain a colon."
600,https://api.github.com/repos/mozilla/dxr/pulls/430,430,Fix condition for whether to add path anchor.,"If it’s not binary, definitely add path anchor.
Otherwise, add the anchor if it is a directory.
i.e. not is_binary OR is_dir.
",pelmers,2406051,2015-06-11T17:13:16Z,CONTRIBUTOR,True,2,2,1,Powerful search for large codebases,Python,b009d9fae4930d16bd36f4a9e8755b098c80b99e,"Fix condition for whether to add path anchor.

If it’s not binary, definitely add path anchor.
Otherwise, add the anchor if it is a directory.
i.e. not is_binary OR is_dir."
601,https://api.github.com/repos/mozilla/dxr/pulls/429,429,Use pkg_resources.resource_filename to find hgext.,"When using setup.py install, the hg extension was not installed because it was not a Python package and it was not specified in the Manifest.
This patch adds the folder to the Manifest, and we refer to the filename in code using pkg_resources, so it will be extracted to a temporary cache directory if it's stuck in an archive.
",pelmers,2406051,2015-06-10T21:47:28Z,CONTRIBUTOR,True,5,6,2,Powerful search for large codebases,Python,f10cfbb2551be5f925f9c8b3f51a307a699c12f4,Use pkg_resources.resource_filename to find hgext.
602,https://api.github.com/repos/mozilla/dxr/pulls/428,428,Support id and ref filters.,"These filters `or` together the filters of enabled plugins that either
find identifiers (i.e. definitions and declarations) or references to
them.
This work is a part of the query language refresh, and a lays groundwork
for result mixing.

To implement this I change the Filter constructor to take a list of enabled plugins, and I add properties is_reference and is_identifier which filters set to True when applicable.
",pelmers,2406051,2015-06-09T22:29:47Z,CONTRIBUTOR,True,158,25,10,Powerful search for large codebases,Python,d93d402e1fc455c44c30bee91ae2193331daa57b,"Support id and ref filters.

These filters `or` together the filters of enabled plugins that either
find definitions of identifiers or references to them.
This work is a part of the query language refresh, and it lays groundwork
for result mixing."
603,https://api.github.com/repos/mozilla/dxr/pulls/427,427,Get elasticsearch.org's GPG key over HTTPS.,"It's not perfect, but it's better than cleartext.
",erikrose,295816,2015-06-09T22:07:40Z,MEMBER,False,1,1,1,Powerful search for large codebases,Python,d2ceffbe5c9ac32c79e74b8b9cf9ddc06bda4450,"Get elasticsearch.org's GPG key over HTTPS.

It's not perfect, but it's better than cleartext."
604,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,6bd59bdc8af88d8eaa5e62d5682343689f5b9743,"Don't blow up the whole indexing run for one bad extent.

Let's finish the index and see how pervasive the errors are. The production version has errors too, after all."
605,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,0bda5edf5b95fbdf2566b94ca63d58547b2a52c1,"BUGZILLA-1111383 Don't assume that 'kind' is a valid key

'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383"
606,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,d3e8eaa6a246785e6c4e70c572cea83c68b0de5b,"BUGZILLA-1111371 Allow user to skip build phase.

If the user adds 'build' to the 'skip_stages' configuration variable,
then the build process will be skipped. Most of this change is to prevent
the temp directory from being clobbered on startup.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111371"
607,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,aa4ad23d1cc673518c131efd761d93ba4bac3632,Fix a missing import.
608,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,377ff395ea2a7a9f390089ab6515a110f78469cc,"Merge fix for ""kind"" KeyErrors while indexing. Fix bug 1111383. Close #376."
609,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,9ed845aca132065e9487d2ffd66d72e55b1cf62f,"Document (barely) the new ""build"" skip_stages value."
610,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,95eedb613b2b429b51db8fc07f56b9428d6ad924,"Add ""build"" as a skip_stages value. Fix bug 1111371. Close #377."
611,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,d61d01be29c97d35ddb10ad06da10f82276a267b,"Remove virtualenv and virtualenvwrapper from provisioning script.

We weren't using them, and the latter is crashing on install on Jenkins: https://ci.mozilla.org/job/dxr/444/console."
612,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,3aaeac8352380894f956327464767897cf01b298,"Move temp folder initialization out of environment() so it happens even when skipping the build step.

That way, when ""build"" is in skip_stages, post_build() doesn't fail."
613,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,a22f8d38ea48e4502980411c0183e8aefaf58b60,"Just warn about bad extents in the deprecated function, too.

Note the subtle difference in case so I can see which one is failing. :-)"
614,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,a2763741b7b053879e48f226a7bb48efeed97bc7,Fix a NameError in span_to_lines() and a test_indexers test failure.
615,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,032883a145a9a1be30f03268be44dd8fcfdb3591,"Audit compiler plugin for weird location handling.

The bits that spit out the extents never made any sense to me. Many tunneled into macro definitions (spelling locations) and obeyed #line directives (presumed locations) when they shouldn't have. I suspect this is a major (or the only) cause of the completely bogus extents (for which I added warnings) that are emitted when analyzing mozilla-central.

24 test failures. Next, we'll tamp the test failures down to 0, and then we'll run against mozilla-central again and see if we improved things.

Also changed a name, ""decl"" to ""def"", which was wrong."
616,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,9faf30632d1c82183ae585ae97876b5a075f059c,"Fix the warnings tests.

Down to 20 failures."
617,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,6cb62b7803883ccc2d7a4c7d7b323ffe868098d3,"Fix end boundary for most kinds of references.

Down to 15 tests failing."
618,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,01fa57f1fbbe1b61e1ee938e699355334cca79e6,"Fix end locs for nested namespaces.

Down to 10 test failures."
619,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,8ac711cdc3136775b831096c04ddae5a0f7accf2,"Fix a spurious leading ""./"" in locs. 4 failing tests remaining."
620,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,1a67f3dd8d825d21ac2b341239d29e0d8f8fe2ed,Remove some pointless indirection.
621,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,ddec2009505f611b2a249bf038f4eb884adfc74a,"Fix ""Jump To Definition"" menu items on macro refs.

Down to 3 failing tests.

Also, bring some comments up to date."
622,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,03eb8451798ac3ec0ee5955a0437570e21ffc9dd,Add a comment about CSV globbing speed.
623,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,4942730a42d5fb3b25478b042ffc1de2618ee8a6,Only show and use filters from enabled plugins
624,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,a8344336c2f075e388bc5f058947f8ce214da9c5,Review changes
625,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,d37aa28cc2fc53a42aed4166cdc222cc1c6dbae5,"Refactor the limit-to-enabled-plugins stuff.

* Use only the direct searchers from enabled plugins.
* Move cached() to the utils module. It might someday grow up into a general-purpose decorator, and I want to find it when I go looking for one.
* Have most of the plugin-taking routines take plugins rather than just the names of them, following the rule of thumb ""take what you really need"" (lest we end up backtracking).
* Plugin now has a `name` attr, glommed on by all_plugins() after construction. This is a bit of a hack so direct_searchers() can continue to sort by plugin name without having to take a different kind of arg than the other routines, allowing them all to use @cache.

We really should benchmark and see if this caching is worth it, but I just want to get this merged."
626,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,2abde7cb7cbfa3e697438cd56843e759329a00a8,Merge in the limiting of filters to ones from enabled plugins. Close #373. Fix bug 1070228.
627,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,a7956b481b98f26abf728d2e4d6d4f9f054e5a7c,Make MacroArgumentDeclareTests pass by calling expandMacroArgs().
628,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,d154eb1e9838b5e795b6e3fd5f6d8b78854d1eeb,"All tests pass! Correct the macro traversal for var and member references.

Factor up afterToken() calls into printReference(). We want to hoist ourselves out of the macro definition with expandMacroArgs() and only *then* walk to the next token. This makes it possible.

TODO: Make sure every visitor method calls expandMacroArgs, directly or indirectly. Likely, we should factor it up. There's a lot of other repetition we should factor up as well."
629,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,a6852ff0010b67e98b23e49a7f466dc2cb78f1c8,"Rename expandMacroArgs for clarity (to me, at least)."
630,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,c33c72f218083bd41669bb75869e766533475e7d,Remove debugging prints.
631,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,f7011354cb081655abe882282fddf24101dcde00,"Tolerate empty output from locationToString(), which happens when SourceLocations are invalid.

I'm not sure what all the cases are that cause that, but  visitations that don't yet call escapeMacros() are probably one."
632,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,77eeb222ad2c21a60131c3f54376ffdbdaedd610,"Remove the long-extent warnings.

Building mozilla-central shows the ones that likely indicated errors no longer happen since the location refit. Remaining ones are of a reasonable length (2-6 lines)."
633,https://api.github.com/repos/mozilla/dxr/pulls/426,426,Es gpg https,,erikrose,295816,2015-06-09T22:06:39Z,MEMBER,False,17238,7031,312,Powerful search for large codebases,Python,6d64f7201e91574482b2a4d778296dedc93182d2,"Remove the no-longer-used printExtent().

We kept extents this long only as a manual debug aid."
634,https://api.github.com/repos/mozilla/dxr/pulls/425,425,Change the Vagrantfile to use https instead of http,"Let's not MitM anybody, please.
",april,230528,2015-06-09T21:44:28Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,b3ea40371c848bf1c8142d538a27be5db4484212,"Let's not MitM anybody, please."
635,https://api.github.com/repos/mozilla/dxr/pulls/423,423,Fixes bug 1171229. Correctly update title on dynamic searches.,"Attach the contents of the query field to the data parameter to populateResults, so the document title updates correctly.
",pelmers,2406051,2015-06-08T20:14:51Z,CONTRIBUTOR,True,3,1,1,Powerful search for large codebases,Python,3bf7596b9b9aaa031be81c0836b0e6f2ece71f59,Fixes bug 1171229. Correctly update title on dynamic searches.
636,https://api.github.com/repos/mozilla/dxr/pulls/423,423,Fixes bug 1171229. Correctly update title on dynamic searches.,"Attach the contents of the query field to the data parameter to populateResults, so the document title updates correctly.
",pelmers,2406051,2015-06-08T20:14:51Z,CONTRIBUTOR,True,3,1,1,Powerful search for large codebases,Python,3ff11e598ea3c676068bc59e354a52277a4b2a4e,Add an extra space.
637,https://api.github.com/repos/mozilla/dxr/pulls/422,422,Empty out search.html; perform AJAX request instead.,"Addresses bug [970405](https://bugzilla.mozilla.org/show_bug.cgi?id=970405).
~~Still a bit rough; sometimes when loading a page the location will change after about half a second.~~ Fixed by #423.

Here we remove the content block of search.html and instead perform an AJAX request on load of the search page based on the search portion of the location.
Remark: I do not completely remove search.html because I want to preserve the back button and the ability to link directly to some search results.
",pelmers,2406051,2015-06-01T21:28:51Z,CONTRIBUTOR,True,93,142,4,Powerful search for large codebases,Python,eef3c3b2503253e092b57d734973600baf8caafa,"Empty out search.html by performing an AJAX request instead.

Addresses bug 970405"
638,https://api.github.com/repos/mozilla/dxr/pulls/422,422,Empty out search.html; perform AJAX request instead.,"Addresses bug [970405](https://bugzilla.mozilla.org/show_bug.cgi?id=970405).
~~Still a bit rough; sometimes when loading a page the location will change after about half a second.~~ Fixed by #423.

Here we remove the content block of search.html and instead perform an AJAX request on load of the search page based on the search portion of the location.
Remark: I do not completely remove search.html because I want to preserve the back button and the ability to link directly to some search results.
",pelmers,2406051,2015-06-01T21:28:51Z,CONTRIBUTOR,True,93,142,4,Powerful search for large codebases,Python,e220f9a70f7e0c91c6aefac4d6a0c9f62f1a9c2c,Handle form submission and redirects in ajax.
639,https://api.github.com/repos/mozilla/dxr/pulls/421,421,Fix bug 1166549. Make binaries not clickable in search results.,"Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file.
",pelmers,2406051,2015-05-28T17:40:24Z,CONTRIBUTOR,True,36,16,9,Powerful search for large codebases,Python,2d2d705f088a675ab980bd363f91a99f4bffbac7,"Fix bug 1166549. Make binaries not clickable in search results.

Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file."
640,https://api.github.com/repos/mozilla/dxr/pulls/421,421,Fix bug 1166549. Make binaries not clickable in search results.,"Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file.
",pelmers,2406051,2015-05-28T17:40:24Z,CONTRIBUTOR,True,36,16,9,Powerful search for large codebases,Python,be0ca9b8e533d2835f2e05df60cabde228112866,Close anchor tag for path crumbs of binary files.
641,https://api.github.com/repos/mozilla/dxr/pulls/421,421,Fix bug 1166549. Make binaries not clickable in search results.,"Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file.
",pelmers,2406051,2015-05-28T17:40:24Z,CONTRIBUTOR,True,36,16,9,Powerful search for large codebases,Python,b216a34696a20b69998503266eb566c9ecb1a88b,Duplicate efforts on results.html.
642,https://api.github.com/repos/mozilla/dxr/pulls/421,421,Fix bug 1166549. Make binaries not clickable in search results.,"Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file.
",pelmers,2406051,2015-05-28T17:40:24Z,CONTRIBUTOR,True,36,16,9,Powerful search for large codebases,Python,68e7a5b5629aca79f2d63e8b5b2a1f3e96b37624,Update binary file browsing comment and result docstring.
643,https://api.github.com/repos/mozilla/dxr/pulls/421,421,Fix bug 1166549. Make binaries not clickable in search results.,"Pass is_binary field of FILE to search_html, and gate the anchor tag
in the path_line template on whether the path is to a binary file.
",pelmers,2406051,2015-05-28T17:40:24Z,CONTRIBUTOR,True,36,16,9,Powerful search for large codebases,Python,3b9d814251d2864e0595043c14f2f7319ec261d9,Fix link to image_file.css
644,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,3880ee2782430867e1c9b7aa4d8c1fc97ccf8702,"Start storing line endings in ES.

This makes it much less complicated to implement calls to skimmers. Otherwise, we'd need to record the from-BOF offsets of every line doc in order to translate from the file-wide offsets emitted by the skimmers to the per-line ones html_line() deals in."
645,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,0f67b77c33123607d9d1d7b557830c62af030106,"Store refs and regions separately in LINE docs.

This commit lays the groundwork for allowing skimmers to be run at
request time and merging the results with those from index time."
646,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,4d9a7b74aab1c6f31b4919f4e269bad57c73998f,"Run file skimmers at request.

This will need more tests, but it at least works correctly with
pygmentize."
647,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,53747d3050d592f77b1409266c193fd35743b21b,"Implement permalinks for Mercurial.

Cherrypick of 8d4134ba01c9. Pulls vcs parts from omniglot into
dxr.vcs and adds a /rev/ route which loads a particular revision of
a file from VCS."
648,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,3305b6a83957424d62dc7edc5a737d8ca9a1420d,All tests pass.
649,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,74ab1e9dc7beadbd47d98458841e09b1101cf1ba,"More efficient methods for finding tracked files.

Tests complete in 65 seconds, down from 1200."
650,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,1e346912535ebb6b54c6c7584584b8077532149a,Simplify omniglot.py to prepare for refactoring.
651,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,ff73ca3ea2df07133564d9b649504d430dd96e36,Move url-related logic from vcs to omniglot.
652,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,5723a19752382a709ed1b089c29f25b77db666b9,Add tests for hg and git repositories.
653,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,cc5583564c6e0b801b51a29e962d2e6d799144ba,Switch to hglib from hg to avoid license issues.
654,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,f6607db468b34afe05bfde6a6e6e07a1cac69664,Update permalink based on highlighted region.
655,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,cad4b662537f34be4e1173ac7d14dbd481a5cf4f,Increment format
656,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,be1892c96d634f01aa289ee9df48867df324f6ad,Fix some style nits: Docstrings and import orders.
657,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,ffbb95843b2db916d0a45ff3b908c8edd669c094,"Create VCSTree class that manages VCS objects for a tree.

An instance of this class is constructed for each tree and passed to
each plugin’s TreeToIndex."
658,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,a62945d2d79278b360a304d2ee71fc027f530f0d,Switch to a fork of python-hglib until issue3924 is fixed.
659,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,9963a26e208135b688705892572cd317d3c51295,"Use a Mercurial extension to speed up diff-link building.

We use an extension to avoid having to license the entire project
under GPL. The only portion under GPL is dxr/hgext/."
660,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,ba9bbcd82a8413fbc5a797455a933708e6172b25,"VCS -> Vcs. Include GPL license with hgext.

This should be sufficient for legal purposes; mozilla-central does the
same thing for some of the javascript libraries it includes."
661,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,9e3b2c196ca7f67670cd347f15db96d8d1de019e,Fix omniglot entry point.
662,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,9ab8cebeb90edfc7425871e70b7610bd2ced28b5,Stop constructing a VcsTree for each plugin.
663,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,c79f09dfbeeb9c824eec2d53b68a034f3670fbe8,"Fix docstrings in tests.

Copy paste laziness."
664,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,ca65adc44fc557df1a58eda76ef41d81b112dd86,Put the .git and .hg folders into archives.
665,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,93f876daa0bc0d62704338cbf88ea9f90922f411,"Amend license, update docs, remove dict comprehension."
666,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,374c9757a7c5f6ce70a90dc4e6b465211c0f9227,"Rename VcsTree to VcsCache, add regression test for vs_path cache."
667,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,b420d58af7e1b12daa529fea05e9dde2c250d723,Fix nits.
668,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,18e0faed22c83727697dea6013d0c199cc21136b,"Handle permalink target for VCS root different from tree folder.

Originally we construct the permalink path from the relative path
to the vcs; however when app.py fetches the revision it expects
a path relative to the tree’s source folder. When the vcs root
is not coincident with the tree’s source folder then we have a
mismatch. Fix the problem by always storing paths relative to
tree source folder, and using relpath to get a vcs relative path
when we query for the revision contents."
669,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,4a7646c1e51ca8b1e5e3bf8980b8e1be960f0a3a,"Fix nits.

Adjust docstrings, imports, indentations, refactorings."
670,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,5ffdb1021099a9d309c5780f46357313d2caddad,Use previous_revisions to determine whether path is tracked
671,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,b5e339b65ac0aea2f9f65fca031fb130d5b17332,"Move permalink generation to run time.

The tree’s source folder may be moved between indexing and serving,
so it makes sense to only show the link if we can find the VCS for
the folder. Note: the links omniglot produces are fine, since it
only links to upstream web views, rather than in-DXR locations."
672,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,074c6ffdd487e3c5e446629c2b259fcc7b91aba2,"Fix nits.

Line up quotes, reword comment."
673,https://api.github.com/repos/mozilla/dxr/pulls/419,419,"Refactored VCS, run file skimmers on requests, permalinks","This work is still a bit rough around the edges, but I wanted to put this up to make it easier to review.

Related bugs:
- https://bugzilla.mozilla.org/show_bug.cgi?id=962108
- https://bugzilla.mozilla.org/show_bug.cgi?id=1166397

Summary of changes:
- Store line endings in ES, and store regions and refs separately. This lets us FileToSkim when files are requested, and merge refs and regions at this point. Increment the format version.
- Add some tests for Git and Mercurial.
- Add permalink button to nav bar along with '/rev' route.
- Add dependence on [hglib](https://pypi.python.org/pypi/python-hglib/) to avoid [MercurialApi](http://mercurial.selenic.com/wiki/MercurialApi)
- Other refactoring and minor fixes.

Still needed:
- ~~Tests for Perforce.~~ Too expensive.
- ~~Put permalink generation in core.py.~~
- ~~Move link building into vcs.py~~
- ~~Construct some kind of VCS manager for each worker that caches path -> vcs mapping.~~
- ~~Update the docs. Which portions?~~
- ~~Better name than VCSTree ?~~
- Squash some of the back-and-forth commits
- Rename omniglot?
",pelmers,2406051,2015-05-26T20:47:07Z,CONTRIBUTOR,True,1250,591,62,Powerful search for large codebases,Python,1602ff85e9dc4b6c1ec535eb8d39ede2b1cbb46f,Give copyright to Mozilla Foundation
674,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,23be4d465a2f2836f130b73b82f7e5f0920ea9a0,Added a max-width of 30% to .panel in dxr.css
675,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,82be8df796059da1dc7eaae00ce1193ebd647b4c,"Merge pull request #378 from Decker108/1091122

Merge 30% capping of nav panel width. Fix bug 1091122."
676,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,0b41bf9dccd556af8bf2ad5e09c0ebd1bf1a1b82,Fix problem with _clang_at_least always returning False.
677,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,bdbaad608648bde46a6e4932a3fd82b68dd03dac,Move _clang_at_least to dxr.testing.TestCase so it can be used by more than one test case.
678,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,daadecd6fff4463ac08360a174d774cfebdc427b,Fix test for improved extents produced by clang 3.5.
679,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,3740c1edcbefbac1dcc639cfe7f0cb6b95513b97,"clang 3.5 changed the text ""<anonymous namespace>"" to ""(anonymous namespace)""."
680,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,e94d0bb9054fd003e749f24e9b92294712620638,Encourage public IRC rather than private messages.
681,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,1067f20626b05c8132ffd6c6d0f1087924095bca,Fix #280: Add help icon to header with links to Github and docs.
682,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,ddd580bedcb5164b8a2b0097c19a06fca184d441,"Standardize background colors, border colors, and corner radii (mostly) for all menus: Switch Tree, Filters, and Help. Add drop shadows for all.

The shadows make it easier to find the outline of the menu in the midst of a noisy directory listing page.

I don't love the repetition here."
683,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,b6b692df75352a235cc40ab45d1e51a397f63186,"Add Help menu. Close #280.

At the moment, it just has some links. Perhaps this will be where we stick the last few release notes as well (protips, essentially)."
684,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,ca0f66536644a3bcdc859b16722266ea075450cc,Add contribute.json file.
685,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,016d7f98a3df973bf4cff1246e8efd5a30365563,"Note that the action is happening on the es branch.

This should help people who don't get in touch first properly target their patches."
686,https://api.github.com/repos/mozilla/dxr/pulls/418,418,Merge master into es,"Opening this to make sure it passes CI before landing.
",erikrose,295816,2015-05-19T21:11:05Z,MEMBER,True,208,72,17,Powerful search for large codebases,Python,b2dbd5b1e637afae0100085f9e5a532d3bd04b54,"Merge master into es to bring it up to date.

This made some bugs evident, so I fixed them:
* clang_at_least() always returned False on the Ubuntu-packaged clangs.
* Fixing the above led to test_warning actually running (and consequently failing). Fixed it by not using the wildcard-in-warning feature, which no longer exists. We may re-add wildcards for structured needles later if there's demand."
687,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,ca75f2e0804509fff2bafc54a4e4a968b66a7d8e,WIP rust plugin
688,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,8e64c970750b5adf71a090fd6ac689a4d1bfaec6,tests
689,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,250a55ab4a9589335addffc0fc0152220c8deda6,Rebased
690,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,b8583f3453eca470aada312dfb5f30ed21351b97,"Script for running tests

This shouldn't be landed, but I'm not sure how to make the tests work otherwise, presumably a makefile somewhere"
691,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,3228c100e53393f48ed0efd0b60e729a783f9b07,Address reviewer comments on tests
692,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,b721bf00e201f709af14fcdde7f9b4aff89749a5,Get the smoke test up and running again
693,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,2efa7f2ae64286700999ef58340481f25798bf50,Remove makefiles from tests and get them all running
694,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,99d597f03a5a9afeec5d7f7d60c5a84e9df3b7b3,"Merge es into nrc-rust5 to get bug fixes.

We'll be in a better place to fix these test failures when we're not tripping over other bugs."
695,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,160b90e71431094a555837000a10a3a6f51d7d82,Install rust on provision.
696,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,5851d227671dd5128ab0f1a6638ebbfa1e0da9b8,"Remove hard-coded paths to nrc's home dir.

Also remove object_folder options, which now default to the value of source_folder."
697,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,96ef13e91f3058dec66ff683d4abf261e2a5160c,"Provide a default value for $RUSTC.

That way, the test-level makefiles will work even if nothing is set, as long as rustc is on the PATH. Thus, we no longer need the test.sh file.

Remove dedicated rust test script, because the default"
698,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,d54015bd9de8e320521afaab44ee46f2a0d9e74d,"Remove makefile from test_smoke.

We don't need top-level makefiles anymore in folder-based tests."
699,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,3d1b8027a4fce7969e8a417916a03e6409b4f6cd,Fix a docstring typo and some formatting.
700,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,b54c0eb1ac50dde764f1f130260268a08b9f8e17,Clean up some debug prints and TODOs.
701,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,89ccc3134297c5b0a0c7c9415f8275969351afbf,Remove unused first_filter_for_plugins().
702,https://api.github.com/repos/mozilla/dxr/pulls/417,417,Polish up rust merge,"This will subsume #393 if it works. Filing just to make sure CI passes.
",erikrose,295816,2015-05-13T21:56:36Z,MEMBER,True,2972,1,38,Powerful search for large codebases,Python,a388a1c6e9dfd9d84f663b392afd8863623e895a,Replace uses of QUALIFIED_NEEDLE in rust plugin with the identical QUALIFIED_LINE_NEEDLE.
703,https://api.github.com/repos/mozilla/dxr/pulls/416,416,"Set ""bash strict mode"" not only on vagrant_provision but on the subsh…","…ell it spawns via sudo.

https://ci.mozilla.org/job/dxr/551/ plowed ahead even after a peep error because we weren't doing this.

See http://redsymbol.net/articles/unofficial-bash-strict-mode/.

NOTE: This is going to fail on purpose to see if the peep failure promptly aborts the script.
",erikrose,295816,2015-05-07T20:37:42Z,MEMBER,False,3,3,2,Powerful search for large codebases,Python,b93e2b532d666f20314c7b8cb2a2ed83e42b62fe,"Set ""bash strict mode"" not only on vagrant_provision but on the subshell it spawns via sudo.

https://ci.mozilla.org/job/dxr/551/ plowed ahead even after a peep error because we weren't doing this.

See http://redsymbol.net/articles/unofficial-bash-strict-mode/."
704,https://api.github.com/repos/mozilla/dxr/pulls/416,416,"Set ""bash strict mode"" not only on vagrant_provision but on the subsh…","…ell it spawns via sudo.

https://ci.mozilla.org/job/dxr/551/ plowed ahead even after a peep error because we weren't doing this.

See http://redsymbol.net/articles/unofficial-bash-strict-mode/.

NOTE: This is going to fail on purpose to see if the peep failure promptly aborts the script.
",erikrose,295816,2015-05-07T20:37:42Z,MEMBER,False,3,3,2,Powerful search for large codebases,Python,5635e5a7fd8e7d33e21940eb2d241f7914ed9eb0,"Fix ""/tmp/vagrant-shell: 7: set: Illegal option -o pipefile""."
705,https://api.github.com/repos/mozilla/dxr/pulls/415,415,"WIP: Adding docker support for DXR dev, and customized elasticsearch","Here's a work in progress pull request that is much more inline with how I'd imagine folks will use docker for DXR dev. It does not yet include a standalone/fully baked image with Apache etc. The intent is to polish this up for dev work, and then create a separate image for a deployable version of DXR.

This PR includes makefile targets to generate images, and to provision a dxr virtual environment in an externally mounted volume using docker-compose.yml. Each image can also be run manually.

TODO: 
- [ ] update readme with instructions
- [ ] figure out what to do with peep.py and requirements.txt copies in dockerfiles/dxr directory
- [ ] add a deployable dxr image, e.g. publish to docker hub
",jamonation,328553,2015-05-07T02:33:56Z,CONTRIBUTOR,False,1006,1,9,Powerful search for large codebases,Python,f1e4e85013bd530745319f35eff14ee35ea28a2b,"Adding docker support for DXR dev, and customized elasticsearch
Includes makefile targets to generate images, provision dev venv
TODO: update readme with instructions, add a dxr serve image"
706,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,9121fab93e48d8bcd07a8a4c2eeb6a9c3b0651c1,"[python-plugin] Ignore non-py files; ignore IOError.

IOError can happen for e.g. broken symlinks (before the change to filter out non-python files, this aborted on ./dxr/tests/test_bad_symlink/code/bad_symlink)"
707,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,bc963c19e6ce0b8ecfb19c849f8217170941572b,[python-plugin] Use consistent naming for abs_module_name.
708,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,a635e7302f3ae3c2ab7f15d53bc23ca0952f5834,"[python-plugin] Avoid creating FileToIndex for non-python files.

It doesn’t do anything useful in this case anyway."
709,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,634f9fa732286931f1ab0ef54c7525e1072868cc,[python-plugin] Add logging for import analysis.
710,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,a6ecd01fbc62b5294d12e31ab714659e1912c70e,"[python-plugin] Fix the import resolution algorithm for base class names.

The plugin attempts to track names imported into modules in
TreeAnalysis.names[], which maps
  * the local name of an import in the module’s scope
  * to its original name and the module it was imported from.

For example, if we had the following in package/__init__.py:
    from package.foo import bar
    import package.foo.baz
...the following mappings would be stored:
    (package, bar) —is-really—> (package.foo, bar)
    (package, package.foo.baz) —is-really—> (GLOBAL, package.foo.baz)

Later, when processing a reference to X from `package`'s scope, we try
two things:
1) If the reference is something we have in our list of known imported
names:
  a) a module - the `package.foo.baz` case above
  b) a class or module imported from a module (`bar`)
...we take the original name and module it was imported from and check
again.
2) If the reference is of form `bar.Class`, we check what `bar` refers
to => (package.foo, bar.Class)

Before this change, a single ‘dotted’ string like `package.subpackage.module.var` was used to identify both the module and
the local name inside the module. This broke on dxr code itself:
  # in dxr/cli/__init__.py
  from dxr.cli.deploy import deploy

Creates this mapping:
  'dxr.cli.deploy' -> 'dxr.cli.deploy.deploy'
.. which is circular, since it defines d.c.d in terms of itself. So when
we attempted to resolve a class like `dxr.cli.deploy.object` we'd get:
  `dxr.cli.deploy.object` ->
  `dxr.cli.deploy` + `object` ->
  `dxr.cli.deploy.deploy` + `object`, resulting in an endless loop.

The solution is to use tuples (absolute_module_name,
local_name_inside_the_module), and never resolve the
absolute_module_name part.

This does mean that this analysis will not work in cases where we import
from a non-absolute name, like `submodule` in example below:
  from package import submodule
  from submodule import MyClass as Klass
  class ThirdDerivedFromSubmodule(Klass):
      pass
...but that didn't work before either."
711,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,bdb53baa90cf794d54092532b66cae259aa420ed,"[python-plugin] Don’t loop endlessly on `from package import submodule`.

This used to create (package, submodule)->(package, submodule) mapping."
712,https://api.github.com/repos/mozilla/dxr/pulls/414,414,Python plugin fixes,"I tried running dxr on itself with the python plugin https://github.com/mozilla/dxr/pull/362 enabled. Some of these changes were needed to get it to run, and others I made while figuring out how it was supposed to work.

The detailed comments are in the individual commits.
",nickolay,247067,2015-05-03T17:12:20Z,CONTRIBUTOR,False,133,32,9,Powerful search for large codebases,Python,ab68d9908299ebb15458c6c49d53047afa71c786,"[python-plugin] Add tests for the two previous import-related fixes.

Also remove __init__.py to avoid the test code from getting loaded by nose."
713,https://api.github.com/repos/mozilla/dxr/pulls/413,413,Try to get ssh not to hang up in the middle of long things like package ...,"...downloads or builds on Jenkins.

Currently we get sporadic ""Connection to 127.0.0.1 reset by peer"" messages.
",erikrose,295816,2015-04-30T20:13:39Z,MEMBER,True,6,1,1,Powerful search for large codebases,Python,59a5db9b56ab914c8f7ca3e3a2f27abd75b07f31,"Try to get ssh not to hang up in the middle of long things like package downloads or builds on Jenkins.

Currently we get sporadic ""Connection to 127.0.0.1 reset by peer"" messages."
714,https://api.github.com/repos/mozilla/dxr/pulls/412,412,Update docs for the ES branch,"I was checking out dxr and came across some outdated docs. In the process of fixing them I had to figure out (again!) how to work with readthedocs, so I added this to development.rst.

Did not update deployment.rst, since I wasn't able to try the instructions listed there.
",nickolay,247067,2015-04-26T19:30:29Z,CONTRIBUTOR,True,38,16,4,Powerful search for large codebases,Python,3d4cf071ee25b3eace3e6dd84553528fe1d34c19,"Update docs for the new `dxr` command

dxr-build.py and dxr-serve.py were replaced with `dxr index` and `dxr serve` respectively in https://bugzilla.mozilla.org/show_bug.cgi?id=1047554"
715,https://api.github.com/repos/mozilla/dxr/pulls/412,412,Update docs for the ES branch,"I was checking out dxr and came across some outdated docs. In the process of fixing them I had to figure out (again!) how to work with readthedocs, so I added this to development.rst.

Did not update deployment.rst, since I wasn't able to try the instructions listed there.
",nickolay,247067,2015-04-26T19:30:29Z,CONTRIBUTOR,True,38,16,4,Powerful search for large codebases,Python,3c68ea0bf17844451f2c177327cd2a8c11a04f73,Add docs on updating the documentation.
716,https://api.github.com/repos/mozilla/dxr/pulls/411,411,Add `dxr shell` command.,"`dxr shell` opens an interactive Python shell within a Flask app
context. It essentially does what `dxr serve` does, but instead of
running the app, gives you a shell to play around with.

I found it useful while trying to execute some code copied from a view, which required the app context to be set up or access to a config file.
",Osmose,193106,2015-04-03T22:00:07Z,CONTRIBUTOR,True,51,0,2,Powerful search for large codebases,Python,e103923b2f6403e063845a539564c6de1e601a34,"Add `dxr shell` command.

`dxr shell` opens an interactive Python shell within a Flask app
context. It essentially does what `dxr serve` does, but instead of
running the app, gives you a shell to play around with."
717,https://api.github.com/repos/mozilla/dxr/pulls/410,410,Fix infinite scroll,"Fixes the infinite scroll to count lines properly (it was previously counting number of files returned) and to append new lines for a file that is already on the page to that file instead of creating a new file group in the search results.

This supersedes #384, which was very helpful in helping me understand what was going wrong. :D
",Osmose,193106,2015-04-02T17:42:21Z,CONTRIBUTOR,True,131,71,9,Powerful search for large codebases,Python,23e9615c495078e8c03ff4caf390d1c061b9c612,Count lines properly in search result data.
718,https://api.github.com/repos/mozilla/dxr/pulls/410,410,Fix infinite scroll,"Fixes the infinite scroll to count lines properly (it was previously counting number of files returned) and to append new lines for a file that is already on the page to that file instead of creating a new file group in the search results.

This supersedes #384, which was very helpful in helping me understand what was going wrong. :D
",Osmose,193106,2015-04-02T17:42:21Z,CONTRIBUTOR,True,131,71,9,Powerful search for large codebases,Python,589decba227d97d15cf1bccdcbaf97d3d869c2e8,"Fix bug 1119862: Fix infinite scrolling.

Fixes the infinite scroll to append lines to files that are already
shown on the page instead of creating a new file entry in the search
results."
719,https://api.github.com/repos/mozilla/dxr/pulls/409,409,"Add ""Jump to definition"" menu for Python function calls.","In order to be able to find the location of a Python function based only on it's name, this adds a DefinitionTree to the analysis that keeps track of class and function definitions across the entire tree. It also stores info about the imports so that it can resolve any name to the definition it refers to.

Using this, we look up the function using the name from the call node and fetch the path/line data from the definition. As of now this doesn't account for things like proper variable scope. For example, a function call like this wouldn't be able to find the right definition for bar:

``` python
def foo():
    def bar():
        return 8
    blah = bar()
    return blah
```

But in basic cases, it works. In the future we can make call nodes aware of their scope so that `bar()` would know that it's looking for `foo.bar` and not just `bar`.

In the future I'd like to add variable definitions to the tree, including class attributes. Eventually it might make sense to turn `Definition` and `Import` into proper classes and give them subclasses that can store extra data, such as a `ClassDefinition` subclass that stores class inheritance info. I'm pretty sure most of the info that `TreeAnalysis` currently stores as `defaultdict`s could actually be stored in the definition tree.
",Osmose,193106,2015-04-01T06:04:30Z,CONTRIBUTOR,False,486,163,14,Powerful search for large codebases,Python,7f22a32e17e9fc9c6e4ec3fbcc6e19f7067e0b62,"Track definitions across python trees.

Replaces the import name mapping for tracing imports across files as
well as opening up the possibility to link to definitions in the refs
menus."
720,https://api.github.com/repos/mozilla/dxr/pulls/409,409,"Add ""Jump to definition"" menu for Python function calls.","In order to be able to find the location of a Python function based only on it's name, this adds a DefinitionTree to the analysis that keeps track of class and function definitions across the entire tree. It also stores info about the imports so that it can resolve any name to the definition it refers to.

Using this, we look up the function using the name from the call node and fetch the path/line data from the definition. As of now this doesn't account for things like proper variable scope. For example, a function call like this wouldn't be able to find the right definition for bar:

``` python
def foo():
    def bar():
        return 8
    blah = bar()
    return blah
```

But in basic cases, it works. In the future we can make call nodes aware of their scope so that `bar()` would know that it's looking for `foo.bar` and not just `bar`.

In the future I'd like to add variable definitions to the tree, including class attributes. Eventually it might make sense to turn `Definition` and `Import` into proper classes and give them subclasses that can store extra data, such as a `ClassDefinition` subclass that stores class inheritance info. I'm pretty sure most of the info that `TreeAnalysis` currently stores as `defaultdict`s could actually be stored in the definition tree.
",Osmose,193106,2015-04-01T06:04:30Z,CONTRIBUTOR,False,486,163,14,Powerful search for large codebases,Python,9e19948b60ab01a439f2bca908d7b6f1652301f6,"Add ""jump to function definition"" menu for Python.

Adds a new menu to Python files for function calls that lets users jump
to the definition of the function being called.

Also moves the definition_menu function to dxr.menus as it is useful for
multiple plugins."
721,https://api.github.com/repos/mozilla/dxr/pulls/409,409,"Add ""Jump to definition"" menu for Python function calls.","In order to be able to find the location of a Python function based only on it's name, this adds a DefinitionTree to the analysis that keeps track of class and function definitions across the entire tree. It also stores info about the imports so that it can resolve any name to the definition it refers to.

Using this, we look up the function using the name from the call node and fetch the path/line data from the definition. As of now this doesn't account for things like proper variable scope. For example, a function call like this wouldn't be able to find the right definition for bar:

``` python
def foo():
    def bar():
        return 8
    blah = bar()
    return blah
```

But in basic cases, it works. In the future we can make call nodes aware of their scope so that `bar()` would know that it's looking for `foo.bar` and not just `bar`.

In the future I'd like to add variable definitions to the tree, including class attributes. Eventually it might make sense to turn `Definition` and `Import` into proper classes and give them subclasses that can store extra data, such as a `ClassDefinition` subclass that stores class inheritance info. I'm pretty sure most of the info that `TreeAnalysis` currently stores as `defaultdict`s could actually be stored in the definition tree.
",Osmose,193106,2015-04-01T06:04:30Z,CONTRIBUTOR,False,486,163,14,Powerful search for large codebases,Python,9c854844b640cbb868e50b9e82c87eb1420240dc,Add some missing tests.
722,https://api.github.com/repos/mozilla/dxr/pulls/409,409,"Add ""Jump to definition"" menu for Python function calls.","In order to be able to find the location of a Python function based only on it's name, this adds a DefinitionTree to the analysis that keeps track of class and function definitions across the entire tree. It also stores info about the imports so that it can resolve any name to the definition it refers to.

Using this, we look up the function using the name from the call node and fetch the path/line data from the definition. As of now this doesn't account for things like proper variable scope. For example, a function call like this wouldn't be able to find the right definition for bar:

``` python
def foo():
    def bar():
        return 8
    blah = bar()
    return blah
```

But in basic cases, it works. In the future we can make call nodes aware of their scope so that `bar()` would know that it's looking for `foo.bar` and not just `bar`.

In the future I'd like to add variable definitions to the tree, including class attributes. Eventually it might make sense to turn `Definition` and `Import` into proper classes and give them subclasses that can store extra data, such as a `ClassDefinition` subclass that stores class inheritance info. I'm pretty sure most of the info that `TreeAnalysis` currently stores as `defaultdict`s could actually be stored in the definition tree.
",Osmose,193106,2015-04-01T06:04:30Z,CONTRIBUTOR,False,486,163,14,Powerful search for large codebases,Python,178a586979fb4d4518f81b09fab91b29042f4971,Ignore logs from tests everywhere.
723,https://api.github.com/repos/mozilla/dxr/pulls/409,409,"Add ""Jump to definition"" menu for Python function calls.","In order to be able to find the location of a Python function based only on it's name, this adds a DefinitionTree to the analysis that keeps track of class and function definitions across the entire tree. It also stores info about the imports so that it can resolve any name to the definition it refers to.

Using this, we look up the function using the name from the call node and fetch the path/line data from the definition. As of now this doesn't account for things like proper variable scope. For example, a function call like this wouldn't be able to find the right definition for bar:

``` python
def foo():
    def bar():
        return 8
    blah = bar()
    return blah
```

But in basic cases, it works. In the future we can make call nodes aware of their scope so that `bar()` would know that it's looking for `foo.bar` and not just `bar`.

In the future I'd like to add variable definitions to the tree, including class attributes. Eventually it might make sense to turn `Definition` and `Import` into proper classes and give them subclasses that can store extra data, such as a `ClassDefinition` subclass that stores class inheritance info. I'm pretty sure most of the info that `TreeAnalysis` currently stores as `defaultdict`s could actually be stored in the definition tree.
",Osmose,193106,2015-04-01T06:04:30Z,CONTRIBUTOR,False,486,163,14,Powerful search for large codebases,Python,4159cf6025ff9fcddaff59952b6e92c007273d0b,"Merge branch 'es' into python-go-to-definition

Conflicts:
	dxr/plugins/clang/indexers.py
	dxr/plugins/python/analysis.py
	dxr/plugins/python/indexers.py"
724,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,21767c7bd7905f0b305d804312ee60221dd0d0b2,"Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.

For deployers:

* Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
* Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
* Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
* Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
* Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. Both sorts of folders are by default created in the same dir as dxr.config. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
* build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
* Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:

* Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
* make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
* Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
* Stop ignoring errors while cleaning out folders in ensure_folder().
* Move some ES utils out of app.py and core.py to es.py."
725,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,621166d5dc3810650fc1b88f47e3e42ad56d4c92,"Have a 404 on /favicon.ico, not an exception."
726,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,4c777e675089f6cd92d80de0aba45a2aa327e447,Port dxr-serve.py to `dxr serve`.
727,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,712e79ea829671159bea7778b989d9a778d4d731,"Split cli.py into multiple files, because `dxr deploy` is going to be quite long."
728,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,3cf1cadd87d166823b72257c29b2261805253b78,Move deploy.py to a subcommand of `dxr`. It hasn't been updated to work with parallel indexing yet.
729,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,2e69b704f61a4a3fa3dec5c05275844b72adbf39,"Adapt deploy script to work with parallel tree indexing.

* Re-running deploy with a manual hash will no longer redeploy that hash, so it can be mindlessly run every 5 minutes with only the cost of a `git clone`.
* Now swallows transient errors when Jenkins is unavailable."
730,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,3aaae6b12cdb8f8fc8494106a44d57d8582caf71,Show a few defaults in the CLI help.
731,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,52ee889a7bf297d45d7ee0928184ddc212d4b820,"Remove alternate ""www_root"" construction method from make_app.

There's a perfectly good Config around every time we call make_app."
732,https://api.github.com/repos/mozilla/dxr/pulls/408,408,Implement most of parallel tree indexing. Ref bug 1047554. The deploy script is still to come.,"This isn't ready to merge yet; I want to get the deploy script in place first. But f?
## 

For deployers:
- Create a top-level ""dxr"" command. Move dxr-build.py to the `dxr index` subcommand, and install it using proper entrypoints.
- Wipe out last remnant of generated filesystem artifacts: we now use the original config file at both index and request time. Thus, the `target_folder` setting goes away, the `DXR_FOLDER` env var becomes `DXR_CONFIG` and points to the config file instead, and you can change settings like es_hosts or google_analytics_key without a rebuild or mucking around with generated files (you'll just need a WSGI restart). Settings that make it into the index, like www_root, will still require a rebuild to change.
- Introduce a ""catalog index"" which keeps track of what indexes are around and what their format versions are. With this comes 2 new settings: es_catalog_index and es_catalog_replicas. The latter should be set to the number of nodes in your ES cluster minus 1.
- Support relative paths in config files, so we no longer need dxr.config.in with sed hacks or the top-level makefile in each test dir. Introduce clean_command and `dxr clean` to fill the role of ""make clean"".
- Redo how temp and log folders work. We no longer make a top-level temp folder with tree-specific folders inside. That makes it hard to clean up tests' temp folders afterward without introducing differences between test and production use: there would be race conditions or failed-rmdir ugliness in trying to delete the global temp folder in a parallel-indexing situation, or there'd simply be empty folders lying around. Now temp and log folders are per-tree, and temp folders are deleted afterward by default (because they're huge). log_folder now exists only in the [DXR] section and supports a {tree} substitution token, as does temp_folder. There's no longer hard-coded magic about TreeConfig.log_folder or .temp_folder defaulting to being within the Config-level ones; that's now consistent with how the override semantics of the other options that occur in both TreeConfig and Config. And `dxr clean` wipes out temp and log folders on demand, so you don't have to boilerplate that into a makefile or other script.
- build_commmand can now be blanked out in config to not invoke anything. No more /bin/true.
- Change the $jobs token to {workers} for consistency with other substitution tokens. $jobs still works for now.

For DXR developers:
- Refactor build.py so it's geared toward building a single tree. If you want to loop across many, do it in the caller. build_instance() becomes index_tree() and deploy_tree(), with a convenience wrapper index_and_deploy_tree().
- make_app() now takes a Config, and Config takes a dir to interpret paths relative to. This lets us call make_app() with either concrete config files or in-memory config (as in SingleFileTestCase), and it saves us having to remember a chdir() (and undo it, if important) before instantiating a Config.
- Add the beginnings of a `dxr delete` command. Right now, it deletes only the catalog, useful for debugging.
- Stop ignoring errors while cleaning out folders in ensure_folder().
- Move some ES utils out of app.py and core.py to es.py.
",erikrose,295816,2015-03-26T18:01:37Z,MEMBER,True,1172,1155,70,Powerful search for large codebases,Python,b1b130aa166e7f95d6189e693961a8bab1bfb5c7,"Delete old builds, indices, and catalog entries after deploying."
733,https://api.github.com/repos/mozilla/dxr/pulls/407,407,Add menus for class inheritance to Python plugin.,,Osmose,193106,2015-03-25T21:18:41Z,CONTRIBUTOR,True,99,39,5,Powerful search for large codebases,Python,c333e72762aae799c123daa021ec414b1e95d375,Add menus for class inheritance to Python plugin.
734,https://api.github.com/repos/mozilla/dxr/pulls/406,406,Add overrides: and overridden: filters and refactor analysis.,"Adds two new filters for finding overridden methods. ALSO HEY LETS REFACTOR AGAIN

For reals though, similar to how I switching to using NodeVisitor for indexing, I found that I needed to use a NodeVisitor for analysis as well. And once I did that, I realized that there was a lot of related pieces of information being generated during analysis that were being passed into the FileToIndex constructor, so I figured:
- Moving post-build analysis to a module would makes things easier to grok.
- Grouping all the analysis results into a single thing that could be passed around would help with the increasing amount of parameters to FileToIndex.
",Osmose,193106,2015-03-25T01:40:13Z,CONTRIBUTOR,True,486,192,9,Powerful search for large codebases,Python,a7e26e592a60750d2d354ca403c041bfa77d5eb6,Use NodeVisitor subclass for Python plugin's post-build analysis.
735,https://api.github.com/repos/mozilla/dxr/pulls/406,406,Add overrides: and overridden: filters and refactor analysis.,"Adds two new filters for finding overridden methods. ALSO HEY LETS REFACTOR AGAIN

For reals though, similar to how I switching to using NodeVisitor for indexing, I found that I needed to use a NodeVisitor for analysis as well. And once I did that, I realized that there was a lot of related pieces of information being generated during analysis that were being passed into the FileToIndex constructor, so I figured:
- Moving post-build analysis to a module would makes things easier to grok.
- Grouping all the analysis results into a single thing that could be passed around would help with the increasing amount of parameters to FileToIndex.
",Osmose,193106,2015-03-25T01:40:13Z,CONTRIBUTOR,True,486,192,9,Powerful search for large codebases,Python,d68b7fa6f4c77cffb15a78e7c64e0312ee4e7088,"Add overrides: and overridden: filters to Python.

Also moves all post-build analysis to a new module
to more cleanly separate the analysis vs indexing
steps."
736,https://api.github.com/repos/mozilla/dxr/pulls/405,405,Add module: and package: filters for the Python plugin.,"The module filter actually finds modules _and_ packages. Perhaps the package filter isn't even necessary, but I dunno if we want to keep the module filter named ""module"" if it matches both and there's no package-only filter. Got any better names?
",Osmose,193106,2015-03-20T20:02:51Z,CONTRIBUTOR,True,168,61,16,Powerful search for large codebases,Python,d8ce9ad5b64d46f106dc2c7b595c3f10df4432a5,Add module: filter for the Python plugin.
737,https://api.github.com/repos/mozilla/dxr/pulls/404,404,Implement request-time rendering of files. Fixes bug 1045183.,"- Stop rendering file HTML at index time, and instead insert refs, regions, annotations, and links into ES for use at request time.
- Bump format version. DXR instances now consist of just config.py in an otherwise-empty folder. And most of that will go away once we implement independent tree indexing.
- The generated config.py and the HTTP controllers had a misguided idea that there is one set of enabled plugins across all trees. Corrected that. That would have been a big surprise once we started indexing more trees, with different sets of plugins. The only reason it even ran was that the generating code referred to a ""tree"" variable, the iterator of a list comp which leaked out (since this isn't Python 3).
- Correct the documentation of refs() and regions(). Neither is actually per line.
- Since HTML is never built at index time, remove the ""html"" option for ""skip_stages"".
",erikrose,295816,2015-03-17T20:49:49Z,MEMBER,True,451,301,11,Powerful search for large codebases,Python,559c7f69e1a299ceb72302619e9e61de9a5fad42,"Implement request-time rendering of files. Fixes bug 1045183.

* Stop rendering file HTML at index time, and instead insert refs, regions, annotations, and links into ES for use at request time.
* Bump format version. DXR instances now consist of just config.py in an otherwise-empty folder. And most of that will go away once we implement independent tree indexing.
* The generated config.py and the HTTP controllers had a misguided idea that there is one set of enabled plugins across all trees. Corrected that. That would have been a big surprise once we started indexing more trees, with different sets of plugins. The only reason it even ran was that the generating code referred to a ""tree"" variable, the iterator of a list comp which leaked out (since this isn't Python 3).
* Correct the documentation of refs() and regions(). Neither is actually per line.
* Since HTML is never built at index time, remove the ""html"" option for ""skip_stages""."
738,https://api.github.com/repos/mozilla/dxr/pulls/403,403,Accept http and https github repo,"Hello,

First, thanks for this project. I really missed this.
This PR improve omniglot plugin by accepting http and https protocol github repository.
Also in my case I have repositories from other domains, so I removed the error.
In the end it contains a small doc typo correction.
",tojocky,598809,2015-03-11T13:12:04Z,NONE,False,7,2,2,Powerful search for large codebases,Python,d04567c1e0ff64bcaa948ac7361ad5026fbc9f24,plugin:omniglot: do not raise
739,https://api.github.com/repos/mozilla/dxr/pulls/403,403,Accept http and https github repo,"Hello,

First, thanks for this project. I really missed this.
This PR improve omniglot plugin by accepting http and https protocol github repository.
Also in my case I have repositories from other domains, so I removed the error.
In the end it contains a small doc typo correction.
",tojocky,598809,2015-03-11T13:12:04Z,NONE,False,7,2,2,Powerful search for large codebases,Python,89182aa7699a558d35c46c8ef8e0764878be400b,doc: corrected typo in configuration.rst
740,https://api.github.com/repos/mozilla/dxr/pulls/403,403,Accept http and https github repo,"Hello,

First, thanks for this project. I really missed this.
This PR improve omniglot plugin by accepting http and https protocol github repository.
Also in my case I have repositories from other domains, so I removed the error.
In the end it contains a small doc typo correction.
",tojocky,598809,2015-03-11T13:12:04Z,NONE,False,7,2,2,Powerful search for large codebases,Python,e840c4b414d62047703333b732896d81f9db3da1,"plugin:omniglot: correct github link

plugin:omniglot: correct github link by removing "".git"" suffix. Added unsecure http link."
741,https://api.github.com/repos/mozilla/dxr/pulls/402,402,"On Jenkins, choose a random box name so test runs don't collide if they ...","...get assigned to the same worker.
",erikrose,295816,2015-03-10T20:25:57Z,MEMBER,False,6,3,1,Powerful search for large codebases,Python,d0e19cd76ba0dfc0a885e24d9c52f86b4aee465b,"On Jenkins, choose a unique box name so test runs don't collide if they get assigned to the same worker."
742,https://api.github.com/repos/mozilla/dxr/pulls/401,401,"Add a sleep after ""vagrant up"" to dodge ssh intermittent failures.","Example: https://ci.mozilla.org/job/dxr-github/856/console
",erikrose,295816,2015-03-10T18:05:38Z,MEMBER,True,1,0,1,Powerful search for large codebases,Python,8120aa9a44c2748ab811bca62583d938a280ef60,"Add a sleep after ""vagrant up"" to dodge ssh intermittent failures.

Example: https://ci.mozilla.org/job/dxr-github/856/console"
743,https://api.github.com/repos/mozilla/dxr/pulls/400,400,Fix bug 1137356: Warn on invalid Python files and do not index.,"Catches errors during the pre-indexing analysis and flags those files to be ignored, warning the user of the issue.
",Osmose,193106,2015-03-08T17:28:13Z,CONTRIBUTOR,True,96,5,2,Powerful search for large codebases,Python,feeeb19b466912e961f41b8ee90f1d23bc6d7856,Fix bug 1137356: Warn on invalid Python files and do not index.
744,https://api.github.com/repos/mozilla/dxr/pulls/399,399,Add callers: and called-by: filters for the Python plugin.,"Because the return order of `ast.walk` is not guaranteed to mean anything, I needed to be able to control the order that we walk through the tree if I wanted to correctly assign function calls to the right caller. The first commit refactors the Python plugin to move all the searching for needles to a NodeVisitor subclass. The second commit adds the new filters and some tests for them.

I spent some time trying to see if I could make a NodeVisitor subclass that returned a generator of needles, but I couldn't figure anything out, and I didn't want to copy over the NodeVisitor code and tweak it just for that. Oh well.
",Osmose,193106,2015-03-08T00:47:31Z,CONTRIBUTOR,True,194,60,3,Powerful search for large codebases,Python,71d7bbd90c1c3f5ce2510f0d01f41caafc7f9699,"Refactor Python plugin to use a NodeVisitor for traversing the AST.

This way we can do things before and after all the children of a node
are visited."
745,https://api.github.com/repos/mozilla/dxr/pulls/399,399,Add callers: and called-by: filters for the Python plugin.,"Because the return order of `ast.walk` is not guaranteed to mean anything, I needed to be able to control the order that we walk through the tree if I wanted to correctly assign function calls to the right caller. The first commit refactors the Python plugin to move all the searching for needles to a NodeVisitor subclass. The second commit adds the new filters and some tests for them.

I spent some time trying to see if I could make a NodeVisitor subclass that returned a generator of needles, but I couldn't figure anything out, and I didn't want to copy over the NodeVisitor code and tweak it just for that. Oh well.
",Osmose,193106,2015-03-08T00:47:31Z,CONTRIBUTOR,True,194,60,3,Powerful search for large codebases,Python,4f522120c51d50fe7b75fc5b85aa076fe69eaba5,Add callers: and called-by: filters for the Python plugin.
746,https://api.github.com/repos/mozilla/dxr/pulls/398,398,Add Mercurial to requirements. It's needed for omniglot hg indexing.,,erikrose,295816,2015-03-06T02:39:15Z,MEMBER,True,9,1,3,Powerful search for large codebases,Python,218d6a797baf942a5c7c292d8918c679a8c2f604,Add Mercurial to requirements. It's needed for omniglot hg indexing.
747,https://api.github.com/repos/mozilla/dxr/pulls/398,398,Add Mercurial to requirements. It's needed for omniglot hg indexing.,,erikrose,295816,2015-03-06T02:39:15Z,MEMBER,True,9,1,3,Powerful search for large codebases,Python,5582161e7ac874dd8bc39b611e3fb553128b3845,"Make remaining tests pass on Jenkins and new Vagrant boxes.

Adapt to new anonymous namespace spelling in clang 3.5."
748,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,e4ebcde72f121fcb0ce8b1312c1fc056c00dbaa6,"Skip test_ignores for now.

This will let us merge function-needles into es while keeping the latter green.

After fixing CSV loading in 3f86bd24adc5afa023e9857a3c1d254cd09933fe, the function-needles branch started failing because bugs in the clang plugin were suddenly exposed. The clang plugin was effectively a no-op before. Thus, things are Getting Better even if a test now fails; it was a spurious pass before."
749,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,fcd0306793b3a6793381722644fcfe7c56c65690,"Merge a lot of work on clang needles into es branch. Ref bug 1030312.

* Clang plugin is no longer a no-op; now it finds its CSV files.
* Needles now come out in the right format and make it into ES.
* Much refactoring
* A few tweaks to the plugin API, like no longer requiring highlight() input to be sorted

Note that process_loc likely still emits incorrect Extents; see the TODO."
750,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,9facc17d2121005211d51ffcc905fa38d15c0724,Remove a no-op .format().
751,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,bbcc4eba817c16136ec3f784df9df2c120657765,"Keep filter names the same as they are in production.

We'll shorten and simplify them in the Query Language Refresh, keeping the old ones around as deprecated alternatives."
752,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,512aeb05a5d66702174653596934c116a9c36ef6,Don't wrap {'not': } around Nones if a filter opts out of doing any filtration.
753,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,8481253a2fd13447a2db2f36c0cbfd2e98a2bbc7,"Organize clang plugin modules a bit.

Move filters into filters module. Rename menu module to ""menus"" to be consistent with our convention of using plurals."
754,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,399ccd3f7b21312d9593916f9d185e610b90354a,Delete dead routines _process_ctype() and is_function().
755,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,82f24100715cee9adfad29dca5619f4086f2d47a,Delete the dead next_global_id().
756,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,c904d037929582c02749ba7b2e82a617472a4e41,"Move the 2 small routines in the extents module into the query module, the only one that uses them."
757,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,01bf74767f2fa5098f8da9871602efaf1ed064fa,"Move load_template_env() from utils into build, the only module that uses it.

Eventually, it will probably go away, and we'll run everything through a Flask app so we can use url_for and just have fewer code paths."
758,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,0bab53375c750b856bbb0108d08b856638490f7f,Kill last remaining import of sqlite.
759,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,d1473186339fb43a56023df88fd91072276f31a6,"Move BuildError to exceptions module so it's down at an import leaf.

The motivation for having exceptions in their own module is that they need to be imported into both throwers and catchers, and having them in a leaf module reduces the likelihood of circular imports."
760,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,94d10ba23aec398397155af3e75a83a9f95e7efa,"Pull all the tag-handling machinery of build.py and into its own module.

It has a single entry point and can thus be reliably thought of as a separate unit. Now build.py deals only with the side-effecty bits: FS, network, and multiprocess stuff."
761,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,f81bde55af05b0f2b85e5455147ffea810b6b83f,"Merge direct search into es. Fix bug 1068161. Close #345.

Since the es branch has had progress in the meantime that makes the clang plugin less of a no-op, we also do the following in the merge commit to make test_direct pass:

* Remove counterproductive initializations of some instance vars from TreeToIndex that were hiding failures which would otherwise have been nice, shallow AttributeErrors. That's all there was in the constructor, so remove the constructor, too.
* Use the right attr name: _inherit rather than inherit.
* Comment out the attempt to add a jump definition to the ref menu. src is an int, not a path. There's not even a path in `prop`.
* Return the correct types from _common_ref(): ints, not Positions.

The whole of _common_ref and its callers will probably have to be rewritten, as they're full of type bugs, make invalid assumptions about the shapes of CSV files, and don't pass the global-file offsets we need for accuracy down to the layers that need them."
762,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,f094df6d19adba31828ccfd9de38d1317936ceea,Merge a few fixes to filters. Close #346.
763,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,53501572a0e831a435bbe10c0c09c8fbebdc01a4,Merge some initial module reorganization and dead code removal.
764,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,f4a0aa62092d6cce16f26c254ddb72437b693b09,"Reorganize plugin base and util code to dodge circular imports and improve comprehensibility.

Now nothing is in the plugins/ folder except for actual plugins. ""Utility"" functions (which make up an awful category, equating to ""other"") are categorized as indexer-related or filter-related and shunted to appropriate top-level dxr modules accordingly.

Hoping that this will also untangle the import graph enough that we can start declaring clang's Plugin explicitly and not have to repeat ourselves every time we add a new clang filter."
765,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,7e54215886dda9921b731d4e39d4a8f6d7140f88,"Make clang Plugin instantiation explicit.

This eliminates repetition when registering clang filters.

Also...

* Move indexers from __init__ to a submodule for symmetry with filters.
* Rename ""mapping"" to ""mappings"". It wasn't taking effect, since it was spelled wrong. (Of course, now that doesn't matter, since we're registering it explicitly.)"
766,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,58e4c1cd1d222507c0a0f6b27df4f88f26d01a64,"Merge master into es to solve some conflicts before I completely forget what the right answers were.

Pick up Google Analytics support, linked line numbers, and a few other things."
767,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,d4f54aeff3164757fe95f581907b9ebe401b50b2,"Move clang-specific tests inside the clang plugin.

I want to be able to see what's a core test and what's a test for a specific plug, now that there's a difference. The triggering event is that I'm about to add some more clang integrations tests so I can then make them pass, and I don't want to make the tangle worse to do it."
768,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,22b20695c328ae8b1298910b9c49852050fba0f5,"Standardize names of executables in tests to ""code"" so we don't need to add more git ignores."
769,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,0061b2a32c5a8ca50941132b7e0f7725e2af04d6,Quit updating submodules; we don't use them anymore.
770,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,bb02a31061bcd7d3b206b4c04ebd92aa17b28a0c,Remove provisioning steps no longer needed now that trilite's gone.
771,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,61e689a4a6701f5d5c0fa9404eb1df67e38a2968,"Bring deployment documentation back up to date.

Take into account the gone-ness of trilite and the here-ness of ES."
772,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,1c486da42e50cf97c52d704b16d2a27889c6c9e1,Merge master to get *.pyc deletion and to merge test_empty while I still remember what it's for.
773,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,9cc61742d8cc8958122d71c8717f49900b54288f,"We don't need to much with LD_LIBRARY_PATH anymore, with trilite gone."
774,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,01badabd616d9a636c7aef05360cc3e0e23ad82d,Add mappings for clang needles.
775,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,61cd0e20012d8f5a5e0b39d472c7e9c9933621fb,"Fix links in browse view.

They looked like /some/path/[u'someplace'] before."
776,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,ea55ecd2f37145ca2bb547008785a2eab88ee5ba,"Add es_ options to test_empty_tree config file.

I don't know how it was passing before."
777,https://api.github.com/repos/mozilla/dxr/pulls/397,397,Hg crash,,erikrose,295816,2015-03-06T02:38:54Z,MEMBER,False,9362,5957,223,Powerful search for large codebases,Python,7d6d2661b38511fe4a756db0a3d00f40a87eb897,"Make function contextual menu build without crashing.

This lets this test_cross_file_callers instance build without crashing."
778,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,ca75f2e0804509fff2bafc54a4e4a968b66a7d8e,WIP rust plugin
779,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,8e64c970750b5adf71a090fd6ac689a4d1bfaec6,tests
780,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,250a55ab4a9589335addffc0fc0152220c8deda6,Rebased
781,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,b8583f3453eca470aada312dfb5f30ed21351b97,"Script for running tests

This shouldn't be landed, but I'm not sure how to make the tests work otherwise, presumably a makefile somewhere"
782,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,3228c100e53393f48ed0efd0b60e729a783f9b07,Address reviewer comments on tests
783,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,b721bf00e201f709af14fcdde7f9b4aff89749a5,Get the smoke test up and running again
784,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,2efa7f2ae64286700999ef58340481f25798bf50,Remove makefiles from tests and get them all running
785,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,fa9b9f784745c5343b113cb57ce97060c118278b,use relative path for dxr.config
786,https://api.github.com/repos/mozilla/dxr/pulls/393,393,Rust support mk2,"There are a bunch of tests. I haven't worked out the best way to run them. Currently I run them from a shell script (see the last script, they all pass), but I guess I need a makefile or something to setup the env vars (`make tests` doesn't work, but I have Clang problems which I couldn't be bothered to resolve, never mind the Rust stuff).
",nrc,762626,2015-03-04T05:29:48Z,CONTRIBUTOR,False,3057,4,43,Powerful search for large codebases,Python,f8b904dacbf9410364cf4b4881ec3beb4aa05b77,"Merge pull request #3 from pelmers/rust5

Use relative path for dxr.config"
787,https://api.github.com/repos/mozilla/dxr/pulls/392,392,Add contribute.json file.,"Add a contribute.json file à la http://contribute.paas.allizom.org/.
",Osmose,193106,2015-03-03T22:35:27Z,CONTRIBUTOR,True,31,0,1,Powerful search for large codebases,Python,ca0f66536644a3bcdc859b16722266ea075450cc,Add contribute.json file.
788,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,a06eb1509a67d95f8c66873e2f28f3bd26262f48,"Cache all_plugins().

It makes me feel better. Maybe it isn't necessary."
789,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,eed2cf11c12c76095831dffb2a0cd0c9b6e6c93f,"Make layout.html tolerate absent generated dates.

We won't have one in the unified config file, because it's immutable across index and request times. Soon, however, we'll squirrel that info away in a ""tree"" doctype, when we do request-time rendering for files."
790,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,b5fc2f3b88e23369ba471b5214824c97b2cc088f,"Redo config subsystem. Fixes bug 959728.

For deployers:

* Improved validation of known options. Unknown plugins and bad regexes are caught early, before spending 2 hours building a tree.
* Started rejecting unknown options, so we catch obsolete things or spelling errors that would otherwise not have their intended effect.
* Merge disable_workers and nb_jobs to create the `workers` setting. Set it to 0 to do what disable_workers used to. It now defaults to the number of CPUs and no longer crashes if left unspecified.
* Renamed wwwroot to www_root for consistency. Changed default from ""/"" to """". I don't know how it was not spitting out double slashes before.
* Remove the -j option from dxr-build.py. There's nothing special about that option that merits a commandline flag. We should have it for all or none. (We will probably support at least env vars for all options down the road.)
* Comments are parsed differently now: any # in a config value is interpreted as the beginning of a comment, unless the value is surrounded by quotes.

For plugin authors:

* Start passing the name of the plugin into the TreeToIndex so we no longer have to repeat the entrypoint name in 2 places.
* Added plugin_config() method to TreeToIndex, FileToSkim, and FileToIndex so you can easily grab your plugin-specific config.
* Plugins now take an optional config_spec kwarg which provides a config schema.
* See how the buglink plugin collapsed thanks to the new declarative validation.

Other improvements:

* Hide useless intermediate values like the root-level enabled_plugins setting.
* config.trees is now an OrderedDict rather than a list, so we don't have to flip through it every time to find the tree we want.
* <some tree>.enabled_plugins is a list rather than an OrderedDict. There's no need for the keys now that plugins know their own names, so it reduces the noise of us calling .values() all the time.
* ignore_patterns is split into ignore_paths and ignore_filenames when the config file is read, and the combined ignore_patterns is no longer available.
* Stop raising ConfigError in omniglot, as having a non-GitHub git remote has nothing to do with the configuration file.
* Stop calling sys.exit() from the Config object. Raise a ConfigError like a good boy. ConfigErrors format themselves nicely and so double as non-horrible user-facing errors. We might polish up error reporting later, suppress the traceback, and reporting multiple errors at once.
* You can pass in config as a dict. We'll see if that turns out to be useful, but we get it for free.

This will undergo another round of changes when request-time rendering comes, but this cleans it up a lot.

This does not unify the index-time and request-time configs, but we'll do what we can about that shortly. There are essential differences, like that dynamic defaults (generated_date) are frozen in time at request time."
791,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,dc2d415aaead670749c85e921b0c7c0d4891ea5f,Have `workers` fall back to 1 if cpu_count() is not implemented.
792,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,d4191642ac275b2108f518ede23eb2da83e73360,Catch negative ints.
793,https://api.github.com/repos/mozilla/dxr/pulls/391,391,Config refactor,,erikrose,295816,2015-03-03T00:14:36Z,MEMBER,True,719,466,48,Powerful search for large codebases,Python,976a32abf91ce69d50ab00132df88727701ae7f3,"Change bugs.com to bugs.example.com in test_links.

abbeyj thought that was weird, and tests should be self-explanatory."
794,https://api.github.com/repos/mozilla/dxr/pulls/390,390,Add bases: and derived: filters to the Python plugin.,"Add a post_build handler that parses each Python file and stores the
class inheritance tree as well as import paths. The indexing step then
uses this information to figure out where the base classes and derived
classes of each class it finds live, and generates needles for each of
them.

Currently figure out module names using a new configuration value
called `python_path`. In the future we probably want to support multiple
paths or find a smarter way of figuring this out.
",Osmose,193106,2015-02-25T19:04:48Z,CONTRIBUTOR,True,617,155,24,Powerful search for large codebases,Python,755fd5869de57fad03b91eed45164c99dc963697,"Add bases: and derived: filters to the Python plugin.

Adds a post_build handler that parses each Python file and stores the
class inheritance tree as well as import paths. The indexing step then
uses this information to figure out where the base classes and derived
classes of each class it finds live, and generates needles for each of
them.

Currently figures out module names using a new configuration value
called `python_path`. In the future we probably want to support multiple
paths or find a smarter way of figuring this out.

Moves QualifiedFilter and QUALIFIED_NEEDLE from the clang plugin to
dxr.indexers and dx.filters for other plugins to use, and updates the
Python plugin to use them.

Also updates the Python plugin to use the more explicit plugin 
registration method."
795,https://api.github.com/repos/mozilla/dxr/pulls/389,389,Refactor Python Plugin,"This adds 4 basic unit tests for the Python plugin. I feel like I should maybe be testing more but it's not immediately obvious to me what some other interesting test cases would be.

This includes the test directory from https://github.com/mozilla/dxr/pull/387 because I based it off of that, but I can rebase it to not include that if you want (my argument for keeping it is that it's a good temporary measure before making a full examples directory like we talked about, but I'm not particularly tied to it, just figured I'd check before rebasing).

This also includes a refactoring of the python plugin. Originally this PR was going to add a new `derived:` filter, which fit in with the refactoring, but I've since found that adding that filter will be harder than I thought, so I decided to submit what I have now for review. I think the code is more straightforward and easier to add to, but I'm also happy to remove that if it's considered out of scope or unnecessary.

As per #388 I'm having trouble running the entire test suite, but the new tests added seem to pass, so I figure this is good enough for at least some feedback and review.
",Osmose,193106,2015-02-21T04:42:18Z,CONTRIBUTOR,True,37,52,1,Powerful search for large codebases,Python,2f5de4907538838e31fd798dd111d4110caa8904,Refactor Python plugin and add unit tests.
796,https://api.github.com/repos/mozilla/dxr/pulls/387,387,Add a test directory for the python plugin.,"Adds a test directory for manual testing of the python plugin. Automated tests may come later, but at least this will make it easy to test improvements manually.

The Readme was copied from test_basic, I'm not sure if it's useful as a skipped file for indexing but whatever.
",Osmose,193106,2015-02-11T23:36:57Z,CONTRIBUTOR,False,119,0,5,Powerful search for large codebases,Python,a39b4fca15d6dd8b21bb36e50ff01bf54144c371,Add a test directory for the python plugin.
797,https://api.github.com/repos/mozilla/dxr/pulls/386,386,Bug 1052217: index binary files,"https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

Now index all binary files, not just images. Arbitrary binary files are shown in faded italics on the browse view and are not clickable.
I add an is_binary needle to the core plugin which is True when the file is binary but not an image that we can preview (and left out otherwise). The browse template then uses the flag to determine whether to fade out a line and invalidates its hrefs.
",pelmers,2406051,2015-02-07T18:52:47Z,CONTRIBUTOR,True,62,40,7,Powerful search for large codebases,Python,d84963acf04e7ea4b13617c7dfed5aa114791e7f,"Bug 1052217: index binary files

Now index all binary files, not just images. Arbitrary binary files are
shown in faded italics on the browse view and are not clickable."
798,https://api.github.com/repos/mozilla/dxr/pulls/386,386,Bug 1052217: index binary files,"https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

Now index all binary files, not just images. Arbitrary binary files are shown in faded italics on the browse view and are not clickable.
I add an is_binary needle to the core plugin which is True when the file is binary but not an image that we can preview (and left out otherwise). The browse template then uses the flag to determine whether to fade out a line and invalidates its hrefs.
",pelmers,2406051,2015-02-07T18:52:47Z,CONTRIBUTOR,True,62,40,7,Powerful search for large codebases,Python,f11253629040208433061cf40810c38ab8118e97,Add additional patterns to default ignores
799,https://api.github.com/repos/mozilla/dxr/pulls/386,386,Bug 1052217: index binary files,"https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

Now index all binary files, not just images. Arbitrary binary files are shown in faded italics on the browse view and are not clickable.
I add an is_binary needle to the core plugin which is True when the file is binary but not an image that we can preview (and left out otherwise). The browse template then uses the flag to determine whether to fade out a line and invalidates its hrefs.
",pelmers,2406051,2015-02-07T18:52:47Z,CONTRIBUTOR,True,62,40,7,Powerful search for large codebases,Python,a5190be1d25b4422e2dc6a813d5c7ed326a5a505,Add is_binary to FILE mapping
800,https://api.github.com/repos/mozilla/dxr/pulls/384,384,"Fixes Bug 1119862, get infinite scroll to work on ES branch","@erikrose This fixes the infinite scroll problem but, now w have the resultHead repeating, which is probably a bug all it's own.

![screen shot 2015-01-18 at 18 03 35](https://cloud.githubusercontent.com/assets/80675/5793022/5bbca60c-9f3c-11e4-988f-4398c95dad8d.png)
",ghost,10137,2015-01-18T16:09:35Z,NONE,False,2,2,1,Powerful search for large codebases,Python,fd96d732ebf32326149d45d988f1a8e2c3261f19,"Fixes Bug 1119862, get infinite scroll to work on ES branch"
801,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,fc3392bfd8373b6ae435829414e74c58494a3595,"* Added support for configuring google analytics
* Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates"
802,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,2fe81a5f7c7b1df25341a8fcc5a2352ef0826ca8,"* Renamed google analytics configuration key as 'google_analytics_key'
  from existing 'ga_key'"
803,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,aa10d9f1d24d79bfce2fc4d9955b018b5245c41f,"* Documented google_analytics_key in configuration.rst
  Fixes some issues with the last commit"
804,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,80f95f00d0ad267f680d795664b0f8995b5f376e,* Added test to verify non-existance of google analytics snippet
805,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,4ca48233a3fe0f8da6a89bee73dbc77710978a9c,* Added tests to check google analytics snippet
806,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,e1cb613e805db99632da80be892abee0fd726715,* remove the import of 'run'
807,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,b769e1ed99a7b57adbcbd5e95912dc0cdc2200e2,* Fix test names and doc strings
808,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,4864c07913d0a55793cafdb9e2e6651bd5b6a5b7,* Add a test file required to build
809,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,b02e9ea5373a5e730168d911f5b72bb8a3a41873,Line no in search results act as links
810,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,853df9dacbe77f3b3b67bee9d2e7223855010fca,fixed indentation
811,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,2466a9ac66e69622caf80848ffe69d3472692f5f,added fix to results.html
812,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,f21c822cda2616cbc7565daa0d13fbeaf21fc7bf,added missing closing anchor
813,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,637df51f7adceaf38e49dd415cbac3d4bb55c9a3,Fix indentation. Remove extra <td>.
814,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,cef31d2934de1cbb0a4f44aebd717db82fa87d4f,Merge branch 'master' of https://github.com/mozilla/dxr
815,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,d07f09cdfbdd709f698f27fa0b0082b3b0e0a810,Merge remote-tracking branch 'upstream/master'
816,https://api.github.com/repos/mozilla/dxr/pulls/383,383,Bugfix3,"Updated so that the checkbox matches the current value of variable isCaseSensitive.
",anmoljagetia,6505326,2015-01-14T19:23:24Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,c169096cc8b8b57556c97147e70aaecb76f932d1,fixed bug 1072546
817,https://api.github.com/repos/mozilla/dxr/pulls/382,382,969775 add margin to bottom of search results,,rachelhathaway,1024066,2015-01-06T03:02:39Z,NONE,False,1,1,1,Powerful search for large codebases,Python,3eff3630e8b16409e62d268b925e853c67b2488c,969775 add margin to bottom of search results
818,https://api.github.com/repos/mozilla/dxr/pulls/381,381,Fix tests under clang 3.5,,abbeyj,99402,2015-01-05T23:27:35Z,CONTRIBUTOR,True,24,19,5,Powerful search for large codebases,Python,0b41bf9dccd556af8bf2ad5e09c0ebd1bf1a1b82,Fix problem with _clang_at_least always returning False.
819,https://api.github.com/repos/mozilla/dxr/pulls/381,381,Fix tests under clang 3.5,,abbeyj,99402,2015-01-05T23:27:35Z,CONTRIBUTOR,True,24,19,5,Powerful search for large codebases,Python,bdbaad608648bde46a6e4932a3fd82b68dd03dac,Move _clang_at_least to dxr.testing.TestCase so it can be used by more than one test case.
820,https://api.github.com/repos/mozilla/dxr/pulls/381,381,Fix tests under clang 3.5,,abbeyj,99402,2015-01-05T23:27:35Z,CONTRIBUTOR,True,24,19,5,Powerful search for large codebases,Python,daadecd6fff4463ac08360a174d774cfebdc427b,Fix test for improved extents produced by clang 3.5.
821,https://api.github.com/repos/mozilla/dxr/pulls/381,381,Fix tests under clang 3.5,,abbeyj,99402,2015-01-05T23:27:35Z,CONTRIBUTOR,True,24,19,5,Powerful search for large codebases,Python,3740c1edcbefbac1dcc639cfe7f0cb6b95513b97,"clang 3.5 changed the text ""<anonymous namespace>"" to ""(anonymous namespace)""."
822,https://api.github.com/repos/mozilla/dxr/pulls/380,380,"Avoid installing development-only dependencies during ""npm install"".",,abbeyj,99402,2015-01-05T21:23:27Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,428a5d7f07c13dcfa56fe8d9b30dbb628ed6bb1a,"Avoid installing development-only dependencies during ""npm install""."
823,https://api.github.com/repos/mozilla/dxr/pulls/379,379,Fix #280: Add help icon to header with links to Github and docs.,"Just an idea I had while looking for easy bugs to mess around with. Adds a help icon to the header that, when hovered over, shows a popup below the header with a small paragraph describing DXR and two links to the Github page and the docs.

![screen shot 2014-12-28 at 11 02 37 pm](https://cloud.githubusercontent.com/assets/193106/5566728/53585828-8ee6-11e4-97d1-8491a2d3fdeb.png)

It uses CSS for the hover and has some padding around the box to allow for inaccurate mousing around the box.

I wasn't able to test how this looks / works with the navigation box as I couldn't find any tests that had files with the navigation box, nor could I figure out how to get it to appear myself. It shouldn't get in the way but I'm not 100% sure about that.

Lemme know what you think!
",Osmose,193106,2014-12-29T07:09:45Z,CONTRIBUTOR,True,136,51,7,Powerful search for large codebases,Python,1067f20626b05c8132ffd6c6d0f1087924095bca,Fix #280: Add help icon to header with links to Github and docs.
824,https://api.github.com/repos/mozilla/dxr/pulls/378,378,Bug fix for 1091122,"The panel UI component (shown here: http://dxr.mozilla.org/mozilla-central/source/dom/base/nsDocument.cpp) previously expanded according to its contents' width. I've added a maximum-width CSS rule limiting it to 30% of the windows' width.

Referenced issue: https://bugzilla.mozilla.org/show_bug.cgi?id=1091122
",ghost,10137,2014-12-25T14:19:20Z,NONE,True,1,0,1,Powerful search for large codebases,Python,23be4d465a2f2836f130b73b82f7e5f0920ea9a0,Added a max-width of 30% to .panel in dxr.css
825,https://api.github.com/repos/mozilla/dxr/pulls/377,377,BUGZILLA-1111371 Allow user to skip build phase.,"If the user adds 'build' to the 'skip_stages' configuration variable,
then the build process will be skipped. Most of this change is to prevent
the temp directory from being clobbered on startup.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111371
",cwgreene,135558,2014-12-16T07:21:56Z,CONTRIBUTOR,True,15,8,1,Powerful search for large codebases,Python,d3e8eaa6a246785e6c4e70c572cea83c68b0de5b,"BUGZILLA-1111371 Allow user to skip build phase.

If the user adds 'build' to the 'skip_stages' configuration variable,
then the build process will be skipped. Most of this change is to prevent
the temp directory from being clobbered on startup.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111371"
826,https://api.github.com/repos/mozilla/dxr/pulls/376,376,BUGZILLA-1111383 Don't assume that 'kind' is a valid key,"This is an update to the pull request https://github.com/mozilla/dxr/pull/374, rebased to a single commit, based on this suggestion on stack overflow: http://stackoverflow.com/questions/11396069/squash-to-only-one-proper-commit-for-github-pull-request
# 

BUGZILLA-1111383 Don't assume that 'kind' is a valid key
'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383
",cwgreene,135558,2014-12-16T06:53:56Z,CONTRIBUTOR,True,3,3,3,Powerful search for large codebases,Python,0bda5edf5b95fbdf2566b94ca63d58547b2a52c1,"BUGZILLA-1111383 Don't assume that 'kind' is a valid key

'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383"
827,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,a5d08fe365e6ae6bf06565a8696b1c77b7c06568,"Remove build_tree(), which was meant to use the stdlib's regex parser.

It turned out to be easier and more flexible to write our own parser than to figure theirs out."
828,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,9b270fe1221c3d03ca6bf766455ca1bf89dec343,"Remove trigrams(). ES will do this for us; we have only to extract static strings.

And the longer the strings we extract, the better: ES's positional indices will make us even more selective than re2's nonpositional ones."
829,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,10093271f1c48c00e22d324a8c4b7f5fde58eda7,Register noop Needle Filters.
830,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,d0d4132b207b9eef4a3619a8c600495135c1302e,"Push the trigrammer toward getting the FREE method working.

That way, we'll at least have something we can deploy, even if it isn't quite as smart as re2's full-on Cox method.

What remains to be done is to implement a visitor which spits out a JS-dialect regex and to remove strings from the SubstringTree shorter than 3 chars.

* Get simplified() to a serviceable state. At the moment, it eliminates nodes having only 1 child. This is good enough to let us distinguish interesting regexes from plain old strings, for the purpose of deciding what kind of ES query to build in PathFilter.
* Relieve the trigrammer of the responsibility of actually creating trigrams. ES is good at that. (Remove TrigramQuery and its duplicate And and Or subclasses.)
* Add glob_to_regex().
* Move regex_grammar near its visitor.
* Fix visit_quantifier(), which didn't work. Covered by test_not_coalescing_over_uselesses."
831,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,5497d3e99ff0db48bdc3fb4e4fd0c6258caa68cf,"Sketch a PathFilter that uses the regex machinery to handle globbing.

* Add case-sensitive trigram fields for path.
* Add es_regex_filter(), which we can use for full regex queries too.
* Add a PathFilter whose callees aren't done yet and which needs highlighting but is complete enough to show what lower-level things we need to build."
832,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,21ecc76b94ef7d4a1459215de24acfabaa877be3,Make test data longer in trigrammer tests so tests remain valid when we start optimizing away short ngrams.
833,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,71d311e6c6eb76ee05bde3e8a08bbca6b798113f,"Make empty top-level nodes simplify down to ''.

This should make filter logic easier, since there's now only one representation of a null query."
834,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,45f03d890606f500e862d10dc0b7f9f90b2732e0,Remove some functions we're not going to need anymore.
835,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,8fef3cb5d6d374d1c0a141b5a1ec4e7cc3f4aabf,Filter short ngrams out of SubstringTrees.
836,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,e3b624ac6119952085026f9c337f1aca4626737a,"Remove dead _coalesce_strings().

(I wanted it in the history in case we need it for Cox.)"
837,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,4b8025dcc47bee5cc983a02ea0039f0e55e19d18,implemented using basic class constructs....not very happy about this
838,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,acce89639c8779921ac8711fe270d198ac08c52c,"based off of Filter, removed explicit __init__, intermediate lang field"
839,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,a1bff98df905c79f0646224ebfe3c9a2d05ad702,"Register Needle Filters for clang plugin #324

Have the filters show up in the interface.
The current implementation uses an empty filter.

The next step is to write a proper filter for elastic search.

Merge remote-tracking branch 'origin/pr/324' into es"
840,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,ab9cd42750b49154b94e79de722aa2a95743641d,Bring some comments up to date.
841,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,4fb26007121b63fbbc9d050199ed5b1aa9171821,"Add trigram extractor, and whip it into shape. Sketch PathFilter. Close #325.

From the PR:

In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently."
842,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,5e8751b765eb9344ce97b7d6dcec4926486cd399,"Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.

* Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
* Add a min length arg to simplified() so we can use it to make tests more readable and writeable."
843,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,1c30486b12163bf770f4fbc58f71696d2973fc90,"Make Unicode char-range bounds work.

Add some shamefully missing docstrings to the visitor.

backslash_hex does not actually match anything outside 0..256, but it's ideologically better to return unicode, so I replaced the chr with unichr there as well. (I'm unable to make re.match(r'\x2014', <anything>) match. If I could, I'd expand the definition of the rule to behave the same.)"
844,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,c2ca73ae89baab0807f892a8d66df05b2d5ad596,Take advantage of parsimonious 0.6's shorter imports.
845,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,800bb610717aef486363bd6584de3a416240a947,"Rename TrigramTreeVisitor to SubstringTreeVisitor, which is more accurate now that we aren't breaking down substrings into trigrams."
846,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,7c6c8a9ad3df424c3cf8852a3598e47bac5beafd,"Implement JsRegexVisitor, which translates from DXR-flavored regexes to JS ones.

* Rename BACKSLASH_SPECIAL_CHARS to BACKSLASH_METAS to distinguish them semantically from SubstringTreeVisitor.backslash_specials.
* Break literal_class_char into its own rule so we could visit it separately in the JsRegexVisitor and turn it into text.
* Factor out visit_class_item; it's just a lift_child.
* Tersen visit_class_contents."
847,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,93a54a7c0564f6988e056f6f2cdbfce6d32fb3cb,"Add PythonRegexVisitor, for app-side highlighting."
848,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,6af06c972d83f04e8ccffb054266435542191431,Maintain backslashes in front of nonliterals like . and $.
849,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,d1ab0d3aa9e6ca04424cf01b4fca50b7f75b0883,Fix FILE-domain search results. They were all crashy and wrong.
850,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,608f4ceda17fecb7f1f9155da22617afdf4ff6bc,"Get PathFilter working by hooking it up to the JS regex rewriter. Refs bug 1030313.

You should now be able to fire up test_basic and run path queries, complete with globs.

* All of test_basic passes except test_structural_and, which awaits a working `function:` filter.
* We introduce a new exception BadQuery, which filters can use to complain about user errors that keep the query from running. In a later commit, we'll catch this and display it instead of 500ing."
851,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,8608cdd460d6b7204279032260719d36d41c8491,Merge master into es to get trusty64 and lots of fixes and features.
852,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,3cff2a179c3ea6cfefb8584e983cc7637560c04d,Fix a typo in a comment.
853,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,93d8b96a16cfe66cbacdc09d69fef7cfcd5c7cca,Get the path filter working. Close #329. Ref bug 1030313.
854,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,a69c9f9ec336a27199f5d425bc2ad548d712f09e,"Stick the whole DXR index in a single shard. Close #330.

This should be faster, according to the benchmarks at http://blog.trifork.com/2014/01/07/elasticsearch-how-many-shards/.

Also, crank up the refresh interval. This will flush the indexing buffer out to disk less often, resulting in fewer Lucene segments, which should yield faster queries before they merge and less merging to do."
855,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,8b2ecd352c5a8729002417f378af4e6e3a77748d,"Fix the FILE/LINE superset problem with documentation for now. Fix bug 1058945. Close #331.

We can change the API to make it more automatic if it turns out to be a burden for plugin. In that case, most likely just move the folder, name, size, modified, and is_folder fields (the ones that aren't touched by queries) out of the core plugin and into build.py itself, then have something deep_update() LINE mappings with their corresponding FILE ones."
856,https://api.github.com/repos/mozilla/dxr/pulls/375,375,Es fix kind access 2,"Well, this seems to be the state of the art to allow both valid comments in previous pull requests, and providing a squashed commit.

Rebased to single commit version of this one.

https://github.com/mozilla/dxr/pull/374
",cwgreene,135558,2014-12-16T06:48:28Z,CONTRIBUTOR,False,7782,5269,199,Powerful search for large codebases,Python,ab8067145cca9fc1eedf8aed5d2a49da4bc6411b,"Allow filters to punt by returning empty. Do that in TextFilter for short terms. Ref bug 1060111.

This allows us to ignore shorter-than-trigram textual query terms without saying anything, just as the production DXR does. (There's no need for us to call attention to our deficiencies; I fear that would noise up the feedback we get when we stage the ES branch. A real solution will be reached in the Query Language Refresh. Most likely, we will merge adjacent textual terms into phrases, at least as one of our search strategies.)

As in production, highlight shorter-than-trigram terms even if we're not able to search on them.

Rename BadQuery to BadTerm; we're not giving up on the whole query if one term won't run."
857,https://api.github.com/repos/mozilla/dxr/pulls/374,374,BUGZILLA-1111383 Don't assume that 'kind' is a valid key,"'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383
",cwgreene,135558,2014-12-14T21:16:38Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,67323aa9653dfdb5a3aacf87cad515f65d97735f,"BUGZILLA-1111383 Don't assume that 'kind' is a valid key

'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383"
858,https://api.github.com/repos/mozilla/dxr/pulls/374,374,BUGZILLA-1111383 Don't assume that 'kind' is a valid key,"'kind' is not necessarily emitted during a declDef record creation,
so we should provide a default value of None to avoid crashing.

https://bugzilla.mozilla.org/show_bug.cgi?id=1111383
",cwgreene,135558,2014-12-14T21:16:38Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,e734b8b9722e3c3bf4b06ed3e84a7b937fda1d65,Fixup!
859,https://api.github.com/repos/mozilla/dxr/pulls/373,373,Only show and use filters from enabled plugins,,nrc,762626,2014-12-11T02:06:12Z,CONTRIBUTOR,False,110,63,5,Powerful search for large codebases,Python,4942730a42d5fb3b25478b042ffc1de2618ee8a6,Only show and use filters from enabled plugins
860,https://api.github.com/repos/mozilla/dxr/pulls/373,373,Only show and use filters from enabled plugins,,nrc,762626,2014-12-11T02:06:12Z,CONTRIBUTOR,False,110,63,5,Powerful search for large codebases,Python,b37e24904bc5e5216fe18076dcfac68782c1e3c0,Review changes
861,https://api.github.com/repos/mozilla/dxr/pulls/372,372,Move hg serve into a comment since it's not needed for the diff link test,"I think this should fix the test's failure on Jenkins.
",pelmers,2406051,2014-12-08T21:35:44Z,CONTRIBUTOR,True,2,8,2,Powerful search for large codebases,Python,750d2e99f8167186bb953bcf9eafaf8bc313a610,Move hg serve into a comment since it's not needed for the test
862,https://api.github.com/repos/mozilla/dxr/pulls/371,371,Update Pygments,,nrc,762626,2014-12-04T01:32:14Z,CONTRIBUTOR,True,3,3,2,Powerful search for large codebases,Python,8ba248243bff0a08901bac0ea7dab84a260912b0,Update Pygments
863,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,b1eea2644e842f3314a6216cf1ee4e7165f6d1ea,Add test cases for binary files
864,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,936ce19e1937aade62385da9aafe5526e9065afa,"Index binary files and show image previews (Bug #1052217)

Binary files are stored in the elastic search index under the 'IMAGE'
doctype and retrieved on demand. A bit of Javascript on browse pages
adds the image preview."
865,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,50e44f77321835eb9b2e65054b3303edc38d57ab,"Respond to PR comments and fix nits.

Remove 'image' doctype in favor of FILE. Rename usage of 'image' to
'raw' and unify docstring style. Add 'image_file' template. Add an
configuration option that controls the maximum file size for images to
be shown as icon previews (default 20KB). Remove showing non-image
binary files when browsing. Add margin to image page so it does not
overlap crumbs and footer. Style changes for PEP8 conformance."
866,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,391d1d93955c40d3b513d6d538c86afe7cc88958,"Respond to PR comments.

Fix indentation nits, avoid pulling raw data for FILEs when unnecessary.
Refactor the template files for images and text."
867,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,2a59d6d8c789ee0a5591b2ae6dbe67deef353cde,Refactor .content div wrapper into layout.html
868,https://api.github.com/repos/mozilla/dxr/pulls/370,370,Image preview (Bug 1052217),"Show some preview images for image files, and list binary files in folder views.
Not merge-ready yet, since right now it just copies image files to another directory and serves from there.
Instead it should put them in ES (separate index from the code?) and query that on request.
See Bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1052217

edit: now things do go into ES
",pelmers,2406051,2014-12-02T01:48:28Z,CONTRIBUTOR,True,393,130,30,Powerful search for large codebases,Python,6ef77387c921f0ecd15d872bed9cf769c9a301bd,remove content_wrapper block
869,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,50ad45d8879b61449be2eca4b73555cc69916703,"Add file metadata informations

Such as:
- Commit ref
- Author's Name"
870,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,a5a11e084f1e889297f4690cdc5a587e60a7c3c5,"Merge branch 'fix-various-build-errors' into 938222

Conflicts:
	dxr/plugins/omniglot.py"
871,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,18a8ea218dd2acad53caeca7a9b5ea719458ba29,Merge remote-tracking branch 'origin/es' into 938222
872,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,37b79e0bac03fb2512cf9fb0d9e2ec1047cf2760,Hash & Author in dir listing
873,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,c59966307e28106faca608b0c58e61f511a2a4c4,"Merge branch 'es' into 938222

Conflicts:
	dxr/build.py"
874,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,7829133e4b4126e7e50a151ef540c53c67c6edcc,Simplified with a simple revision_id() API. No more metadata/author/...
875,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,6d81f8fbc69248e6afd3ceb4a87a5fc6eadd0378,Fix indents in build.py
876,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,8882596fb936f2862bdc447d156f86c574fd7ff7,Fix dict termination
877,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,414ecdc96b98f539819fe4d95441eddede786285,Fix another indent
878,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,fe448c8b1efbe5e74a2c252a8d4d4a55160e4c80,Fix len error
879,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,2ca5f3cfeb9e8871dcee99b5e8e946396a4ae671,"Merge branch 'es' of https://github.com/mozilla/dxr into 938222

Conflicts:
	dxr/build.py"
880,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,d621e4e41d2248511ee30e10d17c01d1e10f59de,Fix indent that got out of loop
881,https://api.github.com/repos/mozilla/dxr/pulls/369,369,Bug 938222 - Show hash or other VCS identifier of the indexed source,"See the discussion on bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=938222
",rricard,246520,2014-11-29T18:07:24Z,CONTRIBUTOR,False,49,4,6,Powerful search for large codebases,Python,182fbf8d33ef5b25675e5f803357181cbc14ba4d,If jenkins is not able to attach a ssh retry up to 5 times
882,https://api.github.com/repos/mozilla/dxr/pulls/368,368,Apply opacity to context-menu,"When you click an identifier, it is usual that there is a match nearby. But the context menu could cover that match, so that you can never find it.

By making the context menu translucent, the covered hightlight can be noticed.

![context-menu-translucent](https://cloud.githubusercontent.com/assets/333750/5192582/d713257a-754c-11e4-8521-03a4ad4904aa.png)
",upsuper,333750,2014-11-25T22:16:08Z,NONE,False,1,0,1,Powerful search for large codebases,Python,31ae9edb95c4acbea5ce1877354564084f187c22,"Apply opacity to context-menu

When you click an identifier, it is usual that there is a match nearby. But the context menu could cover that match, so that you can never find it.

By making the context menu translucent, the covered hightlight can be noticed."
883,https://api.github.com/repos/mozilla/dxr/pulls/367,367,Bug 1104302 - dxr-build fails when the git's origin has been cloned from an http(s) address ,"See bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1104302

> Note: let's discuss this PR, I'm sure there are better things to do than what I just did !
",rricard,246520,2014-11-25T00:51:08Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,f02a0fce400b3293e82e5d28eda61a404dcb9ac5,Fix https git remotes and avoid weird errors when the git repository does not come from github
884,https://api.github.com/repos/mozilla/dxr/pulls/367,367,Bug 1104302 - dxr-build fails when the git's origin has been cloned from an http(s) address ,"See bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1104302

> Note: let's discuss this PR, I'm sure there are better things to do than what I just did !
",rricard,246520,2014-11-25T00:51:08Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,fdba0cd962ed6e45b02f7a16e528cc9dbff07dd9,Merge branch 'es' into 1104302
885,https://api.github.com/repos/mozilla/dxr/pulls/367,367,Bug 1104302 - dxr-build fails when the git's origin has been cloned from an http(s) address ,"See bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1104302

> Note: let's discuss this PR, I'm sure there are better things to do than what I just did !
",rricard,246520,2014-11-25T00:51:08Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,ab5bca1e274888100e4c8bf36931b6d0c24be746,Change `git` scheme to `git:` scheme
886,https://api.github.com/repos/mozilla/dxr/pulls/367,367,Bug 1104302 - dxr-build fails when the git's origin has been cloned from an http(s) address ,"See bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1104302

> Note: let's discuss this PR, I'm sure there are better things to do than what I just did !
",rricard,246520,2014-11-25T00:51:08Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,aa45ac0716460a2e591dbe6831395d0a911e219f,Merge branch 'es' into 1104302
887,https://api.github.com/repos/mozilla/dxr/pulls/367,367,Bug 1104302 - dxr-build fails when the git's origin has been cloned from an http(s) address ,"See bugzilla: https://bugzilla.mozilla.org/show_bug.cgi?id=1104302

> Note: let's discuss this PR, I'm sure there are better things to do than what I just did !
",rricard,246520,2014-11-25T00:51:08Z,CONTRIBUTOR,True,5,3,1,Powerful search for large codebases,Python,356202e8c06dae22a461f58163570ffcdba34bdf,Get the exception back with a different error message.
888,https://api.github.com/repos/mozilla/dxr/pulls/366,366,Fix various build (indexation) errors,"When attempting to index `antirez/redis` repository on the `es` branch, I stumbled upon a few build issues, after a few changes I managed to fix them and index redis !

> **Note:** I did not attempt to execute the tests yet.
> 
> **Note:** This PR does not reference a bugzilla issue, just tell me if you'd like to have one.
",rricard,246520,2014-11-24T22:44:12Z,CONTRIBUTOR,True,4,2,2,Powerful search for large codebases,Python,d5c7a48e92d789acb66f217787fba1b4a077806a,Attempt to fix builds
889,https://api.github.com/repos/mozilla/dxr/pulls/366,366,Fix various build (indexation) errors,"When attempting to index `antirez/redis` repository on the `es` branch, I stumbled upon a few build issues, after a few changes I managed to fix them and index redis !

> **Note:** I did not attempt to execute the tests yet.
> 
> **Note:** This PR does not reference a bugzilla issue, just tell me if you'd like to have one.
",rricard,246520,2014-11-24T22:44:12Z,CONTRIBUTOR,True,4,2,2,Powerful search for large codebases,Python,8669103984682280f33873480a58bf7050db7370,Merge branch 'es' into 938222
890,https://api.github.com/repos/mozilla/dxr/pulls/366,366,Fix various build (indexation) errors,"When attempting to index `antirez/redis` repository on the `es` branch, I stumbled upon a few build issues, after a few changes I managed to fix them and index redis !

> **Note:** I did not attempt to execute the tests yet.
> 
> **Note:** This PR does not reference a bugzilla issue, just tell me if you'd like to have one.
",rricard,246520,2014-11-24T22:44:12Z,CONTRIBUTOR,True,4,2,2,Powerful search for large codebases,Python,7a18a1a6e622ef41733e1294b0680e293f4dd7e6,Fix import and method call preventing the build script from succeeding
891,https://api.github.com/repos/mozilla/dxr/pulls/366,366,Fix various build (indexation) errors,"When attempting to index `antirez/redis` repository on the `es` branch, I stumbled upon a few build issues, after a few changes I managed to fix them and index redis !

> **Note:** I did not attempt to execute the tests yet.
> 
> **Note:** This PR does not reference a bugzilla issue, just tell me if you'd like to have one.
",rricard,246520,2014-11-24T22:44:12Z,CONTRIBUTOR,True,4,2,2,Powerful search for large codebases,Python,0673996dfab00148fd954700567fe2e31df6baa1,Unconditional source_repositories initialisation
892,https://api.github.com/repos/mozilla/dxr/pulls/364,364,Fix buglink plugin,"and add a test of buglink to test_basic
",nrc,762626,2014-11-16T08:27:12Z,CONTRIBUTOR,False,10,5,4,Powerful search for large codebases,Python,7ca6cf745f68ff5fc39c9713dc55b374b4f44e0f,Fix buglink plugin
893,https://api.github.com/repos/mozilla/dxr/pulls/363,363,"Fix ""Running A Test Index"" doc","It didn't work without adding ../.. to `LD_LIBRARY_PATH`.
",pquentin,42327,2014-11-09T19:45:34Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,9d0192c440db58604868f14d4201cdee1bf33c42,"Fix ""Running A Test Index"" doc"
894,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,214ac7e3a4a11ada31783da1d1bbcdab31bee040,Promoted the clang plugin's _NameFilter to dxr.filters.
895,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,e7ba97b54468f43c27fa070ee7d013d50cb1ef61,Fixed _NameFilter to not freak out if its needle type isn't in the results.
896,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,1c9390a358cf8666a1fe02fca3b8f231c0ca8b5f,Basic support for Python class and function definitions.
897,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,2c5b540b3a70b6b4ede0583b8588717d999f9d94,Renamed _NameFilter to NameFilterBase.
898,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,383912290be1e2be3038dd3de630a5c921df4a60,PEP8 imports in python/indexers.py.
899,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,b210098dd1a7bb048998173616eafd23d0348f00,Removed extraneous makefiles in the Python plugin tests.
900,https://api.github.com/repos/mozilla/dxr/pulls/362,362,Python,"Added some basic Python support.  Indexes class and function definitions.
",jbradberry,685957,2014-11-03T20:32:14Z,CONTRIBUTOR,True,348,89,16,Powerful search for large codebases,Python,09011a0a9d87a5e75820807bfdbd33cce16a6def,Broke out the Python filters into their own module.
901,https://api.github.com/repos/mozilla/dxr/pulls/361,361,Fixed a clang plugin filter description that failed to have Markup wrapp...,"...ing it.
",jbradberry,685957,2014-11-02T01:25:01Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,5606cb114d4823294c1ffe1137445b09f0284db3,Fixed a clang plugin filter description that failed to have Markup wrapping it.
902,https://api.github.com/repos/mozilla/dxr/pulls/360,360,fix bugs in omniglot plugin and add example of hg repo,"Edit: Test cases added.

~~Edit 2: don't merge yet, working on more efficinent implementation~~
This now goes through mozilla-central in less than a minute.

This fixes some bugs in the omniglot plugin as well as
providing a more useful view for the diff link.
Addresses [bugzilla #974535](https://bugzilla.mozilla.org/show_bug.cgi?id=974535)
",pelmers,2406051,2014-11-02T00:46:25Z,CONTRIBUTOR,True,108,5,32,Powerful search for large codebases,Python,012d25a96ad974360015965ba027d6be3d059bcf,"Fix bugs in omniglot plugin and add example of hg repo

This fixes some bugs in the omniglot plugin as well as
providing a more useful view for the diff link.
ref bug #974535: https://bugzilla.mozilla.org/show_bug.cgi?id=974535"
903,https://api.github.com/repos/mozilla/dxr/pulls/360,360,fix bugs in omniglot plugin and add example of hg repo,"Edit: Test cases added.

~~Edit 2: don't merge yet, working on more efficinent implementation~~
This now goes through mozilla-central in less than a minute.

This fixes some bugs in the omniglot plugin as well as
providing a more useful view for the diff link.
Addresses [bugzilla #974535](https://bugzilla.mozilla.org/show_bug.cgi?id=974535)
",pelmers,2406051,2014-11-02T00:46:25Z,CONTRIBUTOR,True,108,5,32,Powerful search for large codebases,Python,ae1bea031b01134fef9d901fb291863cef648161,improve speed of finding last revisions
904,https://api.github.com/repos/mozilla/dxr/pulls/358,358,"fix bug 1087163 - path may be a str or list, only return first element i...","...f the latter
",rhelmer,61412,2014-10-22T05:18:52Z,MEMBER,False,3,1,1,Powerful search for large codebases,Python,a8da1f3675aa0e1e0122e8f08d4053455a5f3b3b,"fix bug 1087163 - path may be a str or list, only return first element if the latter"
905,https://api.github.com/repos/mozilla/dxr/pulls/357,357,Fixed a typo in clang/filters.py.,"VarDeclFilter had a description of 'Type or class declaration'.
",jbradberry,685957,2014-10-21T20:02:29Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,3a84cf5f1253e7b44398ac74ef07af6db72d9d1e,"Fixed a typo in clang/filters.py.

VarDeclFilter had a description of 'Type or class declaration'."
906,https://api.github.com/repos/mozilla/dxr/pulls/356,356,Documentation fixes,"Just a couple of documentation fixes:
- replaced references to the non-existent file 'dxr-index.py' with the intended 'dxr-build.py'
- replaced the mildly confusing 'FS' with 'filesystem'
",jbradberry,685957,2014-10-20T18:20:35Z,CONTRIBUTOR,True,10,10,4,Powerful search for large codebases,Python,16215d16006d7dfee4265ebcdca3a6a129ff870b,Replaced all references to dxr-index.py with dxr-build.py in the docs.
907,https://api.github.com/repos/mozilla/dxr/pulls/356,356,Documentation fixes,"Just a couple of documentation fixes:
- replaced references to the non-existent file 'dxr-index.py' with the intended 'dxr-build.py'
- replaced the mildly confusing 'FS' with 'filesystem'
",jbradberry,685957,2014-10-20T18:20:35Z,CONTRIBUTOR,True,10,10,4,Powerful search for large codebases,Python,755e46d4e4990ee10860bf570bb27594b169ca43,Replaced references to 'FS' with 'filesystem'.
908,https://api.github.com/repos/mozilla/dxr/pulls/356,356,Documentation fixes,"Just a couple of documentation fixes:
- replaced references to the non-existent file 'dxr-index.py' with the intended 'dxr-build.py'
- replaced the mildly confusing 'FS' with 'filesystem'
",jbradberry,685957,2014-10-20T18:20:35Z,CONTRIBUTOR,True,10,10,4,Powerful search for large codebases,Python,2082b7b1156f12b2c5f92c1fe72b9a106dd57585,Rolled back all but one FS->filesystem change.
909,https://api.github.com/repos/mozilla/dxr/pulls/355,355,Bug 965649 - Don't link full page width in search results,"Removing results links 100% width
Switching results link from block display to inline-block
",tsharman,554677,2014-10-17T06:28:58Z,CONTRIBUTOR,True,1,2,1,Powerful search for large codebases,Python,7e938670ab71df0cb21b67e7d91cae1f65f2cba5,"Removing results links 100% width
Switching results link from block display to inline-blockwq"
910,https://api.github.com/repos/mozilla/dxr/pulls/354,354,fix bug 1084053 - fix highlighting in chrome,,rhelmer,61412,2014-10-16T21:31:37Z,MEMBER,True,3,1,1,Powerful search for large codebases,Python,f533f9c34564bd8828d47879c44dbee12f53f590,fix bug 1084053 - fix highlighting in chrome
911,https://api.github.com/repos/mozilla/dxr/pulls/353,353,fix bug 1084050 - do not show context menu for clicks beyond the last wo...,"...rd
",rhelmer,61412,2014-10-16T21:16:26Z,MEMBER,True,5,0,1,Powerful search for large codebases,Python,7310e7ecde37b7706c2b7ec401fd32ef71baf50a,fix bug 1084050 - do not show context menu for clicks beyond the last word
912,https://api.github.com/repos/mozilla/dxr/pulls/352,352,fix bug 1083974 - make 'Search for the substring' menu easier to dismiss,,rhelmer,61412,2014-10-16T19:51:41Z,MEMBER,True,5,0,1,Powerful search for large codebases,Python,a4026197cfa9444897069a7adf7c640b0428e335,fix bug 1083974 - make 'Search for the substring' menu easier to dismiss
913,https://api.github.com/repos/mozilla/dxr/pulls/351,351,Allowed gzipped html files to be servered by dxr/app.py. ,"The CMS experiment offline software is almost 1 GB of source code. When I created the dxr index it ended up being 13GB with a 1.3GB xref database. I gzipped all of the htmlized source code files and made this patch to allow the server side to display them correctly. 

I also ran into problems during the csv import stage so I increased the csv field buffer to the max. This and the addition of the default wwwroot  can be skipped.

The prototype index for your software can be found at

http://cmslxr.fnal.gov/dxr
",gartung,4292184,2014-10-10T16:13:11Z,NONE,False,11,2,3,Powerful search for large codebases,Python,60907ebfba8e082b3f02584e1f2cafaa1af00bc4,Allowed gzipped html files to be servered by dxr/app.py. Increase the size of the csv file buffer.
914,https://api.github.com/repos/mozilla/dxr/pulls/350,350,Die bad trusty64,,erikrose,295816,2014-10-08T20:40:14Z,MEMBER,False,166,146,39,Powerful search for large codebases,Python,d4f54aeff3164757fe95f581907b9ebe401b50b2,"Move clang-specific tests inside the clang plugin.

I want to be able to see what's a core test and what's a test for a specific plug, now that there's a difference. The triggering event is that I'm about to add some more clang integrations tests so I can then make them pass, and I don't want to make the tangle worse to do it."
915,https://api.github.com/repos/mozilla/dxr/pulls/350,350,Die bad trusty64,,erikrose,295816,2014-10-08T20:40:14Z,MEMBER,False,166,146,39,Powerful search for large codebases,Python,22b20695c328ae8b1298910b9c49852050fba0f5,"Standardize names of executables in tests to ""code"" so we don't need to add more git ignores."
916,https://api.github.com/repos/mozilla/dxr/pulls/350,350,Die bad trusty64,,erikrose,295816,2014-10-08T20:40:14Z,MEMBER,False,166,146,39,Powerful search for large codebases,Python,558910a7b6e3643511fa220b271d0f37e6c4ba59,"Put a temp instruction in a temp branch to kill off the bad trusty64 image on Jenkins.

That image has Juju activated, which hangs for 5 minutes looking around for a master server on each build."
917,https://api.github.com/repos/mozilla/dxr/pulls/350,350,Die bad trusty64,,erikrose,295816,2014-10-08T20:40:14Z,MEMBER,False,166,146,39,Powerful search for large codebases,Python,ce8cf2f8851cbbacedbfe7c3b372ada6d1fd9e4b,bogus commit to nudge Jenkins
918,https://api.github.com/repos/mozilla/dxr/pulls/349,349,Move clang-specific tests inside the clang plugin.,"I want to be able to see what's a core test and what's a test for a specific plug, now that there's a difference. The triggering event is that I'm about to add some more clang integrations tests so I can then make them pass, and I don't want to make the tangle worse to do it.
",erikrose,295816,2014-10-08T20:28:43Z,MEMBER,True,156,138,35,Powerful search for large codebases,Python,d4f54aeff3164757fe95f581907b9ebe401b50b2,"Move clang-specific tests inside the clang plugin.

I want to be able to see what's a core test and what's a test for a specific plug, now that there's a difference. The triggering event is that I'm about to add some more clang integrations tests so I can then make them pass, and I don't want to make the tangle worse to do it."
919,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,bb0519c40714fa8f8d524ada8602dcc206c6629f,Polish some plugin API docstrings.
920,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,ef7ec9e67bfde1758b764810888fc97b17e99cfb,Take advantage of funcy.merge().
921,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,97bb8cad5b4c89b15ebb5065d4fe5434c9fab65e,"implement basic static call graph

refactoring IR used for plugin into something _much_ easier to work with

added virtual lookup in call graph

build inheritance using all decedents

added doc strings for symbols and functions

added missing networkx dep"
922,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,b1b4bbea321de9bab71b6e02d5c91b0061d1938f,making flake8 happy
923,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,7360a6ea3a7638eeaa2bf49001e5b11f4b3aac11,added doc and reversed edges for call graph
924,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,c70e2a18212215e78f1c8671d76159ccf52f2592,groupby for refs
925,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,ed10b9ab15df236fda9536f8d957e88e6c279817,accidently stepped on the version #
926,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,6890bb5b21553d609c335b66074f52ffd089678e,fixed incorrect !key and typos thanks to abbeyj
927,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,e1a845f91f6173402517e8cae3c820aca18b18fc,Fixed doc strings and style
928,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,6906ec1424401fbe5c64f3add80f5aca1a46fe0d,"Change IR for clang plugin and implement call graph. Merges #291.

Moving towards Bug #1030312"
929,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,e28373db89410b5a4f4ad70d9f5790ac686a4af4,name isn't actually a field...idk how that slipped in
930,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,2ed4a73df91467d09465499e85e26643a6b9a04c,first batch of tests
931,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,0fcd403e4100b900f85d46b13e293706bdfc630a,added tests completing basic csv converage (though need to implement some features)
932,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,ea2d7656f3aff8e254b32854ef7742dd9d25626b,pass impl tests and properly grouby things with kind
933,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,1494337ca08d6e1f32e858ef3a9799d2b25eb3ca,fix decldef representation to match tests
934,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,7e7cf20d20f82098f223e02c649af05d62e2d229,got rid of magic docstring decorator
935,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,6514d571c4355cfbe5d9a1724631dee5ea58aaa2,add inheritance and call graph tests
936,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,3c20a44d1959d6377657232f9d6207490e1853b4,pep8 compliant for module
937,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,c7116e9f78b99746a5a68f367708eb50901ea60a,"Don't copy line-by-line contents into ES or collect line-by-line nuggets for binary files.

For now, just show ""(binary file)"" when you try to look at one. That's one step better than now, where we don't even show them in directory listings. Ultimately, I'd like to base64 at least the images and stick them in ES for display."
938,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,6883414923954ba31b8a9315818ae9a9659fc708,Expand documentation of refs_by_line().
939,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,34785b968bee7b0b5e5323829ce59925eea4881d,indent CSV like PEG grammars
940,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,b0eb812fa5e632d16ff3734fb87b195fe67a3d41,pep8 and documentation
941,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,590095820fd84e436fd1e940a76df3e90cb98c9b,fixed regressions (woo tests!)
942,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,4a3067692ec66eac38caae956f875972136faa58,added test documentation for call graph test
943,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,80e10d1c3e43b13f0e87b82d6d2cef0c8225231f,document kind using sphinx documentation style
944,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,d039da3b53398264a0b2a38792163b12a0f6013d,document maybe usage of Position.extent + line length fix
945,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,cb6cc51a7840cfea1fbdec811608c74d5bdd6e4a,csv's need to be more indented w.r.t the current block
946,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,3a4a15f1ce8295dfd396f93c3df6464660fc0f1f,Added tests for clang plugin. Closes #292
947,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,0c7d20bf89220a74aa8429aea00d9a0a4cda1cf0,extracted needle utility functions
948,https://api.github.com/repos/mozilla/dxr/pulls/348,348,Move clang tests,,erikrose,295816,2014-10-08T20:28:30Z,MEMBER,False,6447,4925,123,Powerful search for large codebases,Python,3ddd733b2d2b096c46e329b53e548f4fdc0d1d2f,reimplemented and generalized + TESTS!!!!!
949,https://api.github.com/repos/mozilla/dxr/pulls/347,347,Fix crash in dxr/build.py when source tree is empty.,"Indexing an empty source tree causes the following crash:

```
Finalize database:
 - Building database statistics for query optimization
 - Running integrity check
Building HTML for the 'code' tree.
 - Initializing worker pool
 - Enqueuing jobs
Traceback (most recent call last):
  File ""/usr/local/bin/dxr-build.py"", line 10, in <module>
    execfile(__file__)
  File ""/home/vagrant/dxr/bin/dxr-build.py"", line 56, in <module>
    main()
  File ""/home/vagrant/dxr/bin/dxr-build.py"", line 52, in main
    verbose=options.verbose)
  File ""/home/vagrant/dxr/dxr/build.py"", line 177, in build_instance
    run_html_workers(tree, config, max_file_id)
  File ""/home/vagrant/dxr/dxr/build.py"", line 472, in run_html_workers
    (start, end) in _sliced_range_bounds(1, max_file_id, 500)]
  File ""/home/vagrant/dxr/dxr/build.py"", line 461, in _sliced_range_bounds
    this_min = this_max + 1
TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'
```

It doesn't make much sense to index an empty source tree but `dxr-build.py` should not crash. The build now earlies out if `max_file_id` is `None` which happens when the source tree is empty.
",ClementDagneau,809403,2014-10-04T19:06:58Z,CONTRIBUTOR,True,39,4,4,Powerful search for large codebases,Python,146c0e579741fcbd7250e3137051cde534d1d4de,Fix crash in dxr/build.py when source tree is empty.
950,https://api.github.com/repos/mozilla/dxr/pulls/346,346,Some minor fixes to filters,,erikrose,295816,2014-10-02T16:31:29Z,MEMBER,True,8,8,2,Powerful search for large codebases,Python,bbcc4eba817c16136ec3f784df9df2c120657765,"Keep filter names the same as they are in production.

We'll shorten and simplify them in the Query Language Refresh, keeping the old ones around as deprecated alternatives."
951,https://api.github.com/repos/mozilla/dxr/pulls/346,346,Some minor fixes to filters,,erikrose,295816,2014-10-02T16:31:29Z,MEMBER,True,8,8,2,Powerful search for large codebases,Python,512aeb05a5d66702174653596934c116a9c36ef6,Don't wrap {'not': } around Nones if a filter opts out of doing any filtration.
952,https://api.github.com/repos/mozilla/dxr/pulls/345,345,Port direct search to ES.,"This implements the framework (registration and running of direct searchers) and a first, proof-of-concept searcher.

I recommend reviewing this one commit at a time.

This will close https://bugzilla.mozilla.org/show_bug.cgi?id=1068161.
",erikrose,295816,2014-09-29T21:32:53Z,MEMBER,True,184,172,6,Powerful search for large codebases,Python,1fb73bb50c0dd32ba3dfc51451ca62a23065a39d,"Change the ""no filtration"" return value from {} to None.

That makes it less verbose to write self-skipping filters and is consistent with how we're doing it in direct searchers."
953,https://api.github.com/repos/mozilla/dxr/pulls/345,345,Port direct search to ES.,"This implements the framework (registration and running of direct searchers) and a first, proof-of-concept searcher.

I recommend reviewing this one commit at a time.

This will close https://bugzilla.mozilla.org/show_bug.cgi?id=1068161.
",erikrose,295816,2014-09-29T21:32:53Z,MEMBER,True,184,172,6,Powerful search for large codebases,Python,769df0f09e27a46d18b5d0351456e41bbb0032af,"Add plugin API and calling machinery for direct searchers.

Add an __all__ while we're at it, to make clear what's public."
954,https://api.github.com/repos/mozilla/dxr/pulls/345,345,Port direct search to ES.,"This implements the framework (registration and running of direct searchers) and a first, proof-of-concept searcher.

I recommend reviewing this one commit at a time.

This will close https://bugzilla.mozilla.org/show_bug.cgi?id=1068161.
",erikrose,295816,2014-09-29T21:32:53Z,MEMBER,True,184,172,6,Powerful search for large codebases,Python,55059a56f263e821778c85546b80751d2372e2ac,"Add the first ES direct searcher: the one for path:line_num.

test_line_number now passes. Move the skips around so we can run it.

Rewrite the direct-search test method so it's more integrationy. Lift it up to dxr.testing.TestCase. The method was coupled to SQLite before and had thus quit working."
955,https://api.github.com/repos/mozilla/dxr/pulls/344,344,Line number in search results act as links,,anmoljagetia,6505326,2014-09-29T18:07:31Z,CONTRIBUTOR,True,9,2,2,Powerful search for large codebases,Python,aa064f73d46f8b7dcff5063bdc1493de9e1f8030,Line no in search results act as links
956,https://api.github.com/repos/mozilla/dxr/pulls/344,344,Line number in search results act as links,,anmoljagetia,6505326,2014-09-29T18:07:31Z,CONTRIBUTOR,True,9,2,2,Powerful search for large codebases,Python,310cb32317950d6e0a79a2bbdb093622b6ef9808,fixed indentation
957,https://api.github.com/repos/mozilla/dxr/pulls/344,344,Line number in search results act as links,,anmoljagetia,6505326,2014-09-29T18:07:31Z,CONTRIBUTOR,True,9,2,2,Powerful search for large codebases,Python,bd6bb2ba140e82391aeb2608c889c9515cc8b53f,added fix to results.html
958,https://api.github.com/repos/mozilla/dxr/pulls/344,344,Line number in search results act as links,,anmoljagetia,6505326,2014-09-29T18:07:31Z,CONTRIBUTOR,True,9,2,2,Powerful search for large codebases,Python,20d13b0b6d8077679887fe24981c4ef6bc11dcb5,added missing closing anchor
959,https://api.github.com/repos/mozilla/dxr/pulls/343,343,fixed needle tests for function needles branch,,mvcisback,388723,2014-09-26T22:07:42Z,CONTRIBUTOR,True,23,20,1,Powerful search for large codebases,Python,41448d3de57a3516b3b4070aead8946d2b704e9f,fixed needle tests for function needles
960,https://api.github.com/repos/mozilla/dxr/pulls/342,342,Removed trilite from the makefile and git modules.,"The tests wouldn't pass before, since trilite was gone, but the lines in the makefile were still there.
",jbradberry,685957,2014-09-26T21:52:58Z,CONTRIBUTOR,True,3,17,3,Powerful search for large codebases,Python,9ecb28760d2815e7c15d86b35b8fbcc716eddbb8,Removed trilite from the makefile and git modules.
961,https://api.github.com/repos/mozilla/dxr/pulls/341,341,Fixed the Vagrantfile to use a consistent working version 2 style.,"The memory modification was not triggering.
",jbradberry,685957,2014-09-26T20:51:06Z,CONTRIBUTOR,True,9,27,1,Powerful search for large codebases,Python,fd30a1c017ff9c3eb04b891ab69428ff8e0f37c9,"Fixed the Vagrantfile to use a consistent working version 2 style.

The memory modification was not triggering."
962,https://api.github.com/repos/mozilla/dxr/pulls/341,341,Fixed the Vagrantfile to use a consistent working version 2 style.,"The memory modification was not triggering.
",jbradberry,685957,2014-09-26T20:51:06Z,CONTRIBUTOR,True,9,27,1,Powerful search for large codebases,Python,7cb823f2de7204066a6f821196fc74275fc4b42e,Set VirtualBox to enable symlinks on the correct directory.
963,https://api.github.com/repos/mozilla/dxr/pulls/340,340,refs no longer need to be unsparsed by line,,mvcisback,388723,2014-09-24T15:37:02Z,CONTRIBUTOR,True,1,2,1,Powerful search for large codebases,Python,f961bbb2ed6a3730ed263df463e78df04c692683,refs no longer need to be unsparsed by line
964,https://api.github.com/repos/mozilla/dxr/pulls/338,338,Ext filter,"Add ExtFilter, which implements filtering by file extension. Add dedicated needles for extension; that way, we can use nice, cacheable term filters.
",erikrose,295816,2014-09-22T22:05:14Z,MEMBER,True,60,22,5,Powerful search for large codebases,Python,e0bb58c36e2c1214cf86f28f7d871c92cc39c700,"Factor out filter negation into a decorator.

I've written that 3 times so far, and I'm about to write it again."
965,https://api.github.com/repos/mozilla/dxr/pulls/338,338,Ext filter,"Add ExtFilter, which implements filtering by file extension. Add dedicated needles for extension; that way, we can use nice, cacheable term filters.
",erikrose,295816,2014-09-22T22:05:14Z,MEMBER,True,60,22,5,Powerful search for large codebases,Python,865658bfed432029037612d0d7acb671467e6e12,"Stop ignoring file-scoped needles from plugins.

As a result, path (and everything else) ends up as an array, so we have to add a [0]."
966,https://api.github.com/repos/mozilla/dxr/pulls/338,338,Ext filter,"Add ExtFilter, which implements filtering by file extension. Add dedicated needles for extension; that way, we can use nice, cacheable term filters.
",erikrose,295816,2014-09-22T22:05:14Z,MEMBER,True,60,22,5,Powerful search for large codebases,Python,cd4b0a265d8d8fca5259b0557aa38e2bbb7b1811,Add ext: filter. Fix bug 1030313.
967,https://api.github.com/repos/mozilla/dxr/pulls/337,337,Fixes regression with views of condensed IR,,mvcisback,388723,2014-09-22T20:19:47Z,CONTRIBUTOR,True,31,15,2,Powerful search for large codebases,Python,2a1c28177d2803898fd5774d7120d7ed08b97659,Added unit test for refs kind getter
968,https://api.github.com/repos/mozilla/dxr/pulls/337,337,Fixes regression with views of condensed IR,,mvcisback,388723,2014-09-22T20:19:47Z,CONTRIBUTOR,True,31,15,2,Powerful search for large codebases,Python,30cd97e536a15ffcff525492044075ea2cd63b84,Each reference type is optional
969,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,7da6fc7a57f962df22f551744f03bb24c9c4fca7,"Fix an invalid markup test.

Without the trailing slash on the URL, it 404s and so doesn't test anything useful. The 404 in itself is another bug we should fix: bug 1087434."
970,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,5475a55d2f3a62a8ed72d65649820ccc0269e662,Add var-decl needles. Add short names to declarations in compiler plugin. Ref bug 1087465.
971,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,26195945698b995a9542bc663c168fb3893226db,Add function-decl needles. Ref bug 1087465.
972,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,fb955207533eada007596e705393bd89ed4acfa4,"Add type-decl needles. Fix bug 1087465.

That's the last of the decl needles."
973,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,a03a0b9d1d0933841f5129754cc459c9052af240,"Remove the now-redundant test_c_vardecl.

Move its remaining useful ""var:"" test to test_vars. The ""var-decl:"" test was already covered by test_decl."
974,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,76920ce665c302c21ff14f0e6ef7677f4940efb7,"There's no need to smoketest FileToIndex or TreeToIndex now that integration tests cover them very well.

This also removes our only need for mock."
975,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,7d93b75845b80ed60463dc66f71daf8bcd5fcd0d,"Don't repeat ourselves in the more complicated needle extractions.

Leaving the warning and macro needles alone for now because they're just so darn obvious to read."
976,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,f325c7c7372f3d37b47ff48fb29672142d9ca26e,"Add call needles except for inheritance. Make ""callers:"" searches work. Fix bug 930911. Fix bug 1082102.

* Modify compiler plugin to emit everything we need. No more concrete call graph needed on the Python side.
* Remove called-by filter. It's stupid and useless.
* ""callers:"" queries now find actual callsites, not just the functions containing callsites!
* Restore some genexprs that had turned into list comps for debugging.
* Remove callee tests, since we're getting rid of called-by search.

To come: making the rest of the test_callers tests pass"
977,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,d7de9dc3d3120e4283067ce4b6872a765b0838b8,Add a failing test for CSV-finding.
978,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,8db4c7e40753a077ba19e6e3f2110ee26fff106d,Add new source file to make tests pass. Should have been in d7de9dc3d3120e4283067ce4b6872a765b0838b8.
979,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,8ebc3d8186bb84d3b33af03852b0a3485f767f9d,"Make ""overrides:"" searches work, modulo the inheritance graph."
980,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,c1343dfa6f00124de00d27f404d3784b9db44442,Fix silly bug in split_into_lines().
981,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,46179b9bd9f76448dbcd6baeae09e7c96536ee47,"Remove two failing unit tests that are now invalid.

test_function tests against an old output format that is no longer in use. test_functions.py covers this.

test_override_needles is covered by test_overrides.py."
982,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,2def9ae0172e1db1a4245cc9c4dc4f27717b2228,"Remove dead callee_needles().

We're not supporting callee search anymore. It's of little use. Just read the function to find its callees (in context, too!)."
983,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,02115fbf93c01cdf411d70add01196963627bd33,"Unskip a test in test_functions, as decl needles are now in place."
984,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,49d89e618253e75f764a1699af7574da67edc7a7,"Unskip test_cross_file_callers.

We don't have a problem with cross-file calls anymore, since we enhanced the compiler plugin to output both caller and callee info."
985,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,f89d8346578fc9b0044f4496a4a5181ef5370441,"Make member searches work. Ref bug 1030312.

* ""member"" searches for a class no longer find the class: just its members. Hooray! (This is why some tests change.)
* ""member"" searches now find class-scoped typedefs. Hooray!
* Have compiler plugin emit qualnames for scopes. Remove scopelocs, which are no longer used.
* Switch to a qualified search in test_members so we don't find all the vars scoped to the constructor, which shares the name of the class.
* Remove variable unit test in favor of an integration test. member needles change this contract and invalidate the test.
* Remove dead process_override().
* Stop processing scopes into a special data structure. It wasn't necessary, and the code is simpler without it.
* Remove dead overrides_needles()."
986,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,7710ed1617532154a8f8f475934a3fb0ebdef581,Rename SYMBOL_NEEDLE for symmetry with the _QualifiedNameFilter which uses them.
987,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,96be5c94b1431fca658bf6ff887dddde0f97b54a,"Delete last traces of call graph, which it doesn't look like we'll need.

We improved the compiler plugin to spit out everything we need on the lines where we need it, so we don't need a lookaside data structure."
988,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,4eaeb6da339f994376c1e788e59ea870831ffb82,"Try to output the qualnames of methods that override the one we're visiting. Fail, printing the current one twice. Probably we need to call ->first() on something to go back to the base method and then iterate."
989,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,6b56133e5b104373b4215a4a8db6d59fd8e7508f,Hmm. That changed nothing. I guess we'll need to walk up the class hierarchy.
990,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,93aa3c654e916d300cc5386a596ee0a36459312c,Improve tracebacks for farmed-out tasks.
991,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,6796ea3a0ebcaad210f4b8813600bfc8408bf2c3,Unparallize even the pre- and post-build hooks when debugging.
992,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,439dd9219b53c8cc8ab935523b43762a3c55f174,"Stop mentioning re2 in the docs.

We don't use it anymore."
993,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,dcaa41ab6bf6b28ebef4c6123e71561917589abf,"Refactor condenser and add ""overridden"" data gathering during post-build. Ref bug 1030312.

* Refactor condenser to make room for ""overridden"" gathering as a second whole-program analysis action during post-build. Where before we propagated an impl_only flag through several levels of functions calls, now we decompose the functions such that we can just pass arbitrary actions and predicates in.
* Lay down overrideloc and overridelocend fields in function lines in the compiler plugin.
* Stop concretizing all the zipdicts in memory before even processing them. Do them one at a time, concretizing only the result. This saves time and RAM."
994,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,84ce1d14779de19a3da000164aca3a7c424dbaa3,"Emit ""overridden"" needles, except that they point to declarations rather than definition at the moment.

* Fix a bug in clang.indexers.TreeToIndex where the path passed to FileToIndex was not source-relative.
* Reference the overridden method's name, not the overriding method's name, from process_override().
* Rename the ""overridden*"" fields in the CSV so they're not misleading.
* Stop processing overriddenlocs during process_function(); they're never used during the second (per-file) pass."
995,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,8f86a77f4ab755a48ed6bfeece093ed1b9b9a633,"Make overridden needles point to definitions, not declarations.

I wasn't able to get the compiler plugin to emit the correct columns for definitions, so I changed the format of the global-pass data, and now we make use of the location information in the ""function"" lines emitted for the superclass method."
996,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,33306cde44ea862b8d9c1fc6d748aa18933b2d8b,"Make ""overridden"" searches work, modulo deep subclassing. Ref bug 1030312."
997,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,a7eaca3defcaa7e6d50d99f95f7d7ac38a38d2eb,Typo and comment
998,https://api.github.com/repos/mozilla/dxr/pulls/336,336,Alpha Dockerfile to create docker based dev container,"This is an alpha Dockerfile that seems to work. I can run make test, and dxr-serve.py on a test_basic directory.

To run on Windows and OSX will take some extra steps that I'll document once this build runs successfully.

Here goes!
",jamonation,328553,2014-09-20T21:16:10Z,CONTRIBUTOR,False,14149,6719,290,Powerful search for large codebases,Python,8660ea1ec33dc31a18fa5e9486c43778dc703144,"Remove one more SkipTest from test_overrides.

Looks like I missed one."
999,https://api.github.com/repos/mozilla/dxr/pulls/335,335,Catch the right exception in test_build_failure. All unskipped tests now...,"... pass!

...assuming PR #334 is merged.
",erikrose,295816,2014-09-19T22:26:43Z,MEMBER,True,2,1,1,Powerful search for large codebases,Python,e5d870d4a620381b0f9c2fe601ce81de8c597b8e,"Catch the right exception in test_build_failure. All unskipped tests now pass!

...assuming PR #334 is merged."
1000,https://api.github.com/repos/mozilla/dxr/pulls/334,334,Rewrite search controller. Introduce proper HTTP API. Show error message...,"...s. Fix bug 956164 and 956919.

The search controller is no longer a spaghettified mess of reads and writes to a gigantic hash.

test_strings now passes. We're down to 1 failing test.
- We now have a publishable, reasonable REST API for searching, triggered by an Accept header of application/json. No more format= querystring param. Bad queries return a 400 so you can detect that easily.
- Show error messages for regexes that are malformed or unable to be accelerated.
- In the query machinery, tolerate queries that don't end up filtering anything. (ES would complain before.) Rather than showing ""no results"" for the query ""df df df"" (with all unsearchable bigrams), we show everything. Both alternatives are equally misleading and horrible and will be addressed in the Query Language Refresh.
- Fix bugs on error page wherein (1) part of the content would be hidden behind the search panel and (2) you couldn't do searches from them. (All the attrs of the div tag are necessary.)

The easiest way to review the new search controller is by just reading it. The diff of it is not useful.
",erikrose,295816,2014-09-19T22:17:29Z,MEMBER,True,165,135,9,Powerful search for large codebases,Python,70f489338d17efbdc645a30791d050a98ceaca49,"Rewrite search controller. Introduce proper REST API. Show error messages. Fix bug 956164 and 956919.

The search controller is no longer a spaghettified mess of reads and writes to a gigantic hash.

test_strings now passes. We're down to 1 failing test.

* We now have a publishable, reasonable REST API for searching, triggered by an Accept header of application/json. No more format= querystring param. Bad queries return a 400 so you can detect that easily.
* Show error messages for regexes that are malformed or unable to be accelerated.
* In the query machinery, tolerate queries that don't end up filtering anything. (ES would complain before.) Rather than showing ""no results"" for the query ""df df df"" (with all unsearchable bigrams), we show everything. Both alternatives are equally misleading and horrible and will be addressed in the Query Language Refresh.
* Fix bugs on error page wherein (1) part of the content would be hidden behind the search panel and (2) you couldn't do searches from them. (All the attrs of the div tag are necessary.)"
1001,https://api.github.com/repos/mozilla/dxr/pulls/334,334,Rewrite search controller. Introduce proper HTTP API. Show error message...,"...s. Fix bug 956164 and 956919.

The search controller is no longer a spaghettified mess of reads and writes to a gigantic hash.

test_strings now passes. We're down to 1 failing test.
- We now have a publishable, reasonable REST API for searching, triggered by an Accept header of application/json. No more format= querystring param. Bad queries return a 400 so you can detect that easily.
- Show error messages for regexes that are malformed or unable to be accelerated.
- In the query machinery, tolerate queries that don't end up filtering anything. (ES would complain before.) Rather than showing ""no results"" for the query ""df df df"" (with all unsearchable bigrams), we show everything. Both alternatives are equally misleading and horrible and will be addressed in the Query Language Refresh.
- Fix bugs on error page wherein (1) part of the content would be hidden behind the search panel and (2) you couldn't do searches from them. (All the attrs of the div tag are necessary.)

The easiest way to review the new search controller is by just reading it. The diff of it is not useful.
",erikrose,295816,2014-09-19T22:17:29Z,MEMBER,True,165,135,9,Powerful search for large codebases,Python,e31a7bb7056e5bad33be0a3d9c50eb8ecc57ae45,Remove unneeded result= kwarg from error template call.
1002,https://api.github.com/repos/mozilla/dxr/pulls/333,333,Datetime format changed on newer ES versions,,mvcisback,388723,2014-09-18T21:46:13Z,CONTRIBUTOR,True,13,2,2,Powerful search for large codebases,Python,d1bf3c7ab7e1a088e84e58cfd26ada4603fdb5e5,for newer ES versions datetime format changed
1003,https://api.github.com/repos/mozilla/dxr/pulls/333,333,Datetime format changed on newer ES versions,,mvcisback,388723,2014-09-18T21:46:13Z,CONTRIBUTOR,True,13,2,2,Powerful search for large codebases,Python,594223b5fb10314bc029ed1db6b5d1c8331d24fb,added date time test
1004,https://api.github.com/repos/mozilla/dxr/pulls/333,333,Datetime format changed on newer ES versions,,mvcisback,388723,2014-09-18T21:46:13Z,CONTRIBUTOR,True,13,2,2,Powerful search for large codebases,Python,56170bd7b2a0203173874af56e2f3bc57e40c412,Added test for decode_es_datetime
1005,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,1071dd941b7092839c9bbc5ddbdc96353638ba95,"* Added support for configuring google analytics
* Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates"
1006,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,58bd2b451df76ddf9276198b09a4e5403d2ca28e,"* Renamed google analytics configuration key as 'google_analytics_key'
  from existing 'ga_key'"
1007,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,836d986d379e54eda1467b40cc23c36962f11e7f,"* Documented google_analytics_key in configuration.rst
  Fixes some issues with the last commit"
1008,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,7e97d2a80d7f52250494f9787c26e77a2e5942f3,* Added test to verify non-existance of google analytics snippet
1009,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,2ea9ebf3ff5a320ba5d086a463cee3ae05021ddd,* Added tests to check google analytics snippet
1010,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,e6af3201443d3e5e4636c80bfb82cb6a487f8c8d,* remove the import of 'run'
1011,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,81a0c39e7b0c6c5d155901515e79a5033261623a,* Fix test names and doc strings
1012,https://api.github.com/repos/mozilla/dxr/pulls/332,332,* Added support for configuring google analytics,"- Adding a configuration parameter 'ga_key' under DXR section
  will publish google analytics snippet in all templates
  this will require rebuilding the templates
",gvenkat,132669,2014-09-16T19:24:50Z,CONTRIBUTOR,True,82,3,11,Powerful search for large codebases,Python,681da51ca00c25d287b26c8daf3384e48de337f1,* Add a test file required to build
1013,https://api.github.com/repos/mozilla/dxr/pulls/331,331,Fix the FILE/LINE superset problem with documentation for now.,"Fix bug 1058945.

We can change the API to make it more automatic if it turns out to be a burden for plugin. In that case, most likely just move the folder, name, size, modified, and is_folder fields (the ones that aren't touched by queries) out of the core plugin and into build.py itself, then have something deep_update() LINE mappings with their corresponding FILE ones.
",erikrose,295816,2014-09-15T16:17:15Z,MEMBER,False,37,37,3,Powerful search for large codebases,Python,90c3dc1cd7c9069af1c910b254610fcd6249fb02,"Fix the FILE/LINE superset problem with documentation for now. Fix bug 1058945.

We can change the API to make it more automatic if it turns out to be a burden for plugin. In that case, most likely just move the folder, name, size, modified, and is_folder fields (the ones that aren't touched by queries) out of the core plugin and into build.py itself, then have something deep_update() LINE mappings with their corresponding FILE ones."
1014,https://api.github.com/repos/mozilla/dxr/pulls/330,330,Stick the whole DXR index in a single shard.,"This should be faster, according to the benchmarks at http://blog.trifork.com/2014/01/07/elasticsearch-how-many-shards/.

Also, crank up the refresh interval. This will flush the indexing buffer out to disk less often, resulting in fewer Lucene segments, which should yield faster queries before they merge and less merging to do, meaning less IO and CPU.
",erikrose,295816,2014-09-12T19:09:09Z,MEMBER,False,14,2,1,Powerful search for large codebases,Python,ed4221683f62582a2f0d6bcd79616c2098f24961,"Stick the whole DXR index in a single shard.

This should be faster, according to the benchmarks at http://blog.trifork.com/2014/01/07/elasticsearch-how-many-shards/.

Also, crank up the refresh interval. This will flush the indexing buffer out to disk less often, resulting in fewer Lucene segments, which should yield faster queries before they merge and less merging to do."
1015,https://api.github.com/repos/mozilla/dxr/pulls/329,329,Path filter,"Get the path filter working.
- You should be able to `make` in test_basic and do `path:` queries. You'll get 500s for search strings without a 3-char literal text run; that'll be caught and displayed better later.
- All the globbing supported by fnmatch works great.
- All of test_basic passes except test_structural_and, which awaits a working `function:` filter.
",erikrose,295816,2014-09-12T17:43:53Z,MEMBER,True,183,40,7,Powerful search for large codebases,Python,6af06c972d83f04e8ccffb054266435542191431,Maintain backslashes in front of nonliterals like . and $.
1016,https://api.github.com/repos/mozilla/dxr/pulls/329,329,Path filter,"Get the path filter working.
- You should be able to `make` in test_basic and do `path:` queries. You'll get 500s for search strings without a 3-char literal text run; that'll be caught and displayed better later.
- All the globbing supported by fnmatch works great.
- All of test_basic passes except test_structural_and, which awaits a working `function:` filter.
",erikrose,295816,2014-09-12T17:43:53Z,MEMBER,True,183,40,7,Powerful search for large codebases,Python,d1ab0d3aa9e6ca04424cf01b4fca50b7f75b0883,Fix FILE-domain search results. They were all crashy and wrong.
1017,https://api.github.com/repos/mozilla/dxr/pulls/329,329,Path filter,"Get the path filter working.
- You should be able to `make` in test_basic and do `path:` queries. You'll get 500s for search strings without a 3-char literal text run; that'll be caught and displayed better later.
- All the globbing supported by fnmatch works great.
- All of test_basic passes except test_structural_and, which awaits a working `function:` filter.
",erikrose,295816,2014-09-12T17:43:53Z,MEMBER,True,183,40,7,Powerful search for large codebases,Python,608f4ceda17fecb7f1f9155da22617afdf4ff6bc,"Get PathFilter working by hooking it up to the JS regex rewriter. Refs bug 1030313.

You should now be able to fire up test_basic and run path queries, complete with globs.

* All of test_basic passes except test_structural_and, which awaits a working `function:` filter.
* We introduce a new exception BadQuery, which filters can use to complain about user errors that keep the query from running. In a later commit, we'll catch this and display it instead of 500ing."
1018,https://api.github.com/repos/mozilla/dxr/pulls/328,328,JS Regex Translation,"Here's the machinery that translates DXR-flavored (Python- and PCRE-ish except without a few fancy feature like lookarounds (so far)) to JS ones we can run inside ES. Really, the only difference is that \c means something in JS's regexes but not in Python's. You can see in the tests that the ones expecting a difference are very few.
",erikrose,295816,2014-09-11T20:49:01Z,MEMBER,True,174,22,5,Powerful search for large codebases,Python,c2ca73ae89baab0807f892a8d66df05b2d5ad596,Take advantage of parsimonious 0.6's shorter imports.
1019,https://api.github.com/repos/mozilla/dxr/pulls/328,328,JS Regex Translation,"Here's the machinery that translates DXR-flavored (Python- and PCRE-ish except without a few fancy feature like lookarounds (so far)) to JS ones we can run inside ES. Really, the only difference is that \c means something in JS's regexes but not in Python's. You can see in the tests that the ones expecting a difference are very few.
",erikrose,295816,2014-09-11T20:49:01Z,MEMBER,True,174,22,5,Powerful search for large codebases,Python,800bb610717aef486363bd6584de3a416240a947,"Rename TrigramTreeVisitor to SubstringTreeVisitor, which is more accurate now that we aren't breaking down substrings into trigrams."
1020,https://api.github.com/repos/mozilla/dxr/pulls/328,328,JS Regex Translation,"Here's the machinery that translates DXR-flavored (Python- and PCRE-ish except without a few fancy feature like lookarounds (so far)) to JS ones we can run inside ES. Really, the only difference is that \c means something in JS's regexes but not in Python's. You can see in the tests that the ones expecting a difference are very few.
",erikrose,295816,2014-09-11T20:49:01Z,MEMBER,True,174,22,5,Powerful search for large codebases,Python,7c6c8a9ad3df424c3cf8852a3598e47bac5beafd,"Implement JsRegexVisitor, which translates from DXR-flavored regexes to JS ones.

* Rename BACKSLASH_SPECIAL_CHARS to BACKSLASH_METAS to distinguish them semantically from SubstringTreeVisitor.backslash_specials.
* Break literal_class_char into its own rule so we could visit it separately in the JsRegexVisitor and turn it into text.
* Factor out visit_class_item; it's just a lift_child.
* Tersen visit_class_contents."
1021,https://api.github.com/repos/mozilla/dxr/pulls/328,328,JS Regex Translation,"Here's the machinery that translates DXR-flavored (Python- and PCRE-ish except without a few fancy feature like lookarounds (so far)) to JS ones we can run inside ES. Really, the only difference is that \c means something in JS's regexes but not in Python's. You can see in the tests that the ones expecting a difference are very few.
",erikrose,295816,2014-09-11T20:49:01Z,MEMBER,True,174,22,5,Powerful search for large codebases,Python,93a54a7c0564f6988e056f6f2cdbfce6d32fb3cb,"Add PythonRegexVisitor, for app-side highlighting."
1022,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,9e10307c26cb02d30e87b3a7e14cdfe70bff5d02,Add trigram extraction machinery from trigrammer branch.
1023,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,a5d08fe365e6ae6bf06565a8696b1c77b7c06568,"Remove build_tree(), which was meant to use the stdlib's regex parser.

It turned out to be easier and more flexible to write our own parser than to figure theirs out."
1024,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,9b270fe1221c3d03ca6bf766455ca1bf89dec343,"Remove trigrams(). ES will do this for us; we have only to extract static strings.

And the longer the strings we extract, the better: ES's positional indices will make us even more selective than re2's nonpositional ones."
1025,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,d0d4132b207b9eef4a3619a8c600495135c1302e,"Push the trigrammer toward getting the FREE method working.

That way, we'll at least have something we can deploy, even if it isn't quite as smart as re2's full-on Cox method.

What remains to be done is to implement a visitor which spits out a JS-dialect regex and to remove strings from the SubstringTree shorter than 3 chars.

* Get simplified() to a serviceable state. At the moment, it eliminates nodes having only 1 child. This is good enough to let us distinguish interesting regexes from plain old strings, for the purpose of deciding what kind of ES query to build in PathFilter.
* Relieve the trigrammer of the responsibility of actually creating trigrams. ES is good at that. (Remove TrigramQuery and its duplicate And and Or subclasses.)
* Add glob_to_regex().
* Move regex_grammar near its visitor.
* Fix visit_quantifier(), which didn't work. Covered by test_not_coalescing_over_uselesses."
1026,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,5497d3e99ff0db48bdc3fb4e4fd0c6258caa68cf,"Sketch a PathFilter that uses the regex machinery to handle globbing.

* Add case-sensitive trigram fields for path.
* Add es_regex_filter(), which we can use for full regex queries too.
* Add a PathFilter whose callees aren't done yet and which needs highlighting but is complete enough to show what lower-level things we need to build."
1027,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,21ecc76b94ef7d4a1459215de24acfabaa877be3,Make test data longer in trigrammer tests so tests remain valid when we start optimizing away short ngrams.
1028,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,71d311e6c6eb76ee05bde3e8a08bbca6b798113f,"Make empty top-level nodes simplify down to ''.

This should make filter logic easier, since there's now only one representation of a null query."
1029,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,45f03d890606f500e862d10dc0b7f9f90b2732e0,Remove some functions we're not going to need anymore.
1030,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,8fef3cb5d6d374d1c0a141b5a1ec4e7cc3f4aabf,Filter short ngrams out of SubstringTrees.
1031,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,e3b624ac6119952085026f9c337f1aca4626737a,"Remove dead _coalesce_strings().

(I wanted it in the history in case we need it for Cox.)"
1032,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,ab9cd42750b49154b94e79de722aa2a95743641d,Bring some comments up to date.
1033,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,916a1b240b847c29d9629522593af6290d63294b,"Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.

* Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
* Add a min length arg to simplified() so we can use it to make tests more readable and writeable."
1034,https://api.github.com/repos/mozilla/dxr/pulls/327,327,Character classes,"(These are really just 2 more commits atop #325.)

Add proper, full parsing of bracketed character classes.

This will let us spit out Python and JS regexes so we can run Path- and RegexpFilters.
- Upgrade to parsimonious 0.6 for the `unwrapped_exceptions`.
- Add a min length arg to simplified() so we can use it to make tests more readable and writeable.
",erikrose,295816,2014-09-09T20:01:02Z,MEMBER,False,819,7,7,Powerful search for large codebases,Python,9e8d02d7368155ad46fc4fc891630051eb57778b,"Make Unicode char-range bounds work.

Add some shamefully missing docstrings to the visitor.

backslash_hex does not actually match anything outside 0..256, but it's ideologically better to return unicode, so I replaced the chr with unichr there as well. (I'm unable to make re.match(r'\x2014', <anything>) match. If I could, I'd expand the definition of the rule to behave the same.)"
1035,https://api.github.com/repos/mozilla/dxr/pulls/326,326,Here's an Ubuntu 14.04 Vagrantfile,"This should fix vbguest issues in bug-1001567 as well.
",jamonation,328553,2014-09-08T19:09:47Z,CONTRIBUTOR,False,21,22,4,Powerful search for large codebases,Python,66683cc5a9dea71163e78ccd398f21da8d7a011f,"Closes bug 1064411: upgrade VM to 14.04; make guest additions update run on every 'vagrant up'

Adding explicit URL to box for older Vagrant versions, e.g. ci.mozilla.org

Only use the base Vagrant image from Ubuntu"
1036,https://api.github.com/repos/mozilla/dxr/pulls/326,326,Here's an Ubuntu 14.04 Vagrantfile,"This should fix vbguest issues in bug-1001567 as well.
",jamonation,328553,2014-09-08T19:09:47Z,CONTRIBUTOR,False,21,22,4,Powerful search for large codebases,Python,d04eb505014120d9ab658a4ed7a7c2c271c8724e,Adding some vbguest plugin detection and removing extra --provision call
1037,https://api.github.com/repos/mozilla/dxr/pulls/326,326,Here's an Ubuntu 14.04 Vagrantfile,"This should fix vbguest issues in bug-1001567 as well.
",jamonation,328553,2014-09-08T19:09:47Z,CONTRIBUTOR,False,21,22,4,Powerful search for large codebases,Python,f8d7d8ac23bacdfee7f0937bdf3b5d8bb67993bb,spurious commit to poke jenkins
1038,https://api.github.com/repos/mozilla/dxr/pulls/326,326,Here's an Ubuntu 14.04 Vagrantfile,"This should fix vbguest issues in bug-1001567 as well.
",jamonation,328553,2014-09-08T19:09:47Z,CONTRIBUTOR,False,21,22,4,Powerful search for large codebases,Python,f892d4a6c2acfe622ccc1478abd645eedd5d3931,tidying up locales generation
1039,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,9e10307c26cb02d30e87b3a7e14cdfe70bff5d02,Add trigram extraction machinery from trigrammer branch.
1040,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,a5d08fe365e6ae6bf06565a8696b1c77b7c06568,"Remove build_tree(), which was meant to use the stdlib's regex parser.

It turned out to be easier and more flexible to write our own parser than to figure theirs out."
1041,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,9b270fe1221c3d03ca6bf766455ca1bf89dec343,"Remove trigrams(). ES will do this for us; we have only to extract static strings.

And the longer the strings we extract, the better: ES's positional indices will make us even more selective than re2's nonpositional ones."
1042,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,d0d4132b207b9eef4a3619a8c600495135c1302e,"Push the trigrammer toward getting the FREE method working.

That way, we'll at least have something we can deploy, even if it isn't quite as smart as re2's full-on Cox method.

What remains to be done is to implement a visitor which spits out a JS-dialect regex and to remove strings from the SubstringTree shorter than 3 chars.

* Get simplified() to a serviceable state. At the moment, it eliminates nodes having only 1 child. This is good enough to let us distinguish interesting regexes from plain old strings, for the purpose of deciding what kind of ES query to build in PathFilter.
* Relieve the trigrammer of the responsibility of actually creating trigrams. ES is good at that. (Remove TrigramQuery and its duplicate And and Or subclasses.)
* Add glob_to_regex().
* Move regex_grammar near its visitor.
* Fix visit_quantifier(), which didn't work. Covered by test_not_coalescing_over_uselesses."
1043,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,5497d3e99ff0db48bdc3fb4e4fd0c6258caa68cf,"Sketch a PathFilter that uses the regex machinery to handle globbing.

* Add case-sensitive trigram fields for path.
* Add es_regex_filter(), which we can use for full regex queries too.
* Add a PathFilter whose callees aren't done yet and which needs highlighting but is complete enough to show what lower-level things we need to build."
1044,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,21ecc76b94ef7d4a1459215de24acfabaa877be3,Make test data longer in trigrammer tests so tests remain valid when we start optimizing away short ngrams.
1045,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,71d311e6c6eb76ee05bde3e8a08bbca6b798113f,"Make empty top-level nodes simplify down to ''.

This should make filter logic easier, since there's now only one representation of a null query."
1046,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,45f03d890606f500e862d10dc0b7f9f90b2732e0,Remove some functions we're not going to need anymore.
1047,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,8fef3cb5d6d374d1c0a141b5a1ec4e7cc3f4aabf,Filter short ngrams out of SubstringTrees.
1048,https://api.github.com/repos/mozilla/dxr/pulls/325,325,"Whip trigram extractor into shape, and sketch PathFilter","In order to do regex queries, we need to extract static substrings from the users' regexes. We then bang those against trigram indices in ES to (hopefully drastically) narrow down the document set we need to examine. Finally, we run the actual regex against those.

Previously, on a ""trigrammer"" branch, we were extracting actual trigrams from the regex. It turns out we don't need to do that: ES is more than happy to split longer strings into trigrams itself. In addition, that gives us a selectivity boost: the relative positions of the trigrams is something ES can deliver. Thus, we here take the old trigrammer machinery from the ""trigrammer"" branch and adapt it to return longer strings.

The most interesting work in this PR is the simplified() method of SubstringTree. This takes a tree of boolean nodes (Ands and Ors and, at the leaves, strings) and does some easy simplifications. For example, the regex `yo|hello|there` would emit `Or(['yo', 'hello', 'there'])`, simplified to `Or(['hello', 'there'])` since ""yo"" is too short to be any use against a trigram index. Ands come into play when there is a wildcard of some kind that we can't (or aren't yet smart enough to) make use of between two other, nonoptional strings: for example, `hello+ there` might become `And(['hello', ' there'])` (or `And(['hello', 'o there'])` if we were really smart.

es_regex_filter and PathFilter, the other attractions, are sketches, not yet intended to be complete, but they are useful as an illustration of why the lower-level stuff is the way it is, so I want them committed together.

I also deleted a lot of dead code. There still remain some parts of the Cox method I half started on; they live because I do intend to go in that direction eventually, probably post-launch, to enable us to extract strings more intelligently.
",erikrose,295816,2014-09-05T20:39:58Z,MEMBER,True,696,4,5,Powerful search for large codebases,Python,e3b624ac6119952085026f9c337f1aca4626737a,"Remove dead _coalesce_strings().

(I wanted it in the history in case we need it for Cox.)"
1049,https://api.github.com/repos/mozilla/dxr/pulls/324,324,Register Needle Filters for clang plugin,"Have the filters show up in the interface.
The current implementation uses an empty filter.

The next step is to write a proper filter for elastic search.
",mvcisback,388723,2014-09-05T18:24:22Z,CONTRIBUTOR,True,145,66,2,Powerful search for large codebases,Python,10093271f1c48c00e22d324a8c4b7f5fde58eda7,Register noop Needle Filters.
1050,https://api.github.com/repos/mozilla/dxr/pulls/324,324,Register Needle Filters for clang plugin,"Have the filters show up in the interface.
The current implementation uses an empty filter.

The next step is to write a proper filter for elastic search.
",mvcisback,388723,2014-09-05T18:24:22Z,CONTRIBUTOR,True,145,66,2,Powerful search for large codebases,Python,4b8025dcc47bee5cc983a02ea0039f0e55e19d18,implemented using basic class constructs....not very happy about this
1051,https://api.github.com/repos/mozilla/dxr/pulls/324,324,Register Needle Filters for clang plugin,"Have the filters show up in the interface.
The current implementation uses an empty filter.

The next step is to write a proper filter for elastic search.
",mvcisback,388723,2014-09-05T18:24:22Z,CONTRIBUTOR,True,145,66,2,Powerful search for large codebases,Python,acce89639c8779921ac8711fe270d198ac08c52c,"based off of Filter, removed explicit __init__, intermediate lang field"
1052,https://api.github.com/repos/mozilla/dxr/pulls/323,323,Stop disappearance of error bubble. Fixes bug 1054022,"This commit fixes bug 1054022.
https://bugzilla.mozilla.org/show_bug.cgi?id=1054022

Thanks,
Naveen
",nave-mvn,5049603,2014-08-30T05:22:42Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,6a7127459d3c4661017641f1a794791cd32ec4f1,Stop disappearance of error bubble. Fixes bug 1054022
1053,https://api.github.com/repos/mozilla/dxr/pulls/322,322,Fixing stupid error I introduced...,"I didn't reasign the value of rangesArray after the call to concat. Fixed it.
",vedadux,6968225,2014-08-29T17:38:57Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,e3b02299eab3a37eb2374bdc1c91d9fc99046901,"Fixing stupid error I introduced...
I didn't reasign the value of rangesArray after the call to concat. Fixed it."
1054,https://api.github.com/repos/mozilla/dxr/pulls/320,320,split type search from function sig search,,mvcisback,388723,2014-08-22T22:58:08Z,CONTRIBUTOR,True,31,29,2,Powerful search for large codebases,Python,e23322861fb2f7d6e3215e9c83224a4492e36d9f,split type search from function sig search
1055,https://api.github.com/repos/mozilla/dxr/pulls/319,319,Redoing code-highlighter.js and dxr.css for better file display ,"## Fixes bugs: 1006108 and 1055142
- Here is how things used to work:
  The file would be displayed as a table with two overlaying columns. Clicking the line number would change that line numbers background color, making it seem as if the user highlighted the code.
- That lead following problems:
  - long lines would be only partially highlighted
  - line numbers with more than 3 digits aren't displayed properly
- I fixed the above problems by standardisning the columns in a similar fashion like search results and tweaking the js to highlight both line number and code.
- The auto scrolling didn't work properly because of bad handling of strings and integers. I cleared that up and changed the way the url's are changed and processed.
## Changes to code-highlighter.js
- Added function sortRangeAsc which sorts selection ranges both as strings or arrays.
- In function generateSelectedArrays:
  - Changed the way multiSelected and singleSelected get their value (employed jQuery).
  - Made the function return sortedsingleLinesArray and  rangesArray.
- In function setWindowHash:
  - Removed variables singles and ranges, which are no longer used for the display of the hash.
  - Added a loop that eliminates singleLines which are already a part of a range.
  - Added a loop that adds lines and ranges to the hash in order:
    - example now:    #12-15,17,20-25,30-33,42
    - example before: #17,42,12-15,20-25,30-33
- In function getSortedHashLines:
  - Seperated reCleanup. Added cleaning of whitespace upfront.
  - Changed the way ranges are sorted form string sorting to newly added function sortRangeAsc.
  - Changed the way a range is added to rangesArray in order to account for backward ranges (150-120 and such).
  - Made firstRange take an array as value instead of a string so that it's value can be compared and scrolling made possible.
  - Modified the way highlights is cleaned form trash.
  - If something slips through the process above added testing for NaN in highlights.
  - Repaired the if block that determines the position to be scrolled to.
  - Made the function return singleLinesArray and rangesArray for later convenience.
- Big changes to the .line-number onClick events:
  - Moved the value assignment for variables to take place before the if block to avoid repetition.
  - lastSelected is now lastSelectedLine and includes both a .line-number and code element.
  - selected is replaced by selectedLineNums and selectedLineCode.
",vedadux,6968225,2014-08-22T17:37:41Z,CONTRIBUTOR,True,102,86,2,Powerful search for large codebases,Python,bb690f4ab91955f3f94092ec4d2fe9d67cbdfdb9,"Redoing code-highlighter.js and dxr.css for better file display
Fixes bugs: 1006108 and 1055142
Here is how things used to work:
The file would be displayed as a table with two overlaying columns. Clicking the line number would change that line numbers background color, making it seem as if the user highlighted the code.
That lead following problems:
- long lines would be only partially highlighted
- line numbers with more than 3 digits aren't displayed properly
I fixed the above problems by standardisning the columns in a similar fashion like search results and tweaking the js to highlight both line number and code.
The auto scrolling didn't work properly because of bad handling of strings and integers. I cleared that up and changed the way the url's are changed and processed.
-----Changes to code-highlighter.js-----
Added function sortRangeAsc which sorts selection ranges both as strings or arrays.
In function generateSelectedArrays:
Changed the way multiSelected and singleSelected get their value (employed jQuery).
Made the function return sortedsingleLinesArray and  rangesArray.
In function setWindowHash:
Removed variables singles and ranges, which are no longer used for the display of the hash.
Added a loop that eliminates singleLines which are already a part of a range.
Added a loop that adds lines and ranges to the hash in order
- example now:    #12-15,17,20-25,30-33,42
- example before: #17,42,12-15,20-25,30-33
In function getSortedHashLines:
Seperated reCleanup. Added cleaning of whitespace upfront.
Changed the way ranges are sorted form string sorting to newly added function sortRangeAsc.
Changed the way a range is added to rangesArray in order to account for backward ranges (150-120 and such).
Made firstRange take an array as value instead of a string so that it's value can be compared and scrolling made possible.
Modified the way highlights is cleaned form trash.
If something slips through the process above added testing for NaN in highlights.
Repaired the if block that determines the position to be scrolled to.
Made the function return singleLinesArray and rangesArray for later convenience.
Big changes to the .line-number onClick events:
Moved the value assignment for variables to take place before the if block to avoid repetition.
lastSelected is now lastSelectedLine and includes both a .line-number and code element.
selected is replaced by selectedLineNums and selectedLineCode."
1056,https://api.github.com/repos/mozilla/dxr/pulls/319,319,Redoing code-highlighter.js and dxr.css for better file display ,"## Fixes bugs: 1006108 and 1055142
- Here is how things used to work:
  The file would be displayed as a table with two overlaying columns. Clicking the line number would change that line numbers background color, making it seem as if the user highlighted the code.
- That lead following problems:
  - long lines would be only partially highlighted
  - line numbers with more than 3 digits aren't displayed properly
- I fixed the above problems by standardisning the columns in a similar fashion like search results and tweaking the js to highlight both line number and code.
- The auto scrolling didn't work properly because of bad handling of strings and integers. I cleared that up and changed the way the url's are changed and processed.
## Changes to code-highlighter.js
- Added function sortRangeAsc which sorts selection ranges both as strings or arrays.
- In function generateSelectedArrays:
  - Changed the way multiSelected and singleSelected get their value (employed jQuery).
  - Made the function return sortedsingleLinesArray and  rangesArray.
- In function setWindowHash:
  - Removed variables singles and ranges, which are no longer used for the display of the hash.
  - Added a loop that eliminates singleLines which are already a part of a range.
  - Added a loop that adds lines and ranges to the hash in order:
    - example now:    #12-15,17,20-25,30-33,42
    - example before: #17,42,12-15,20-25,30-33
- In function getSortedHashLines:
  - Seperated reCleanup. Added cleaning of whitespace upfront.
  - Changed the way ranges are sorted form string sorting to newly added function sortRangeAsc.
  - Changed the way a range is added to rangesArray in order to account for backward ranges (150-120 and such).
  - Made firstRange take an array as value instead of a string so that it's value can be compared and scrolling made possible.
  - Modified the way highlights is cleaned form trash.
  - If something slips through the process above added testing for NaN in highlights.
  - Repaired the if block that determines the position to be scrolled to.
  - Made the function return singleLinesArray and rangesArray for later convenience.
- Big changes to the .line-number onClick events:
  - Moved the value assignment for variables to take place before the if block to avoid repetition.
  - lastSelected is now lastSelectedLine and includes both a .line-number and code element.
  - selected is replaced by selectedLineNums and selectedLineCode.
",vedadux,6968225,2014-08-22T17:37:41Z,CONTRIBUTOR,True,102,86,2,Powerful search for large codebases,Python,6bf642111a262db9eb6628dab531d19c5e29c3a1,Removing commented code...
1057,https://api.github.com/repos/mozilla/dxr/pulls/319,319,Redoing code-highlighter.js and dxr.css for better file display ,"## Fixes bugs: 1006108 and 1055142
- Here is how things used to work:
  The file would be displayed as a table with two overlaying columns. Clicking the line number would change that line numbers background color, making it seem as if the user highlighted the code.
- That lead following problems:
  - long lines would be only partially highlighted
  - line numbers with more than 3 digits aren't displayed properly
- I fixed the above problems by standardisning the columns in a similar fashion like search results and tweaking the js to highlight both line number and code.
- The auto scrolling didn't work properly because of bad handling of strings and integers. I cleared that up and changed the way the url's are changed and processed.
## Changes to code-highlighter.js
- Added function sortRangeAsc which sorts selection ranges both as strings or arrays.
- In function generateSelectedArrays:
  - Changed the way multiSelected and singleSelected get their value (employed jQuery).
  - Made the function return sortedsingleLinesArray and  rangesArray.
- In function setWindowHash:
  - Removed variables singles and ranges, which are no longer used for the display of the hash.
  - Added a loop that eliminates singleLines which are already a part of a range.
  - Added a loop that adds lines and ranges to the hash in order:
    - example now:    #12-15,17,20-25,30-33,42
    - example before: #17,42,12-15,20-25,30-33
- In function getSortedHashLines:
  - Seperated reCleanup. Added cleaning of whitespace upfront.
  - Changed the way ranges are sorted form string sorting to newly added function sortRangeAsc.
  - Changed the way a range is added to rangesArray in order to account for backward ranges (150-120 and such).
  - Made firstRange take an array as value instead of a string so that it's value can be compared and scrolling made possible.
  - Modified the way highlights is cleaned form trash.
  - If something slips through the process above added testing for NaN in highlights.
  - Repaired the if block that determines the position to be scrolled to.
  - Made the function return singleLinesArray and rangesArray for later convenience.
- Big changes to the .line-number onClick events:
  - Moved the value assignment for variables to take place before the if block to avoid repetition.
  - lastSelected is now lastSelectedLine and includes both a .line-number and code element.
  - selected is replaced by selectedLineNums and selectedLineCode.
",vedadux,6968225,2014-08-22T17:37:41Z,CONTRIBUTOR,True,102,86,2,Powerful search for large codebases,Python,99b52d2600c2bc94356f8f591b62e04c219e0790,"Minor changes to code style and highlight length
Added rule that makes .code code elements have full width.
Added functon stringToRange which eliminates the need for polymorphic version of sortRangeAsc.
Fixed minor style issues and variable declaration.
Tweaked the way ranges are handled and added to rangesArray for better performance."
1058,https://api.github.com/repos/mozilla/dxr/pulls/318,318,"Improve highlight API, fix an env-building bug, and finish TextFilter.","These are logically separate commits; I recommend reviewing them a commit at a time.
",erikrose,295816,2014-08-22T04:59:12Z,MEMBER,True,67,45,4,Powerful search for large codebases,Python,846c82ef680249e0fc99b4fac75616bf12531ec4,"Improve the highlighting API.

Implement separate fields' highlighting as separate methods, because I can see other, more general kinds of highlighting someday existing. For example, if we had a filter that limited results to just folders and ran ``path:bar OR (folders:yes path:foo)``, I would expect the folder icon to swell up in results that matched the second clause of the OR. A highlighter for that would be likely to return a bool (meaning ""yes, swell the icon""), not a string. It becomes less weird to have separate methods for separate signatures rather than multiplexing them all into one method and dispatching amongst behaviors with a highlight_field attr.

A bonus (but not a decision-maker) is that a single filter can once again highlight multiple fields. I cannot forsee any such cases.

Also, add a default of domain=LINE to the Filter class. We might as well have a default value there to save code in some cases, and this will be the most common one by far."
1059,https://api.github.com/repos/mozilla/dxr/pulls/318,318,"Improve highlight API, fix an env-building bug, and finish TextFilter.","These are logically separate commits; I recommend reviewing them a commit at a time.
",erikrose,295816,2014-08-22T04:59:12Z,MEMBER,True,67,45,4,Powerful search for large codebases,Python,0f66bd07655753c967769f91dc6688bd53bba890,Make the build env the union of all the tree-indexers' envs. Whoops.
1060,https://api.github.com/repos/mozilla/dxr/pulls/318,318,"Improve highlight API, fix an env-building bug, and finish TextFilter.","These are logically separate commits; I recommend reviewing them a commit at a time.
",erikrose,295816,2014-08-22T04:59:12Z,MEMBER,True,67,45,4,Powerful search for large codebases,Python,50c39da10ac95b1e1cfb72f4876b5284beb1d8a6,Implement negation for TextFilter.
1061,https://api.github.com/repos/mozilla/dxr/pulls/318,318,"Improve highlight API, fix an env-building bug, and finish TextFilter.","These are logically separate commits; I recommend reviewing them a commit at a time.
",erikrose,295816,2014-08-22T04:59:12Z,MEMBER,True,67,45,4,Powerful search for large codebases,Python,f6762483aaf33f7c0626aa7189b193c0c8b12ef2,"Implement case-insensitive text searching.

Decided to add a second trigram index rather than try to brute-force the lowercase one with JS: the number of documents could easily get very large with negated terms, like if a user typed `-print` first on the way to `-print int`.

We'll probably need some length-based governors or something eventually regardless."
1062,https://api.github.com/repos/mozilla/dxr/pulls/317,317,Removed additional groupby,"After discussion with Erik, I couldn't rationalize why the additional group_by was necessary.
The tl;dr is we no longer need it....so I removed it
",mvcisback,388723,2014-08-21T23:47:32Z,CONTRIBUTOR,True,13,17,3,Powerful search for large codebases,Python,5b4063c70244f2ed66b8d5a02dec63e9a65048e4,removed additional groupby
1063,https://api.github.com/repos/mozilla/dxr/pulls/316,316,Fix locale issue,"When you typo in the shell in vagrant, it'll provide better helpful text
rather than giving you locale errors.

Based on Ian's fix in fjord.

Mostly cosmetic. Just makes ""vagrant ssh"" a little easier to use for people who fat-finger things like me.

r?
",willkg,820826,2014-08-21T18:59:13Z,MEMBER,True,4,0,1,Powerful search for large codebases,Python,5e4d0ea794a599dbc300109c7b6fef035edc7da2,"Fix locale issue

When you typo in the shell in vagrant, it'll provide better helpful text
rather than giving you locale errors.

Based on Ian's fix in fjord."
1064,https://api.github.com/repos/mozilla/dxr/pulls/315,315,Type search Query DSL preprocessed for easy searching,"Does not currently distinguish between input and output.
Will be in next PR
",mvcisback,388723,2014-08-20T18:10:56Z,CONTRIBUTOR,False,49,5,4,Powerful search for large codebases,Python,11aae6e8a55adf1c98987b57c6268bfabebe3ac9,type search Query DSL preprocessed for easy searching
1065,https://api.github.com/repos/mozilla/dxr/pulls/314,314,[bug 1030311] Port query machinery to ES. Add a basic TextFilter to prov...,"...e it works.

You can now run dxr-serve and do find-as-you-type string queries. Direct search is yet to come.
- Remove SQL profiling support from query machinery. Add support for path highlighting.
- Add TextFilter. Works for basic text searches. Still needs case sensitivity and negation.
- Delete a lot of dead code from extents module.
- Change highlight() (neé highlight_line()) to operate on unicode (which everything is now) and take overlapping and unordered extents (which happens when they're drawn from disparate plugins).
- Change the 'type' key of query terms to 'name' for consistency with the 'name' attr of Filter.
- Add description attr to Filter contract.
- Add field arg to Filter.highlight() to save redundant computation and make query module code shorter.
- Add abstract Filter class.

@willkg: Here's how to review it. Sorry you had to jump in at the deep end, and thanks for trading reviews with me!

Most of the tests are still supposed to fail, though `nosetests -s tests/test_strings.py:test_highlight` and the new `nosetests -s tests/test_core_plugin.py` should pass. (Most of the tests test filters that have yet to be rewritten for ES.)

Basically, I'm just looking to avert disaster in this review: did I add any gaping security holes? We don't have any PII or anything in DXR, but if somebody could bust through and read arbitrary files off the box, that would be bad. I don't see how they could, but you never know! :-)

I'm not happy with how I handled the ES pool (creating redundant ones and throwing them away) in the test harness and plan to fix that down the line. But right now, this patch blocks Marcell integration-testing his own code.

Thanks again, and sorry for the size of this commit.
",erikrose,295816,2014-08-20T18:09:54Z,MEMBER,True,284,401,9,Powerful search for large codebases,Python,dfa521f05c2cbdf60f8d2c1f78451c3c53a71139,"[bug 1030311] Port query machinery to ES. Add a basic TextFilter to prove it works.

You can now run dxr-serve and do find-as-you-type string queries. Direct search is yet to come.

* Remove SQL profiling support from query machinery. Add support for path highlighting.
* Add TextFilter. Works for basic text searches. Still needs case sensitivity and negation.
* Delete a lot of dead code from extents module.
* Change highlight() (neé highlight_line()) to operate on unicode (which everything is now) and take overlapping and unordered extents (which happens when they're drawn from disparate plugins).
* Change the 'type' key of query terms to 'name' for consistency with the 'name' attr of Filter.
* Add description attr to Filter contract.
* Add field arg to Filter.highlight() to save redundant computation and make query module code shorter.
* Add abstract Filter class."
1066,https://api.github.com/repos/mozilla/dxr/pulls/313,313,register missing needles for integration testing,"Also fixes issue in walk_types for empty types
",mvcisback,388723,2014-08-18T23:46:56Z,CONTRIBUTOR,True,6,1,1,Powerful search for large codebases,Python,c8db15c0ef1736aa4a5527c20802d2afea4797b4,register missing needles for integration testing
1067,https://api.github.com/repos/mozilla/dxr/pulls/313,313,register missing needles for integration testing,"Also fixes issue in walk_types for empty types
",mvcisback,388723,2014-08-18T23:46:56Z,CONTRIBUTOR,True,6,1,1,Powerful search for large codebases,Python,f0708d2091a5a074a028194557776c661d7b73c7,switch to get
1068,https://api.github.com/repos/mozilla/dxr/pulls/312,312,don't crash if no warnings present...,,mvcisback,388723,2014-08-18T22:18:01Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,b55c55fb5a262fd48256c7b25dab898c01b1e9b8,don't crash if no warnings present...
1069,https://api.github.com/repos/mozilla/dxr/pulls/311,311,Make sure that the Diff link in the navigation menu doesn't pick up the style for diff files,"This fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1055131
",ehsan,168508,2014-08-18T17:52:07Z,MEMBER,False,3,0,1,Powerful search for large codebases,Python,b5a6ed8b65096d17016cf4476250ff3822896901,Bug 1055131 - Make sure that the Diff link in the navigation menu doesn't pick up the style for diff files
1070,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,684e18e66d20397a6300c8aa24e315d9c116c4fb,Commiting my changes to the fork.
1071,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,0c916383a918cd12a8a4249eb69eadd5bb63c5e5,Update dxr.css
1072,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,2a7e2e789a9d1c904f0ac69e394f73e4190af2a9,"Update dxr.js

Deleted the old unused function"
1073,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,aee1017eb92f5b37823360be7c33c6a4a29de894,Merge pull request #1 from mozilla/master
1074,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,60c0bd7b12c53af8302cdf64f6a3de57075c6b3e,Update dxr.css
1075,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,beef9c0a9bdd3c3ab71593c853b3a51e31add261,Update dxr.css
1076,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,2d18556e21a093c2bde478d0b6c2d3d8a6bd7087,Added a .css class for icons and a coresponding css.png into the icons directory.
1077,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,40e776f276d0b99dbfa2e969fc77eead93e66f11,"Fixing missing css rule and a few other things
I fixed the dissapearing .c icon class and it's appearance in other places where it shouldn't.
I changed a great bit of icons.css since it had outdated css rules.
Moved .icon-container there and applied rules that are common for all icons to it.
Changed folder.html in order to load new icon classes instead of a style property."
1078,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,4c5f610dbf3d674b91d95b72a2e3e17cfb5ea17e,"Fixing small details.
Moved the inline style form path_line.html into dxr.css as `.result-head a`.
Removed spaces from <a> in path_line.html"
1079,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,92031fd11ca059873a1982747a3e4cd7e8cf3382,Merge branch 'master' of https://github.com/mozilla/dxr
1080,https://api.github.com/repos/mozilla/dxr/pulls/310,310," Fixing bugs: 1053423, 1052524 and 965652 ","- **For 965652:**
  - dxr.css :
  - Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
- **For 1052524:**
  - file.html :
  - Added the .icon class to all anchors in the panel
  - dxr.css :
  - Removed padding form (.panel section a) since it blocks the added .icon class
- **For 1053423:**
  - context_menu.html :
  - Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
  - dxr.css :
  - Removed padding from (.context-menu a) since it blocks the added .icon class
  - icons.css :
  - Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
- **Other:**
  - Fixed .build in icons.css that I missed it the last time.
  - Added comments in icons.css in order to show rearanged sections.
  - Added a lot missing icon classes which are referenced in .panel and .context-menu .
  - Since the .panel icons that are always shown are probably going to be redone they are commented out until the time has come.
- That's about it. Will mention if I find something else.
",vedadux,6968225,2014-08-17T16:49:31Z,CONTRIBUTOR,True,83,32,4,Powerful search for large codebases,Python,567ccb97d6aae937ee6dccc26f9186fa2ace0d7b,"Fixing bugs: 1053423, 1052524 and 965652
For 965652:
	dxr.css :
	Added a rule for .code code a in order to show availability of context-menus but limited in order not to overwrite a rule somewhere else.
For 1052524:
	file.html :
	Added the .icon class to all anchors in the panel
	dxr.css :
	Removed padding form (.panel section a) since it blocks the added .icon class
For 1053423:
	context_menu.html :
	Added the .icon class to all anchors in the list in order to have a pseudoparent class and eliminate a lot of repeating in icons.css
	dxr.css :
	Removed padding from (.context-menu a) since it blocks the added .icon class
	icons.css :
	Made a lot of changes and removed the repeating rules for background since they are no longer needed because of the .icon class
Other:
Fixed .build in icons.css that I missed it the last time.
Added comments in icons.css in order to show rearanged sections.
Added a lot missing icon classes which are referenced in .panel and .context-menu .
Since the .panel icons that are always shown are probably going to be redone they are commented out untill the time has come.
That's about it. Will mention if I find something else."
1081,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,bf7c893f11d3f3d32007370b8a6309146a6de9c4,wrote scaffolding for filters
1082,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,afbedfdd16223587601fc94a46812bbb1621d3fc,added language parameter
1083,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,2bb59b09e324cf4a1222c85cab1fc5aecf400b12,reimplemented needles with line span information built in
1084,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,9a1e476774d17a35e2de047c5d05cd7bc4a1631c,Removed parens and raise UnOrderedRowError
1085,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,f035cb63104f6a19d8d107fe7d34a2f24be32a84,rough shape of filter
1086,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,00de0dc6749d068f09f28987dfbb83c486722f12,switched to dictionary representation
1087,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,b0383077d3a0ecccd3079972467239c56a36d274,sorted output and wrap in contents
1088,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,b2371a6e66c59e2d0b7681aed5b14b12d3a335bf,typos!
1089,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,b88c3389fcbe971cb3dfd966be5953cdf6d10c38,moved filters out to their own file + added descriptions
1090,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,8dd1cfe7e77b3bb1576bdca9df2a6f3f3d5b9e91,pylint + proper filter
1091,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,c72e6020ce217fbb93eee373eed0e805ad4a983e,making sure Filters are registered
1092,https://api.github.com/repos/mozilla/dxr/pulls/309,309,Filter Scaffolding + Needles now support column spans,,mvcisback,388723,2014-08-15T18:32:50Z,CONTRIBUTOR,True,135,31,4,Powerful search for large codebases,Python,f4b817aae13b8217e08e347a6c24091c7d45b24a,"added description for filter, and match api in ES branch"
1093,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,f15ac3651613f7671b8317232f964fd6a928da53,"Move format file inside the dxr package so the indexer can get at it using pkg_resources.

Correct the name of the readme so it gets included in the package."
1094,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,2d057e5396c3550fb91b6c1b0b65a373d6da1474,"Remove test_es, which was really more of a spike than a test."
1095,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,bd94262537ce0d39049dab3b52e3367248adf88e,"Make test harness ES-savvy.

As a bonus, it now calls build_instance() directly rather than shelling out to dxr-build.

Tell all the test config files to name their ES indices starting with ""dxr_test_"". We'll remove this and a lof ot other boilerplate when we refactor the config system.

Replace ES_INDEX with ES_ALIASES in the request-time config file. We don't need to know the index names, but we do need to know one alias per tree."
1096,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,3cc0fcbaf827e100c19c9e371ca0dcf292310ae6,"Remove Htmlifier mock, which is no longer needed with the new plugin API."
1097,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,9cc718427bd42d0e879361760742388c9ba8be11,Change ad hoc TreeToIndex creation to be less closure-ish so those TTIs can traverse process boundaries.
1098,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,8e6288e2c41923845988f28a41dea419594afc7f,"ES-ify the build pipeline. Switch from line-based refs and regions to plain offset-based.

build_instance() now targets both an FS folder (as before) and an ES index. This is a temporary measure. It also uses ES aliases to swap the new index in for any old one when it's done.

Break up build_instance() a little.

I believe I've preserved most of our wacky debugging config options, like disable_workers and skip_stages. One difference in behavior is that a half-built ES index gets deleted iff there's an exception before we finish indexing. Otherwise, they'd just accumulate forever.

No longer swallow IOErrors and such while walking the source tree we're indexing.

Keep ignoring binary files for now; that needn't block deploying ES.

Start expecting refs and regions to be not by-line. This lets us avoid rewriting major, super-hairy portions of the build pipeline (like tag_boundaries), plus it makes most plugins easier to write. We sacrifice theoretical performance optimizations possible with fanciful plugins that really do process a line at a time. Ported urllink, pygmentize, and buglink, and they all got shorter."
1099,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,5637276c5330394a707146e4d0d38a33eaa352e4,Make sure core plugin gets into enabled_plugins.
1100,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,5c7bfd77651054b0b992ae5a6525c956258462a9,"Depend on pyelasticsearch 0.7.1.

We need this new version for the update_aliases() call."
1101,https://api.github.com/repos/mozilla/dxr/pulls/308,308,Port the build pipeline and test harness to ES. Fix bug 1030309.,"Yet to come: request-time dir listing rendering. Right now, you can't see folder listings, but files are fine.
",erikrose,295816,2014-08-12T21:20:31Z,MEMBER,True,330,361,30,Powerful search for large codebases,Python,d64ca9089415a52a907b80cd5880b6af0202c026,Use funcy.suppress() to save a few lines.
1102,https://api.github.com/repos/mozilla/dxr/pulls/306,306,Add direct query capability for macros/typedefs. Fixes bug 1033677.,"This commit fixes the bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1033677. Thanks.
",nave-mvn,5049603,2014-08-09T05:39:41Z,CONTRIBUTOR,True,151,20,2,Powerful search for large codebases,Python,dafa73d4565f731e5301f97b67f06738e3abdbb5,Add direct query capability for macros/typedefs. Fixes bug 1033677.
1103,https://api.github.com/repos/mozilla/dxr/pulls/306,306,Add direct query capability for macros/typedefs. Fixes bug 1033677.,"This commit fixes the bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1033677. Thanks.
",nave-mvn,5049603,2014-08-09T05:39:41Z,CONTRIBUTOR,True,151,20,2,Powerful search for large codebases,Python,6c23c31dfd592df99beee342ac3eeb84abc31bef,"Merge branch 'master' of github.com:mozilla/dxr into macros-direct-result

# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit."
1104,https://api.github.com/repos/mozilla/dxr/pulls/306,306,Add direct query capability for macros/typedefs. Fixes bug 1033677.,"This commit fixes the bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1033677. Thanks.
",nave-mvn,5049603,2014-08-09T05:39:41Z,CONTRIBUTOR,True,151,20,2,Powerful search for large codebases,Python,129569afb5fb755e7238a1920641a9d27ba795b5,Add test for case sensitivity precedence and separate test case for macros/typedefs
1105,https://api.github.com/repos/mozilla/dxr/pulls/306,306,Add direct query capability for macros/typedefs. Fixes bug 1033677.,"This commit fixes the bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1033677. Thanks.
",nave-mvn,5049603,2014-08-09T05:39:41Z,CONTRIBUTOR,True,151,20,2,Powerful search for large codebases,Python,ad6035494041bec2f3bb65c50770c271a2990700,Merge branch 'master' of github.com:mozilla/dxr into macros-direct-result
1106,https://api.github.com/repos/mozilla/dxr/pulls/306,306,Add direct query capability for macros/typedefs. Fixes bug 1033677.,"This commit fixes the bug : https://bugzilla.mozilla.org/show_bug.cgi?id=1033677. Thanks.
",nave-mvn,5049603,2014-08-09T05:39:41Z,CONTRIBUTOR,True,151,20,2,Powerful search for large codebases,Python,bb198a4f6eabc6cf7767569fcc553893e7ebc4d4,Add new tests for multiple matches and raise SkipTest on failing tests
1107,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,684e18e66d20397a6300c8aa24e315d9c116c4fb,Commiting my changes to the fork.
1108,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,0c916383a918cd12a8a4249eb69eadd5bb63c5e5,Update dxr.css
1109,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,2a7e2e789a9d1c904f0ac69e394f73e4190af2a9,"Update dxr.js

Deleted the old unused function"
1110,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,aee1017eb92f5b37823360be7c33c6a4a29de894,Merge pull request #1 from mozilla/master
1111,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,60c0bd7b12c53af8302cdf64f6a3de57075c6b3e,Update dxr.css
1112,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,beef9c0a9bdd3c3ab71593c853b3a51e31add261,Update dxr.css
1113,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,2d18556e21a093c2bde478d0b6c2d3d8a6bd7087,Added a .css class for icons and a coresponding css.png into the icons directory.
1114,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,40e776f276d0b99dbfa2e969fc77eead93e66f11,"Fixing missing css rule and a few other things
I fixed the dissapearing .c icon class and it's appearance in other places where it shouldn't.
I changed a great bit of icons.css since it had outdated css rules.
Moved .icon-container there and applied rules that are common for all icons to it.
Changed folder.html in order to load new icon classes instead of a style property."
1115,https://api.github.com/repos/mozilla/dxr/pulls/304,304,This is as far as I've got for now fixing bug 968017,"I changed a few things:
The results from individual files are no longer seperated into div elements. They are displayes as a table all together. The .path class is no longer in use as the icon and pathline got seperated. Some td css rules are abandoned due to a new class called .left-column. Those elements are used for line numbers and file icons. In order to visually seperate the results from individual files there is now a .result-head class for tr elements. It adds some padding-top to it's td children. The pathline anchors are now displayes in blue just like in .breadcrumbs.
Additional to the changes in search.html and results.html I also had to change path_line.html in order to seperate the file icon and the path.
A new function is added in dxr.js called buildResultHead and it replaces buildPathLine. I didn't remove buildPathLine just not to break things if it is called anywhere else - contact me if you find such a place.
That's as far as I can think of.
",vedadux,6968225,2014-08-07T07:18:41Z,CONTRIBUTOR,False,149,152,8,Powerful search for large codebases,Python,4c5f610dbf3d674b91d95b72a2e3e17cfb5ea17e,"Fixing small details.
Moved the inline style form path_line.html into dxr.css as `.result-head a`.
Removed spaces from <a> in path_line.html"
1116,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,7165739f30a4d04202897200a72efed0d8c3c9b9,porting refs
1117,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,e4db56dfd715579560537a1b81b8bf1bf66b38c9,initial (UNTESTED) implementation of refs and annotations
1118,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,f58e525b0633de52f405881eef94673185efeae6,pylint run
1119,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,0ac897ca685a8053ca17969817a823a417c962b3,moved htmlifier stuff stuff into plugin
1120,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,d28d00701e22e4f30d6dd402e5c3da21e8aee270,"Commented Out Trilite!! and documented menu
This probably breaks lots of integration but...its going away anyway..."
1121,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,5fc8d1c7b8752a98f9ab153c98e54b1e7d5afc85,fixed menu doc strings
1122,https://api.github.com/repos/mozilla/dxr/pulls/303,303,Ported refs and annotations to new plugin API,"Also deleted htmlifier and indexer since this is the last feature missing...
",mvcisback,388723,2014-08-05T21:16:05Z,CONTRIBUTOR,True,308,1412,6,Powerful search for large codebases,Python,2f835f155c3ca95f80b31a8d67ac92e7e1950afa,switched not name instead of len check
1123,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,fd9e658020f568c060973f2f67e075363a6e0ab2,include child and parent class needles
1124,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,6aae0df8870b84fbf41616c46de2b1a43ed229f6,implemented member needles
1125,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,eb9f6da5207a2991e5c216ce1d7bea6b7b42edf1,needle parity!!
1126,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,fa517938ffb3d42efcbd6117a8da01384fa8dd3d,added qualname to name needles
1127,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,fc2dbbc3f1d07ea8793b64c2d9555cbd474c02d9,name and qualname needles + typo fixes
1128,https://api.github.com/repos/mozilla/dxr/pulls/302,302,"Last of the clang needles (overrides, overriden, and members)","Depends on #300
",mvcisback,388723,2014-08-04T18:57:53Z,CONTRIBUTOR,True,107,15,3,Powerful search for large codebases,Python,3c29055a91c8939daa7343495be8bdb7c07e83bb,rebased with current es branch
1129,https://api.github.com/repos/mozilla/dxr/pulls/301,301,Change folder name that was causing git checkout to fail on Windows.,"As discussed in https://github.com/mozilla/dxr/issues/297 I've renamed `tests/test_markup/code/<folder>` to `tests/test_markup/code/&folder&`. I also updated the test file accordingly. I can now checkout the repository on Windows.

The bug report also discussed the possibility of creating the test folders on the fly. Not being familiar with the code base I went for the easy solution :-|
",ClementDagneau,809403,2014-08-04T11:15:05Z,CONTRIBUTOR,True,3,3,2,Powerful search for large codebases,Python,f5dc024fc7b694ff7bea44542caf734f78501a0b,Change folder name that was causing git checkout to fail on Windows.
1130,https://api.github.com/repos/mozilla/dxr/pulls/300,300,Inheritance needles,"Implements Base and Derived needles (but under the names child and parent... )

Depends on #295
",mvcisback,388723,2014-08-01T18:35:10Z,CONTRIBUTOR,True,144,57,3,Powerful search for large codebases,Python,2c3018f7c118f79d06c7c981b3182b25acfa713f,include child and parent class needles
1131,https://api.github.com/repos/mozilla/dxr/pulls/300,300,Inheritance needles,"Implements Base and Derived needles (but under the names child and parent... )

Depends on #295
",mvcisback,388723,2014-08-01T18:35:10Z,CONTRIBUTOR,True,144,57,3,Powerful search for large codebases,Python,fbfa3b7c37a661fe188a5229dc4a41c4092db6b7,flake8 suggestions
1132,https://api.github.com/repos/mozilla/dxr/pulls/300,300,Inheritance needles,"Implements Base and Derived needles (but under the names child and parent... )

Depends on #295
",mvcisback,388723,2014-08-01T18:35:10Z,CONTRIBUTOR,True,144,57,3,Powerful search for large codebases,Python,fdd90b417c3d71e429ce2861a77920a14cd6d225,pylint + documentation
1133,https://api.github.com/repos/mozilla/dxr/pulls/300,300,Inheritance needles,"Implements Base and Derived needles (but under the names child and parent... )

Depends on #295
",mvcisback,388723,2014-08-01T18:35:10Z,CONTRIBUTOR,True,144,57,3,Powerful search for large codebases,Python,4fb73d86a501a2b65818cfdc5e0fd61cdc8ff884,PR documentation changes
1134,https://api.github.com/repos/mozilla/dxr/pulls/300,300,Inheritance needles,"Implements Base and Derived needles (but under the names child and parent... )

Depends on #295
",mvcisback,388723,2014-08-01T18:35:10Z,CONTRIBUTOR,True,144,57,3,Powerful search for large codebases,Python,9e9b626e63e187a2e73b626399434f941b5b06e7,"updated based on PR (__all__, spacing, etc)"
1135,https://api.github.com/repos/mozilla/dxr/pulls/299,299,Changed protocol for trilite submodule,"The repository can now be cloned by people using proxy servers which don't allow the use of git protocol links.

Earlier, cloning with the --recursive option lead to a clone that didn't have the trilite/ directory.
",ghost,10137,2014-07-31T19:31:57Z,NONE,True,1,1,1,Powerful search for large codebases,Python,af26f19398ae799505ae5d99689f6194a9f59e57,Changed protocol for trilite submodule
1136,https://api.github.com/repos/mozilla/dxr/pulls/298,298,Start working on type searching features.,,mvcisback,388723,2014-07-30T22:43:48Z,CONTRIBUTOR,True,116,23,5,Powerful search for large codebases,Python,5e5fdae226bcaaefdc3a8929b2d745cab1c5e0f7,"Added Type utilities, needles, and tests"
1137,https://api.github.com/repos/mozilla/dxr/pulls/298,298,Start working on type searching features.,,mvcisback,388723,2014-07-30T22:43:48Z,CONTRIBUTOR,True,116,23,5,Powerful search for large codebases,Python,47e7c60f008b4a3057d18667393596617baf70e5,vals_ not used
1138,https://api.github.com/repos/mozilla/dxr/pulls/298,298,Start working on type searching features.,,mvcisback,388723,2014-07-30T22:43:48Z,CONTRIBUTOR,True,116,23,5,Powerful search for large codebases,Python,ce17844b5d3caef6d285c234213415eb547f1546,documenting
1139,https://api.github.com/repos/mozilla/dxr/pulls/298,298,Start working on type searching features.,,mvcisback,388723,2014-07-30T22:43:48Z,CONTRIBUTOR,True,116,23,5,Powerful search for large codebases,Python,48400e0df42e5cc145cede5dda1da4be999d2fa1,removed duplicate c_type_sig from utils
1140,https://api.github.com/repos/mozilla/dxr/pulls/298,298,Start working on type searching features.,,mvcisback,388723,2014-07-30T22:43:48Z,CONTRIBUTOR,True,116,23,5,Powerful search for large codebases,Python,ad00787d02a5724fc725851d2fed24dc78fe28a1,fix documentation in c_type_sig
1141,https://api.github.com/repos/mozilla/dxr/pulls/296,296,removed networkx dependency,"Not actually needed. Might as well use builtin types
",mvcisback,388723,2014-07-29T20:50:16Z,CONTRIBUTOR,True,5,10,4,Powerful search for large codebases,Python,c29492f6756bef6fc22da172bd102b08ab99088e,removed networkx dependency
1142,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,1980ba85df1eb83bef53f999f78eb74e70c901eb,moved enviornment function from indexer to plugin
1143,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,cc3fe72dd0cb3ba167ff5ca90e6042dc1d65fbff,prototype for stateful clang indexer
1144,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,678ebd608a389c32472530992ad3709acd003ef8,scaffolding for FileToIndex
1145,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,89d50338b49929dd64c456a46026126d168a2fc9,failing on correct order...need to fix
1146,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,0f63b47a9c6c41975430f1aba17d8e1ca2635f50,incorrect order test fixed
1147,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,2f321d14171846ac5b073b7cc63a2eb41e4f4634,working on needles
1148,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,1b054dec4203bccdc2c4599b1eea6387966c6a13,setting up scaffolding for FiletoIndex
1149,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,0ea27dd9952a9cbe567f0d89552562f90e2c5d73,added mock to requirements
1150,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,bdf0bd6417490256e676c1032ee5693446b83984,scaffold for needle tests
1151,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,8dccd8cbb0d5e3cdf5dbaa4b061a1da69be85561,create fixture to share between tests
1152,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,93d417de7c5cbd86722f3731d2a594840a08db37,consolidate tests to take advantage of common fixtures
1153,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,f5d9563e177015579b75e387a10e12ef6e55c2c9,wrote some needle tests
1154,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,1080eab06f551541d30b1c4271db194d71d4d07b,added group needles helper function + tests
1155,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,0a4cf484bf6b7d605b6abde972f98baa45304b4b,registered all the needles
1156,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,c41b83311a6fc1f847ebc62734084392dd404398,implemented standard needles
1157,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,a663ae20b9bb2c325dca0b8433a2c736e39fd56f,callee and caller needles
1158,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,16a4f2e8df022fe4dbda1422058235a748721e1e,"Register Plugin, Doc fixes, fixed naming, and tree_to_index"
1159,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,db50550279b64a4640d288858b47bf8e1fa9a0a7,Raises -> Raise (PEP 257)
1160,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,34b336c487c91f16e537c60332b549fa2092904f,just sadness....pure sadness...also no picking generators
1161,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,ba5e822703fbebca5f355999f4f9c132eaaf4570,flake8!!
1162,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,7179c3d8a0d92d6fd78d3bb9130204c851222d4b,Removed test wide fixture
1163,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,942c233e283e20a7d3f63909b60c5336f86dd992,renamed default_needles -> name_needles
1164,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,2c59470d52dc23c38c6b663dc71f3f1cfc53bc0c,changed TTI -> dxr.TreeToIndex
1165,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,d49af98fb67877df142acd0272a124bf9228e529,mock slipped back into requirements.txt
1166,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,53094e85aa47a6a68c1a5d80fd26895f5cd40d84,CORRECT_ORDER not used
1167,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,8898b6ba37bfdbc863e8e5e407e52254e80b8f6c,warning tests somehow slipped through
1168,https://api.github.com/repos/mozilla/dxr/pulls/295,295,Subset of the old Clang Plugin needles,"Most needles from current clang plugin minus some of the inheritance needles.
",mvcisback,388723,2014-07-28T21:19:30Z,CONTRIBUTOR,True,277,68,5,Powerful search for large codebases,Python,89aaa96aab8ffd1e7a4ba25ebed79e3bd4611202,flake8!!
1169,https://api.github.com/repos/mozilla/dxr/pulls/294,294,Needle Utility functions for the plugins,,mvcisback,388723,2014-07-25T21:45:47Z,CONTRIBUTOR,True,90,41,3,Powerful search for large codebases,Python,0c7d20bf89220a74aa8429aea00d9a0a4cda1cf0,extracted needle utility functions
1170,https://api.github.com/repos/mozilla/dxr/pulls/294,294,Needle Utility functions for the plugins,,mvcisback,388723,2014-07-25T21:45:47Z,CONTRIBUTOR,True,90,41,3,Powerful search for large codebases,Python,3ddd733b2d2b096c46e329b53e548f4fdc0d1d2f,reimplemented and generalized + TESTS!!!!!
1171,https://api.github.com/repos/mozilla/dxr/pulls/294,294,Needle Utility functions for the plugins,,mvcisback,388723,2014-07-25T21:45:47Z,CONTRIBUTOR,True,90,41,3,Powerful search for large codebases,Python,97f5899414f36909346cc71b498b1de3a30857f5,pep8 fixes
1172,https://api.github.com/repos/mozilla/dxr/pulls/294,294,Needle Utility functions for the plugins,,mvcisback,388723,2014-07-25T21:45:47Z,CONTRIBUTOR,True,90,41,3,Powerful search for large codebases,Python,e5a8d19ec07ac4dbf030bf1213d8e82142379f1d,formating and spelling fixes
1173,https://api.github.com/repos/mozilla/dxr/pulls/294,294,Needle Utility functions for the plugins,,mvcisback,388723,2014-07-25T21:45:47Z,CONTRIBUTOR,True,90,41,3,Powerful search for large codebases,Python,503602fa37a8c98af6ca3d330511732a6e7569c7,removed period
1174,https://api.github.com/repos/mozilla/dxr/pulls/293,293,added more depth to documentation of ref menus,,mvcisback,388723,2014-07-24T22:53:23Z,CONTRIBUTOR,False,8,0,1,Powerful search for large codebases,Python,3bfa2bf0c26fe0193b36636ba235910ea62b0472,added more depth to documentation of ref menus
1175,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,e28373db89410b5a4f4ad70d9f5790ac686a4af4,name isn't actually a field...idk how that slipped in
1176,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,2ed4a73df91467d09465499e85e26643a6b9a04c,first batch of tests
1177,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,0fcd403e4100b900f85d46b13e293706bdfc630a,added tests completing basic csv converage (though need to implement some features)
1178,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,ea2d7656f3aff8e254b32854ef7742dd9d25626b,pass impl tests and properly grouby things with kind
1179,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,1494337ca08d6e1f32e858ef3a9799d2b25eb3ca,fix decldef representation to match tests
1180,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,7e7cf20d20f82098f223e02c649af05d62e2d229,got rid of magic docstring decorator
1181,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,6514d571c4355cfbe5d9a1724631dee5ea58aaa2,add inheritance and call graph tests
1182,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,3c20a44d1959d6377657232f9d6207490e1853b4,pep8 compliant for module
1183,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,34785b968bee7b0b5e5323829ce59925eea4881d,indent CSV like PEG grammars
1184,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,b0eb812fa5e632d16ff3734fb87b195fe67a3d41,pep8 and documentation
1185,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,590095820fd84e436fd1e940a76df3e90cb98c9b,fixed regressions (woo tests!)
1186,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,4a3067692ec66eac38caae956f875972136faa58,added test documentation for call graph test
1187,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,80e10d1c3e43b13f0e87b82d6d2cef0c8225231f,document kind using sphinx documentation style
1188,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,d039da3b53398264a0b2a38792163b12a0f6013d,document maybe usage of Position.extent + line length fix
1189,https://api.github.com/repos/mozilla/dxr/pulls/292,292,Added tests for clang condense plugin,,mvcisback,388723,2014-07-22T17:24:37Z,CONTRIBUTOR,True,267,21,3,Powerful search for large codebases,Python,cb6cc51a7840cfea1fbdec811608c74d5bdd6e4a,csv's need to be more indented w.r.t the current block
1190,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,97bb8cad5b4c89b15ebb5065d4fe5434c9fab65e,"implement basic static call graph

refactoring IR used for plugin into something _much_ easier to work with

added virtual lookup in call graph

build inheritance using all decedents

added doc strings for symbols and functions

added missing networkx dep"
1191,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,b1b4bbea321de9bab71b6e02d5c91b0061d1938f,making flake8 happy
1192,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,7360a6ea3a7638eeaa2bf49001e5b11f4b3aac11,added doc and reversed edges for call graph
1193,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,c70e2a18212215e78f1c8671d76159ccf52f2592,groupby for refs
1194,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,ed10b9ab15df236fda9536f8d957e88e6c279817,accidently stepped on the version #
1195,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,6890bb5b21553d609c335b66074f52ffd089678e,fixed incorrect !key and typos thanks to abbeyj
1196,https://api.github.com/repos/mozilla/dxr/pulls/291,291,implement basic static call graph for clang plugin port,"- Starting to transistion to an alternate IR for the clang plugin (will likely mirror on js branch).
  - Better models our usecase by using groupby to batch fields like call macro function name and such.
- Build call graph from csv
- Handle virtual functions by optimistically adding add possible subclasses.
  - It looks like the only feature missing function overrides
- group reference kinds for indexing.
",mvcisback,388723,2014-07-16T20:27:13Z,CONTRIBUTOR,True,123,57,4,Powerful search for large codebases,Python,e1a845f91f6173402517e8cae3c820aca18b18fc,Fixed doc strings and style
1197,https://api.github.com/repos/mozilla/dxr/pulls/290,290,Add compatibility for clang 3.5 (svn),"- FunctionDecl::getResultType() was renamed to FunctionDecl::getCallResultType()
- We were misusing DiagnosticsEngine::getCustomDiagID as it should always
  take a constant string.  Switch to using formatted output to make this work
  on both clang 3.5 and previous versions.
- Correct a copy-paste error where we were printing the name of the output
  directory instead of the name of the temporary directory in an error
  message.
",abbeyj,99402,2014-07-09T17:52:49Z,CONTRIBUTOR,True,10,6,1,Powerful search for large codebases,Python,ff9f2b37f98509fbd12b712bae6fdcf627c19129,"Add compatibility for clang 3.5 (svn)
- FunctionDecl::getResultType() was renamed to FunctionDecl::getCallResultType()
- We were misusing DiagnosticsEngine::getCustomDiagID as it should always
  take a constant string.  Switch to using formatted output to make this work
  on both clang 3.5 and previous versions.
- Correct a copy-paste error where we were printing the name of the output
  directory instead of the name of the temporary directory in an error
  message."
1198,https://api.github.com/repos/mozilla/dxr/pulls/288,288,Utilities for Javascript plug,,mvcisback,388723,2014-07-08T20:58:01Z,CONTRIBUTOR,True,274,3,6,Powerful search for large codebases,Python,e0ef036cc957c4f61a71bc72c8bc151383462577,"adding tern analysis to ES

can now generate needles for symbols, properties, and functions

factor out common stuff

fixed missing import

Fixed formating to make flake8 happy

Changed span to extent

updated requirements

accidently changed this...reverting

fixed documentation and other fixed from PR"
1199,https://api.github.com/repos/mozilla/dxr/pulls/287,287,Fix variables defined in macros appearing multiple times in the Navigati...,"...on pane.

See https://bugzilla.mozilla.org/show_bug.cgi?id=956855
",abbeyj,99402,2014-06-12T04:00:27Z,CONTRIBUTOR,True,17,4,3,Powerful search for large codebases,Python,0995b877f5e889751ddd8772e3d51adee192af37,"Fix variables defined in macros appearing multiple times in the Navigation pane.
See https://bugzilla.mozilla.org/show_bug.cgi?id=956855"
1200,https://api.github.com/repos/mozilla/dxr/pulls/287,287,Fix variables defined in macros appearing multiple times in the Navigati...,"...on pane.

See https://bugzilla.mozilla.org/show_bug.cgi?id=956855
",abbeyj,99402,2014-06-12T04:00:27Z,CONTRIBUTOR,True,17,4,3,Powerful search for large codebases,Python,eadeefa6d409e0e2c8ae6ca4cd257eab88e9c265,"Add comment describing the use of -1 to mean ""no extent"""
1201,https://api.github.com/repos/mozilla/dxr/pulls/284,284,"Factor out the repetition of the ""no results"" message. Fixes bug #973113...",,mvcisback,388723,2014-06-06T00:26:36Z,CONTRIBUTOR,True,16,5,6,Powerful search for large codebases,Python,a9c5f0a899ac0f123f513e2c93c9d645c5252b73,"Factor out the repetition of the ""no results"" message. Fixes bug #973113."
1202,https://api.github.com/repos/mozilla/dxr/pulls/283,283,factored out no results returned for current query,,mvcisback,388723,2014-06-05T20:46:13Z,CONTRIBUTOR,False,37,23,7,Powerful search for large codebases,Python,7f4c8edaa1b9e5e776578f697bbe03f667634de4,"Factor out the repetition of the ""no results"" message. Fixes bug #973113."
1203,https://api.github.com/repos/mozilla/dxr/pulls/283,283,factored out no results returned for current query,,mvcisback,388723,2014-06-05T20:46:13Z,CONTRIBUTOR,False,37,23,7,Powerful search for large codebases,Python,872fba68bb698b27113de03e2f4604588feeab60,fixed some format issues
1204,https://api.github.com/repos/mozilla/dxr/pulls/283,283,factored out no results returned for current query,,mvcisback,388723,2014-06-05T20:46:13Z,CONTRIBUTOR,False,37,23,7,Powerful search for large codebases,Python,9e9a759e71f0b2578ab29e5355cb0f65eebfd528,added gruntfile and added edge case to breadcrumbs
1205,https://api.github.com/repos/mozilla/dxr/pulls/282,282,flattened the jinja template macro,"- removed partial directory from statics/templates
- edited approriate files
- removed options->name from Gruntfile
  -- this was done because it was just building everything in the partial dir which no longer exists
",mvcisback,388723,2014-06-04T22:33:57Z,CONTRIBUTOR,False,10,16,7,Powerful search for large codebases,Python,6fd2acc4aff32616a3d72d7662b615720102035d,"flattened the jinja template macro

- removed partial directory from statics/templates
- edited approriate files
- removed options->name from Gruntfile
-- this was done because it was just building everything in the partial dir which no longer exists"
1206,https://api.github.com/repos/mozilla/dxr/pulls/279,279,Chunked,"Patch made by Jack Marr for https://bugzilla.mozilla.org/show_bug.cgi?id=1004547.
Also factored out chunking pattern
",mvcisback,388723,2014-06-03T21:03:31Z,CONTRIBUTOR,True,20,4,1,Powerful search for large codebases,Python,c6e68c1e026fb5ac42e338802732fb9ac2160db2,"Indexing large application runs out of memory

Steps to reproduce:

dxr-build.py with very large application (120,000+ objects)

Actual results:

Received ""out of memory"" message from system during the ""Generating callgraph"" step and process was apparently killed by the kernel (?).  On a retry we observed the process was using almost all of the 21gb swap space on the system after getting to the callgraph step.

After instrumenting the build script the problem seems to occur in the fetchall functions and fetchall variables steps, which makes sense.

Expected results:

Process should have completed eventually over the weekend."
1207,https://api.github.com/repos/mozilla/dxr/pulls/279,279,Chunked,"Patch made by Jack Marr for https://bugzilla.mozilla.org/show_bug.cgi?id=1004547.
Also factored out chunking pattern
",mvcisback,388723,2014-06-03T21:03:31Z,CONTRIBUTOR,True,20,4,1,Powerful search for large codebases,Python,96add48c5d12fdae2d91c859916594aac6ca6878,cleaned up chunking by Jack Marr into a generator
1208,https://api.github.com/repos/mozilla/dxr/pulls/279,279,Chunked,"Patch made by Jack Marr for https://bugzilla.mozilla.org/show_bug.cgi?id=1004547.
Also factored out chunking pattern
",mvcisback,388723,2014-06-03T21:03:31Z,CONTRIBUTOR,True,20,4,1,Powerful search for large codebases,Python,53d693e291362ed48fe9f20c955b0698d6095174,Made doc string more descriptive
1209,https://api.github.com/repos/mozilla/dxr/pulls/279,279,Chunked,"Patch made by Jack Marr for https://bugzilla.mozilla.org/show_bug.cgi?id=1004547.
Also factored out chunking pattern
",mvcisback,388723,2014-06-03T21:03:31Z,CONTRIBUTOR,True,20,4,1,Powerful search for large codebases,Python,f0303b098a539bc5c5fb4ae43605fd4f11723a8b,removed extra p that broke tests
1210,https://api.github.com/repos/mozilla/dxr/pulls/279,279,Chunked,"Patch made by Jack Marr for https://bugzilla.mozilla.org/show_bug.cgi?id=1004547.
Also factored out chunking pattern
",mvcisback,388723,2014-06-03T21:03:31Z,CONTRIBUTOR,True,20,4,1,Powerful search for large codebases,Python,c631a0e6339dfc6423da585103900fe5bdbe3bda,fixed to comply with pep8 and dxr standards
1211,https://api.github.com/repos/mozilla/dxr/pulls/278,278,"Expand deployment documentation, especially deployment with Apache and m...","...od_wsgi
",jablko,78493,2014-05-27T23:27:22Z,CONTRIBUTOR,True,355,67,1,Powerful search for large codebases,Python,f9d9b18a6c33ba44174185edfe1bf060330ffbdd,"Expand deployment documentation, especially deployment with Apache and mod_wsgi"
1212,https://api.github.com/repos/mozilla/dxr/pulls/277,277,Added a little margin at the bottom of search results(Bug 969775),"When results are loaded there is a slight margin from bottom of 2em.
",importerror,2376909,2014-05-27T22:26:13Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,d49b4e59bb2695dad182b88da336074cf32207d4,Added a little margin at the bottom of search results
1213,https://api.github.com/repos/mozilla/dxr/pulls/276,276,Readme.rst updated with link to deployment.rst,"Invalid direction of the link when accessing deployment.rst file.
Fixed it by adding source directory into it.
",importerror,2376909,2014-05-27T20:39:28Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,207905270822d04d6a01a2b142cafa42bdad2afc,Readme.rst updated with link to deployment.rst
1214,https://api.github.com/repos/mozilla/dxr/pulls/275,275,Permalink support for Git and HG based indexes,"Ok this is **just** a demo but it gives an idea of what a permalink might look like for a Mercurial based project. There are a couple steps involved to make it work:
1. Edit dxr.config.in and add a line: ""vcs_uri = http://hg.mozilla.org/mozilla-central""
2. Browse to mozilla-central and choose a file, say: http://hg.mozilla.org/mozilla-central/file/e7ab61c6eb1d/db/sqlite3/src/sqlite3.h
3. Grab the part of the url after 'file' e.g. /e7ab61c6eb1d/db/sqlite3/src/sqlite3.h
4. Now fire up DXR and visit: http://33.33.33.77:8000/mozilla-central/rev/e7ab61c6eb1d/db/sqlite3/src/sqlite3.h
5. Try http://33.33.33.77:8000/mozilla-central/rev/e7ab61c6eb1d/build/application.ini etc.

You should see a highlighted version of the file in question, with a working context menu and highlighting. Of course this is **not** working with indexed code and the search won't return, but you get the idea.

It's also really slow since it has to run pygment's guess_lexer, and on really long files it just hangs. I don't know what to do about that except perhaps try using hightlights.js instead, since that is client side and will save on DXR having to do a bunch of guess work tying up requests and giving the user a poor experience.

Any thoughts though? On the right track? Worth pursuing?
",jamonation,328553,2014-04-16T14:19:10Z,CONTRIBUTOR,False,743,64,13,Powerful search for large codebases,Python,46658fc429caacaa8991899077d3d847ab0ce447,"Closes #962108: killer feature for DXR: permalink

Added a demo pygments & hg.mozilla.org permalink route to DXR
Adding permalink generation and Flask route, updated requirements.txt accordingly
Combined git and hg remote support in omniglot htmlifier in aid of permalink generation"
1215,https://api.github.com/repos/mozilla/dxr/pulls/274,274,"Make url hash is consistent with ranges, ctrl/cmd toggles single lines properly","This fix is for bugs #991990 & #991991, and some spelling too.
",jamonation,328553,2014-04-07T19:18:19Z,CONTRIBUTOR,False,14,7,2,Powerful search for large codebases,Python,4b7d9322b33a2135aa44f015c3415caa9e2ac48e,"closes bugs #991990 & #991991 - url hash is consistent with ranges, ctrl toggles single lines properly

Spelling and doc fix"
1216,https://api.github.com/repos/mozilla/dxr/pulls/272,272,Only !merge local vagrant params when present,"If vagrantconfig_local.yaml is empty `YAML.load()` will eval to false and upon
running `vagrant up` you will get the error: ""ERROR loader: Vagrantfile load
error: no implicit conversion of false into Hash."" This patch checks to make
sure some YAML was parsed before merging it.
",uberj,562183,2014-03-31T21:23:41Z,MEMBER,True,5,2,1,Powerful search for large codebases,Python,eda5168aa3d8427d95e2f33f705c87f8b8ed6b50,"Only !merge local vagrant params when present

If vagrantconfig_local.yaml is empty `YAML.load()` will eval to false and upon
running `vagrant up` you will get the error: ""ERROR loader: Vagrantfile load
error: no implicit conversion of false into Hash."" This patch checks to make
sure some YAML was parsed before merging it."
1217,https://api.github.com/repos/mozilla/dxr/pulls/271,271,"Fix Bug 965501, use flex for moar header awesomeness","@erikrose r? A little welcome home present ;) And look at all the code we can remove. Flex FTW!
",ghost,10137,2014-03-28T20:45:57Z,NONE,False,143,186,4,Powerful search for large codebases,Python,5802690671ad27cf195cec22cb6c69e80eaa5d91,"Fix Bug 965501, use flex for moar header awesomeness"
1218,https://api.github.com/repos/mozilla/dxr/pulls/271,271,"Fix Bug 965501, use flex for moar header awesomeness","@erikrose r? A little welcome home present ;) And look at all the code we can remove. Flex FTW!
",ghost,10137,2014-03-28T20:45:57Z,NONE,False,143,186,4,Powerful search for large codebases,Python,4521c2ec12329db433670f1aa34fd3e2866cf3d5,Tweaks and add Safari support for flex
1219,https://api.github.com/repos/mozilla/dxr/pulls/271,271,"Fix Bug 965501, use flex for moar header awesomeness","@erikrose r? A little welcome home present ;) And look at all the code we can remove. Flex FTW!
",ghost,10137,2014-03-28T20:45:57Z,NONE,False,143,186,4,Powerful search for large codebases,Python,b36e96f4067ed99d7b1f5a2aeac369353f55310c,Final tweaks to header layout
1220,https://api.github.com/repos/mozilla/dxr/pulls/271,271,"Fix Bug 965501, use flex for moar header awesomeness","@erikrose r? A little welcome home present ;) And look at all the code we can remove. Flex FTW!
",ghost,10137,2014-03-28T20:45:57Z,NONE,False,143,186,4,Powerful search for large codebases,Python,450e75d856673a7de40ac9a4597bfaae63949b99,put the spinner back jack
1221,https://api.github.com/repos/mozilla/dxr/pulls/271,271,"Fix Bug 965501, use flex for moar header awesomeness","@erikrose r? A little welcome home present ;) And look at all the code we can remove. Flex FTW!
",ghost,10137,2014-03-28T20:45:57Z,NONE,False,143,186,4,Powerful search for large codebases,Python,98cc349123f639e105ff174da99e1ebca7341030,Add white-space nowrap to bullet proof checkbox label
1222,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,456894c649cad12325bb33d1be5d1cecb7e51d03,Rust support
1223,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,949d5568334a651c6ce2671a78ce61204518d6bc,enums from pelmers
1224,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,3f88458d6568be196a8faef9f1195c4988ecca6d,Rust support pt2
1225,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,bd64cebae53d7f729bfca6593901ed195ca1fddb,Erik's changes
1226,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,6901ff801672bd7cd46dc30097ed80bd4cce5da0,Test script fix
1227,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,db60a9fd60d45ddb45c1c147095124340976d37a,smoke test
1228,https://api.github.com/repos/mozilla/dxr/pulls/270,270,Rust support,,nrc,762626,2014-03-26T22:09:03Z,CONTRIBUTOR,False,3271,25,38,Powerful search for large codebases,Python,64423aa077fd6acf67ddce71de3858f0d2ba3329,deleted templates.js
1229,https://api.github.com/repos/mozilla/dxr/pulls/269,269,Make spinner smaller but do not spill,"@erikrose r?
",ghost,10137,2014-03-26T21:08:34Z,NONE,False,2,1,1,Powerful search for large codebases,Python,1f32ae1c3098961f30606794082a8f4a971196a3,Make spinner smaller but do not spill
1230,https://api.github.com/repos/mozilla/dxr/pulls/269,269,Make spinner smaller but do not spill,"@erikrose r?
",ghost,10137,2014-03-26T21:08:34Z,NONE,False,2,1,1,Powerful search for large codebases,Python,7e8af15c1e8bc69808a60c130247d2ff98c18074,only push spinner down
1231,https://api.github.com/repos/mozilla/dxr/pulls/269,269,Make spinner smaller but do not spill,"@erikrose r?
",ghost,10137,2014-03-26T21:08:34Z,NONE,False,2,1,1,Powerful search for large codebases,Python,0e796ad00bffa6df677f2c78843e7c189e85ba6c,push down a little less
1232,https://api.github.com/repos/mozilla/dxr/pulls/268,268,Fix bug with filters,,nrc,762626,2014-03-25T08:57:58Z,CONTRIBUTOR,True,4,2,3,Powerful search for large codebases,Python,54e201f7fc3195ec885b6256f41dc2bd7215e08b,Fix bug with filters
1233,https://api.github.com/repos/mozilla/dxr/pulls/267,267,Initial landing of multi-line multi-select highlighting,"So this works if you're nice to it. There are some missing pieces. For example, ctrl-click to remove a line from the URL hash if it is part of a range and recalculating the range into two separate ones. Very hard. 

Same with shift clicking across a range of single and ranged highlighted lines. It doesn't update the URL to remove everything that is contained by the new containing range.

But generally I think it will work predictably based on not too crazy selection patterns with the UI. The location bar detection is also pretty reasonable and allows specifying ranges and single lines, which you can then add to via the UI after the page loads.

Thoughts? It'll need some more polish I expect, but wanted to get something out to test before spending too much more time on it and making it too complex to adapt to any missing types of interactions.
",jamonation,328553,2014-03-24T14:23:56Z,CONTRIBUTOR,True,285,58,4,Powerful search for large codebases,Python,f97e7f9ccdd63f3966340e098020fee6d13ad34a,Initial landing of multi-line multi-select highlighting
1234,https://api.github.com/repos/mozilla/dxr/pulls/267,267,Initial landing of multi-line multi-select highlighting,"So this works if you're nice to it. There are some missing pieces. For example, ctrl-click to remove a line from the URL hash if it is part of a range and recalculating the range into two separate ones. Very hard. 

Same with shift clicking across a range of single and ranged highlighted lines. It doesn't update the URL to remove everything that is contained by the new containing range.

But generally I think it will work predictably based on not too crazy selection patterns with the UI. The location bar detection is also pretty reasonable and allows specifying ranges and single lines, which you can then add to via the UI after the page loads.

Thoughts? It'll need some more polish I expect, but wanted to get something out to test before spending too much more time on it and making it too complex to adapt to any missing types of interactions.
",jamonation,328553,2014-03-24T14:23:56Z,CONTRIBUTOR,True,285,58,4,Powerful search for large codebases,Python,0f5154b98b547a623d82d222e07a12c188a43400,Adding an explanation of how to use code highlighter in the browser
1235,https://api.github.com/repos/mozilla/dxr/pulls/267,267,Initial landing of multi-line multi-select highlighting,"So this works if you're nice to it. There are some missing pieces. For example, ctrl-click to remove a line from the URL hash if it is part of a range and recalculating the range into two separate ones. Very hard. 

Same with shift clicking across a range of single and ranged highlighted lines. It doesn't update the URL to remove everything that is contained by the new containing range.

But generally I think it will work predictably based on not too crazy selection patterns with the UI. The location bar detection is also pretty reasonable and allows specifying ranges and single lines, which you can then add to via the UI after the page loads.

Thoughts? It'll need some more polish I expect, but wanted to get something out to test before spending too much more time on it and making it too complex to adapt to any missing types of interactions.
",jamonation,328553,2014-03-24T14:23:56Z,CONTRIBUTOR,True,285,58,4,Powerful search for large codebases,Python,63baae14e50b3b3272fc3499a7083e35de383015,Refactored single line and range detection into a tidy little generateSelectedArrays() function
1236,https://api.github.com/repos/mozilla/dxr/pulls/266,266,Fix search highlighting on warning searches when the extents,"were returned out of order by the database.
Add tests for warning searches.
",abbeyj,99402,2014-03-21T21:26:46Z,CONTRIBUTOR,False,62,0,2,Powerful search for large codebases,Python,656fa91c40b324db37c627ed243133d4e617ab5c,"Fix search highlighting on warning searches when the extents
were returned out of order by the database.
Add tests for warning searches."
1237,https://api.github.com/repos/mozilla/dxr/pulls/266,266,Fix search highlighting on warning searches when the extents,"were returned out of order by the database.
Add tests for warning searches.
",abbeyj,99402,2014-03-21T21:26:46Z,CONTRIBUTOR,False,62,0,2,Powerful search for large codebases,Python,a22d5e2b38f6b5bc85dfe00ce215c53d7bfabefc,Try to fix tests under clang 3.3.
1238,https://api.github.com/repos/mozilla/dxr/pulls/265,265,Restore warning icons that have been missing since the new UI landed.,"I'm not sure why the annotations column takes up the amount of horizontal space that it does or what the best way to adjust that is.
",abbeyj,99402,2014-03-20T21:43:10Z,CONTRIBUTOR,False,37,16,3,Powerful search for large codebases,Python,047f590fdfc980408ecef21936fd2dfc712c3bb8,Restore warning icons that have been missing since the new UI landed.
1239,https://api.github.com/repos/mozilla/dxr/pulls/265,265,Restore warning icons that have been missing since the new UI landed.,"I'm not sure why the annotations column takes up the amount of horizontal space that it does or what the best way to adjust that is.
",abbeyj,99402,2014-03-20T21:43:10Z,CONTRIBUTOR,False,37,16,3,Powerful search for large codebases,Python,2424f9fad5dee29aa28066c55bb20432a5e4df35,"Fix color and padding around line numbers.
Fix multiple annotations sometimes wrapping onto the next line."
1240,https://api.github.com/repos/mozilla/dxr/pulls/265,265,Restore warning icons that have been missing since the new UI landed.,"I'm not sure why the annotations column takes up the amount of horizontal space that it does or what the best way to adjust that is.
",abbeyj,99402,2014-03-20T21:43:10Z,CONTRIBUTOR,False,37,16,3,Powerful search for large codebases,Python,d75e7effaf773a52c2ce19902a9816fef8547b38,Fix line highlighting not covering the entire line.
1241,https://api.github.com/repos/mozilla/dxr/pulls/264,264,Add a pref for filter lanaguage.,"Adds a config pref for a filter language and a language field to filters. Only filters whose language field contains the config pref appear in the filter menu.
",nrc,762626,2014-03-20T00:20:30Z,CONTRIBUTOR,False,69,33,5,Powerful search for large codebases,Python,3d8e33a958acf1e38ab272e85e35eadc1e232bd7,"Add a pref for filter lanaguage.

Adds a config pref for a filter language and a language field to filters. Only filters whose language field contains the config pref appear in the filter menu."
1242,https://api.github.com/repos/mozilla/dxr/pulls/263,263,Fix missing lines from highlights on shift-select upwards and then down again," I think this fixes it. I have tried to reproduce by selecting upwards and then down again with all manner of clicking and haven't see the dreaded zebra stripes :)
",jamonation,328553,2014-03-19T02:28:37Z,CONTRIBUTOR,False,2,2,1,Powerful search for large codebases,Python,1c93ad16de6589697ef7157dbe88f8bc17791edf,Fix missing lines from highlights on shift-select upwards and then down again
1243,https://api.github.com/repos/mozilla/dxr/pulls/262,262,Add logic to only scrollTo a line if it exists in a file,,jamonation,328553,2014-03-19T02:27:16Z,CONTRIBUTOR,False,15,12,1,Powerful search for large codebases,Python,63ee1f78d432c8afa0f0d0c1c843d8040321378e,Add logic to only scrollTo a line if it exists in a file
1244,https://api.github.com/repos/mozilla/dxr/pulls/261,261,Adding check and sanitizer for double or more / in omniglot's hg path,"Per https://bugzilla.mozilla.org/show_bug.cgi?id=976558 I think this _may_ be an issue (typo) with the .hg/hgrc for mozilla-central in DXR and not an issue with code.
",jamonation,328553,2014-03-18T03:05:44Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,571befb938cade937fcd6b411a9d871b72aa31f5,Adding check and sanitizer for double or more // in omniglot's hg path detection
1245,https://api.github.com/repos/mozilla/dxr/pulls/261,261,Adding check and sanitizer for double or more / in omniglot's hg path,"Per https://bugzilla.mozilla.org/show_bug.cgi?id=976558 I think this _may_ be an issue (typo) with the .hg/hgrc for mozilla-central in DXR and not an issue with code.
",jamonation,328553,2014-03-18T03:05:44Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,2a764a19a571fb05567faa3432a1964171d388a9,Refactor hg path cleaning to use one line
1246,https://api.github.com/repos/mozilla/dxr/pulls/261,261,Adding check and sanitizer for double or more / in omniglot's hg path,"Per https://bugzilla.mozilla.org/show_bug.cgi?id=976558 I think this _may_ be an issue (typo) with the .hg/hgrc for mozilla-central in DXR and not an issue with code.
",jamonation,328553,2014-03-18T03:05:44Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,b8434dfbad8c929eb114024c6e2443c059ea78ae,Merge branch 'master' of github.com:mozilla/dxr into bug-976558
1247,https://api.github.com/repos/mozilla/dxr/pulls/261,261,Adding check and sanitizer for double or more / in omniglot's hg path,"Per https://bugzilla.mozilla.org/show_bug.cgi?id=976558 I think this _may_ be an issue (typo) with the .hg/hgrc for mozilla-central in DXR and not an issue with code.
",jamonation,328553,2014-03-18T03:05:44Z,CONTRIBUTOR,True,1,0,1,Powerful search for large codebases,Python,72835e090506052acf1e34ee5d41bbe100f0a520,Making omniglot HG path detection & rewrite add the implied / preceding a path
1248,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,47824ef1538b8cdb57a984832335e7aa59c431f6,initial conversion from markdown to reStructuredText with Sphinx
1249,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,886b86373afb2cb7873812f482a07a1cdd122e35,removing editor created temp docs files
1250,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,5da2002cb26b180c5a468fecf3c8391dd1527ed2,removing mkd files from docs tree
1251,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,22f307612afff441758e108cae5fbd44f97f0c6b,removing README.mkd in favour of rst version in the hope github renders it
1252,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,b7d767df0a173cf6ce61022ae2b2c2f3f71fba9d,adding sphinx-common to VM provisioning for building Sphinx docs
1253,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,6b87c7189a8ab9b7f1acdb13278177da4f3a6267,"adding README.mkd back in, some tests depend on it"
1254,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,ab0ade0d4e2f10178a07cfa013d59570a195f916,making some last edits to docs in preparation for readthedocs and sphinx migration
1255,https://api.github.com/repos/mozilla/dxr/pulls/260,260,markdown to reStructuredText migration,"The docs all converted fairly cleanly. A few strange `` characters here and there from pandoc treating them literally or escaping inappropriately.

Sphinx is added as a package to the VM when it is provisioned so one can just run 'make html' in the docs directory and the whole Sphinx bundle gets created. I added an index.rst to consolidate the various parts.

README.rst renders on github, though it isn't part of the docs tree yet, it might be good to link to it somehow.

In any case, it looks like a 1:1 conversion plus the index page so it should be good to go!
",jamonation,328553,2014-03-17T13:15:21Z,CONTRIBUTOR,False,1516,632,22,Powerful search for large codebases,Python,8aaaf55738227bbaecb7e7f2132f3da65d16f5d7,"removing build directory from git, sphinx 'make html' will create it on demand"
1256,https://api.github.com/repos/mozilla/dxr/pulls/259,259,Update docs,,ghost,10137,2014-03-15T16:02:34Z,NONE,False,4,2,1,Powerful search for large codebases,Python,0845d641bbd2a2df9ba55deb3942f766a989a08a,Update docs
1257,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,836307a5f9a7303032502e7d8e8757df8d15ee23,"Update default make target to compile nunjucks templates.

Delete precompiled templates, which we no longer need."
1258,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,a4f95a42424b1bddeb83d731f9792a242904b5fd,Make sure we get npm onto the box.
1259,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,6cf1ab746eb391c6bf0ddeeebceee6dc690a7f0c,"Tell deploy script to compile the nunjucks templates. Fix bug 960104.

Through the makefile, it'll install any necessary npm packages first. None of the packages are needed in production; we just need them to build the templates."
1260,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,ca4815e94ff0f9f208834e71e0252978e813db93,"Upgrade Vagrant box to saucy. Lose puppet. Upgrade LLVM and clang.

Motivation: this gives us a new enough npm to run all our npm stuff.

As a bonus, we get packaged versions of LLVM and clang and can stop yanking down binaries from llvm.org all the time, so we delete the install_llvm script.

Swapped out puppet for a simple shell script because puppet was stuck in a CPU-pegging loop during ""vagrant up"". strace said it was just calling getdent() over and over again. I've had enough of puppet and its overcomplication and unsuitable failure modes for our purposes. [I later found out that it was out-of-date guest additions that were causing the loop, but I've been meaning to oust puppet for some time.]

While I was at it, upgraded Vagrant box to LLVM and clang 3.3."
1261,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,bf20fc2ab4ddbf7a400292badedd4c5f053715ee,Remove no-longer-used options from vagrantconfig.
1262,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,51d338187769fbc7dbf9266581154daddb4e827f,"Editing this and reprovisioning won't do any good anymore.

The script is cautious and won't overwrite a dxr.conf that's already there."
1263,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,d3b22ec54f7d65ced8bc43de3a8992cbb8c7607b,Use the Debian alternatives system for llvm-config instead of just symlinking it.
1264,https://api.github.com/repos/mozilla/dxr/pulls/256,256,Saucy,"An attempted culmination of all the work in #236, #239, and #255. Let's see what happens!
",erikrose,295816,2014-03-14T17:17:18Z,MEMBER,False,94,511,15,Powerful search for large codebases,Python,2e204662d4124d5dc6a1f7128bb1d0a1549d2668,Add better install instructions for VB guest additions.
1265,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,80022e6638be7000ed7c6efadb43481cfb385178,Update default make target to compile nunjucks templates.
1266,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,96286e5b272e4c878a73905938c67bcd525690ae,Make sure we get npm onto the box.
1267,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,0881a6ec4bc21a652676897a6a7d3f8ff92a0233,"Tell deploy script to compile the nunjucks templates.

Through the makefile, it'll install any necessary npm packages first. None of the packages are needed in production; we just need them to build the templates."
1268,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,3b86be5db455f77967a93ad0aa338ba838ee4004,"Merge ui into the bug-964091 branch to get the excision of the old Python 2.6 bits, which wouldn't work against Saucy, which we're about to update the Vagrant box to."
1269,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,edd0e5299c4359d4741bfaffd241abdb18526582,"Upgrade Vagrant box to saucy.

Motivation: this gives us a new enough npm to run all our npm stuff.

As a bonus, we get packaged versions of LLVM and clang and can stop yanking down binaries from llvm.org all the time, so we delete the install_llvm script.

Swapped out puppet for a simple shell script because puppet was stuck in a CPU-pegging loop during ""vagrant up"". strace said it was just calling getdent() over and over again. I've had enough of puppet and its overcomplication and unsuitable failure modes for our purposes. [I later found out that it was out-of-date guest additions that were causing the loop, but I've been meaning to oust puppet for some time.]

While I was at it...
* Started using peep instead of pip on the Vagrant box for DXR requirements.
* Stopped installing all the build deps of Firefox.
* Upgraded Vagrant box to LLVM and clang 3.3."
1270,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,596ad9f63c96e24a738b8c26dda6a3d2509d3914,Double memory on the Vagrant box. We seemed to have our peep process killed by the OOM sniffer on CI.
1271,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,6f16c27fcb1a058800e56a52acc0a2dab2c43f09,"Let's try again, more heavy-handedly this time, just to rule this out."
1272,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,0aa42c93cc9bf2e2c3ac6ae91b0c09834a709b2d,Remove no-longer-used options from vagrantconfig.
1273,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,5c2211bf1f8e991ed0a04d35d3c74210e7c9ed40,"Let's try pip instead of peep and see if that says ""Killed""."
1274,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,099d12c544461f490c46ba359dcfa541fe04ba92,"Comment out setup.py develop. Let's see if it gets through provisioning now.

If it does, it was probably something about setup.py develop and peep: closing or otherwise messing with stdin or stdout, causing SSH to hang up?"
1275,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,92e8edca43dae7c0464a765641cb63569d4802eb,"Let's try bringing back setup.py develop and forcing the allocation of pseudo-terminals in ssh.

Build 442 said...
Pseudo-terminal will not be allocated because stdin is not a terminal.
bash: line 1: 14458 Killed                  make clean
...which was the only suspicious passage."
1276,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,fd8683f07c50a8f9561409842f07c0113e7e4a87,"""vagrant ssh"" doesn't take -t -t. Oops.

Let's just put an echo in there and flail around."
1277,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,76c0e47154a1cc3ef0776e90e1b7c9f08b37b2e2,Let's see if it's the status code from setup.py develop that's causing it to be killed.
1278,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,818e471cca7a3412c31af6904e74c6256f31ec76,"Let's see what setup.py develop is saying, if anything."
1279,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,3890b8af8e1b0afedb652ab213e57ddbd013c522,Do shell scripting better.
1280,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,d59d08c2e1f0ccae423db2ae96e6160796d78189,"Hamhandedly put the actual ""make"" calls into the provisioning script so (hopefully) we can see a little better what they're doing. (-x and all)"
1281,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,403d39dc4b82909ccbf42a92f791a511642a0304,Turn on debug for make.
1282,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,e4aeefc71d904f2c525aff4bf427387307ae38f0,"Merge remote-tracking branch 'erikrose/bug964091-regressed-ui-performance' into saucy-erik

Conflicts:
	Vagrantfile
	dxr/static/js/dxr.js
	puppet/manifests/classes/dxr.pp"
1283,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,db553dfe4e1515d870f37ef0bc69f2111a9f50f1,refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
1284,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,7264cdf8fe1f256d97071c527f2d0da2ef1061aa,refs https://github.com/mozilla/dxr/pull/236: run apt-get via puppet to save memory in Jenkins guest when provisioning
1285,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,f2261d2c31176901b966e93293479b5ebca4c480,refs https://github.com/mozilla/dxr/pull/236: bumping memory of the VM to see if Jenkins will complete provisioning
1286,https://api.github.com/repos/mozilla/dxr/pulls/255,255,"DXR, meet Saucy; Saucy, meet DXR. Let's all get along now shall we?","refs https://github.com/mozilla/dxr/pull/236: force jenkins to provision vagrant with fresh vbox guest additions
",jamonation,328553,2014-03-12T21:09:19Z,CONTRIBUTOR,False,167,245,18,Powerful search for large codebases,Python,1081ed3a84e61bdec74b29287f226dbf1bc02c0b,"refs https://github.com/mozilla/dxr/pull/236:
 * setting memory back to 512mb
 * removed vagrant provision commands
 * triggering a build to test upgraded VirtualBox on ci.mozilla.org"
1287,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,abdbef4f695ea56592295624eba8ee14d038dc19,"refs bugs 976213 and 969248: adding multi-select to file view, and stopping page reloads on #anchor clicks"
1288,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,8f56b1bef374c7b19f9ad37d2ddae2af9369b47d,refs bug 976213: refactored highlighter to respect overlay menu and long code lines
1289,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,6c25851f363621bca71a06ccf907a6cfa596896f,Merge branch 'master' of github.com:mozilla/dxr into bug-976213
1290,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,dd3fb18c4a6db394d723a7844c07212edf5e0273,"refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines."
1291,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,82811a6a434add6d55e9dc0afd15b497fe2ef5a6,"refs bug 9762123:
 * line-number css was fixed position, now changed to absolute to enable scrolling
 * added line highlighting to corresponding line based on panel a href links"
1292,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,dc18f7656b5d9eb41410de7e8e67a6cbc56324e6,"refs bug 976213: incorporating feedback from https://github.com/mozilla/dxr/pull/254
 * swapping out window.location.hash for history.replaceState
 * consistent selection of elements with jquery instead of mixing js & jquery
 * refactored conditional highlighting removal"
1293,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,6288538752ff9f29e26c884344687111b183b3c2,"refs bug 976213: more https://github.com/mozilla/dxr/pull/254 clean up
 * Now with more location bar return/enter key action!
 * Removed dxr.js onpopstate check: line numbers are spans not a elements, so location.reload never gets triggered improperly in a file view"
1294,https://api.github.com/repos/mozilla/dxr/pulls/254,254,A bunch of multi-select features and fixes,"I hope these finally work. I've tested:
- Longer source files
- Long lines in source files
- Source files with and without panel overlay
- In chrome and firefox
",jamonation,328553,2014-03-10T19:57:30Z,CONTRIBUTOR,True,172,6,5,Powerful search for large codebases,Python,b00b6cd0fe79de8c6870b4837ef0a1e1e68c563b,refs bug 976213: adding window.onpopstate check back to maintain Nav menu functionality
1295,https://api.github.com/repos/mozilla/dxr/pulls/253,253,refs bug 969248: added event.state check to prevent #anchor reloads,"Splitting this patch out into a separate branch so that it can be merged before the multi-select patch in a different pull request.
",jamonation,328553,2014-03-07T21:59:59Z,CONTRIBUTOR,True,5,2,1,Powerful search for large codebases,Python,c8156c36e2e52251f5d1e5508874da0c0a633ba6,refs bug 969248: added event.state check to prevent #anchor link triggered window.location.reload calls
1296,https://api.github.com/repos/mozilla/dxr/pulls/252,252,refs bug 976213: Refactored and tidied code-highlighter.js & related css.,"```
refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines.
```
",jamonation,328553,2014-03-07T19:45:25Z,CONTRIBUTOR,False,164,6,5,Powerful search for large codebases,Python,abdbef4f695ea56592295624eba8ee14d038dc19,"refs bugs 976213 and 969248: adding multi-select to file view, and stopping page reloads on #anchor clicks"
1297,https://api.github.com/repos/mozilla/dxr/pulls/252,252,refs bug 976213: Refactored and tidied code-highlighter.js & related css.,"```
refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines.
```
",jamonation,328553,2014-03-07T19:45:25Z,CONTRIBUTOR,False,164,6,5,Powerful search for large codebases,Python,8f56b1bef374c7b19f9ad37d2ddae2af9369b47d,refs bug 976213: refactored highlighter to respect overlay menu and long code lines
1298,https://api.github.com/repos/mozilla/dxr/pulls/252,252,refs bug 976213: Refactored and tidied code-highlighter.js & related css.,"```
refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines.
```
",jamonation,328553,2014-03-07T19:45:25Z,CONTRIBUTOR,False,164,6,5,Powerful search for large codebases,Python,6c25851f363621bca71a06ccf907a6cfa596896f,Merge branch 'master' of github.com:mozilla/dxr into bug-976213
1299,https://api.github.com/repos/mozilla/dxr/pulls/252,252,refs bug 976213: Refactored and tidied code-highlighter.js & related css.,"```
refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines.
```
",jamonation,328553,2014-03-07T19:45:25Z,CONTRIBUTOR,False,164,6,5,Powerful search for large codebases,Python,dd3fb18c4a6db394d723a7844c07212edf5e0273,"refs bug 976213: Refactored and tidied code-highlighter.js & related css.
 * Added highlighting on $(document).ready event window.location.hash exists.
 * Refactored highlighted element detection to use a pure js method.
 * Added generator for window.location.hash corresponding to selected lines."
1300,https://api.github.com/repos/mozilla/dxr/pulls/251,251,Fix overlapping refs for calls to operator() or operator[].,,abbeyj,99402,2014-03-06T22:40:43Z,CONTRIBUTOR,True,95,2,2,Powerful search for large codebases,Python,4281805bde0ded22789d2c4f125b8a6b88a322c1,Fix overlapping refs for calls to operator() or operator[].
1301,https://api.github.com/repos/mozilla/dxr/pulls/250,250,"refs bugs 976213 and 969248: adding multi-select to file view, and stop #anchor page reloads","refs bugs 976213 and 969248: adding multi-select to file view, and stopping page reloads on #anchor clicks
",jamonation,328553,2014-03-06T19:02:05Z,CONTRIBUTOR,False,381,277,5,Powerful search for large codebases,Python,abdbef4f695ea56592295624eba8ee14d038dc19,"refs bugs 976213 and 969248: adding multi-select to file view, and stopping page reloads on #anchor clicks"
1302,https://api.github.com/repos/mozilla/dxr/pulls/250,250,"refs bugs 976213 and 969248: adding multi-select to file view, and stop #anchor page reloads","refs bugs 976213 and 969248: adding multi-select to file view, and stopping page reloads on #anchor clicks
",jamonation,328553,2014-03-06T19:02:05Z,CONTRIBUTOR,False,381,277,5,Powerful search for large codebases,Python,8f56b1bef374c7b19f9ad37d2ddae2af9369b47d,refs bug 976213: refactored highlighter to respect overlay menu and long code lines
1303,https://api.github.com/repos/mozilla/dxr/pulls/249,249,tidying vagrant dxr.pp build dependencies,"refs https://bugzilla.mozilla.org/show_bug.cgi?id=946461 - tidying vagrant build dependencies in dxr.pp
",jamonation,328553,2014-02-28T19:00:16Z,CONTRIBUTOR,True,2,5,1,Powerful search for large codebases,Python,a5fbb044ad1e830b36f97b20cff286e389522375,refs https://bugzilla.mozilla.org/show_bug.cgi?id=946461 - tidying vagrant build dependencies in dxr.pp
1304,https://api.github.com/repos/mozilla/dxr/pulls/248,248,[#941860] Merge methods for connecting with database,"Methods for database connection was merged into single one in server_utils.py
",alberskib,6307098,2014-02-27T23:13:21Z,CONTRIBUTOR,True,18,36,5,Powerful search for large codebases,Python,23e00f19bc9ec347f028893872eacb71d548a6f9,[#941860] Merge methods for connecting with database
1305,https://api.github.com/repos/mozilla/dxr/pulls/248,248,[#941860] Merge methods for connecting with database,"Methods for database connection was merged into single one in server_utils.py
",alberskib,6307098,2014-02-27T23:13:21Z,CONTRIBUTOR,True,18,36,5,Powerful search for large codebases,Python,7a239a7e8f401484253621d6a7f80baadd718803,[#941860] Merge methods for connecting with database - refactoring
1306,https://api.github.com/repos/mozilla/dxr/pulls/248,248,[#941860] Merge methods for connecting with database,"Methods for database connection was merged into single one in server_utils.py
",alberskib,6307098,2014-02-27T23:13:21Z,CONTRIBUTOR,True,18,36,5,Powerful search for large codebases,Python,920cad948c0c99d4daaceebdc64553bf2e901c4d,[#941860] Introduce handling possible exceptions from connect_db
1307,https://api.github.com/repos/mozilla/dxr/pulls/248,248,[#941860] Merge methods for connecting with database,"Methods for database connection was merged into single one in server_utils.py
",alberskib,6307098,2014-02-27T23:13:21Z,CONTRIBUTOR,True,18,36,5,Powerful search for large codebases,Python,6c26168bfad66d29abc20b79adfafc11c8964d54,[#941860] Specify exceptions handled from connect_db
1308,https://api.github.com/repos/mozilla/dxr/pulls/247,247,Fix markup error in templates/file.html.,,berkerpeksag,26338,2014-02-20T01:15:12Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,42535f62f60b1b131655f231a9bee1ed93199192,Fix markup error in templates/file.html.
1309,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,d85d2acb035b00c191a173e4852eec909483a264,Make config.trees order by position in config file. Fix Bug 969873
1310,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,893c0bda7896f200332bd8c3a5538ed4c89c9815,Default Tree To Route
1311,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,3e93313f3e42d8e6102d67efdd248647fcb7bfb4,Added Default Tree Option
1312,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,393707477efd20eb1bfbe3db576a017b06e6b878,Sort config.trees alphabetically for switch_tree menu
1313,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,b72915c9e34616696fc7c50bd2cffe14bfe77e33,Sorting Trees Alphabetically for Switch Tree Menu
1314,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,7abf1daea7788ba68690a0745c4b1393d12c7c6d,Update config.py
1315,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,65cb07eec08cae181d758b04424d18f7b3e5e5fb,Make sure that default_tree is defined
1316,https://api.github.com/repos/mozilla/dxr/pulls/246,246,Make config.trees order by position in config file. Fix Bug 969873,"Fix Bug 969873. Sort Trees Alphabetically for Switch Tree Menu.
",ghost,10137,2014-02-19T16:13:35Z,NONE,False,24,20,4,Powerful search for large codebases,Python,c0903502faea12596010287d53063cd62dc6a320,Route To The Default Tree First
1317,https://api.github.com/repos/mozilla/dxr/pulls/245,245,Make the search field autofocus,"This fixes https://bugzilla.mozilla.org/show_bug.cgi?id=973588.
",ehsan,168508,2014-02-17T16:02:38Z,MEMBER,False,1,1,1,Powerful search for large codebases,Python,a808ac5dabc2f3bdc6f353671c445aa426950f9c,Make the search field autofocus
1318,https://api.github.com/repos/mozilla/dxr/pulls/244,244,Change .panel's position from absolute to fixed.,"It will be more usable with long files.

Here's two test cases:
- http://dxr.mozilla.org/mozilla-central/source/js/src/jsdate.h
- http://dxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp
",berkerpeksag,26338,2014-02-12T18:17:53Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,27a39c408d9d9b012af33bbc2fda484c4e4b373b,"Change .panel's position from absolute to fixed.

It will be more usable with long files.

Here's two test cases:

* http://dxr.mozilla.org/mozilla-central/source/js/src/jsdate.h
* http://dxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp"
1319,https://api.github.com/repos/mozilla/dxr/pulls/243,243,[#961840] Remember state of case checkbox,"- Store in cookie last state of case checkbox
- Add jquery.cookie plugin
",alberskib,6307098,2014-02-10T22:44:11Z,CONTRIBUTOR,False,20,1,1,Powerful search for large codebases,Python,c13ef53400f007301c9a0a010aee75158571a755,"[#961840] Remember state of case checkbox

- Store in cookie last state of case checkbox
- Add jquery.cookie plugin"
1320,https://api.github.com/repos/mozilla/dxr/pulls/243,243,[#961840] Remember state of case checkbox,"- Store in cookie last state of case checkbox
- Add jquery.cookie plugin
",alberskib,6307098,2014-02-10T22:44:11Z,CONTRIBUTOR,False,20,1,1,Powerful search for large codebases,Python,e3299d54ad2abd17508ad45955bb5426c0c392d5,"[#961840] Remember state of case checkbox

- Store last state in localStorage"
1321,https://api.github.com/repos/mozilla/dxr/pulls/243,243,[#961840] Remember state of case checkbox,"- Store in cookie last state of case checkbox
- Add jquery.cookie plugin
",alberskib,6307098,2014-02-10T22:44:11Z,CONTRIBUTOR,False,20,1,1,Powerful search for large codebases,Python,dac2a26b280448aa22f3574a9ed0d038ee6fee36,[#961840] Remember state of case checkbox - Fix for url caseSenitivity param
1322,https://api.github.com/repos/mozilla/dxr/pulls/242,242,Give '.hpp' files a '.h' icon.,,abbeyj,99402,2014-02-10T21:42:24Z,CONTRIBUTOR,False,1,0,1,Powerful search for large codebases,Python,45803e739259c5113064d5617c3fac5755dfd80c,Give '.hpp' files a '.h' icon.
1323,https://api.github.com/repos/mozilla/dxr/pulls/241,241,make search from the context menu case sensitive,"Because you are generally searching for an identifier then, it's just that DXR hasn't indexed it for some reason, so case sensitive makes sense (I think).

Sorry the PR is a bit borked, I blame the merge from master to UI. The important change is a simple one-liner so should be easy enough to merge.
",nrc,762626,2014-02-09T01:46:45Z,CONTRIBUTOR,False,2,2,2,Powerful search for large codebases,Python,6c99ba9ab90ae1891b8d5bcd5401ec2024a75b06,update trilite
1324,https://api.github.com/repos/mozilla/dxr/pulls/241,241,make search from the context menu case sensitive,"Because you are generally searching for an identifier then, it's just that DXR hasn't indexed it for some reason, so case sensitive makes sense (I think).

Sorry the PR is a bit borked, I blame the merge from master to UI. The important change is a simple one-liner so should be easy enough to merge.
",nrc,762626,2014-02-09T01:46:45Z,CONTRIBUTOR,False,2,2,2,Powerful search for large codebases,Python,0721f8853702eeab649fbdfff1ed7059fd76f55b,Merge branch 'master' of https://github.com/mozilla/dxr
1325,https://api.github.com/repos/mozilla/dxr/pulls/241,241,make search from the context menu case sensitive,"Because you are generally searching for an identifier then, it's just that DXR hasn't indexed it for some reason, so case sensitive makes sense (I think).

Sorry the PR is a bit borked, I blame the merge from master to UI. The important change is a simple one-liner so should be easy enough to merge.
",nrc,762626,2014-02-09T01:46:45Z,CONTRIBUTOR,False,2,2,2,Powerful search for large codebases,Python,534736b6d12dc4831e0c754383cb5144662b861e,Merge branch 'master' of https://github.com/mozilla/dxr
1326,https://api.github.com/repos/mozilla/dxr/pulls/241,241,make search from the context menu case sensitive,"Because you are generally searching for an identifier then, it's just that DXR hasn't indexed it for some reason, so case sensitive makes sense (I think).

Sorry the PR is a bit borked, I blame the merge from master to UI. The important change is a simple one-liner so should be easy enough to merge.
",nrc,762626,2014-02-09T01:46:45Z,CONTRIBUTOR,False,2,2,2,Powerful search for large codebases,Python,75ec4e06bdd6d19e1e7fc1d4a50256b1544abc03,make search from the context menu case sensitive
1327,https://api.github.com/repos/mozilla/dxr/pulls/240,240,Override plugins to build from environment,"This makes it easier to change the list of plugins to build:

``` sh
PLUGINS=pygmentize python setup.py build
```
",mook,80558,2014-02-08T18:38:43Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,6f559cdcb5162919a885e325677507b8a7d01650,"Override plugins to build from environment

This makes it easier to change the list of plugins to build:
```sh
PLUGINS=pygmentize python setup.py build
```"
1328,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,5318f8382163e94f4d951d65aa48190f0ea23ac4,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect"
1329,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,e8c3d15303b498dc17dee2d8fbd065c45f38e24f,do not add dxr/static/js/templates.js to source control
1330,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,16c86afd1386d04980729472a876cae975a5040d,Change from multiple rows on file views to single table rows
1331,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,4daac093b2141cdf91ab9960ee5dac9569146235,Added templates-local for local development with nunjucks
1332,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,97652ffe1ac59c2f9359e65dd45f1413c0e81bd8,"Add npm-lockdown and hashes of the npm packages.

1MB of lockdown beats checking in 32MB of npm packages (and updating them forever)."
1333,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,4fe5ded72622e474300428d91e17a2270c7effb2,"Add grunt-cli, and redo lockdown."
1334,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,80022e6638be7000ed7c6efadb43481cfb385178,Update default make target to compile nunjucks templates.
1335,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,96286e5b272e4c878a73905938c67bcd525690ae,Make sure we get npm onto the box.
1336,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,0881a6ec4bc21a652676897a6a7d3f8ff92a0233,"Tell deploy script to compile the nunjucks templates.

Through the makefile, it'll install any necessary npm packages first. None of the packages are needed in production; we just need them to build the templates."
1337,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,3b86be5db455f77967a93ad0aa338ba838ee4004,"Merge ui into the bug-964091 branch to get the excision of the old Python 2.6 bits, which wouldn't work against Saucy, which we're about to update the Vagrant box to."
1338,https://api.github.com/repos/mozilla/dxr/pulls/239,239,bug 964091,"debugging with leeroy
",lonnen,21467,2014-02-06T19:25:06Z,MEMBER,False,13647,4439,188,Powerful search for large codebases,Python,2c68a712853ecfc41eddc1fb21d023b05eacadbc,"radically simplify the puppet setup

reduce puppet to only installing dependencies and linking a few files,
foregoing all those classes. Also upgrades the distro to saucy. The
apt dependencies come from the vagrant_provision.sh script in
ErikRose's experimental branch replacing puppet with shell

Currently not working. The proximal error complains about some of the
package names not being valid."
1339,https://api.github.com/repos/mozilla/dxr/pulls/238,238,"Always fit filters drop down in viewport, adding scrolling as needed","@erikrose r?
",ghost,10137,2014-02-06T15:48:48Z,NONE,True,22,0,1,Powerful search for large codebases,Python,e7ea7d770d7c42cb1a4d567ffe68880bfccfcd73,"Always fit filters drop down in viewport, adding scrolling as needed"
1340,https://api.github.com/repos/mozilla/dxr/pulls/237,237,enable vagrantfile to work with vagrant versions 1 and 2,"take code that relies on differences in the api between vagrant versions and wrap them in configure blocks that will conditionally execute. this allows backwards compatibility and removes pesky warnings from Jenkins.
",lonnen,21467,2014-02-06T05:22:52Z,MEMBER,False,22,3,1,Powerful search for large codebases,Python,7bad098f64f9d1c36cee38a9c93052afbcdf36d9,"enable vagrantfile to work with vagrant versions 1 and 2

take code that relies on differences in the api between vagrant
versions and wrap them in configure blocks that will conditionally
execute. this allows backwards compatibility and removes pesky
warnings from Jenkins."
1341,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,5318f8382163e94f4d951d65aa48190f0ea23ac4,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect"
1342,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,e8c3d15303b498dc17dee2d8fbd065c45f38e24f,do not add dxr/static/js/templates.js to source control
1343,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,16c86afd1386d04980729472a876cae975a5040d,Change from multiple rows on file views to single table rows
1344,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,4daac093b2141cdf91ab9960ee5dac9569146235,Added templates-local for local development with nunjucks
1345,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,97652ffe1ac59c2f9359e65dd45f1413c0e81bd8,"Add npm-lockdown and hashes of the npm packages.

1MB of lockdown beats checking in 32MB of npm packages (and updating them forever)."
1346,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,4fe5ded72622e474300428d91e17a2270c7effb2,"Add grunt-cli, and redo lockdown."
1347,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,80022e6638be7000ed7c6efadb43481cfb385178,Update default make target to compile nunjucks templates.
1348,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,96286e5b272e4c878a73905938c67bcd525690ae,Make sure we get npm onto the box.
1349,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,0881a6ec4bc21a652676897a6a7d3f8ff92a0233,"Tell deploy script to compile the nunjucks templates.

Through the makefile, it'll install any necessary npm packages first. None of the packages are needed in production; we just need them to build the templates."
1350,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,3b86be5db455f77967a93ad0aa338ba838ee4004,"Merge ui into the bug-964091 branch to get the excision of the old Python 2.6 bits, which wouldn't work against Saucy, which we're about to update the Vagrant box to."
1351,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,edd0e5299c4359d4741bfaffd241abdb18526582,"Upgrade Vagrant box to saucy.

Motivation: this gives us a new enough npm to run all our npm stuff.

As a bonus, we get packaged versions of LLVM and clang and can stop yanking down binaries from llvm.org all the time, so we delete the install_llvm script.

Swapped out puppet for a simple shell script because puppet was stuck in a CPU-pegging loop during ""vagrant up"". strace said it was just calling getdent() over and over again. I've had enough of puppet and its overcomplication and unsuitable failure modes for our purposes. [I later found out that it was out-of-date guest additions that were causing the loop, but I've been meaning to oust puppet for some time.]

While I was at it...
* Started using peep instead of pip on the Vagrant box for DXR requirements.
* Stopped installing all the build deps of Firefox.
* Upgraded Vagrant box to LLVM and clang 3.3."
1352,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,596ad9f63c96e24a738b8c26dda6a3d2509d3914,Double memory on the Vagrant box. We seemed to have our peep process killed by the OOM sniffer on CI.
1353,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,6f16c27fcb1a058800e56a52acc0a2dab2c43f09,"Let's try again, more heavy-handedly this time, just to rule this out."
1354,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,0aa42c93cc9bf2e2c3ac6ae91b0c09834a709b2d,Remove no-longer-used options from vagrantconfig.
1355,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,5c2211bf1f8e991ed0a04d35d3c74210e7c9ed40,"Let's try pip instead of peep and see if that says ""Killed""."
1356,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,099d12c544461f490c46ba359dcfa541fe04ba92,"Comment out setup.py develop. Let's see if it gets through provisioning now.

If it does, it was probably something about setup.py develop and peep: closing or otherwise messing with stdin or stdout, causing SSH to hang up?"
1357,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,92e8edca43dae7c0464a765641cb63569d4802eb,"Let's try bringing back setup.py develop and forcing the allocation of pseudo-terminals in ssh.

Build 442 said...
Pseudo-terminal will not be allocated because stdin is not a terminal.
bash: line 1: 14458 Killed                  make clean
...which was the only suspicious passage."
1358,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,fd8683f07c50a8f9561409842f07c0113e7e4a87,"""vagrant ssh"" doesn't take -t -t. Oops.

Let's just put an echo in there and flail around."
1359,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,76c0e47154a1cc3ef0776e90e1b7c9f08b37b2e2,Let's see if it's the status code from setup.py develop that's causing it to be killed.
1360,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,818e471cca7a3412c31af6904e74c6256f31ec76,"Let's see what setup.py develop is saying, if anything."
1361,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,3890b8af8e1b0afedb652ab213e57ddbd013c522,Do shell scripting better.
1362,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,d59d08c2e1f0ccae423db2ae96e6160796d78189,"Hamhandedly put the actual ""make"" calls into the provisioning script so (hopefully) we can see a little better what they're doing. (-x and all)"
1363,https://api.github.com/repos/mozilla/dxr/pulls/236,236,New file-view performance! New OS! New compiled templates! New LLVM!,"Santa Claus is in our booth, and....

Anyway, this obsoletes #234, because I don't have push to @ossreleasefeed's repo. Let's see if Leeroy passes it (i.e. whether the version of Vagrant on CI is compatible with the guest additions on this image).
",erikrose,295816,2014-02-06T04:25:16Z,MEMBER,False,13668,4468,192,Powerful search for large codebases,Python,403d39dc4b82909ccbf42a92f791a511642a0304,Turn on debug for make.
1364,https://api.github.com/repos/mozilla/dxr/pulls/235,235,Bug965665 keep case sensitivity checkbox and query on same line,"@erikrose r?
",ghost,10137,2014-02-05T14:18:12Z,NONE,False,24,40,2,Powerful search for large codebases,Python,0f17dab011ee223884666fb4d09a38243fefad4c,"Fix Bug 965665, keep case sensitive checkbox on same line, and other tweaks"
1365,https://api.github.com/repos/mozilla/dxr/pulls/235,235,Bug965665 keep case sensitivity checkbox and query on same line,"@erikrose r?
",ghost,10137,2014-02-05T14:18:12Z,NONE,False,24,40,2,Powerful search for large codebases,Python,8648494f5b3c0511ed1aa3e25c70a17b6941e42d,This addresses the problem in screenshot 2
1366,https://api.github.com/repos/mozilla/dxr/pulls/235,235,Bug965665 keep case sensitivity checkbox and query on same line,"@erikrose r?
",ghost,10137,2014-02-05T14:18:12Z,NONE,False,24,40,2,Powerful search for large codebases,Python,6b02a66c4af17baa8848a62f9eaff8685e195461,This commit addresses the problems described in the first screen shot related to the filters drop down
1367,https://api.github.com/repos/mozilla/dxr/pulls/234,234,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect","@erikrose r?

After or before starting the server in the VM just run

```
grunt dev
```

This will precompile the nunjucks templates and start the watch process that will, upon a change to any of the templates, rerun the nunjucks target.

From what I can see the changes in this PR is making a definite difference but, I am only testing against files of ~25,000 lines. 
",ghost,10137,2014-01-31T13:03:11Z,NONE,False,80,4218,11,Powerful search for large codebases,Python,5318f8382163e94f4d951d65aa48190f0ea23ac4,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect"
1368,https://api.github.com/repos/mozilla/dxr/pulls/234,234,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect","@erikrose r?

After or before starting the server in the VM just run

```
grunt dev
```

This will precompile the nunjucks templates and start the watch process that will, upon a change to any of the templates, rerun the nunjucks target.

From what I can see the changes in this PR is making a definite difference but, I am only testing against files of ~25,000 lines. 
",ghost,10137,2014-01-31T13:03:11Z,NONE,False,80,4218,11,Powerful search for large codebases,Python,e8c3d15303b498dc17dee2d8fbd065c45f38e24f,do not add dxr/static/js/templates.js to source control
1369,https://api.github.com/repos/mozilla/dxr/pulls/234,234,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect","@erikrose r?

After or before starting the server in the VM just run

```
grunt dev
```

This will precompile the nunjucks templates and start the watch process that will, upon a change to any of the templates, rerun the nunjucks target.

From what I can see the changes in this PR is making a definite difference but, I am only testing against files of ~25,000 lines. 
",ghost,10137,2014-01-31T13:03:11Z,NONE,False,80,4218,11,Powerful search for large codebases,Python,16c86afd1386d04980729472a876cae975a5040d,Change from multiple rows on file views to single table rows
1370,https://api.github.com/repos/mozilla/dxr/pulls/234,234,"Fix Bug 964091, precompile nunjucks templates always, remove pointers bit as it is strangely having the opposite effect","@erikrose r?

After or before starting the server in the VM just run

```
grunt dev
```

This will precompile the nunjucks templates and start the watch process that will, upon a change to any of the templates, rerun the nunjucks target.

From what I can see the changes in this PR is making a definite difference but, I am only testing against files of ~25,000 lines. 
",ghost,10137,2014-01-31T13:03:11Z,NONE,False,80,4218,11,Powerful search for large codebases,Python,4daac093b2141cdf91ab9960ee5dac9569146235,Added templates-local for local development with nunjucks
1371,https://api.github.com/repos/mozilla/dxr/pulls/233,233,"Fix Bug 964413, ensure that highlighted anchor is never hidden behind header","@erikrose r?
",ghost,10137,2014-01-30T15:18:54Z,NONE,True,33,13,1,Powerful search for large codebases,Python,1296b6a2629da7a29022ebf73d2b637934282c34,"Fix Bug 964413, ensure that highlighted anchor is never hidden behind header"
1372,https://api.github.com/repos/mozilla/dxr/pulls/233,233,"Fix Bug 964413, ensure that highlighted anchor is never hidden behind header","@erikrose r?
",ghost,10137,2014-01-30T15:18:54Z,NONE,True,33,13,1,Powerful search for large codebases,Python,3cf0ec547274a6cb577fd16ae47eb8f0e76cf459,Tweaking of scrollIntoView function and small refactor
1373,https://api.github.com/repos/mozilla/dxr/pulls/232,232,Fix back/forwards behaviour and titles.,"Rebased and fixed #147.
",nrc,762626,2014-01-25T20:30:54Z,CONTRIBUTOR,True,44,3,2,Powerful search for large codebases,Python,4962a01cf34d50d5f7351321b20e6353cb448c90,Fix back/forwards behaviour and titles.
1374,https://api.github.com/repos/mozilla/dxr/pulls/232,232,Fix back/forwards behaviour and titles.,"Rebased and fixed #147.
",nrc,762626,2014-01-25T20:30:54Z,CONTRIBUTOR,True,44,3,2,Powerful search for large codebases,Python,e998cde7e7bf578597c9896f6aed9975818d7563,Merge branch 'ui' of https://github.com/mozilla/dxr into ui
1375,https://api.github.com/repos/mozilla/dxr/pulls/232,232,Fix back/forwards behaviour and titles.,"Rebased and fixed #147.
",nrc,762626,2014-01-25T20:30:54Z,CONTRIBUTOR,True,44,3,2,Powerful search for large codebases,Python,96000cbd13336c384b6616b6599edb82df17cdec,Don't update the history state after searching until a longer timout (2s) expires.
1376,https://api.github.com/repos/mozilla/dxr/pulls/232,232,Fix back/forwards behaviour and titles.,"Rebased and fixed #147.
",nrc,762626,2014-01-25T20:30:54Z,CONTRIBUTOR,True,44,3,2,Powerful search for large codebases,Python,2374f3e67edf34bb0c40d2b825116d9ef8f61dc0,Work around Chome's broken load/onpopstate behaviour
1377,https://api.github.com/repos/mozilla/dxr/pulls/231,231,Polish look and feel. Ref bug 959863.,"What do you think, Schalk? I'm looking for any place where I clumsily knocked over any undocumented CSS tower you built and also anything else that greatly offends you.
- Change yellow-green color scheme to a more neutral gray.
- Remove thick black band separating search panel from the rest of the page; it draws my eye.
- For the same reason, recolor folder listing table header.
- Darken Switch Tree menu enticingly on hover.
- Tighten up leading on code listings so it’s a little easier to see the shapes of block structures.
- Rig result snippets and code listings so mousing over a line highlights the line number as well. This makes it easy to find the number of a line without having to distractingly zebra-stripe the whole thing. (I’m willing to zebra-stripe the folder listings because they’re not as mentally demanding to read.
- Make the entire line-number table cell in code listings clickable, not just the line number itself.
- Put the tree name in the search box placeholder text to reinforce that you’re searching only the selected tree.

More to come.
",erikrose,295816,2014-01-24T06:50:18Z,MEMBER,True,59,30,5,Powerful search for large codebases,Python,ba1d2d529364805ec55bddb8293947d3431b9890,"Polish look and feel. Ref bug 959863.

* Change yellow-green color scheme to a more neutral gray.
* Remove thick black band separating search panel from the rest of the page; it draws my eye.
* For the same reason, recolor folder listing table header.
* Darken Switch Tree menu enticingly on hover.
* Tighten up leading on code listings so it’s a little easier to see the shapes of block structures.
* Rig result snippets and code listings so mousing over a line highlights the line number as well. This makes it easy to find the number of a line without having to distractingly zebra-stripe the whole thing. (I’m willing to zebra-stripe the folder listings because they’re not as mentally demanding to read.
* Make the entire line-number table cell in code listings clickable, not just the line number itself.
* Put the tree name in the search box placeholder text to reinforce that you’re searching only the selected tree.

More to come."
1378,https://api.github.com/repos/mozilla/dxr/pulls/231,231,Polish look and feel. Ref bug 959863.,"What do you think, Schalk? I'm looking for any place where I clumsily knocked over any undocumented CSS tower you built and also anything else that greatly offends you.
- Change yellow-green color scheme to a more neutral gray.
- Remove thick black band separating search panel from the rest of the page; it draws my eye.
- For the same reason, recolor folder listing table header.
- Darken Switch Tree menu enticingly on hover.
- Tighten up leading on code listings so it’s a little easier to see the shapes of block structures.
- Rig result snippets and code listings so mousing over a line highlights the line number as well. This makes it easy to find the number of a line without having to distractingly zebra-stripe the whole thing. (I’m willing to zebra-stripe the folder listings because they’re not as mentally demanding to read.
- Make the entire line-number table cell in code listings clickable, not just the line number itself.
- Put the tree name in the search box placeholder text to reinforce that you’re searching only the selected tree.

More to come.
",erikrose,295816,2014-01-24T06:50:18Z,MEMBER,True,59,30,5,Powerful search for large codebases,Python,6670d906a11d7cd638ccba870574537af3f3534c,Put each selector on its own line.
1379,https://api.github.com/repos/mozilla/dxr/pulls/231,231,Polish look and feel. Ref bug 959863.,"What do you think, Schalk? I'm looking for any place where I clumsily knocked over any undocumented CSS tower you built and also anything else that greatly offends you.
- Change yellow-green color scheme to a more neutral gray.
- Remove thick black band separating search panel from the rest of the page; it draws my eye.
- For the same reason, recolor folder listing table header.
- Darken Switch Tree menu enticingly on hover.
- Tighten up leading on code listings so it’s a little easier to see the shapes of block structures.
- Rig result snippets and code listings so mousing over a line highlights the line number as well. This makes it easy to find the number of a line without having to distractingly zebra-stripe the whole thing. (I’m willing to zebra-stripe the folder listings because they’re not as mentally demanding to read.
- Make the entire line-number table cell in code listings clickable, not just the line number itself.
- Put the tree name in the search box placeholder text to reinforce that you’re searching only the selected tree.

More to come.
",erikrose,295816,2014-01-24T06:50:18Z,MEMBER,True,59,30,5,Powerful search for large codebases,Python,a440db92fc7ce865a58df9e647d82522316d130f,"Make entire rows of the folder-contents tables clickable.

...with no JS (so we get to see link addresses on mouseover, command-click to open in a new window, etc.), non-linked padding between columns, or other horrors. Please tell me there are no other horrors.

Essentially, made the <a> tags display-block, and moved the padding from the table cells to the <a> tags themselves. Then I had to move the icon positioning around to compensate. The triple repeat of the links in the markup is unfortunate, but I thought it better than copying it around with JS. It should pretty much zip out.

Also shifted the folder icon down a tad so all the icons are level with the text baseline."
1380,https://api.github.com/repos/mozilla/dxr/pulls/231,231,Polish look and feel. Ref bug 959863.,"What do you think, Schalk? I'm looking for any place where I clumsily knocked over any undocumented CSS tower you built and also anything else that greatly offends you.
- Change yellow-green color scheme to a more neutral gray.
- Remove thick black band separating search panel from the rest of the page; it draws my eye.
- For the same reason, recolor folder listing table header.
- Darken Switch Tree menu enticingly on hover.
- Tighten up leading on code listings so it’s a little easier to see the shapes of block structures.
- Rig result snippets and code listings so mousing over a line highlights the line number as well. This makes it easy to find the number of a line without having to distractingly zebra-stripe the whole thing. (I’m willing to zebra-stripe the folder listings because they’re not as mentally demanding to read.
- Make the entire line-number table cell in code listings clickable, not just the line number itself.
- Put the tree name in the search box placeholder text to reinforce that you’re searching only the selected tree.

More to come.
",erikrose,295816,2014-01-24T06:50:18Z,MEMBER,True,59,30,5,Powerful search for large codebases,Python,c4c03d61b222d37438277833d4b3a84159660725,"Stop the code from jumping around when a word is highlit.

Reduce the width, but keep the height so the top of the highlight coincides with the top of the line's hover highlight."
1381,https://api.github.com/repos/mozilla/dxr/pulls/230,230,"Port dxr-{build,serve} commands to argparse.","Also, use the entry_points attribute of setuptools.
",berkerpeksag,26338,2014-01-22T17:55:34Z,CONTRIBUTOR,False,135,130,16,Powerful search for large codebases,Python,6658f143f318c516300e96eabddf7c7132106647,"Port dxr-{build,serve} commands to argparse.

Also, use the entry_points attribute of setuptools."
1382,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,a6b717f742af8a64e3ced941475d1ded3b15a226,Prevent end of path line slashes being added in SAYT
1383,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,55b5aff8dc27eb3313b2b4109ea359c95d36d26f,Fix paths display during SAYT and only add data-path to folder links
1384,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,3e669155a98a9fa6201c9013c75ab38ee8c23ad8,Ensure paths are styled and uses same logic everywhere
1385,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,e9b72b0d89a38ae816845a99adcbc73d300b2d35,"Fix Bug 967168, add context menu for dir links"
1386,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,ef54140e0e2abd22d5eb34388ae946d8ef7e768d,consistency of var use ftw
1387,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,90f7c2f84da790b90b1fc7eb63ef50dac1fd4049,Changes based on review feedback
1388,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,bf78842b10a2aa709636b08348a0f759ef4a3ccd,Small changes to slightly improve the path line bit in search html
1389,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,e6b5c9a0df5e991ea509b06c36469000fffda205,Changes based on review on commit 90f7c2f84da790b90b1fc7eb63ef50dac1fd4049
1390,https://api.github.com/repos/mozilla/dxr/pulls/229,229,Bug957168 context menu for dir links,"@erikrose r?
",ghost,10137,2014-01-21T10:19:42Z,NONE,False,178,97,11,Powerful search for large codebases,Python,af1d34f6b30614297d471358895e45eb11bddd07,reverted changes to search html
1391,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,bffc49348a81d2a00f100e1dca8f0e6d183f0650,first bit of the new UI
1392,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,a3fe54b6e32f9e1eb1d0ba8a887458729dce4ea8,changes based on review and discussions on github
1393,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,3a07db44bb5461e9d838bf8a85696badbd411e4d,if it is a folder it is a folder
1394,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,c16d906287fc3040760fac3391f90c3da19947eb,remove test reddis
1395,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,66b6f46b277ba767445858aa951c96656793c05f,adding node modules
1396,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,95ad194319f939915545289f763dc217c7217841,"Stop ignoring node_modules.

We've decided to check it in for now so we don't need npm (or to trust another remote thing) on the server."
1397,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,d59021585e376364803fb5fb8b7f0c3b6a7ce3eb,"Merge the beginnings of the UI refit. Close #152. Refs bug 860271.

Some of the widgets are in place, but little works yet. Most of the JS has been ripped out and will be redone from scratch, more nicely."
1398,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,d499ee42d0b7ce513b65db2d0177944df83f15af,Merge in the --branch option to the deploy script.
1399,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,ed501a7b305cfdbde031787bccf3a178156ded51,first commit of advanced search
1400,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,068d11a2b3ca66c8a7ab534aaffdb282682d9d65,seond revision of advanced search
1401,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,c89722555078c77f4c5376d83021b75f92a74376,further revisions on advanced search
1402,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,5ff9e616e0130a399bc84df16d68df4a358b491d,"Merge pull request #170 from ossreleasefeed/ui-advanced

first commit of advanced search"
1403,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,03da86a64cf2055135d966d05629df5114643821,"Fix Bug 932264, minor tweaks to advanced search UI"
1404,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,6a8c8c11c02a505891a2858d2f95025556bac4b4,"Merge pull request #171 from ossreleasefeed/bug932264-minor-enhancements-to-as

Fix Bug 932264, minor tweaks to advanced search UI"
1405,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,30c796b3b7be918b0dc1e692429daca9e7d59abd,Merge master into ui to get the format-sensitive deployment script.
1406,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,64c686a23bd5070f7c4424e5e1a10c5405a6d7f7,Correct an ARIA label.
1407,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,90491d9f2fff5d732bfb300820e166cf88c05ec6,"Look for a ""ui-0"" instance, which, when it exists, will be built with the ui branch's templates.

This should stop all the JS errors and other puzzling misbehavior on dxr.allizom.org."
1408,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,a9a362a43b4b78555cd02c536bc859179d4bbf73,"Fix Bug 936199, stop autofocussing the query field"
1409,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,676dc8c45896594e979a615ca322a532da47433d,"Merge pull request #175 from ossreleasefeed/bug936199-stop-autofocus-on-search-field

Fix Bug 936199, stop autofocussing the query field"
1410,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,2d0bea2d6ebab49f2b4d2353242217cf9f630db0,"Fix bug 935887, reintroduce instant search for landing page"
1411,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,98d846dee4a3e2748ce7806430cd97780cde09aa,tweaks and general fixes
1412,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,6d5cced0502fe3ddc562f119e3746cdbf7eeb596,add content container back to landing page
1413,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,b34757efc31c872986a33357da7483bf50bd69c2,Add logic for redirects on enter
1414,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,bd6179ce12a7a49f3a07896f085f2cc415413165,Added some comments to submit handler
1415,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,48969b80075d00ab4bdf507f5379f420f6f1fdd9,fix search.html to include a content container
1416,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,06c1de78502604d82589030625a79d37026207d5,"Merge pull request #177 from ossreleasefeed/bug935887-reintroduce-search-as-you-type

Fix bug 935887, reintroduce search as you type (PR #177)"
1417,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,dcea6b5a23a8d9fb7f8f061911592dd3f08c23a0,merge master onto ui
1418,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,a615c56a48e12ba536737ab9004c1108fcf670b3,"Fix Bug 938893, do not add a slash if there is only one item in array"
1419,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,bb483fc818f271b776e32a464a378ead7f7b483f,change path to path_index
1420,https://api.github.com/repos/mozilla/dxr/pulls/228,228,"Remove the last repetition of the Switch Tree markup, stop supporting custom templates, and merge the 2 template folders.",,erikrose,295816,2014-01-15T23:10:18Z,MEMBER,True,6940,4425,87,Powerful search for large codebases,Python,24987f306a47e21d9754af68c0e73e140139a6c7,"Merge pull request #181 from ossreleasefeed/bug938893-spurious-slashes-in-search-results

Fix Bug 938893, do not add a slash if there is only one item in array"
1421,https://api.github.com/repos/mozilla/dxr/pulls/227,227,"Fix Bug 959858, provide links to search results for direct hit","@erikrose r?
",ghost,10137,2014-01-15T14:34:28Z,NONE,False,35,0,2,Powerful search for large codebases,Python,afb87d123da7e836464a50f15455e0ce1c869789,"Fix Bug 959858, provide links to search results for direct hit"
1422,https://api.github.com/repos/mozilla/dxr/pulls/226,226,ignore node_modules,"@erikrose r?
",ghost,10137,2014-01-15T09:55:34Z,NONE,False,1,0,1,Powerful search for large codebases,Python,0a6729da2195be21f6dc77430b049cf912b5de59,ignore node_modules
1423,https://api.github.com/repos/mozilla/dxr/pulls/225,225,fix conflicting plugins error message,"Print out a more correct message when a plugin is marked as both enabled and disabled.
Previously:

```
File ""/home/vagrant/dxr/dxr/config.py"", line 101, in __init__
    print >> sys.stderr, msg % (p, name)
UnboundLocalError: local variable 'p' referenced before assignment
```

Now:

```
Plugin: 'pygmentize' is both enabled and disabled
Plugin: 'clang' is both enabled and disabled
```
",pelmers,2406051,2014-01-14T00:40:05Z,CONTRIBUTOR,False,9,5,1,Powerful search for large codebases,Python,49718af954a8ea99c960881156c35ecd4059595b,fix conflicting plugins error message
1424,https://api.github.com/repos/mozilla/dxr/pulls/224,224,Bug949608 restore infinite scroll,"@erikrose r? Let the discussion begin ;) Let me know your initial thoughts. One question I have is related to the state management we are doing here. I am not sure of the exact instances when we will need to use this. I have only done very limited testing but, so far, hitting that back button after say, having clicked on a result and being sent to a file view does not trigger a reload nor a popstate...
",ghost,10137,2014-01-13T14:57:21Z,NONE,True,212,102,6,Powerful search for large codebases,Python,f4d54ba13b7bc6892b33dbda4894bf5f19d080c2,"Fix Bug 949608, impliment infinite scroll"
1425,https://api.github.com/repos/mozilla/dxr/pulls/223,223,Distinguish anonymous namespaces that are in different files.,"This avoids confusing otherwise separate functions.
",abbeyj,99402,2014-01-10T23:21:56Z,CONTRIBUTOR,False,135,53,8,Powerful search for large codebases,Python,236f84cb0a4803be8a2b582977d8f561dda8a8e7,Move getQualifiedName to be a member function.
1426,https://api.github.com/repos/mozilla/dxr/pulls/223,223,Distinguish anonymous namespaces that are in different files.,"This avoids confusing otherwise separate functions.
",abbeyj,99402,2014-01-10T23:21:56Z,CONTRIBUTOR,False,135,53,8,Powerful search for large codebases,Python,1e114f5ae00ccac0901995887e99a506667f68be,Make getFileInfo take a (const std:string &) as it doesn't need to modify its parameter.
1427,https://api.github.com/repos/mozilla/dxr/pulls/223,223,Distinguish anonymous namespaces that are in different files.,"This avoids confusing otherwise separate functions.
",abbeyj,99402,2014-01-10T23:21:56Z,CONTRIBUTOR,False,135,53,8,Powerful search for large codebases,Python,3456bcb42efe8dde33058941d680b3af9acfc5d4,Distinguish anonymous namespaces that are in different files.
1428,https://api.github.com/repos/mozilla/dxr/pulls/223,223,Distinguish anonymous namespaces that are in different files.,"This avoids confusing otherwise separate functions.
",abbeyj,99402,2014-01-10T23:21:56Z,CONTRIBUTOR,False,135,53,8,Powerful search for large codebases,Python,5c4fd8e2ea535d3628c648fe9c1aa122ce72a323,Add tests.
1429,https://api.github.com/repos/mozilla/dxr/pulls/222,222,"Fix Bug 952260, do not show switch tree if only one tree","@erikrose r?
",ghost,10137,2014-01-08T20:43:41Z,NONE,True,2,0,1,Powerful search for large codebases,Python,8d4b414655d7356b8a07257e5b99bff1b15de049,"Fix Bug 952260, do not show switch tree if only one tree"
1430,https://api.github.com/repos/mozilla/dxr/pulls/221,221,Preliminary steps to get Grunt into code base for front end automation,"@erikrose r? This looks very scare but it really is not ;) So, the one thing that works in this now, is to install all the dev dependencies using npm install from the root.

Next you can run:

```
grunt dev
```

At the moment this will lint all the JS, which should pass ;) and it will seem to run a task called uncss but, there is a bug in the module at the moment that I heard from Addy is fixed, and will be pushed to npm very soon, so once that is pushed, this will strip out all CSS we do not actually need. This is meant as a tool we can run once in a while to ensure we do not drag dead CSS around and cause bloat.

From here on there are a bunch of things I will be adding, like minifying our static assets, add js unit tests and some automated UI flow testing using Casper. Let me know what your think.
",ghost,10137,2014-01-08T20:21:58Z,NONE,True,178,25234,76,Powerful search for large codebases,Python,0ab8ef900157506bc68dc23fe6e7b7f12bade773,Preliminary steps to get Grunt into code base for front end automation
1431,https://api.github.com/repos/mozilla/dxr/pulls/221,221,Preliminary steps to get Grunt into code base for front end automation,"@erikrose r? This looks very scare but it really is not ;) So, the one thing that works in this now, is to install all the dev dependencies using npm install from the root.

Next you can run:

```
grunt dev
```

At the moment this will lint all the JS, which should pass ;) and it will seem to run a task called uncss but, there is a bug in the module at the moment that I heard from Addy is fixed, and will be pushed to npm very soon, so once that is pushed, this will strip out all CSS we do not actually need. This is meant as a tool we can run once in a while to ensure we do not drag dead CSS around and cause bloat.

From here on there are a bunch of things I will be adding, like minifying our static assets, add js unit tests and some automated UI flow testing using Casper. Let me know what your think.
",ghost,10137,2014-01-08T20:21:58Z,NONE,True,178,25234,76,Powerful search for large codebases,Python,ccc2cb7990631a6cd78d2161d2b6c07cf82d1e1f,merged ui into grunt integration to get infinite scroll
1432,https://api.github.com/repos/mozilla/dxr/pulls/220,220,Add support for clang 3.4.,,abbeyj,99402,2014-01-07T20:38:25Z,CONTRIBUTOR,True,12,0,1,Powerful search for large codebases,Python,86607579a343536f2a10787a155c0002bff2746c,Add support for clang 3.4.
1433,https://api.github.com/repos/mozilla/dxr/pulls/219,219,"Fix Bug 956696, align drop down and extend width","@erikrose r? I have tried a bunch of different approaches and this is the closest I came to the ideal. Let me know your thoughts, thanks!
",ghost,10137,2014-01-07T13:03:38Z,NONE,True,94,79,5,Powerful search for large codebases,Python,03fea94e8706a458636f9639964b899d1f17cecb,"Fix Bug 956696, align drop down and extend width"
1434,https://api.github.com/repos/mozilla/dxr/pulls/217,217,"Fix Bug 948609, add filters selector to search field","@erikrose r?
",ghost,10137,2013-12-19T19:26:08Z,NONE,True,256,52,12,Powerful search for large codebases,Python,c794f772f744ab23eae694347b8f416d5e367e95,"Fix Bug 948609, add filters selector to search field"
1435,https://api.github.com/repos/mozilla/dxr/pulls/216,216,"Fix Bug 946274, added syntax highlighting and improved code view","@erikrose r?
",ghost,10137,2013-12-18T18:11:36Z,NONE,True,45,35,4,Powerful search for large codebases,Python,ba991be50a9d57ad0a215198cf046f5f36c247d6,"Fix Bug 946274, added syntax highlighting and improved code view"
1436,https://api.github.com/repos/mozilla/dxr/pulls/216,216,"Fix Bug 946274, added syntax highlighting and improved code view","@erikrose r?
",ghost,10137,2013-12-18T18:11:36Z,NONE,True,45,35,4,Powerful search for large codebases,Python,425e325d88ad1d11e5bb16d4e7cd958482031b46,"Fix Bug 946270, dont wrap code lines"
1437,https://api.github.com/repos/mozilla/dxr/pulls/216,216,"Fix Bug 946274, added syntax highlighting and improved code view","@erikrose r?
",ghost,10137,2013-12-18T18:11:36Z,NONE,True,45,35,4,Powerful search for large codebases,Python,e9af151e96d5828820445a16f1e33c7545da6b02,Make search header sticky
1438,https://api.github.com/repos/mozilla/dxr/pulls/215,215,Add ability to search for overrides of virtual methods.,,abbeyj,99402,2013-12-18T18:01:35Z,CONTRIBUTOR,True,249,12,4,Powerful search for large codebases,Python,931f01012292b7491649b0cbb19a24c2094bd5f7,Add ability to search for overrides of virtual methods.
1439,https://api.github.com/repos/mozilla/dxr/pulls/214,214,"Fix Bug 949511, highlight target line","@erikrose r?
",ghost,10137,2013-12-18T13:13:23Z,NONE,True,6,3,2,Powerful search for large codebases,Python,2beeeccf0626612418fe291783681f87118c65a4,"Fix Bug 949511, highlight target line"
1440,https://api.github.com/repos/mozilla/dxr/pulls/213,213,Update provisioning script to install nosetools,,jonasac,1088181,2013-12-17T21:47:19Z,CONTRIBUTOR,True,6,0,1,Powerful search for large codebases,Python,adc9715a35426e609603821fd7caf6c95110c3a0,Update provisioning script to install nosetools
1441,https://api.github.com/repos/mozilla/dxr/pulls/212,212,Decl in menu,"Put the decl or def of a variable, function, type, typedef, or macro in its popup menu.

Sits on top of PR 201.

To be really nice, we would want to have multiple lines in there, but that would be a bit more work. I think it is well worth having this version for now. I'll work on the multi-line version later.
",nrc,762626,2013-12-17T03:02:02Z,CONTRIBUTOR,False,158,44,3,Powerful search for large codebases,Python,6164588592a007051ae96fb38cff763f0b2e7177,Jump to (rather than search for) declarations if possible
1442,https://api.github.com/repos/mozilla/dxr/pulls/212,212,Decl in menu,"Put the decl or def of a variable, function, type, typedef, or macro in its popup menu.

Sits on top of PR 201.

To be really nice, we would want to have multiple lines in there, but that would be a bit more work. I think it is well worth having this version for now. I'll work on the multi-line version later.
",nrc,762626,2013-12-17T03:02:02Z,CONTRIBUTOR,False,158,44,3,Powerful search for large codebases,Python,ada444aced6ebaec05db4482c6aa54e21b5186d9,Better behaviour for menus for declarations
1443,https://api.github.com/repos/mozilla/dxr/pulls/212,212,Decl in menu,"Put the decl or def of a variable, function, type, typedef, or macro in its popup menu.

Sits on top of PR 201.

To be really nice, we would want to have multiple lines in there, but that would be a bit more work. I think it is well worth having this version for now. I'll work on the multi-line version later.
",nrc,762626,2013-12-17T03:02:02Z,CONTRIBUTOR,False,158,44,3,Powerful search for large codebases,Python,3447a4a3871ad8172d56eef2dc62c4734b668a63,"Put the decl or def of a variable, function, type, typedef, or macro in its popup menu."
1444,https://api.github.com/repos/mozilla/dxr/pulls/211,211,Fix context links when there are spans present in region. Fixes bug 9377...,"...10
",jonasac,1088181,2013-12-17T01:08:06Z,CONTRIBUTOR,True,4,4,1,Powerful search for large codebases,Python,254ed28f0b874e0e465c8f62c4f81ddbc5985039,Fix context links when there are spans present in region. Fixes bug 937710
1445,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,125a129c063ef1f1cdaca2873a7a612b31e735b3,Add a smoke test for multiple-tree support.
1446,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,b951f6a89c9ee5a04a4fa4072adf93dc3f2b9a1f,"Fix Bug 936492, implement tree selector for multi tree support"
1447,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,0f15340671a2aa8196d71f9a8c3cc30dd86d5bb6,"fixed search field focus problem, added selector to search page"
1448,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,c2babf6b81d7d4854d1b17808d8ce3cd8be56ca7,"tree selector everywhere ftw, and other tweaks"
1449,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,397dbde8830561988f4bc7a6012a0add0b7c78b5,added placeholder text to test options with long strings
1450,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,025fd608ac0c7e7320e7c0c8045b157615a43354,added parallel to file and folder views
1451,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,17e8af3d6efbb84c2eab1a56c5afc75e6137b706,parallel added to file and folder views
1452,https://api.github.com/repos/mozilla/dxr/pulls/210,210,"Fix Bug 936492, implement tree selector for multi tree support","@erikrose r?
",ghost,10137,2013-12-16T21:54:02Z,NONE,True,535,100,21,Powerful search for large codebases,Python,60bc698a9fd2031d50db0e1fc6e8e35619015aed,added placeholder text
1453,https://api.github.com/repos/mozilla/dxr/pulls/209,209,Redirect segmented urls to tree listing. Fixes bug 946300,,jonasac,1088181,2013-12-12T21:34:55Z,CONTRIBUTOR,False,6,0,1,Powerful search for large codebases,Python,3c10b282e7a19b996613c29ecc0f8f7448ff6895,Redirect segmented urls to tree listing. Fixes bug 946300
1454,https://api.github.com/repos/mozilla/dxr/pulls/208,208,"Fix Bug 948541, recheck everything regarding the new UI ready for prod","@erikrose r?
",ghost,10137,2013-12-12T13:52:25Z,NONE,True,317,3881,28,Powerful search for large codebases,Python,3938d94d20d84797306979268124b0ef0a1116e3,"Fix Bug 948541, recheck everything regarding the new UI ready for prod"
1455,https://api.github.com/repos/mozilla/dxr/pulls/208,208,"Fix Bug 948541, recheck everything regarding the new UI ready for prod","@erikrose r?
",ghost,10137,2013-12-12T13:52:25Z,NONE,True,317,3881,28,Powerful search for large codebases,Python,65e5ea1df0de47f5c184649bac829761e7d5256a,Some more tweaks and fix problem in webkit browsers with JS
1456,https://api.github.com/repos/mozilla/dxr/pulls/207,207,Add more options to dxr-serve.py,"-h, --host      Hostname to bind to
-j, --jobs      Number of processes to use
-t, --threaded  Use a separate thread for each request
",abbeyj,99402,2013-12-11T20:04:57Z,CONTRIBUTOR,False,25,6,3,Powerful search for large codebases,Python,5a491addd4bacdf1a7f9c3bb60ae752e17f9ffcc,"Add more options to dxr-serve.py:
-h, --host      Hostname to bind to
-j, --jobs      Number of processes to use
-t, --threaded  Use a separate thread for each request"
1457,https://api.github.com/repos/mozilla/dxr/pulls/207,207,Add more options to dxr-serve.py,"-h, --host      Hostname to bind to
-j, --jobs      Number of processes to use
-t, --threaded  Use a separate thread for each request
",abbeyj,99402,2013-12-11T20:04:57Z,CONTRIBUTOR,False,25,6,3,Powerful search for large codebases,Python,23f3757326036074968ab8638cb3a14667db4efb,Add --all option to dxr-serve.py as a shorter way of saying --host 0.0.0.0
1458,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,1384ee84c83927885206e0ca080a6712c427a4be,Get a failing test. Support case sensitivity from the querystring to the Query object and in enough of the test harness.
1459,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,ac517cc1f5bcac14a794b4a8f4c7157ad90dd54b,Update to a version of trilite that supports case-insensitive searches.
1460,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,f4101fb35db68fc750ba96da218b6ee8e99b8c90,"Add case-insensitivity support for negated text queries.

Factor up to create found_files() method in test harness. This comes in handy for making negative assertions about what's found: you don't have to brittle-ly list all the things that *are* found."
1461,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,bc66146aee0c785e0e805d0f4c3691659be338fe,"Add front-end support for case insensitivity.

* Switch from ""1"" to ""true"" for case-sensitivity querystring param, for consistency with the redirect param.
* Tighten the window of query-timing so it's just a tad less wildly uninformative.
* Rig it so clicking the Case-sensitive checkbox redoes the search.
* Factor out some repetition with regard to re-running searches."
1462,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,4851c4206a1ee32540278cb01418e433f18cc22c,Add some quick and dirty layout for the Case-sensitive checkbox to last us until the UI branch lands.
1463,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,27f15f3313fa9af7500fef482f2e948c0deff7c1,"Add (and default to) case-insensitive searching for free text. Fixes bug 813524.

The checkbox does not, at the moment, affect structural queries."
1464,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,5ffd3410e7cdabecdb2e7752ac8b3caaccd97cd9,Bump the format so the new case-insensitivity JS doesn't freak out when the built index pages have no case-sensitive checkbox to grab onto.
1465,https://api.github.com/repos/mozilla/dxr/pulls/206,206,Ui,"@erikrose Not sure whether I should just push this to the main repo's ui branch so, I am opening a PR. If I can just push, I will do so and close this PR.
",ghost,10137,2013-12-10T16:17:31Z,NONE,False,113,42,8,Powerful search for large codebases,Python,96f418647847a8623bbb873274f9040aef909930,"Merge branch 'master' into ui

Conflicts:
	dxr/templates/layout.html
	format"
1466,https://api.github.com/repos/mozilla/dxr/pulls/205,205,Bug938884 restore nav,"@erikrose r?
",ghost,10137,2013-12-10T12:33:54Z,NONE,True,184,52,10,Powerful search for large codebases,Python,e2a56f671351dd980330ca43d677e8c2d734c5ed,"Fix Bug 940406, ensure JSON is always returned for Ajax request to avoid parse errors"
1467,https://api.github.com/repos/mozilla/dxr/pulls/205,205,Bug938884 restore nav,"@erikrose r?
",ghost,10137,2013-12-10T12:33:54Z,NONE,True,184,52,10,Powerful search for large codebases,Python,2b033650af95c940be63355e9a9206368508dc11,"Fix bug 938884, restore nav panel on file view"
1468,https://api.github.com/repos/mozilla/dxr/pulls/205,205,Bug938884 restore nav,"@erikrose r?
",ghost,10137,2013-12-10T12:33:54Z,NONE,True,184,52,10,Powerful search for large codebases,Python,dc5e95fee577044df0e301d6646106dabb79807b,Fine tuning the panel
1469,https://api.github.com/repos/mozilla/dxr/pulls/204,204,"Fix Bug 940406, ensure JSON is always returned for Ajax request to avoid parse errors","@erikrose r?
",ghost,10137,2013-12-09T17:41:22Z,NONE,True,16,14,2,Powerful search for large codebases,Python,e2a56f671351dd980330ca43d677e8c2d734c5ed,"Fix Bug 940406, ensure JSON is always returned for Ajax request to avoid parse errors"
1470,https://api.github.com/repos/mozilla/dxr/pulls/203,203,"Fix Bug 928892, non ajax search result ui should match ajax results","@erikrose r?
",ghost,10137,2013-12-09T15:41:50Z,NONE,False,121,114,2,Powerful search for large codebases,Python,0467ea97ee749c5b6de79d26c3b697b22a69b59c,"Fix Bug 928892, non ajax search result ui should match ajax results"
1471,https://api.github.com/repos/mozilla/dxr/pulls/202,202,Bug938214 restore context menus file view,,ghost,10137,2013-12-08T19:29:30Z,NONE,True,242,19,8,Powerful search for large codebases,Python,7e6ad0256b3017c2d27054befe78134fd71f44cf,"Fix Bug 938214, retore new context menu in file views"
1472,https://api.github.com/repos/mozilla/dxr/pulls/202,202,Bug938214 restore context menus file view,,ghost,10137,2013-12-08T19:29:30Z,NONE,True,242,19,8,Powerful search for large codebases,Python,902f20c13e2bca0ca4394b393bb0ae32e8c697ee,marged change from ui
1473,https://api.github.com/repos/mozilla/dxr/pulls/202,202,Bug938214 restore context menus file view,,ghost,10137,2013-12-08T19:29:30Z,NONE,True,242,19,8,Powerful search for large codebases,Python,2dc9e57854ecc176fde306c35f44459eb7635830,Further tweaks and enhancements based on feedback
1474,https://api.github.com/repos/mozilla/dxr/pulls/202,202,Bug938214 restore context menus file view,,ghost,10137,2013-12-08T19:29:30Z,NONE,True,242,19,8,Powerful search for large codebases,Python,c43722b719210eac393fd54e49aebecc006ce07f,Shorten menu titles
1475,https://api.github.com/repos/mozilla/dxr/pulls/202,202,Bug938214 restore context menus file view,,ghost,10137,2013-12-08T19:29:30Z,NONE,True,242,19,8,Powerful search for large codebases,Python,8a9f3aba33fafd023226f4f9ab4609daac97062e,"Merge branch 'ui' into bug938214-restore-context-menus-file-view

Conflicts:
	dxr/static/js/dxr.js"
1476,https://api.github.com/repos/mozilla/dxr/pulls/201,201,Jump to (rather than search for) declarations if possible,"Rather than just blindly adding 'search for declarations' to the menus for types, functions, and variables, we now check how many decls there actually are. If there are none, we do nothing, if there is one then we add a jump entry so we go directly to the decl, otherwise we add a search entry like we did before (plus add the number of decls which will be found there).

The second patch improves behaviour if the menu if for a decl. Now we never add a jump entry and only add a search entry if there are other decls.
",nrc,762626,2013-12-08T02:18:56Z,CONTRIBUTOR,False,63,21,1,Powerful search for large codebases,Python,6164588592a007051ae96fb38cff763f0b2e7177,Jump to (rather than search for) declarations if possible
1477,https://api.github.com/repos/mozilla/dxr/pulls/201,201,Jump to (rather than search for) declarations if possible,"Rather than just blindly adding 'search for declarations' to the menus for types, functions, and variables, we now check how many decls there actually are. If there are none, we do nothing, if there is one then we add a jump entry so we go directly to the decl, otherwise we add a search entry like we did before (plus add the number of decls which will be found there).

The second patch improves behaviour if the menu if for a decl. Now we never add a jump entry and only add a search entry if there are other decls.
",nrc,762626,2013-12-08T02:18:56Z,CONTRIBUTOR,False,63,21,1,Powerful search for large codebases,Python,ada444aced6ebaec05db4482c6aa54e21b5186d9,Better behaviour for menus for declarations
1478,https://api.github.com/repos/mozilla/dxr/pulls/200,200,Allow overriding any option from the config file on the command line,,nrc,762626,2013-12-07T20:55:01Z,CONTRIBUTOR,False,47,43,3,Powerful search for large codebases,Python,b3d653a3e04ca101754646e36e95a25d9f19862d,Allow overriding any option from the config file on the command line
1479,https://api.github.com/repos/mozilla/dxr/pulls/199,199,tests for partially qualified types/functions and file with line number,"Tests for #197 and #198
",nrc,762626,2013-12-07T09:50:50Z,CONTRIBUTOR,False,22,1,1,Powerful search for large codebases,Python,f789dbc7e7ff5a190f3c387537ff8160bf32ccd5,tests for partially qualified types/functions and file with line number
1480,https://api.github.com/repos/mozilla/dxr/pulls/198,198,handle partially qualified functions and types,"For classes like mozilla::layers::Layer, currently the full type works and Layer works, but layers::Layer does not. This patch fixes that
",nrc,762626,2013-12-07T09:49:14Z,CONTRIBUTOR,False,14,4,1,Powerful search for large codebases,Python,c5dd729c6dc763767b500ff4edf57aea5298eed0,handle partially qualified functions and types
1481,https://api.github.com/repos/mozilla/dxr/pulls/197,197,Linenumber,"Jump straight to line numbers in files, e.g., Layers.cpp:45.

(The second patch makes this work without a full path).
",nrc,762626,2013-12-07T09:47:59Z,CONTRIBUTOR,True,38,1,3,Powerful search for large codebases,Python,15be800d62d2b45dbd2998728cfd8973008fcea8,Direct search for filename:line_number
1482,https://api.github.com/repos/mozilla/dxr/pulls/197,197,Linenumber,"Jump straight to line numbers in files, e.g., Layers.cpp:45.

(The second patch makes this work without a full path).
",nrc,762626,2013-12-07T09:47:59Z,CONTRIBUTOR,True,38,1,3,Powerful search for large codebases,Python,adff2c49791d12e40cc373e73da9eb2913c39f40,direct search for files should work without a path
1483,https://api.github.com/repos/mozilla/dxr/pulls/197,197,Linenumber,"Jump straight to line numbers in files, e.g., Layers.cpp:45.

(The second patch makes this work without a full path).
",nrc,762626,2013-12-07T09:47:59Z,CONTRIBUTOR,True,38,1,3,Powerful search for large codebases,Python,e15b7327db2581a5e97feef5c50454fab372bd61,Add support for clang 3.4.
1484,https://api.github.com/repos/mozilla/dxr/pulls/197,197,Linenumber,"Jump straight to line numbers in files, e.g., Layers.cpp:45.

(The second patch makes this work without a full path).
",nrc,762626,2013-12-07T09:47:59Z,CONTRIBUTOR,True,38,1,3,Powerful search for large codebases,Python,074ca8f9d19c9911d503450b01bc70adb4a15fd2,replace a use of 'LIKE' with '='
1485,https://api.github.com/repos/mozilla/dxr/pulls/197,197,Linenumber,"Jump straight to line numbers in files, e.g., Layers.cpp:45.

(The second patch makes this work without a full path).
",nrc,762626,2013-12-07T09:47:59Z,CONTRIBUTOR,True,38,1,3,Powerful search for large codebases,Python,79a50c60cf086a735403fda896a1e423d5245696,add test
1486,https://api.github.com/repos/mozilla/dxr/pulls/196,196,order search results alphabetically,"order search results alphabetically
",nrc,762626,2013-12-07T04:32:33Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,1cf1da38756f93b14a339643ebc2c1e58cfbc805,order search results alphabetically
1487,https://api.github.com/repos/mozilla/dxr/pulls/195,195,Use JS with preprocessor pygments lexer,"Rebased issue 155. I'm not sure what version of Pygments we are using. If we are up to date, then JavascriptPreprocLexer exists in there repo so we don't need this local one. In which case I can update this pr, just let me know.
",nrc,762626,2013-12-07T04:23:52Z,CONTRIBUTOR,False,40,13,1,Powerful search for large codebases,Python,171921b22882a32ac81029bbc2d07375cadadaec,Use JS with preprocessor pygments lexer
1488,https://api.github.com/repos/mozilla/dxr/pulls/195,195,Use JS with preprocessor pygments lexer,"Rebased issue 155. I'm not sure what version of Pygments we are using. If we are up to date, then JavascriptPreprocLexer exists in there repo so we don't need this local one. In which case I can update this pr, just let me know.
",nrc,762626,2013-12-07T04:23:52Z,CONTRIBUTOR,False,40,13,1,Powerful search for large codebases,Python,5f30ee6aafc6f8e17cc72fa0336fe56fca19ef48,Inherit some fields as suggested by ErikRose
1489,https://api.github.com/repos/mozilla/dxr/pulls/194,194,"Fixes Bug 938880, added top of tree link","@erikrose r?
",ghost,10137,2013-12-06T21:30:12Z,NONE,True,27,8,4,Powerful search for large codebases,Python,c288af022fa66a0cb6f6c3839b95d4835bfc86a5,"Fixes Bug 938880, added top of tree link"
1490,https://api.github.com/repos/mozilla/dxr/pulls/193,193,"Fixes Bug 938873, make build timestamp subtle","@erikrose r?
",ghost,10137,2013-12-06T16:43:41Z,NONE,True,34,6,3,Powerful search for large codebases,Python,df3108f3810af06535bf3d3815a913b831defeec,"Fixes Bug 938873, make build timestamp subtle"
1491,https://api.github.com/repos/mozilla/dxr/pulls/193,193,"Fixes Bug 938873, make build timestamp subtle","@erikrose r?
",ghost,10137,2013-12-06T16:43:41Z,NONE,True,34,6,3,Powerful search for large codebases,Python,3bb063d4dfd7f45201d52571f17e0ef87fe5ae29,change date format and pad signle numbers
1492,https://api.github.com/repos/mozilla/dxr/pulls/192,192,Increase timeout for the installation of firefox build-deps.,"It's been timing out on Jenkins.
",erikrose,295816,2013-12-04T22:06:06Z,MEMBER,True,2,1,1,Powerful search for large codebases,Python,b9021530185aa66ca2143e7fb4336cf546897a95,"Increase timeout for the installation of firefox build-deps.

It's been timing out on Jenkins."
1493,https://api.github.com/repos/mozilla/dxr/pulls/191,191,"Fix Bug 938870, last part of the fix for the breadcrumbs","@erikrose r?
",ghost,10137,2013-12-04T12:25:05Z,NONE,True,19,19,3,Powerful search for large codebases,Python,ce043d47afd32b79787aec3c087540319a2b868c,"Fix Bug 938870, last part of the fix for the breadcrumbs"
1494,https://api.github.com/repos/mozilla/dxr/pulls/191,191,"Fix Bug 938870, last part of the fix for the breadcrumbs","@erikrose r?
",ghost,10137,2013-12-04T12:25:05Z,NONE,True,19,19,3,Powerful search for large codebases,Python,4c7b9f1659cfca70b786b11bc02d6edccebb8aa2,Change list to paragraph
1495,https://api.github.com/repos/mozilla/dxr/pulls/191,191,"Fix Bug 938870, last part of the fix for the breadcrumbs","@erikrose r?
",ghost,10137,2013-12-04T12:25:05Z,NONE,True,19,19,3,Powerful search for large codebases,Python,7abe0e3d74524eaab9b702ad7e16fbcf79b05f51,avoid spaces when copying and pasting the breadcrumb
1496,https://api.github.com/repos/mozilla/dxr/pulls/191,191,"Fix Bug 938870, last part of the fix for the breadcrumbs","@erikrose r?
",ghost,10137,2013-12-04T12:25:05Z,NONE,True,19,19,3,Powerful search for large codebases,Python,76260f3c804898eef766e27ea79ed5d598d8c797,copy paste fail fix
1497,https://api.github.com/repos/mozilla/dxr/pulls/190,190,Bug938214 restore context menus file view,"@erikrose r?
",ghost,10137,2013-12-04T11:15:32Z,NONE,True,242,19,8,Powerful search for large codebases,Python,7e6ad0256b3017c2d27054befe78134fd71f44cf,"Fix Bug 938214, retore new context menu in file views"
1498,https://api.github.com/repos/mozilla/dxr/pulls/190,190,Bug938214 restore context menus file view,"@erikrose r?
",ghost,10137,2013-12-04T11:15:32Z,NONE,True,242,19,8,Powerful search for large codebases,Python,902f20c13e2bca0ca4394b393bb0ae32e8c697ee,marged change from ui
1499,https://api.github.com/repos/mozilla/dxr/pulls/190,190,Bug938214 restore context menus file view,"@erikrose r?
",ghost,10137,2013-12-04T11:15:32Z,NONE,True,242,19,8,Powerful search for large codebases,Python,2dc9e57854ecc176fde306c35f44459eb7635830,Further tweaks and enhancements based on feedback
1500,https://api.github.com/repos/mozilla/dxr/pulls/190,190,Bug938214 restore context menus file view,"@erikrose r?
",ghost,10137,2013-12-04T11:15:32Z,NONE,True,242,19,8,Powerful search for large codebases,Python,c43722b719210eac393fd54e49aebecc006ce07f,Shorten menu titles
1501,https://api.github.com/repos/mozilla/dxr/pulls/189,189,Stop generating spurious references to member variables that are implici...,"...tly

constructed and do not have an explicit initializer specified on the
constructor.
",abbeyj,99402,2013-12-03T22:06:37Z,CONTRIBUTOR,False,30,2,2,Powerful search for large codebases,Python,5e7dcfe950067e468891dccec5f928748f49f934,"Stop generating spurious references to member variables that are implicitly
constructed and do not have an explicit initializer specified on the
constructor."
1502,https://api.github.com/repos/mozilla/dxr/pulls/189,189,Stop generating spurious references to member variables that are implici...,"...tly

constructed and do not have an explicit initializer specified on the
constructor.
",abbeyj,99402,2013-12-03T22:06:37Z,CONTRIBUTOR,False,30,2,2,Powerful search for large codebases,Python,57ed27a7243ce146136989add24f5870390dc346,Add docstring for MemberVariableCtorTests
1503,https://api.github.com/repos/mozilla/dxr/pulls/188,188,"Fix Bug 945679, disable pointer events on scroll and enable when scrolling stops","@erikrose r?
",ghost,10137,2013-12-03T12:59:26Z,NONE,True,20,0,1,Powerful search for large codebases,Python,149b8268ab4197f469e74eb9985bc7cd70630e63,"Fix Bug 945679, disable pointer events on scroll and enable when scroll stops"
1504,https://api.github.com/repos/mozilla/dxr/pulls/187,187,Build flags,"Allow skipping of build stages and serialisation of html-ification via config flags
",nrc,762626,2013-12-02T23:51:12Z,CONTRIBUTOR,False,52,29,3,Powerful search for large codebases,Python,c453157eff15e09830eef4debd96ca0cb88e43c8,docs
1505,https://api.github.com/repos/mozilla/dxr/pulls/187,187,Build flags,"Allow skipping of build stages and serialisation of html-ification via config flags
",nrc,762626,2013-12-02T23:51:12Z,CONTRIBUTOR,False,52,29,3,Powerful search for large codebases,Python,710e34bd24f36557c9bff52bc90ad91eae552e0f,disable_workers
1506,https://api.github.com/repos/mozilla/dxr/pulls/187,187,Build flags,"Allow skipping of build stages and serialisation of html-ification via config flags
",nrc,762626,2013-12-02T23:51:12Z,CONTRIBUTOR,False,52,29,3,Powerful search for large codebases,Python,b7c7950a5c7e74d85439837ab5280f7b06b2c648,skip_stages
1507,https://api.github.com/repos/mozilla/dxr/pulls/187,187,Build flags,"Allow skipping of build stages and serialisation of html-ification via config flags
",nrc,762626,2013-12-02T23:51:12Z,CONTRIBUTOR,False,52,29,3,Powerful search for large codebases,Python,a4652207fd8bed4afdcfb5b9ec4edd8b75292cc3,Refactor call to run_html_workers
1508,https://api.github.com/repos/mozilla/dxr/pulls/186,186,"Fix Bug 944699, fix responsive bug related to new layout","@erikrose r?
",ghost,10137,2013-11-29T16:28:35Z,NONE,True,9,3,1,Powerful search for large codebases,Python,7845244cd909905580ffcae2a877a99c73a8b9c8,"Fix Bug 944699, fix responsive bug related to new layout"
1509,https://api.github.com/repos/mozilla/dxr/pulls/185,185,"Fix Bug 943835, implement new layout tweaks","@erikrose r? Note this does not include the new tree selector yet, that will come in a follow on PR
",ghost,10137,2013-11-27T21:37:21Z,NONE,True,78,53,6,Powerful search for large codebases,Python,eea0f7694059b9dbc7167d414fd287942c0e037a,"Fix Bug 943835, implement new layout tweaks"
1510,https://api.github.com/repos/mozilla/dxr/pulls/184,184,Fix annotations being off by one line when there was no annotation,"on the first line in the file.
",abbeyj,99402,2013-11-26T21:37:52Z,CONTRIBUTOR,True,14,1,2,Powerful search for large codebases,Python,e7b1169c16663df4852350bbc2341eac547be5f5,"Fix annotations being off by one line when there was no annotation
on the first line in the file."
1511,https://api.github.com/repos/mozilla/dxr/pulls/183,183,"Fix Bug 938860, redirect to tree/source and add browse link","@erikrose r?

Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=938860
",ghost,10137,2013-11-25T13:38:18Z,NONE,True,17,5,4,Powerful search for large codebases,Python,4253e53172c5aed2c7b7bd350a9efd05657a6289,"Fix Bug 938860, redirect to tree/source and add browse link"
1512,https://api.github.com/repos/mozilla/dxr/pulls/183,183,"Fix Bug 938860, redirect to tree/source and add browse link","@erikrose r?

Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=938860
",ghost,10137,2013-11-25T13:38:18Z,NONE,True,17,5,4,Powerful search for large codebases,Python,e0367337fb0265e79f3a86c165bc02a05b34cc07,removed unnecessary browse link
1513,https://api.github.com/repos/mozilla/dxr/pulls/182,182,Bug938890 simplify as look,"@erikrose r?
",ghost,10137,2013-11-19T19:40:25Z,NONE,True,112,29,3,Powerful search for large codebases,Python,7fa1c99b0237bff358f0b3c06ba263d067b00d57,"Fix Bug 938890, simplify advanced search look and feel"
1514,https://api.github.com/repos/mozilla/dxr/pulls/182,182,Bug938890 simplify as look,"@erikrose r?
",ghost,10137,2013-11-19T19:40:25Z,NONE,True,112,29,3,Powerful search for large codebases,Python,b1872d7e2dc6966fa45f4dc79e71ecd1f33c8e3b,added media queries
1515,https://api.github.com/repos/mozilla/dxr/pulls/182,182,Bug938890 simplify as look,"@erikrose r?
",ghost,10137,2013-11-19T19:40:25Z,NONE,True,112,29,3,Powerful search for large codebases,Python,b38811f96e282669dd71ccd50a7a0af0b9726db5,further tweaking of the UI to make it more responsive
1516,https://api.github.com/repos/mozilla/dxr/pulls/182,182,Bug938890 simplify as look,"@erikrose r?
",ghost,10137,2013-11-19T19:40:25Z,NONE,True,112,29,3,Powerful search for large codebases,Python,09a266a32d400188e0aead6622c984d28aaa6fa5,Add min width to labels
1517,https://api.github.com/repos/mozilla/dxr/pulls/182,182,Bug938890 simplify as look,"@erikrose r?
",ghost,10137,2013-11-19T19:40:25Z,NONE,True,112,29,3,Powerful search for large codebases,Python,20e413ddd621ccd4c4f9ba2574de314df49f6ef4,moar responsiveness
1518,https://api.github.com/repos/mozilla/dxr/pulls/181,181,"Fix Bug 938893, do not add a slash if there is only one item in array","@erikrose r?
",ghost,10137,2013-11-19T15:38:27Z,NONE,True,11,4,1,Powerful search for large codebases,Python,a615c56a48e12ba536737ab9004c1108fcf670b3,"Fix Bug 938893, do not add a slash if there is only one item in array"
1519,https://api.github.com/repos/mozilla/dxr/pulls/181,181,"Fix Bug 938893, do not add a slash if there is only one item in array","@erikrose r?
",ghost,10137,2013-11-19T15:38:27Z,NONE,True,11,4,1,Powerful search for large codebases,Python,bb483fc818f271b776e32a464a378ead7f7b483f,change path to path_index
1520,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,bffc49348a81d2a00f100e1dca8f0e6d183f0650,first bit of the new UI
1521,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,a3fe54b6e32f9e1eb1d0ba8a887458729dce4ea8,changes based on review and discussions on github
1522,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,3a07db44bb5461e9d838bf8a85696badbd411e4d,if it is a folder it is a folder
1523,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,c16d906287fc3040760fac3391f90c3da19947eb,remove test reddis
1524,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,66b6f46b277ba767445858aa951c96656793c05f,adding node modules
1525,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,95ad194319f939915545289f763dc217c7217841,"Stop ignoring node_modules.

We've decided to check it in for now so we don't need npm (or to trust another remote thing) on the server."
1526,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,d59021585e376364803fb5fb8b7f0c3b6a7ce3eb,"Merge the beginnings of the UI refit. Close #152. Refs bug 860271.

Some of the widgets are in place, but little works yet. Most of the JS has been ripped out and will be redone from scratch, more nicely."
1527,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,d499ee42d0b7ce513b65db2d0177944df83f15af,Merge in the --branch option to the deploy script.
1528,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,ed501a7b305cfdbde031787bccf3a178156ded51,first commit of advanced search
1529,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,068d11a2b3ca66c8a7ab534aaffdb282682d9d65,seond revision of advanced search
1530,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,c89722555078c77f4c5376d83021b75f92a74376,further revisions on advanced search
1531,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,5ff9e616e0130a399bc84df16d68df4a358b491d,"Merge pull request #170 from ossreleasefeed/ui-advanced

first commit of advanced search"
1532,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,03da86a64cf2055135d966d05629df5114643821,"Fix Bug 932264, minor tweaks to advanced search UI"
1533,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,6a8c8c11c02a505891a2858d2f95025556bac4b4,"Merge pull request #171 from ossreleasefeed/bug932264-minor-enhancements-to-as

Fix Bug 932264, minor tweaks to advanced search UI"
1534,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,30c796b3b7be918b0dc1e692429daca9e7d59abd,Merge master into ui to get the format-sensitive deployment script.
1535,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,64c686a23bd5070f7c4424e5e1a10c5405a6d7f7,Correct an ARIA label.
1536,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,90491d9f2fff5d732bfb300820e166cf88c05ec6,"Look for a ""ui-0"" instance, which, when it exists, will be built with the ui branch's templates.

This should stop all the JS errors and other puzzling misbehavior on dxr.allizom.org."
1537,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,a9a362a43b4b78555cd02c536bc859179d4bbf73,"Fix Bug 936199, stop autofocussing the query field"
1538,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,676dc8c45896594e979a615ca322a532da47433d,"Merge pull request #175 from ossreleasefeed/bug936199-stop-autofocus-on-search-field

Fix Bug 936199, stop autofocussing the query field"
1539,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,2d0bea2d6ebab49f2b4d2353242217cf9f630db0,"Fix bug 935887, reintroduce instant search for landing page"
1540,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,98d846dee4a3e2748ce7806430cd97780cde09aa,tweaks and general fixes
1541,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,6d5cced0502fe3ddc562f119e3746cdbf7eeb596,add content container back to landing page
1542,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,b34757efc31c872986a33357da7483bf50bd69c2,Add logic for redirects on enter
1543,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,bd6179ce12a7a49f3a07896f085f2cc415413165,Added some comments to submit handler
1544,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,48969b80075d00ab4bdf507f5379f420f6f1fdd9,fix search.html to include a content container
1545,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,06c1de78502604d82589030625a79d37026207d5,"Merge pull request #177 from ossreleasefeed/bug935887-reintroduce-search-as-you-type

Fix bug 935887, reintroduce search as you type (PR #177)"
1546,https://api.github.com/repos/mozilla/dxr/pulls/180,180,Merged master into UI,"@erikrose I see this has a but load of commits even though I did it with the --no-commit flag. How do you want to proceed on this one?
",ghost,10137,2013-11-19T11:55:25Z,NONE,True,30142,173,89,Powerful search for large codebases,Python,dcea6b5a23a8d9fb7f8f061911592dd3f08c23a0,merge master onto ui
1547,https://api.github.com/repos/mozilla/dxr/pulls/179,179,Add Perforce support to omniglot.,,abbeyj,99402,2013-11-14T19:39:02Z,CONTRIBUTOR,True,64,1,1,Powerful search for large codebases,Python,f245109dcd0d7802d83b96647d548f4588410d2a,Add Perforce support to omniglot.
1548,https://api.github.com/repos/mozilla/dxr/pulls/178,178,highlight all uses of a link when it is selected,"When you use a menu, highlight all uses of the same variable (or type, or whatever). Works only when we have data from the Clang analysis.
",nrc,762626,2013-11-13T22:28:41Z,CONTRIBUTOR,False,55,27,5,Powerful search for large codebases,Python,f60adfa59521c7082703b7eab88be7d30dfb915c,highlight all uses of a link when it is selected
1549,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,2d0bea2d6ebab49f2b4d2353242217cf9f630db0,"Fix bug 935887, reintroduce instant search for landing page"
1550,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,98d846dee4a3e2748ce7806430cd97780cde09aa,tweaks and general fixes
1551,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,6d5cced0502fe3ddc562f119e3746cdbf7eeb596,add content container back to landing page
1552,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,b34757efc31c872986a33357da7483bf50bd69c2,Add logic for redirects on enter
1553,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,bd6179ce12a7a49f3a07896f085f2cc415413165,Added some comments to submit handler
1554,https://api.github.com/repos/mozilla/dxr/pulls/177,177,"Fix bug 935887, reintroduce instant search for landing page","@erikrose r?
",ghost,10137,2013-11-11T16:07:43Z,NONE,True,257,112,6,Powerful search for large codebases,Python,48969b80075d00ab4bdf507f5379f420f6f1fdd9,fix search.html to include a content container
1555,https://api.github.com/repos/mozilla/dxr/pulls/176,176,removed Ls from line number fragment,"Changed line-number fragment from #l5 to just #5. Lowercase Ls look like ones. 
Referenced here: https://wiki.mozilla.org/DXR_UI_Refresh#UI
",adnxn,596369,2013-11-11T11:29:05Z,NONE,False,6,6,4,Powerful search for large codebases,Python,5af648a9415dd2965f68daec98e9ab868057b3a5,removed Ls from line number fragment
1556,https://api.github.com/repos/mozilla/dxr/pulls/175,175,"Fix Bug 936199, stop autofocussing the query field","@erikrose r?
",ghost,10137,2013-11-11T09:39:40Z,NONE,True,1,1,1,Powerful search for large codebases,Python,a9a362a43b4b78555cd02c536bc859179d4bbf73,"Fix Bug 936199, stop autofocussing the query field"
1557,https://api.github.com/repos/mozilla/dxr/pulls/174,174,Injected names,"Linkify injected class names.

These are usually found when refering to a class template's own name
within the definition without specifying the type parameters on
the template.
",abbeyj,99402,2013-11-08T23:04:26Z,CONTRIBUTOR,False,20,0,2,Powerful search for large codebases,Python,bb720dd4cc0a42fec39d02aa755990cdd02b30f5,"Linkify injected class names.
These are usually found when refering to a class template's own name
within the definition without specifying the type parameters on
the template."
1558,https://api.github.com/repos/mozilla/dxr/pulls/174,174,Injected names,"Linkify injected class names.

These are usually found when refering to a class template's own name
within the definition without specifying the type parameters on
the template.
",abbeyj,99402,2013-11-08T23:04:26Z,CONTRIBUTOR,False,20,0,2,Powerful search for large codebases,Python,65c9782a8e70b43469fe8344ea47b3920cfb6cf6,Merge branch 'master' into injected-names
1559,https://api.github.com/repos/mozilla/dxr/pulls/173,173,Supply fallback for itertools.compress for Python 2.6,,abbeyj,99402,2013-11-07T18:02:05Z,CONTRIBUTOR,True,8,1,1,Powerful search for large codebases,Python,7f72d2630816164564263916b036fc80add2bb8a,Supply fallback for itertools.compress for Python 2.6
1560,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,4b000860082083e60f9f581abb4cf87b7ee49ec0,Make build_lines() PEP-8-compliant so I can stop being distracted while mucking with it.
1561,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,30527aef5887664e93cd7fba3e06bc7e5875670d,len(seq) > 0 --> seq
1562,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,3e3420894dedd4ad44b2d8c099eb1b8e8679e919,Add a couple comments assuaging and cementing my confusion.
1563,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,24eae5a5e03040d9af84cfe93585f9b2ad953ac4,Fix some whitespace in the file template.
1564,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,36cf06f73809fd56df2f1b1512abc897a8f9b530,"Rewrite build_lines so we no longer emit misbalanced tags and to support overlapping and line-spanning regions.

Add support for overlapping regions (not refs, because that would be a UI problem). Preserve the semantics of interleaved refs by translating to an equivalent balanced series of tags. This lets plugins be less coupled with each other: deployers no longer have to worry about which plugins get along with each other: even if we use different tokenizers for a language (as we do with clang and pygments), build_lines will reconcile their token boundaries.

It's also got test coverage now."
1565,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,9933ddc97985be44e39881987ea6ed65034ae998,Filter out zero-width tag spans.
1566,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,6770b0c78e392da6935a1abca6fe1ed8b927d6eb,Get html_lines working. Get first end-to-end test of build_lines working.
1567,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,001cf57ee400d03c4d6db8c7180947851f01bf45,"Make TagWriters emit unicode, to go with the rest of the output source code."
1568,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,c0465de2ec42b8b44d1cf2d0e3867e395dba0582,"Simplify tag_boundaries.

There's no need to chain all that stuff together, keeping regions and refs contiguous; we're going to sort it afterward anyway."
1569,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,1336c31ba062089300806b55d7b8768de3e96d6b,Add an explicit sort order for keeping Lines outermost and Refs next outermost.
1570,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,fc2fd85668249fe780cefa3415b02a98bd1253e3,"Make HTMLification of line-spanning tags work. Switch to a slice-based coordinate system.

The slice-based coordinates save code, as it turns out, and make tag balancing easier to get right, as we can just go ahead and yield reopening tags for temporary closers at the same offset as the temp closer. The old indexing scheme didn't like such overlaps of start- and endpoints.

Make html_lines tolerate Lines that aren't outside all the tags on the line. That saves a lot of painful complexity in the tag balancer, all in O(n)."
1571,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,9257dffe61e41314859ea557f6b3e8d6d5c13b65,"Add annotation support, and integrate the new region resolver back into the rest of the system.

* Make html_lines emit Markup objects.
* Remove an assert that should no longer be forbidden with the slice-based indexing scheme.
* Make annotations come out of the plugins in line order so we can just use merge() on them.
* Stop passing line numbers into the template; it can figure those out itself."
1572,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,df04d9b6d2ecf1a8448f498c1ff0b9a25458250f,"Add more console output during worker pool initializiation.

I had yet another no-CPU hang and want to be able to narrow down the cause next time."
1573,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,4260d42d2895cf7df8641f7dbdd95cb18d66b7d2,Fix a line_boundaries() crash when there aren't any tags.
1574,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,494bfe794d3fb18b46c294b9504e9b38df3db301,"Filter out zero-length spans.

They can cause starts to sort after ends, crashing the tag balancer."
1575,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,82ac5e6eb8d29837b83479066d3706e3f8ba2c10,"Tolerate None start- and endpoints.

Some plugin really still is spitting these out."
1576,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,073daa4cce5dad9d5493b4415c059c81bc8a19dd,Fix an UnboundLocal error for `id` when formatting an exception.
1577,https://api.github.com/repos/mozilla/dxr/pulls/172,172,Balance tags properly in HTML output,"Let's see if this passes on Jenkins, just to be safe.
",erikrose,295816,2013-11-06T23:13:56Z,MEMBER,False,734,198,4,Powerful search for large codebases,Python,d673eb58c336e2ce7fc0b64cf6a58afd6b1fc422,"Fix balancing of certain line-spanning tags.

Special-case Lines more vigorously in balance_tags_with_empties().

This removes the side effect that was causing Line tags (and only Line tags) to become misordered in relation to other coincident tags, which we were then making up for in html_lines(). However, that led to a failure to properly close all tags before the end of a line in some cases. Now, balanced_tags_with_empties() encloses each line in properly-balanced Line tags, without_empty_tags() preserves them, and html_lines() uses the line-end tag as impetus to flush its buffer."
1578,https://api.github.com/repos/mozilla/dxr/pulls/171,171,"Fix Bug 932264, minor tweaks to advanced search UI","@erikrose r?
",ghost,10137,2013-11-04T11:13:14Z,NONE,True,45,29,3,Powerful search for large codebases,Python,03da86a64cf2055135d966d05629df5114643821,"Fix Bug 932264, minor tweaks to advanced search UI"
1579,https://api.github.com/repos/mozilla/dxr/pulls/170,170,first commit of advanced search,"@erikrose So, this is the first idea for advanced search. In terms of the field labels, I am a bit torn here. So, for the default advanced search fields I have left them off (although they will still be available to assistive technology users), and have used placeholder to describe the use of the field(s).

I am thinking we might do the same for the additional fields but, I would like some feedback first. In general, look at this as a POC and let me know if this will make sense/work for users.
",ghost,10137,2013-10-22T19:21:01Z,NONE,True,324,51,8,Powerful search for large codebases,Python,ed501a7b305cfdbde031787bccf3a178156ded51,first commit of advanced search
1580,https://api.github.com/repos/mozilla/dxr/pulls/170,170,first commit of advanced search,"@erikrose So, this is the first idea for advanced search. In terms of the field labels, I am a bit torn here. So, for the default advanced search fields I have left them off (although they will still be available to assistive technology users), and have used placeholder to describe the use of the field(s).

I am thinking we might do the same for the additional fields but, I would like some feedback first. In general, look at this as a POC and let me know if this will make sense/work for users.
",ghost,10137,2013-10-22T19:21:01Z,NONE,True,324,51,8,Powerful search for large codebases,Python,068d11a2b3ca66c8a7ab534aaffdb282682d9d65,seond revision of advanced search
1581,https://api.github.com/repos/mozilla/dxr/pulls/170,170,first commit of advanced search,"@erikrose So, this is the first idea for advanced search. In terms of the field labels, I am a bit torn here. So, for the default advanced search fields I have left them off (although they will still be available to assistive technology users), and have used placeholder to describe the use of the field(s).

I am thinking we might do the same for the additional fields but, I would like some feedback first. In general, look at this as a POC and let me know if this will make sense/work for users.
",ghost,10137,2013-10-22T19:21:01Z,NONE,True,324,51,8,Powerful search for large codebases,Python,c89722555078c77f4c5376d83021b75f92a74376,further revisions on advanced search
1582,https://api.github.com/repos/mozilla/dxr/pulls/169,169,Never use NFS for the shared dir.,"I have intermittent hangs on IO now that I've upgraded to OS X 10.8.5 (+ supplemental update). I'm on VB 4.2.18.
",erikrose,295816,2013-10-18T15:33:00Z,MEMBER,True,1,6,1,Powerful search for large codebases,Python,8b995c126e494f9461aa6ae56eca5ec95de7ff4f,"Never use NFS for the shared dir.

I have intermittent hangs on IO now that I've upgraded to OS X 10.8.5 (+ supplemental update). I'm on VB 4.2.18."
1583,https://api.github.com/repos/mozilla/dxr/pulls/168,168,Fix the tokenizer bug that's blocking builds,"My Virtualbox setup is all hinky. Let's see if this builds on the server.
",erikrose,295816,2013-10-17T22:46:50Z,MEMBER,True,1,0,1,Powerful search for large codebases,Python,49155eca1b5b2c605a647dbdcda93369b2211817,"Add a ""format"" file, which says what version of instance the code requires.

This will let us (continuously) deploy new versions of the code that change the SQL schema, etc. For now, this just lets us rewrite the build script to depend on this file being here. Next, we'll make deploy.py exit if a suitably versioned instance isn't yet built."
1584,https://api.github.com/repos/mozilla/dxr/pulls/168,168,Fix the tokenizer bug that's blocking builds,"My Virtualbox setup is all hinky. Let's see if this builds on the server.
",erikrose,295816,2013-10-17T22:46:50Z,MEMBER,True,1,0,1,Powerful search for large codebases,Python,5429c62c572877dddf6725a16084813867bf648a,"Retire our custom C++ tokenizer in favor of slurping up includes within the clang compiler plugin. Fixes bug 924631.

Many other improvements as well:
* Better diagnostic messages for failing HTML workers
* Deployment improvements, including schema version awareness and git hash verification.
* Use Pygments for C++ syntax highlighting. (#156)
* Upgrade concurrent.futures to 2.1.4."
1585,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,0ba086bf74d0fe31cbccad398086063ecb43351a,Include the value for constants in popup menus.
1586,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,3abb0e2188648d2852622e3e49077c01ccbee2b1,Fix crashes when trying to evaluate an expression that is value-dependent.
1587,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,6458b43416960a77ec321e3edaafd8db662c7b9e,"Fix crashes when trying to evaluate an initializer expression
when the initializer is on a different decl."
1588,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,41f849c3ce93a99f5a8e5486b8175d1b146920b6,Fix crashes when trying to evaluate an expression and the type isn't known.
1589,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,76b0a84f4b6eced8e726aee49eb9f67e3ab224ac,"Fix crash in building HTML when encountering a macro with non-ASCII
characters in it."
1590,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,5122b604238476df72faeb2e7fc00d51bfdb93ea,Move value hints from the popup menu to a tooltip.
1591,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,343379547b159ec5dc60fc3f6bc0ffca131742e8,Fix newlines and tabs in macros for value hints.
1592,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,c738b4b628b0661e394c24f9465f01974ccc8188,Limit value hints to 32 characters.
1593,https://api.github.com/repos/mozilla/dxr/pulls/167,167,Add hints with the values of constants to the popup menu,"I'm not quite satisfied with the UI for this.  Suggestions for improvements appreciated.
This should be tested more thoroughly than your average patch.  VarDecl::evaluateValue tends to crash if you call it without all of its implicit preconditions being satisfied.  I think I have fixed these all now but there might be some still lurking.
This is built on top of previous PRs.  I can split it out if need be.
",abbeyj,99402,2013-10-16T22:56:02Z,CONTRIBUTOR,True,92,35,8,Powerful search for large codebases,Python,2228faa45cde8dad9918e3585729d78ea830191c,Refactor truncation logic into a _truncate helper function.
1594,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,a4ca758096335157c6c2d1baf085dd5203a1fea8,Hide the popup menu when the user follows a link
1595,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,74c97a0b51f562f36d51b7f2b1adb3810111f471,Fix js highlighting
1596,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,6e03a50e2d111454fb72395a3786b7558fbc5b04,Add links for references to class templates.
1597,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,51149bf3fe1728d1733da21e413b37853fee5149,"Add links for the base class of a class template when the
base class is also a template and dependent on the type
parameters of the derived class template."
1598,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,0026dcc3750261b9ea4dee4910c7be19330fcdc4,Add links for template parameters
1599,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,ca2150da02f5e2b23ee02d8493293aae53d170cf,"Add the omniglot plugin, which can provide links to blame for both hg and git.

This changeset is a partial fix for bug 842641.

--HG--
extra : rebase_source : d99e59def249fe23ff99bab49c783e6b791e3752"
1600,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,e5a4857a663059f8e617a5e193b64a31e0c826ae,"Remove hg plugin, which is largely obsoleted by omniglot. Fixes bug 920131.

We leave the note-blame (etc.) styles in the CSS alone for now, as we might reintroduce inline blaming in the future."
1601,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,98634ff048f24d70e60f79ea75890220e60f293a,Reduce token-type lookups to a single hash lookup rather than a series of linear searches.
1602,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,2492ba18f4e1c22148862a64a4578b7d1ba63526,Standardize the style of the pygmentize plugin.
1603,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,aa78257ea0f2138fcb1fba1e3faf1baa154cd630,Add better syntax highlighting for JS. Fixes bug 758631.
1604,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,9d2dfd0634a6aa15dadf6d3a281b44f44c4afac3,"Use extents for macros instead of the old line+col scheme.
This is now consistent with all other references and simplifies
the code in build.py"
1605,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,461f52752262be334d5b698690d012f643d6b6e9,"Negated words with an underscore in a query weren't filtering
the matching lines out of the results."
1606,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,19aacc9a4286341ac4f3d1aa7654a3da8d382fce,Use self.found_nothing in tests.
1607,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,bd9f45313893f7ab94e160a6d1176254493fa8e1,Make negated words act negated. Fix #161.
1608,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,4a8085a9a53a8752405ba61752a417a8c99898fb,"Merge hiding the context menu after a user clicks something. Fix #153.

This way, the menu doesn't show up if he hits Back."
1609,https://api.github.com/repos/mozilla/dxr/pulls/166,166,Add a --branch option to the deploy script.,,erikrose,295816,2013-10-02T21:06:30Z,MEMBER,True,423,261,14,Powerful search for large codebases,Python,0f606e36a3304ae7750e3eaca3b329fc476c2853,Merge in the --branch option to the deploy script.
1610,https://api.github.com/repos/mozilla/dxr/pulls/165,165,Allow a per-tree setting to specify the character encoding used by the s...,"...ource code.
",abbeyj,99402,2013-10-01T21:13:01Z,CONTRIBUTOR,False,25,21,5,Powerful search for large codebases,Python,ddd79231b30e2eef2326f8204dcbec16b88e09a3,Allow a per-tree setting to specify the character encoding used by the source code.
1611,https://api.github.com/repos/mozilla/dxr/pulls/165,165,Allow a per-tree setting to specify the character encoding used by the s...,"...ource code.
",abbeyj,99402,2013-10-01T21:13:01Z,CONTRIBUTOR,False,25,21,5,Powerful search for large codebases,Python,64fa26666b874a7f2842951fb5f6e798484894ef,"Remove an assumption about how HTML encoding and character set encoding
interact at the possible loss of some efficiency."
1612,https://api.github.com/repos/mozilla/dxr/pulls/164,164,Account for windows line endings when constructing lines.,"Fixes the bad formatting for files with windows line endings (see, e.g., http://dxr.mozilla.org/mozilla-central/source/gfx/gl/GLTextureImage.cpp).
",nrc,762626,2013-09-29T08:47:37Z,CONTRIBUTOR,False,8,2,1,Powerful search for large codebases,Python,124fd358b7c031212040bda2ef5c88c3cc1052ff,Account for windows line endings when constructing lines.
1613,https://api.github.com/repos/mozilla/dxr/pulls/163,163,Change found_lines_eq to understand escaped HTML entities in the expecte...,"...d result

when looking for the corresponding source line.
",abbeyj,99402,2013-09-27T20:09:11Z,CONTRIBUTOR,False,15,9,3,Powerful search for large codebases,Python,3e2f6f67b473acb12d14b20847061c1f6d077551,"Change found_lines_eq to understand escaped HTML entities in the expected result
when looking for the corresponding source line."
1614,https://api.github.com/repos/mozilla/dxr/pulls/162,162,Linkify macro arguments,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something.
",abbeyj,99402,2013-09-26T21:33:43Z,CONTRIBUTOR,False,139,13,5,Powerful search for large codebases,Python,ca9c952f065dff27df66aee6bdaf750ce3fdae73,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something."
1615,https://api.github.com/repos/mozilla/dxr/pulls/162,162,Linkify macro arguments,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something.
",abbeyj,99402,2013-09-26T21:33:43Z,CONTRIBUTOR,False,139,13,5,Powerful search for large codebases,Python,e5686b09f6826d009ef774611cde4030c9f461eb,Merge branch 'master' of github.com:abbeyj/dxr into linkify-macro-arguments
1616,https://api.github.com/repos/mozilla/dxr/pulls/162,162,Linkify macro arguments,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something.
",abbeyj,99402,2013-09-26T21:33:43Z,CONTRIBUTOR,False,139,13,5,Powerful search for large codebases,Python,f032cb0c57de05e8b68292c29883dc857f601ede,"Fix references to methods on templated classes.
The comparison of the definition qualname against the reference qualname
was failing for these because the definition would have no template
parameters (e.g. vector::size()) and the reference would (e.g.
vector<int>::size()).  These checks were only added to deal with a
rare case where macro expansion lead to two different references having
the same location and no extents."
1617,https://api.github.com/repos/mozilla/dxr/pulls/162,162,Linkify macro arguments,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something.
",abbeyj,99402,2013-09-26T21:33:43Z,CONTRIBUTOR,False,139,13,5,Powerful search for large codebases,Python,d50a33af3fae92301b2802bd6b89f6b8b7a345ae,Add test for member functions of template classes.
1618,https://api.github.com/repos/mozilla/dxr/pulls/162,162,Linkify macro arguments,"Linkify macro arguments when they are a reference to something
or a declaration/definition of something.
",abbeyj,99402,2013-09-26T21:33:43Z,CONTRIBUTOR,False,139,13,5,Powerful search for large codebases,Python,33ef80c96f8c361ae8db956a3bb61a5bd12de9f9,Don't store qualname for references since we don't currently need it for anything.
1619,https://api.github.com/repos/mozilla/dxr/pulls/161,161,Negated words with an underscore in a query weren't filtering,"the matching lines out of the results.
",abbeyj,99402,2013-09-26T20:18:28Z,CONTRIBUTOR,False,6,2,2,Powerful search for large codebases,Python,461f52752262be334d5b698690d012f643d6b6e9,"Negated words with an underscore in a query weren't filtering
the matching lines out of the results."
1620,https://api.github.com/repos/mozilla/dxr/pulls/161,161,Negated words with an underscore in a query weren't filtering,"the matching lines out of the results.
",abbeyj,99402,2013-09-26T20:18:28Z,CONTRIBUTOR,False,6,2,2,Powerful search for large codebases,Python,19aacc9a4286341ac4f3d1aa7654a3da8d382fce,Use self.found_nothing in tests.
1621,https://api.github.com/repos/mozilla/dxr/pulls/160,160,Use extents for macros instead of the old line+col scheme.,"This is now consistent with all other references and simplifies
the code in build.py
",abbeyj,99402,2013-09-25T22:01:28Z,CONTRIBUTOR,True,7,30,2,Powerful search for large codebases,Python,9d2dfd0634a6aa15dadf6d3a281b44f44c4afac3,"Use extents for macros instead of the old line+col scheme.
This is now consistent with all other references and simplifies
the code in build.py"
1622,https://api.github.com/repos/mozilla/dxr/pulls/159,159,"Remove hg plugin, which is largely obsoleted by omniglot. Fixes bug 9201...","...31.

We leave the note-blame (etc.) styles in the CSS alone for now, as we might reintroduce inline blaming in the future.
",erikrose,295816,2013-09-24T19:39:03Z,MEMBER,True,0,227,4,Powerful search for large codebases,Python,e5a4857a663059f8e617a5e193b64a31e0c826ae,"Remove hg plugin, which is largely obsoleted by omniglot. Fixes bug 920131.

We leave the note-blame (etc.) styles in the CSS alone for now, as we might reintroduce inline blaming in the future."
1623,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,926494ba6d208e91b57e5d2841e1cb8853029f5a,Fix js highlighting
1624,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,f7f61bf479dfa910d6305b49bf841849fd1dd001,Use JS with preprocessor pygments lexer
1625,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,0caff4c6186e1fbc36c9e0cc5cbf62fab8c6bb74,Work with current version of Pygments. Only highlights preprocessor directives with Pygments post-issue 239.
1626,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,41c9eec530bf1c101d55dd3ad05688f8c29fbd17,index rust files
1627,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,16562eacd84101bca751bafee5360eb833b87dcd,Allow specifying a regex for bugfinder plugin
1628,https://api.github.com/repos/mozilla/dxr/pulls/158,158,"Support for Rust (syntax highlighting and search only, no static analysis)","Add support for Rust (syntax highlighting and search only, no static analysis). Requires the first commit 'fix js highlighting' which actually fixes highlighting for everything other than C++. There is a one line change to mime.py so we recognise rust files (.rs). And some changes to buglink to support github issues as well as bugzilla. I've maintained backwards compat with existing config files. For an config file to index Rust, see https://dl.dropboxusercontent.com/u/74741329/rust-dxr/dxr.config
",nrc,762626,2013-09-23T09:52:47Z,CONTRIBUTOR,False,64,26,3,Powerful search for large codebases,Python,c3372bf30936133b3696667ac34931b4b4ceb501,Add plugin_buglink_url as an alternative to plugin_buglink_bugzilla for buglink plugin
1629,https://api.github.com/repos/mozilla/dxr/pulls/157,157,Add links for references to class templates.,,abbeyj,99402,2013-09-17T17:04:37Z,CONTRIBUTOR,True,96,0,2,Powerful search for large codebases,Python,6e03a50e2d111454fb72395a3786b7558fbc5b04,Add links for references to class templates.
1630,https://api.github.com/repos/mozilla/dxr/pulls/157,157,Add links for references to class templates.,,abbeyj,99402,2013-09-17T17:04:37Z,CONTRIBUTOR,True,96,0,2,Powerful search for large codebases,Python,51149bf3fe1728d1733da21e413b37853fee5149,"Add links for the base class of a class template when the
base class is also a template and dependent on the type
parameters of the derived class template."
1631,https://api.github.com/repos/mozilla/dxr/pulls/157,157,Add links for references to class templates.,,abbeyj,99402,2013-09-17T17:04:37Z,CONTRIBUTOR,True,96,0,2,Powerful search for large codebases,Python,0026dcc3750261b9ea4dee4910c7be19330fcdc4,Add links for template parameters
1632,https://api.github.com/repos/mozilla/dxr/pulls/156,156,Pygments highlighting,"Use pygments for highlighting C and C++ instead of the clang hack. Pygments issue 759 has now been resolved.

Again, sits on top of a previous pull request.
",nrc,762626,2013-09-14T07:48:57Z,CONTRIBUTOR,False,29,31,2,Powerful search for large codebases,Python,926494ba6d208e91b57e5d2841e1cb8853029f5a,Fix js highlighting
1633,https://api.github.com/repos/mozilla/dxr/pulls/156,156,Pygments highlighting,"Use pygments for highlighting C and C++ instead of the clang hack. Pygments issue 759 has now been resolved.

Again, sits on top of a previous pull request.
",nrc,762626,2013-09-14T07:48:57Z,CONTRIBUTOR,False,29,31,2,Powerful search for large codebases,Python,1a9478d139953cc916ccb0cd83706742cd97472e,Use pygments for C++ syntax highlighting
1634,https://api.github.com/repos/mozilla/dxr/pulls/156,156,Pygments highlighting,"Use pygments for highlighting C and C++ instead of the clang hack. Pygments issue 759 has now been resolved.

Again, sits on top of a previous pull request.
",nrc,762626,2013-09-14T07:48:57Z,CONTRIBUTOR,False,29,31,2,Powerful search for large codebases,Python,821ddc2b1be14b9bbad7ee0141f5708ef08c11cc,Fix typo and line length
1635,https://api.github.com/repos/mozilla/dxr/pulls/156,156,Pygments highlighting,"Use pygments for highlighting C and C++ instead of the clang hack. Pygments issue 759 has now been resolved.

Again, sits on top of a previous pull request.
",nrc,762626,2013-09-14T07:48:57Z,CONTRIBUTOR,False,29,31,2,Powerful search for large codebases,Python,5fc8e029b449b63930e9f17538ca7405a3ba8fb9,Don't yield anything for regions
1636,https://api.github.com/repos/mozilla/dxr/pulls/155,155,Js preproc highlighting,"Adds syntax highlighting for preprocessor directives in JS files. Requires issue 239 from Pygments.

Sits on top of my previous pull request for JS highlighting. I don't think I have the hang of this github thing, sorry.
",nrc,762626,2013-09-14T07:44:16Z,CONTRIBUTOR,False,64,15,1,Powerful search for large codebases,Python,926494ba6d208e91b57e5d2841e1cb8853029f5a,Fix js highlighting
1637,https://api.github.com/repos/mozilla/dxr/pulls/155,155,Js preproc highlighting,"Adds syntax highlighting for preprocessor directives in JS files. Requires issue 239 from Pygments.

Sits on top of my previous pull request for JS highlighting. I don't think I have the hang of this github thing, sorry.
",nrc,762626,2013-09-14T07:44:16Z,CONTRIBUTOR,False,64,15,1,Powerful search for large codebases,Python,f7f61bf479dfa910d6305b49bf841849fd1dd001,Use JS with preprocessor pygments lexer
1638,https://api.github.com/repos/mozilla/dxr/pulls/155,155,Js preproc highlighting,"Adds syntax highlighting for preprocessor directives in JS files. Requires issue 239 from Pygments.

Sits on top of my previous pull request for JS highlighting. I don't think I have the hang of this github thing, sorry.
",nrc,762626,2013-09-14T07:44:16Z,CONTRIBUTOR,False,64,15,1,Powerful search for large codebases,Python,0caff4c6186e1fbc36c9e0cc5cbf62fab8c6bb74,Work with current version of Pygments. Only highlights preprocessor directives with Pygments post-issue 239.
1639,https://api.github.com/repos/mozilla/dxr/pulls/155,155,Js preproc highlighting,"Adds syntax highlighting for preprocessor directives in JS files. Requires issue 239 from Pygments.

Sits on top of my previous pull request for JS highlighting. I don't think I have the hang of this github thing, sorry.
",nrc,762626,2013-09-14T07:44:16Z,CONTRIBUTOR,False,64,15,1,Powerful search for large codebases,Python,365c1edfb4d48728e4320cfa52b11881cf0711ae,Use a local JS with preprocessor lexer
1640,https://api.github.com/repos/mozilla/dxr/pulls/154,154,Fix js highlighting,"Fix highlighting of JS files
",nrc,762626,2013-09-14T07:10:23Z,CONTRIBUTOR,True,28,7,1,Powerful search for large codebases,Python,74c97a0b51f562f36d51b7f2b1adb3810111f471,Fix js highlighting
1641,https://api.github.com/repos/mozilla/dxr/pulls/153,153,Hide the popup menu when the user follows a link,"I find it annoying when I follow a link from the popup menu, then hit back and the menu is still displayed. That is not the usual behaviour for menus. This one line patch fixes that.

Note that adding a listener on window for the beforeunload event does not work because the followed link might be on the same page. Using an onclick property on the link is a bit old school, but it doesn't seem worth the effort to add an id, getElementById and then add an event listener for click in this case.
",nrc,762626,2013-09-12T01:04:17Z,CONTRIBUTOR,False,1,0,1,Powerful search for large codebases,Python,a4ca758096335157c6c2d1baf085dd5203a1fea8,Hide the popup menu when the user follows a link
1642,https://api.github.com/repos/mozilla/dxr/pulls/152,152,first bit of the new UI,"@erikrose r?

So there us a lot that still needs to be done but, I need to open this PR to get the ball rolling. One thing I have added is the nunjucks[http://nunjucks.jlongster.com/] templating engine so, you will need Nodejs installed and then run npm in the root folder to get that installed as you will see in package.json

I left it in dev mode so it is easier to test and so we can discuss further whether you want to keep this or not. I think it makes sense to use it but, it does add additional dependencies and will effect the build when going to prod.

There is still some things that do not look right and/or does not work but, as stated, I need to get this PR out or I will keep tinkering and never open it up ;)

After this is merged into the UI branch, the rest will follow quick and you can open bugs etc. for what needs to change, be removed etc.

Looking forward to your feedback.
",ghost,10137,2013-09-09T23:09:16Z,NONE,True,29677,163,85,Powerful search for large codebases,Python,bffc49348a81d2a00f100e1dca8f0e6d183f0650,first bit of the new UI
1643,https://api.github.com/repos/mozilla/dxr/pulls/152,152,first bit of the new UI,"@erikrose r?

So there us a lot that still needs to be done but, I need to open this PR to get the ball rolling. One thing I have added is the nunjucks[http://nunjucks.jlongster.com/] templating engine so, you will need Nodejs installed and then run npm in the root folder to get that installed as you will see in package.json

I left it in dev mode so it is easier to test and so we can discuss further whether you want to keep this or not. I think it makes sense to use it but, it does add additional dependencies and will effect the build when going to prod.

There is still some things that do not look right and/or does not work but, as stated, I need to get this PR out or I will keep tinkering and never open it up ;)

After this is merged into the UI branch, the rest will follow quick and you can open bugs etc. for what needs to change, be removed etc.

Looking forward to your feedback.
",ghost,10137,2013-09-09T23:09:16Z,NONE,True,29677,163,85,Powerful search for large codebases,Python,a3fe54b6e32f9e1eb1d0ba8a887458729dce4ea8,changes based on review and discussions on github
1644,https://api.github.com/repos/mozilla/dxr/pulls/152,152,first bit of the new UI,"@erikrose r?

So there us a lot that still needs to be done but, I need to open this PR to get the ball rolling. One thing I have added is the nunjucks[http://nunjucks.jlongster.com/] templating engine so, you will need Nodejs installed and then run npm in the root folder to get that installed as you will see in package.json

I left it in dev mode so it is easier to test and so we can discuss further whether you want to keep this or not. I think it makes sense to use it but, it does add additional dependencies and will effect the build when going to prod.

There is still some things that do not look right and/or does not work but, as stated, I need to get this PR out or I will keep tinkering and never open it up ;)

After this is merged into the UI branch, the rest will follow quick and you can open bugs etc. for what needs to change, be removed etc.

Looking forward to your feedback.
",ghost,10137,2013-09-09T23:09:16Z,NONE,True,29677,163,85,Powerful search for large codebases,Python,3a07db44bb5461e9d838bf8a85696badbd411e4d,if it is a folder it is a folder
1645,https://api.github.com/repos/mozilla/dxr/pulls/152,152,first bit of the new UI,"@erikrose r?

So there us a lot that still needs to be done but, I need to open this PR to get the ball rolling. One thing I have added is the nunjucks[http://nunjucks.jlongster.com/] templating engine so, you will need Nodejs installed and then run npm in the root folder to get that installed as you will see in package.json

I left it in dev mode so it is easier to test and so we can discuss further whether you want to keep this or not. I think it makes sense to use it but, it does add additional dependencies and will effect the build when going to prod.

There is still some things that do not look right and/or does not work but, as stated, I need to get this PR out or I will keep tinkering and never open it up ;)

After this is merged into the UI branch, the rest will follow quick and you can open bugs etc. for what needs to change, be removed etc.

Looking forward to your feedback.
",ghost,10137,2013-09-09T23:09:16Z,NONE,True,29677,163,85,Powerful search for large codebases,Python,c16d906287fc3040760fac3391f90c3da19947eb,remove test reddis
1646,https://api.github.com/repos/mozilla/dxr/pulls/152,152,first bit of the new UI,"@erikrose r?

So there us a lot that still needs to be done but, I need to open this PR to get the ball rolling. One thing I have added is the nunjucks[http://nunjucks.jlongster.com/] templating engine so, you will need Nodejs installed and then run npm in the root folder to get that installed as you will see in package.json

I left it in dev mode so it is easier to test and so we can discuss further whether you want to keep this or not. I think it makes sense to use it but, it does add additional dependencies and will effect the build when going to prod.

There is still some things that do not look right and/or does not work but, as stated, I need to get this PR out or I will keep tinkering and never open it up ;)

After this is merged into the UI branch, the rest will follow quick and you can open bugs etc. for what needs to change, be removed etc.

Looking forward to your feedback.
",ghost,10137,2013-09-09T23:09:16Z,NONE,True,29677,163,85,Powerful search for large codebases,Python,66b6f46b277ba767445858aa951c96656793c05f,adding node modules
1647,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,6f19aa05703d5a58bbc25bcc526da2c61429e42e,Direct search for filename:line_number
1648,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,b5c81fc48c050500d2ad5c7756398d64d270334c,handle partially qualified functions and types
1649,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,7141ff7b43cf2213bb0b167e88e0519af65c0236,Alphabetically order search results
1650,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,356bd86436b00f8a2316d0ff4ac0989a9e505ce9,Use like instead of equals
1651,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,3af3bc8d3041107ec9b300676c13df518b25eabc,direct search for files should work without a path
1652,https://api.github.com/repos/mozilla/dxr/pulls/151,151,Current,"Some minor polishing:

Allow searches for line numbers, e.g., Layers.h:45 will jump to line 45 in the file Layers.h.

Jump to the definition for partially qualified names, e.g., LayerManagerOGL::Destroy will jump to the definition of Destroy in LayerManagerOGL.

Order search results alphabetically.
",nrc,762626,2013-08-25T09:48:27Z,CONTRIBUTOR,False,57,7,2,Powerful search for large codebases,Python,5b6bae9f873ab8ea8a2ed8101333efa6c7320c21,tests for partially qualified types/functions and file with line number
1653,https://api.github.com/repos/mozilla/dxr/pulls/150,150,"Add the omniglot plugin, which can provide links to blame for both hg and git","This changeset is a partial fix for bug 842641.
",jcranmer,589481,2013-08-12T21:56:36Z,CONTRIBUTOR,True,277,0,3,Powerful search for large codebases,Python,ca2150da02f5e2b23ee02d8493293aae53d170cf,"Add the omniglot plugin, which can provide links to blame for both hg and git.

This changeset is a partial fix for bug 842641.

--HG--
extra : rebase_source : d99e59def249fe23ff99bab49c783e6b791e3752"
1654,https://api.github.com/repos/mozilla/dxr/pulls/149,149,"Don't retry fetching results on failure, 500 or otherwise. Fix bug 848480","I'm not sure why we were being so failure-tolerant in the JS before; perhaps the CGI failed or timed out a lot. With WSGI, we no longer have timeouts to worry about, and, if we have other failures, we should solve the root problem.

If there is an error, the user can ""retry"" just by changing the search query or hitting Return, both of which should be natural reactions.
",erikrose,295816,2013-07-18T22:44:30Z,MEMBER,True,8,9,1,Powerful search for large codebases,Python,56d79f0ab13daf41c42cc4cd746773cfa2eabc82,"Don't retry fetching results on failure, 500 or otherwise. Fix bug 848480.

I'm not sure why we were being so failure-tolerant in the JS before; perhaps the CGI failed or timed out a lot. With WSGI, we no longer have timeouts to worry about, and, if we have other failures, we should solve the root problem.

If there is an error, the user can ""retry"" just by changing the search query or hitting Return, both of which should be natural reactions."
1655,https://api.github.com/repos/mozilla/dxr/pulls/148,148,Prevent sending request when 500 status code is received.,"I edited the structure of the handling in first commit.

Added flag to prevent sending request when 500 is received. Possible improvement will be a case for other error status code.
",nicolaisi,2225781,2013-07-15T17:21:04Z,NONE,False,48,36,1,Powerful search for large codebases,Python,3cf5cea3f1dbc8ce1894f95d41aab1aa92053c10,"modified the structure handling by separating the readyState and status.

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1656,https://api.github.com/repos/mozilla/dxr/pulls/148,148,Prevent sending request when 500 status code is received.,"I edited the structure of the handling in first commit.

Added flag to prevent sending request when 500 is received. Possible improvement will be a case for other error status code.
",nicolaisi,2225781,2013-07-15T17:21:04Z,NONE,False,48,36,1,Powerful search for large codebases,Python,3ede1e6216c7c980b50fe7121467a326bb5da014,"Prevent sending request when 500 error code is received. Fix bug 848480

- Added a state.resend flag at the unchange event and changes the bool
base on request.status

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1657,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,c7ba98165f14852396ceeeacb1c1d6a31e555871,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1658,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,4edfff72dae8a51dea2e9c71fbc5df43971622b1,Merge remote-tracking branch 'upstream/master' into b843344
1659,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,c445a669f3aebec8fbf1a4a0351d2d57cb1d5b9c,Merge branch 'master' into b843344
1660,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,838c23f067a7cd28dac8eac56cf3696e96da33f7,Merge branch 'b843344' of https://github.com/nicolaisi/dxr into b843344
1661,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,824e567c2b83e3a0f6045274859e9a307290e22a,"Added pushState for the first run.

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1662,https://api.github.com/repos/mozilla/dxr/pulls/147,147,Update title and url dynamically - fix bug 843344,"Update title and url dynamically - fix bug 843344

Signed-off-by: tanji nicholastanjerome@gmail.com
",nicolaisi,2225781,2013-07-15T09:32:40Z,NONE,False,28,1,1,Powerful search for large codebases,Python,eb1a2648905532e4a0af3b0043173d667b862470,"Added a onpopstate event and also a API check

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1663,https://api.github.com/repos/mozilla/dxr/pulls/146,146,Bug 843344 - Update window title and url dynamically,"update the window title and url in conjunction with when the search query is triggered.

uses history.pushState to rewrite the url in history each time the user changes the query text.

I did untrack Vagrantfile as I was changing the ports and I don't want this to be tracked.
",nicolaisi,2225781,2013-07-12T21:29:44Z,NONE,False,12,58,3,Powerful search for large codebases,Python,0ba2252ecf78327bafa6d58995128d428afa9e03,"Fixes Bug 843344 - Update URL during search via history API to make pages bookmarkable

- changes window.title and update url on every searches.

Signed-off-by: tanji <nicholastanjerome@gmail.com>"
1664,https://api.github.com/repos/mozilla/dxr/pulls/146,146,Bug 843344 - Update window title and url dynamically,"update the window title and url in conjunction with when the search query is triggered.

uses history.pushState to rewrite the url in history each time the user changes the query text.

I did untrack Vagrantfile as I was changing the ports and I don't want this to be tracked.
",nicolaisi,2225781,2013-07-12T21:29:44Z,NONE,False,12,58,3,Powerful search for large codebases,Python,e217c00a5da010e351129d27607060b94a33d99b,"Revert ""Fix search_url in server response""

This reverts commit a9f237c500143480450288d0665904d940c684c1."
1665,https://api.github.com/repos/mozilla/dxr/pulls/145,145,Fix search_url in server response,,jonasac,1088181,2013-07-01T21:29:08Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,a9f237c500143480450288d0665904d940c684c1,Fix search_url in server response
1666,https://api.github.com/repos/mozilla/dxr/pulls/144,144,Emit decldef for C variables even when there's just a tentative definiti...,"...on

The issue is that getDefinition() will return 0 for things in C at
file scope like

```
extern int i;
int i;           /* This isn't a definition --- it's tentative */
```

In C++ that is a definition. While technically it's not a definition,
matching up variable references seems to work better in C code that
I've seen if we assume that such tentative definitions are in fact
definitions, as they are in C++.
",brucestephens,3371217,2013-06-24T20:45:28Z,CONTRIBUTOR,False,92,2,8,Powerful search for large codebases,Python,45b15dcb078b6e3179b55df30ed097fb6d05e6b3,"Emit decldef for C variables even when there's just a tentative definition

The issue is that getDefinition() will return 0 for things in C at
file scope like

        /* In a header */
	extern int i;

        /* In a C (not C++) file */
	int i;           /* This isn't a definition --- it's tentative */

In C++ that is a definition. While technically it's not a definition,
matching up variable references seems to work better in C code that
I've seen if we assume that such tentative definitions are in fact
definitions, as they are in C++."
1667,https://api.github.com/repos/mozilla/dxr/pulls/143,143,Add support for building against clang version 3.3.,,abbeyj,99402,2013-06-22T23:52:15Z,CONTRIBUTOR,False,55,13,1,Powerful search for large codebases,Python,ae66800d857be7aa7c15c7c554d4f85a4b38c6cb,Add support for building against clang version 3.3.
1668,https://api.github.com/repos/mozilla/dxr/pulls/143,143,Add support for building against clang version 3.3.,,abbeyj,99402,2013-06-22T23:52:15Z,CONTRIBUTOR,False,55,13,1,Powerful search for large codebases,Python,f64962dc9421351a70706bb9f5f58f92ab04927f,Create a CLANG_AT_LEAST macro and use it for version detection.
1669,https://api.github.com/repos/mozilla/dxr/pulls/142,142,Add support for searching for namespaces and namespace aliases.,,abbeyj,99402,2013-06-20T21:17:44Z,CONTRIBUTOR,False,474,1,5,Powerful search for large codebases,Python,2613157977452cb4600d571726965b538bbd0913,Add support for searching for namespaces and namespace aliases.
1670,https://api.github.com/repos/mozilla/dxr/pulls/142,142,Add support for searching for namespaces and namespace aliases.,,abbeyj,99402,2013-06-20T21:17:44Z,CONTRIBUTOR,False,474,1,5,Powerful search for large codebases,Python,2e77b6e13b8123f43bae3480a17af76488aba6ce,"Rename RemoveTrailingColonColon to removeTrailingColonColon
to indicate that it is a private helper method."
1671,https://api.github.com/repos/mozilla/dxr/pulls/141,141,Prepend wwwroot to breadcrumbs,"The URL associated with the breadcrumbs seems not to be correct if wwwroot is set. I think something like this will
fix it.
",brucestephens,3371217,2013-06-19T13:40:49Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,2e9a37f92ed3e154833b9a0f829671c7870312e2,Prepend wwwroot to breadcrumbs
1672,https://api.github.com/repos/mozilla/dxr/pulls/140,140,Extension search now matches the whole extension. Fixes bug 848485,,jonasac,1088181,2013-06-17T17:32:12Z,CONTRIBUTOR,True,54,7,10,Powerful search for large codebases,Python,063465bf76f6ff2c06333d6ddea5804a293af38c,Extension search now matches the whole extension. Fixes bug 848485
1673,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,5011dfea3c357a6ee4ac928fab6ef444e32f6b69,"Displays navigable path name on file and folder pages.

This change displays the name of the source file at the top of the
page. The name can be copy/pasted directly into an editor or anything
else to get to the file. Fixes
https://bugzilla.mozilla.org/show_bug.cgi?id=758628
The individual components of the path can be clicked on for
convenient navigation."
1674,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,6d5fe428d0ec9f46eaeb6c29e778a56fe2f6d4b6,Merge master in before I try to polish up clickable pathnames.
1675,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,58a5d738ec331dc55e60cd5cf239f4b38e0b7d60,"Polish pathname display for release.

* Use just '/' instead of os.sep. If we ran the server on Windows (which wouldn't work anyway), the path would come out as /treename/source\some\path.
* Tweak some naming, style, and spacing."
1676,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,b9c49bddb8713a908e777c8e943f6d2ffd5e4e72,Add tests for linked_pathname(). Refactor it to be more testable.
1677,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,e55e6e18cff1743537a0a2bcbb4cf4c16e5a79c4,"Fix more whitespace, and improve more naming.

I see Noufal realigned all the template var dicts, giving them wider columns to accomodate his long key name. Per PEP 8 and my preference, cut all that stuff down to single spaces so it's easy to edit in the future."
1678,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,50457537a17829d09c172978d44c8c67cfa73e06,Merge pathname breadcrumbs. Fix #130. Fixes 758628.
1679,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,09164ea32d72438027c6a79cfe63830266207a77,"Fix tests on Python 2.6.
- logging.StreamHandler doesn't support a named parameter ""stream""
- The workaround for errors from setuptools needs to be updated
  to use concurrent.futures instead of multiprocessing since the
  tests were changed to use concurrent.futures."
1680,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,e1465078debcb9796910393de2c58879cccb6344,"Merge in jcranmer's dummy-merge of prod, so the hg mirrors pulling prod will happily fast-forward to master. We should fix (or get rid of) the mirrors when we can.

The only change is #ifdef-ing out some noisy ""Unprocessed kind"" build output."
1681,https://api.github.com/repos/mozilla/dxr/pulls/138,138,Big crazy merge of prod and verbose option,"(We're not actually taking any substantial changes from prod; it's an --ours merge.)
",erikrose,295816,2013-06-14T19:34:05Z,MEMBER,True,96,24,6,Powerful search for large codebases,Python,4d7d9ecbf2b0d973396eb8a5c5fe7939acfe82c6,"Add a --verbose option to dxr-build so buildbot doesn't get bored and abort our jobs.

buildbot needs output every 2 minutes or hours or something."
1682,https://api.github.com/repos/mozilla/dxr/pulls/137,137,Fix tests on Python 2.6.,"- logging.StreamHandler doesn't support a named parameter ""stream""
- The workaround for errors from setuptools needs to be updated
  to use concurrent.futures instead of multiprocessing since the
  tests were changed to use concurrent.futures.
",abbeyj,99402,2013-06-13T22:02:10Z,CONTRIBUTOR,True,2,2,2,Powerful search for large codebases,Python,09164ea32d72438027c6a79cfe63830266207a77,"Fix tests on Python 2.6.
- logging.StreamHandler doesn't support a named parameter ""stream""
- The workaround for errors from setuptools needs to be updated
  to use concurrent.futures instead of multiprocessing since the
  tests were changed to use concurrent.futures."
1683,https://api.github.com/repos/mozilla/dxr/pulls/136,136,Quiet errors in the CD script,,erikrose,295816,2013-06-10T23:41:02Z,MEMBER,True,10,4,3,Powerful search for large codebases,Python,468b8272dc4d422241d47ea0b7845741c998442e,"Give config.py template a "".jinja"" extension so package installation doesn't freak out trying to byte-compile it.

This knocks out one reason the continuous-deployment script is mailing me."
1684,https://api.github.com/repos/mozilla/dxr/pulls/136,136,Quiet errors in the CD script,,erikrose,295816,2013-06-10T23:41:02Z,MEMBER,True,10,4,3,Powerful search for large codebases,Python,c1ca3def81e64a237eaa2737d429992b7b2b0d47,"Quash warning about missing *.so files from the continuous deployment script by blacklisting rather than whitelisting in the manifest.

We don't need the clang plugin's shared lib on the webhead.

Start including the docs folder and C source files with the sdist.

Oddly, I can't seem to persuade either recursive-exclude or global-exclude to exclude all hidden files, no matter how I fiddle, so I've had to enumerate them."
1685,https://api.github.com/repos/mozilla/dxr/pulls/135,135,Merge continuous deployment support,,erikrose,295816,2013-06-07T23:46:21Z,MEMBER,True,0,0,0,Powerful search for large codebases,Python,9331e63fc39366dffbb0c2e915d3ce78729cdb85,Add continuous deployment support.
1686,https://api.github.com/repos/mozilla/dxr/pulls/134,134,Use setup.py test for tests so nose gets installed.,,erikrose,295816,2013-06-07T18:28:57Z,MEMBER,True,2,1,2,Powerful search for large codebases,Python,cfed0f2bfb8420ec977e636d60fe9c9888b4b266,Use setup.py test for tests so nose gets installed.
1687,https://api.github.com/repos/mozilla/dxr/pulls/133,133,Properly fall back to the nb_jobs defined in the config file if none is specified on the dxr-build command line.,,erikrose,295816,2013-05-30T23:35:27Z,MEMBER,True,7,6,2,Powerful search for large codebases,Python,ca2266a9959341c6772e0f308affb6bb469b7feb,Properly fall back to the nb_jobs defined in the config file if none is specified on the dxr-build command line.
1688,https://api.github.com/repos/mozilla/dxr/pulls/132,132,Work around SQLite/trilite library loading problems,,erikrose,295816,2013-05-29T21:28:52Z,MEMBER,True,22,38,6,Powerful search for large codebases,Python,5e2590348a386423dd0bfec589d2b4ed2aec668e,Correct some docs.
1689,https://api.github.com/repos/mozilla/dxr/pulls/132,132,Work around SQLite/trilite library loading problems,,erikrose,295816,2013-05-29T21:28:52Z,MEMBER,True,22,38,6,Powerful search for large codebases,Python,df89f3d079a852ca652ed9cf0f771f4b7148695e,Add futures to requirements.txt.
1690,https://api.github.com/repos/mozilla/dxr/pulls/132,132,Work around SQLite/trilite library loading problems,,erikrose,295816,2013-05-29T21:28:52Z,MEMBER,True,22,38,6,Powerful search for large codebases,Python,82a417220629b1a0c78af1ad58527dda71acf4c0,"Arrange to always load trilite before importing sqlite.

This should let me get Flask going on our ancient production RHEL 5.5 box, which has trilite built against a version of sqlite that isn't the system one. I can't build a new one because this version of RHEL doesn't have the necessary header (sqlite3ext.h).

Also, merge the 2 redundant trilite loaders, and just load trilite at import time."
1691,https://api.github.com/repos/mozilla/dxr/pulls/130,130,Fix for Bug 758628,"This implements a navigable header on top of the file and folder pages. The header will contain the full name of the file or directory currently being looked at. It can easily be cut/pasted into an editor or terminal. Each of the individual components of the path can be clicked on for easy navigation. This is similar to how http://lxr.free-electrons.com/source/block/blk-cgroup.c works. 

I have a demo version of the new interface at http://noufalibrahim.name:8080/code/source/
",nibrahim,69051,2013-05-10T07:00:46Z,CONTRIBUTOR,False,86,24,4,Powerful search for large codebases,Python,5011dfea3c357a6ee4ac928fab6ef444e32f6b69,"Displays navigable path name on file and folder pages.

This change displays the name of the source file at the top of the
page. The name can be copy/pasted directly into an editor or anything
else to get to the file. Fixes
https://bugzilla.mozilla.org/show_bug.cgi?id=758628
The individual components of the path can be clicked on for
convenient navigation."
1692,https://api.github.com/repos/mozilla/dxr/pulls/129,129,Includes accurate setup instructions.,"The current (real machine) setup instructions were somewhat vague and
didn't work for me when I tried to set up dxr. This commit updates
them addressing all the problems I faced so that it's clear what needs
to be done to get it to work.
",nibrahim,69051,2013-05-05T16:29:56Z,CONTRIBUTOR,False,37,27,1,Powerful search for large codebases,Python,32d457d942c3c3730503a1f76cfa40da76294d84,"Includes accurate setup instructions.

The current (real machine) setup instructions were somewhat vague and
didn't work for me when I tried to set up dxr. This commit updates
them addressing all the problems I faced so that it's clear what needs
to be done to get it to work."
1693,https://api.github.com/repos/mozilla/dxr/pulls/129,129,Includes accurate setup instructions.,"The current (real machine) setup instructions were somewhat vague and
didn't work for me when I tried to set up dxr. This commit updates
them addressing all the problems I faced so that it's clear what needs
to be done to get it to work.
",nibrahim,69051,2013-05-05T16:29:56Z,CONTRIBUTOR,False,37,27,1,Powerful search for large codebases,Python,172864137673fa4ad08cfd706b46a3b01a43efd7,Updates README as per feedback.
1694,https://api.github.com/repos/mozilla/dxr/pulls/128,128,Standardize JS symbol naming convention. Fixes bug 819478,,jonasac,1088181,2013-05-04T10:41:02Z,CONTRIBUTOR,True,51,51,4,Powerful search for large codebases,Python,8b995bd6fb0c3bf00e2c8ca59dd788519c34cc49,Standardize JS symbol naming convention. Fixes bug 819478
1695,https://api.github.com/repos/mozilla/dxr/pulls/127,127,URL-quoted text appears in search field after redirecting to direct resu...,"...lt. Fixes Bug 855506
",jonasac,1088181,2013-05-04T09:40:29Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,bd6f8c7a9525f366e25b7e99e3a79e09e16e37e4,URL-quoted text appears in search field after redirecting to direct result. Fixes Bug 855506
1696,https://api.github.com/repos/mozilla/dxr/pulls/126,126,Notification when there is a search in progress.,"Now with less flicker.
",abbeyj,99402,2013-04-30T19:21:45Z,CONTRIBUTOR,False,14,0,1,Powerful search for large codebases,Python,50460f007fe6cc0b6bf9d58c28c02792819af4e1,"Notify user when a search request is pending in the background.

If a request takes a long time then there was no indication that
something was still going on in the background or that the currently
displayed results do not match the contents of the search box."
1697,https://api.github.com/repos/mozilla/dxr/pulls/126,126,Notification when there is a search in progress.,"Now with less flicker.
",abbeyj,99402,2013-04-30T19:21:45Z,CONTRIBUTOR,False,14,0,1,Powerful search for large codebases,Python,b84dfe63113c9423f85ff601e6de39f47db8b36b,"Merge branch 'master' of github.com:abbeyj/dxr into search-status

Conflicts:
	dxr/static/search.js"
1698,https://api.github.com/repos/mozilla/dxr/pulls/126,126,Notification when there is a search in progress.,"Now with less flicker.
",abbeyj,99402,2013-04-30T19:21:45Z,CONTRIBUTOR,False,14,0,1,Powerful search for large codebases,Python,9aca661b396ae0f2920dba55499377118768e1f6,"Notification when there is a search in progress.
Now with less flicker."
1699,https://api.github.com/repos/mozilla/dxr/pulls/126,126,Notification when there is a search in progress.,"Now with less flicker.
",abbeyj,99402,2013-04-30T19:21:45Z,CONTRIBUTOR,False,14,0,1,Powerful search for large codebases,Python,f2961f32891660027dbdbe8391c5699bd68092ec,Merge branch 'master' of github.com:abbeyj/dxr into search-status
1700,https://api.github.com/repos/mozilla/dxr/pulls/125,125,URL-quoted text appears in search field after redirecting to direct result ,"...lt. Fixes Bug 855506
",jonasac,1088181,2013-04-30T00:16:53Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,bd6f8c7a9525f366e25b7e99e3a79e09e16e37e4,URL-quoted text appears in search field after redirecting to direct result. Fixes Bug 855506
1701,https://api.github.com/repos/mozilla/dxr/pulls/124,124,Speed up callers: and called-by: queries by replacing SQL subqueries wit...,"...h joins.

Fix incorrect condition in SQL (callers.callerid = target.id) that was
preventing indirect call results from appearing when searching with callers:.
",abbeyj,99402,2013-04-29T20:27:26Z,CONTRIBUTOR,False,111,34,3,Powerful search for large codebases,Python,e2e4826d47e9069ca89483498c1200cdef1ce0c7,"Speed up callers: and called-by: queries by replacing SQL subqueries with joins.
Fix incorrect condition in SQL (callers.callerid = target.id) that was
preventing indirect call results from appearing when searching with callers:."
1702,https://api.github.com/repos/mozilla/dxr/pulls/124,124,Speed up callers: and called-by: queries by replacing SQL subqueries wit...,"...h joins.

Fix incorrect condition in SQL (callers.callerid = target.id) that was
preventing indirect call results from appearing when searching with callers:.
",abbeyj,99402,2013-04-29T20:27:26Z,CONTRIBUTOR,False,111,34,3,Powerful search for large codebases,Python,ccff73af8073a35c261ddd4a682d13acad48345a,Merge branch 'master' of github.com:abbeyj/dxr into callers-calledby-sql
1703,https://api.github.com/repos/mozilla/dxr/pulls/123,123,"Add the ability to search for declarations of types, functions, and vari...","...ables.

Not sure of the best icon to use for this in the menus.
",abbeyj,99402,2013-04-28T05:14:12Z,CONTRIBUTOR,False,131,4,3,Powerful search for large codebases,Python,7fdcf9823a5da56883dd0c358d44eb2bdbb74048,"Add the ability to search for declarations of types, functions, and variables."
1704,https://api.github.com/repos/mozilla/dxr/pulls/123,123,"Add the ability to search for declarations of types, functions, and vari...","...ables.

Not sure of the best icon to use for this in the menus.
",abbeyj,99402,2013-04-28T05:14:12Z,CONTRIBUTOR,False,131,4,3,Powerful search for large codebases,Python,3cc6a4297f49ae872221aab58306eb29e9e577b5,Merge branch 'master' of github.com:abbeyj/dxr into decls
1705,https://api.github.com/repos/mozilla/dxr/pulls/123,123,"Add the ability to search for declarations of types, functions, and vari...","...ables.

Not sure of the best icon to use for this in the menus.
",abbeyj,99402,2013-04-28T05:14:12Z,CONTRIBUTOR,False,131,4,3,Powerful search for large codebases,Python,8a1b628860a5cc4c69bff6d2c5a33de64609d666,Merge branch 'master' of github.com:abbeyj/dxr into decls
1706,https://api.github.com/repos/mozilla/dxr/pulls/122,122,Fixes Bug 827618,"This fixes the bug mentioned here: https://bugzilla.mozilla.org/show_bug.cgi?id=827618
",jonasac,1088181,2013-04-24T22:33:56Z,CONTRIBUTOR,True,4,7,3,Powerful search for large codebases,Python,c6286061111e140f71b5f27492b921255f35992b,Don't require Template section in config files. Fixes bug 827618
1707,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,112942b72e2a22237692c19a72bb8d460cccaccb,Keep track of what output file each .csv file was generated for.
1708,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,1c33412f5a6c4a760031440fac8933734dc17ae4,Add --incremental command line option for incremental builds.
1709,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,39b7a3f65f750ba380143881e988d12b30f5f23a,Merge branch 'master' of https://github.com/mozilla/dxr into incremental-build
1710,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,8c770ba1f5589c6fa444f98016f34ee4e4bf95f6,Merge branch 'master' of https://github.com/mozilla/dxr into incremental-build
1711,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,5accc914c39a51f8ec3079a375224f7cf51ac82a,Merge branch 'master' of https://github.com/mozilla/dxr into incremental-build
1712,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,3e088eed04796e3481b520d4e7ac36cf7c28cae1,Merge branch 'master' of github.com:abbeyj/dxr into incremental-build
1713,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,17bdf09f62f85c57c32bc5cb9c7c54bd555816f4,Merge branch 'master' of github.com:abbeyj/dxr into incremental-build
1714,https://api.github.com/repos/mozilla/dxr/pulls/121,121,Incremental build support,"This is a preliminary change for suggestions.  It does the following:
1) Adds a new --incremental option that doesn't delete the temp and object directories
2) Keeps a list of all .csv files generated for each output file in .lst files (suggestions for a better extension?)

Instead of reading in *.csv we now read in *.lst and then read in all the .csv files mentioned within each one (skipping duplicates).  This handles the case where we modify a header or source file.  Old .csv files will still be left around but they won't be read in and so won't pollute the index.  It also handles the case where we delete a header file and remove all references to it.  

It does have a problem with a source file that is completely deleted (or renamed).  The generated data for old version will still be read in and this might cause issues.  To work around this I'm thinking that we'd need to grab a list of all files that are eventually passed to the linker and then create a list of the corresponding .lst files.  I'm not sure how easy it would be to get that information?  Does clang have plugin support for that?  Do we need to handle both the case where the build calls $(CXX) for linking and the case where it directly calls $(LD) itself?
",abbeyj,99402,2013-04-05T19:37:30Z,CONTRIBUTOR,False,49,11,4,Powerful search for large codebases,Python,7cb466876ec4c37467ae6015d6fd361b33373083,Merge branch 'master' of github.com:abbeyj/dxr into incremental-build
1715,https://api.github.com/repos/mozilla/dxr/pulls/120,120,Make the search box autofocus,"Fixes bug 858015.
",ehsan,168508,2013-04-04T17:06:42Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,8d0bf7271447fded63424aa42f3c01af3863accb,"Make the search box autofocus

Fixes bug 858015."
1716,https://api.github.com/repos/mozilla/dxr/pulls/119,119,"Fix the ""Jump to definition"" and ""Jump to file"" context menu items.","They need to have ""/source/"" in them now after the URL scheme change.
",abbeyj,99402,2013-03-19T18:42:13Z,CONTRIBUTOR,True,2,2,1,Powerful search for large codebases,Python,7d239ebbfc3f54c1c987c9a3dc49617e5c7b72e2,"Fix the ""Jump to definition"" and ""Jump to file"" context menu items.
They need to have ""/source/"" in them now after the URL scheme change."
1717,https://api.github.com/repos/mozilla/dxr/pulls/118,118,Restore compatibility with Python 2.6,"str.decode() only gained support for kwargs in Python 2.7
",abbeyj,99402,2013-03-14T20:01:02Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,450d1725a2468f5cc335f2d9bd1a468cbd222af0,"Restore compatibility with Python 2.6
str.decode() only gained support for kwargs in Python 2.7"
1718,https://api.github.com/repos/mozilla/dxr/pulls/117,117,New urls,"bug 834509
",erikrose,295816,2013-03-12T21:27:26Z,MEMBER,True,62,52,10,Powerful search for large codebases,Python,b902f06a3b265b8e4b4c9c7eab9002bbf4e8b47e,"Change the source URLs to be like MXR's. Addresses bug 834509.

Also rename fetch_results() to results() for consistency with direct_result()."
1719,https://api.github.com/repos/mozilla/dxr/pulls/117,117,New urls,"bug 834509
",erikrose,295816,2013-03-12T21:27:26Z,MEMBER,True,62,52,10,Powerful search for large codebases,Python,1914a6d52228dd0cfab8e0ff575a5af16d1a08d9,"Make search URLs like /tree/search?q= rather than /search?tree=x&q=y. Closes bug 834509.

Invalid trees now return 404, because that makes sense now that we're putting the tree name in the URL path."
1720,https://api.github.com/repos/mozilla/dxr/pulls/116,116,small update to README and local.yaml,"@erikrose r?
",ghost,10137,2013-03-12T21:10:33Z,NONE,True,18,0,2,Powerful search for large codebases,Python,6a6e3b46472f5892e3ed779c2c13dd284ff11673,small update to README and local.yaml
1721,https://api.github.com/repos/mozilla/dxr/pulls/115,115,Mark macros.id as the primary key.,"This makes macro-ref: searches much faster.
",abbeyj,99402,2013-03-06T22:22:53Z,CONTRIBUTOR,True,2,1,1,Powerful search for large codebases,Python,2f2629317491509c305ce1f35b088e6ddeb9280d,"Mark macros.id as the primary key.

This makes macro-ref: searches much faster."
1722,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,42e5a2dcb31d9a0e3b55a67d70bd7e3d8b7ec1fa,"Change _execute_sql, fetch_results, and direct_result to methods on Query"
1723,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,2043cf5ae187a9cf3bde77b41d7556645b297604,Make merge_extents and fix_extents_overlap be methods of Query
1724,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,3899b69a8c3aea8267c213b8942db6884eb76261,Move flask.g._should_explain and flask.g._sql_profile to be members of Query
1725,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,95963131b210f09b70240401cb722b034bbc8235,Remove spaces around equals sign in kwarg
1726,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,b211f96eacaa791c242b6dc3fe22bdb4ae4e1156,Replace use of dict.has_key with 'in'.
1727,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,11fa95ba977f5e4f683111b8f987a4a417b4e44c,"Don't try to UTF-8 decode the GET query parameters.
They've already been turned into unicode strings for us."
1728,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,e6a248286336cd8d6e93f710b1394b819217f723,"Revert ""Make merge_extents and fix_extents_overlap be methods of Query""

This reverts commit 2043cf5ae187a9cf3bde77b41d7556645b297604."
1729,https://api.github.com/repos/mozilla/dxr/pulls/114,114,Make Query more object-oriented,"Change several module-level functions into methods and move data from flask.g into a Query instance.
",abbeyj,99402,2013-03-05T23:19:53Z,CONTRIBUTOR,False,230,239,2,Powerful search for large codebases,Python,7f49940bde27202ee164ae2b69a5c42a88fe9958,Rename Query._execute_sql to Query.execute_sql
1730,https://api.github.com/repos/mozilla/dxr/pulls/113,113,Fix Typos,"A couple of minor problems in comments and rarely-seen strings.
",abbeyj,99402,2013-03-05T20:26:03Z,CONTRIBUTOR,True,4,4,1,Powerful search for large codebases,Python,f81eb1727fc36a5be7aebfc7b12811c3c425375f,Fix incorrect comments (copy-and-paste error)
1731,https://api.github.com/repos/mozilla/dxr/pulls/113,113,Fix Typos,"A couple of minor problems in comments and rarely-seen strings.
",abbeyj,99402,2013-03-05T20:26:03Z,CONTRIBUTOR,True,4,4,1,Powerful search for large codebases,Python,de73c73029c3a7cfdfa6e2d6454221192fa15767,Minor grammatical fixes to messages displayed in tooltips.
1732,https://api.github.com/repos/mozilla/dxr/pulls/112,112,Stop &explain=true from corrupting all future queries.,"This was using global variables and was broken since the conversion
to Flask.  Move this data to the flask.request object so it doesn't
affect other requests.
",abbeyj,99402,2013-03-05T19:07:12Z,CONTRIBUTOR,False,22,13,2,Powerful search for large codebases,Python,645e6874d72cf1f0af6d87591a58df13070059c0,"Stop &explain=true from corrupting all future queries.

This was using global variables and was broken since the conversion
to Flask.  Move this data to the flask.request object so it doesn't
affect other requests."
1733,https://api.github.com/repos/mozilla/dxr/pulls/112,112,Stop &explain=true from corrupting all future queries.,"This was using global variables and was broken since the conversion
to Flask.  Move this data to the flask.request object so it doesn't
affect other requests.
",abbeyj,99402,2013-03-05T19:07:12Z,CONTRIBUTOR,False,22,13,2,Powerful search for large codebases,Python,036b1e5971bd4be48c803df6157a85c136834419,Use flask.g instead of flask.request to hold private per-request state.
1734,https://api.github.com/repos/mozilla/dxr/pulls/112,112,Stop &explain=true from corrupting all future queries.,"This was using global variables and was broken since the conversion
to Flask.  Move this data to the flask.request object so it doesn't
affect other requests.
",abbeyj,99402,2013-03-05T19:07:12Z,CONTRIBUTOR,False,22,13,2,Powerful search for large codebases,Python,37f3b7e3b745c595be5b94efa8eeae822ff360dd,Rename flask.g._explain to flask.g._should_explain
1735,https://api.github.com/repos/mozilla/dxr/pulls/112,112,Stop &explain=true from corrupting all future queries.,"This was using global variables and was broken since the conversion
to Flask.  Move this data to the flask.request object so it doesn't
affect other requests.
",abbeyj,99402,2013-03-05T19:07:12Z,CONTRIBUTOR,False,22,13,2,Powerful search for large codebases,Python,21a2a15269605f9bc13622b42a7a33e3fd1ce59b,"Move initialization of flask.g._should_explain and flask.g._sql_profile
to a before_request handler."
1736,https://api.github.com/repos/mozilla/dxr/pulls/111,111,Fix two problems that I indroduced when creating UnionFilter,"1) Extents were being processed incorrectly resulting in strange behavior in search results
2) Using more than one term (e.g. ""type:Foo type:Bar"") would result in too many hits.
",abbeyj,99402,2013-03-01T23:41:11Z,CONTRIBUTOR,False,35,22,3,Powerful search for large codebases,Python,1c39060eca432bdde4cdf45cd8b6a470ed17734d,"Fix problem with extents from UnionFilter.

The calling code expects this to return results sorted and unique and
the previous code did not guarantee either.  This would result in
strange results in the search highlighting such as missing entries
or lines that got portions displayed more than once."
1737,https://api.github.com/repos/mozilla/dxr/pulls/111,111,Fix two problems that I indroduced when creating UnionFilter,"1) Extents were being processed incorrectly resulting in strange behavior in search results
2) Using more than one term (e.g. ""type:Foo type:Bar"") would result in too many hits.
",abbeyj,99402,2013-03-01T23:41:11Z,CONTRIBUTOR,False,35,22,3,Powerful search for large codebases,Python,1a557e4de73f0d40ff69851d04be0a2ad4fc4ea5,"Fix UnionFilter being too liberal with the 'OR's.

Previous behavior was to combine all conditions with OR.  In the case
of a query like ""type:Foo type:Bar"", this found all types matching
either Foo or Bar.  This is in contrast to all other searches that
would would instead first find a list of files matching all terms
and then display all lines within those files matching any term.

This should make type: behave like function: and var:"
1738,https://api.github.com/repos/mozilla/dxr/pulls/110,110,setup.py: ship the clang plugin,"Without this, installed packages don't work very well for indexing.

Note that I don't know my way around setuptools/distribute/whatever so don't trust me on this - it's more of a bug report that _not_ doing this doesn't work, I guess?  Anyway, with `setup.py install`, it didn't include the .so so actually using clang wasn't very productive.  If we're going to ship the rest of the clang plugin anyway...
",mook,80558,2013-02-24T23:09:09Z,CONTRIBUTOR,False,1,0,1,Powerful search for large codebases,Python,a9cfea9f934f15938c70dec3134d87c42cd55c20,"setup.py: ship the clang plugin

Without this, installed packages don't work very well for indexing"
1739,https://api.github.com/repos/mozilla/dxr/pulls/109,109,WSGI: grab DXR_FOLDER from os.environ if not specified in WSGI environ,"This makes it easier to pass it in in some cases (e.g. stackato)

This should properly die if it's not given anywhere.  Also, updated the comments, and tried to be more verbose.  I guess blindly-leap-ahead-and-catch-the-exception is more Pythonic anyway...

Not sure why github decided to just... disappear my previous pull request.  Perhap because I rebased + amended?
",mook,80558,2013-02-24T23:06:18Z,CONTRIBUTOR,True,11,3,1,Powerful search for large codebases,Python,1c7e3ad5a62f5e79b66709a6121c5befbee5bfcf,"WSGI: grab DXR_FOLDER from os.environ if not specified in WSGI environ

This makes it easier to pass it in in some cases (e.g. stackato)"
1740,https://api.github.com/repos/mozilla/dxr/pulls/107,107,(Mostly) fix non-root installs of DXR.,"There's one CSS file which still hardcodes a ""/"" for a background-image, but that is a lot more annoying to fix, so I'll leave it alone for now.
",jcranmer,589481,2013-02-22T06:06:36Z,CONTRIBUTOR,True,3,3,1,Powerful search for large codebases,Python,bc84c1ccce1cabd36a5b219c34474e2ba4b3fc73,(Mostly) fix non-root installs of DXR.
1741,https://api.github.com/repos/mozilla/dxr/pulls/106,106,Notify user when a search request is pending in the background.,"If a request takes a long time then there was no indication that
something was still going on in the background or that the currently
displayed results do not match the contents of the search box.
",abbeyj,99402,2013-02-20T22:40:12Z,CONTRIBUTOR,False,1,0,1,Powerful search for large codebases,Python,50460f007fe6cc0b6bf9d58c28c02792819af4e1,"Notify user when a search request is pending in the background.

If a request takes a long time then there was no indication that
something was still going on in the background or that the currently
displayed results do not match the contents of the search box."
1742,https://api.github.com/repos/mozilla/dxr/pulls/105,105,Fixed crash on negated phrase search,"When preparing a reply on the mailing list...
Noticed a crash when searching with a negated phrase, for example [printf -""sprintf""](http://dxr.mozilla.org/search?tree=mozilla-central&q=printf+-%22sprintf%22&redirect=true)

It looks like a minor typo... So this might just fix it...
",jonasfj,149732,2013-02-20T22:13:55Z,CONTRIBUTOR,False,1,1,1,Powerful search for large codebases,Python,5b2b9735beb754780e124081b6999afeba7e40c7,"Fixed typo, causing crash on negated phrase search"
1743,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,62045d2eea3eb6688987a8b1b597aa21878e5e63,"Don't perform automatic wildcarding on searches.

Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with * and ? characters.  For instance, function:*foo* matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not."
1744,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,e32af3c91e29e747b358572c43a5711b3dcf5c3a,Merge branch 'master' of https://github.com/mozilla/dxr into no-implicit-wildcards
1745,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,407b4a65e2fd35c08055a7a2b05da003c4a288f2,Account for change to expected parameters for found_lines_eq.
1746,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,7a86117d7c2d9087833db42631111b3e18e21477,Fix typo.
1747,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,a98262c30968846ba38881ab702596c251f2bbaf,Merge branch 'master' of https://github.com/mozilla/dxr into no-implicit-wildcards
1748,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,c10bf4576301c5d49038996c2b51cade0b29d85f,Use found_line_eq instead of found_lines_eq for tests that expect one result.
1749,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,be8b86cf3ad5665ed5dbda006722448593cb47c4,Remove unused parameter from found_nothing
1750,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,08740fe23f4e48e760aa7c62df1228cecb9e4781,Make failure message for found_nothing more informative.
1751,https://api.github.com/repos/mozilla/dxr/pulls/104,104,Don't perform automatic wildcarding on searches.,"Previously a search like function:foo would find all functions that had
""foo"" anywhere in their name (like get_foo, set_foo, etc.).  This made
it hard to search for a function called exactly ""foo"" when there were
many other functions containing that term.

Now function:foo matches only functions called ""foo"".  Wildcards can be
specified with \* and ? characters.  For instance, function:_foo_ matches
the old behavior and returns all functions where ""foo"" appears somewhere
in the name.  Similarly, function:foo\* matches functions that begin with
""foo"" and function:*foo matches functions that end with ""foo"".  Using
function:ba? searches for all functions that start with ""ba"" followed by
exactly one more character so ""bar"" and ""baz"" match but ""babar"" does not.

Open question: should things like function:\* be disallowed?
",abbeyj,99402,2013-02-20T19:49:33Z,CONTRIBUTOR,True,68,4,3,Powerful search for large codebases,Python,170f29671545b2d167a396412ef930de2388c0a7,Remove unneeded import of MINIMAL_MAIN
1752,https://api.github.com/repos/mozilla/dxr/pulls/102,102,Make testing not suck so hard,"https://wiki.mozilla.org/Better_DXR_Testing

Work in progress. I just want to see if the tests pass on Jenkins.
",erikrose,295816,2013-02-13T23:33:33Z,MEMBER,True,372,206,30,Powerful search for large codebases,Python,88c05026abf7a66ca747c91428495f58fae5db21,"Introduce a testrunner that dynamically makes a DXR instance, for simple, single-file test fixtures.

* Pass -s to nosetests by default so we can see output and pdb breakpoints.
* Rename old test files so they're more uniquely named and thus findable in LaunchBar."
1753,https://api.github.com/repos/mozilla/dxr/pulls/102,102,Make testing not suck so hard,"https://wiki.mozilla.org/Better_DXR_Testing

Work in progress. I just want to see if the tests pass on Jenkins.
",erikrose,295816,2013-02-13T23:33:33Z,MEMBER,True,372,206,30,Powerful search for large codebases,Python,6606bc93555f9d7029bb761e1b427b3a72951cdc,"Port callers and called-by tests to the new harness. This lets us delete hello.h.

Also switch assert_query_includes to check the full set of returned results. I think the inclusion thing was a bowing to overly tight fixture coupling. Rename it for consistency with found_line_eq."
1754,https://api.github.com/repos/mozilla/dxr/pulls/102,102,Make testing not suck so hard,"https://wiki.mozilla.org/Better_DXR_Testing

Work in progress. I just want to see if the tests pass on Jenkins.
",erikrose,295816,2013-02-13T23:33:33Z,MEMBER,True,372,206,30,Powerful search for large codebases,Python,7aecac2ea96b534db026f036920ea5f3b1b0c131,"Port member tests to the new harness, etc.

Rename json-test/HelloWorld to ""code"" so all the tree names in the tests are the same and we can just hard-code ""code"" in the search URL search_results() uses.

This lets us remove the ""*member*"" and ""BitField.h"" files from json-test. Now we're getting somewhere."
1755,https://api.github.com/repos/mozilla/dxr/pulls/101,101,"Update the ""This page was generated"" text on a pageshow event.","This makes sure the information is not stale when a page comes
out of the bfcache or session restore.
",abbeyj,99402,2013-02-13T20:21:23Z,CONTRIBUTOR,True,3,0,1,Powerful search for large codebases,Python,024c3610ca25d0fbd6ee1dfc4e95ab0aa47581db,"Update the ""This page was generated"" text on a pageshow event.

This makes sure the information is not stale when a page comes
out of the bfcache or session restore."
1756,https://api.github.com/repos/mozilla/dxr/pulls/100,100,Add *.egg-info to .gitignore,,abbeyj,99402,2013-02-12T23:13:03Z,CONTRIBUTOR,False,1,0,1,Powerful search for large codebases,Python,01785e83c73d4e8b028c58bec0fa743953b14162,Add *.egg-info to .gitignore
1757,https://api.github.com/repos/mozilla/dxr/pulls/99,99," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-12T23:05:11Z,CONTRIBUTOR,False,223,96,5,Powerful search for large codebases,Python,43ae6b08caafb76667f2873a9e72f9186e0e24ef,"Split refs table into function_refs, macro_refs, type_refs, typedef_refs, and variable_refs.
Split decldef table into function_decldef, type_decldef, and variable_decldef."
1758,https://api.github.com/repos/mozilla/dxr/pulls/99,99," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-12T23:05:11Z,CONTRIBUTOR,False,223,96,5,Powerful search for large codebases,Python,3ebbe94aae139b9fc4d796f53d5d93f4fb32a6d5,Merge branch 'testing' of https://github.com/mozilla/dxr into split-refs
1759,https://api.github.com/repos/mozilla/dxr/pulls/99,99," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-12T23:05:11Z,CONTRIBUTOR,False,223,96,5,Powerful search for large codebases,Python,bbe49254afade2a840d77e59ba71f13ca9d35f9a,"Fix problem where referenced to declarations weren't being resolved properly.
They were being overwritten with NULL when looking for references to definitions."
1760,https://api.github.com/repos/mozilla/dxr/pulls/99,99," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-12T23:05:11Z,CONTRIBUTOR,False,223,96,5,Powerful search for large codebases,Python,7bbe8e09c0dcd8713daf486390ae89d989192ef4,"Merge branch 'master' of https://github.com/mozilla/dxr into split-refs

Conflicts:
	dxr/plugins/clang/dxr-index.cpp"
1761,https://api.github.com/repos/mozilla/dxr/pulls/99,99," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-12T23:05:11Z,CONTRIBUTOR,False,223,96,5,Powerful search for large codebases,Python,0302a945d5f428887789377f051b582ad60ca03a,"Update ""Extents for types declared here"" code now that decldef table has been split."
1762,https://api.github.com/repos/mozilla/dxr/pulls/98,98,build.py: correct minor typo,"`rel_path` is undefined, the argument is `source_path` (which was `rel_path` in the caller).
",mook,80558,2013-02-12T02:29:30Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,6d56b6ddbed77579673680ff8086253e3c577be0,"build.py: correct minor typo

reL_path is undefined, the argument is source_path (which was rel_path in the caller)."
1763,https://api.github.com/repos/mozilla/dxr/pulls/97,97,Run dxr-worker.py via sys.executable,"When `dxr-worker.py` gets installed, it can lose its execute bit.  Always run it via `sys.executable` so we don't have to worry about this (and also makes sure we end up running the correct instance of python to boot).
",mook,80558,2013-02-12T02:08:44Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,d5d3a538f15b80b21857379adca999bfb26bb279,"Run dxr-worker.py via sys.executable

When dxr-worker.py gets installed, it can lose its execute bit.  Always run it via sys.executable so we don't have to worry about this (and also makes sure we end up running the correct instance of python to boot)."
1764,https://api.github.com/repos/mozilla/dxr/pulls/96,96,Don't fail to ignore a folder if the one before it was also ignored. Clo...,"...ses #84.

This also serves to demonstrate just how bad the boilerplate problem is in the tests.
",erikrose,295816,2013-02-11T23:43:18Z,MEMBER,True,96,13,9,Powerful search for large codebases,Python,346689587bda3f76f14ece6853392f4076dc30d1,Don't fail to ignore a folder if the one before it was also ignored. Closes #84.
1765,https://api.github.com/repos/mozilla/dxr/pulls/95,95,clang plugin: allow overriding llvm-config binary,"ppa:h-rayflood/llvm has a llvm-3.2 (and clang) with the llvm-config binary named llvm-config-3.2 instead (that is, version suffixed); this allows building the clang plugin with `make LLVM_CONFIG=llvm-config-3.2` to succeed (since the package doesn't use update-alternatives for some reason).

This does not change the default behaviour.
",mook,80558,2013-02-09T09:14:33Z,CONTRIBUTOR,False,3,2,1,Powerful search for large codebases,Python,d914b3c6e5c15498539208179985c46196548333,"clang plugin: allow overriding llvm-config binary

ppa:h-rayflood/llvm has a llvm-3.2 (and clang) with the llvm-config binary named llvm-config-3.2 instead (that is, version suffixed); this allows building the clang plugin with `make LLVM_CONFIG=llvm-config-3.2` to succeed (since the package doesn't use update-alternatives for some reason).

This does not change the default behaviour."
1766,https://api.github.com/repos/mozilla/dxr/pulls/94,94," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-06T21:07:16Z,CONTRIBUTOR,False,222,95,5,Powerful search for large codebases,Python,43ae6b08caafb76667f2873a9e72f9186e0e24ef,"Split refs table into function_refs, macro_refs, type_refs, typedef_refs, and variable_refs.
Split decldef table into function_decldef, type_decldef, and variable_decldef."
1767,https://api.github.com/repos/mozilla/dxr/pulls/94,94," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-06T21:07:16Z,CONTRIBUTOR,False,222,95,5,Powerful search for large codebases,Python,3ebbe94aae139b9fc4d796f53d5d93f4fb32a6d5,Merge branch 'testing' of https://github.com/mozilla/dxr into split-refs
1768,https://api.github.com/repos/mozilla/dxr/pulls/94,94," Split refs table into function_refs, macro_refs, type_refs, typedef_r…","…efs, and variable_refs.

Split decldef table into function_decldef, type_decldef, and variable_decldef.
",abbeyj,99402,2013-02-06T21:07:16Z,CONTRIBUTOR,False,222,95,5,Powerful search for large codebases,Python,bbe49254afade2a840d77e59ba71f13ca9d35f9a,"Fix problem where referenced to declarations weren't being resolved properly.
They were being overwritten with NULL when looking for references to definitions."
1769,https://api.github.com/repos/mozilla/dxr/pulls/93,93,Better testing,"Rewrite dxr-build with optparse so I don't have to keep looking at that tangle. Also add some implicit finding of config files for later.
",erikrose,295816,2013-02-06T19:05:44Z,MEMBER,True,45,61,3,Powerful search for large codebases,Python,002022770b86a322fcc6bdd60c3cbaeed2bb3972,Rewrite dxr-build with optparse so I don't have to keep looking at that tangle.
1770,https://api.github.com/repos/mozilla/dxr/pulls/93,93,Better testing,"Rewrite dxr-build with optparse so I don't have to keep looking at that tangle. Also add some implicit finding of config files for later.
",erikrose,295816,2013-02-06T19:05:44Z,MEMBER,True,45,61,3,Powerful search for large codebases,Python,a9a6036564d28a2705e49a631449a02cb3dcb324,Simplify json-test makefile a tad.
1771,https://api.github.com/repos/mozilla/dxr/pulls/92,92,Fix search links when clicking in areas that are not covered by the clan...,"...g plugin.

Mentioned on https://wiki.mozilla.org/Webtools/DXR_User_Research:
    no, I don't want to search ""CGAffineTransform);"" complete
    with the close-parent-and-semicolon...
Now we only select things that look like C++ identifiers so the above
would search for ""CGAffineTransform"" as desired.
",abbeyj,99402,2013-02-05T21:39:27Z,CONTRIBUTOR,False,2,2,1,Powerful search for large codebases,Python,c238c71047942b6349365d616fe4b5608405cbb0,"Fix search links when clicking in areas that are not covered by the clang plugin.

Mentioned on https://wiki.mozilla.org/Webtools/DXR_User_Research:
	no, I don't want to search ""CGAffineTransform);"" complete
	with the close-parent-and-semicolon...
Now we only select things that look like C++ identifiers so the above
would search for ""CGAffineTransform"" as desired."
1772,https://api.github.com/repos/mozilla/dxr/pulls/92,92,Fix search links when clicking in areas that are not covered by the clan...,"...g plugin.

Mentioned on https://wiki.mozilla.org/Webtools/DXR_User_Research:
    no, I don't want to search ""CGAffineTransform);"" complete
    with the close-parent-and-semicolon...
Now we only select things that look like C++ identifiers so the above
would search for ""CGAffineTransform"" as desired.
",abbeyj,99402,2013-02-05T21:39:27Z,CONTRIBUTOR,False,2,2,1,Powerful search for large codebases,Python,a480b18a52fb8be0c85369c529a8dcd7800a49c6,Merge branch 'testing' of https://github.com/mozilla/dxr into js-tokenize
1773,https://api.github.com/repos/mozilla/dxr/pulls/91,91,Linkify class declarations.,"For example in:
  class Foo
  class Foo {};
the first ""Foo"" will be hyperlinked.
",abbeyj,99402,2013-02-05T19:42:26Z,CONTRIBUTOR,False,17,0,1,Powerful search for large codebases,Python,42e6571c15ffb2c184172dfde5594e7607ad9849,"Linkify class declarations.
For example in:
  class Foo
  class Foo {};
the first ""Foo"" will be hyperlinked."
1774,https://api.github.com/repos/mozilla/dxr/pulls/91,91,Linkify class declarations.,"For example in:
  class Foo
  class Foo {};
the first ""Foo"" will be hyperlinked.
",abbeyj,99402,2013-02-05T19:42:26Z,CONTRIBUTOR,False,17,0,1,Powerful search for large codebases,Python,a5d62e03a484537aababbae501161bff1b6dad5e,Merge branch 'testing' of https://github.com/mozilla/dxr into class-decl
1775,https://api.github.com/repos/mozilla/dxr/pulls/90,90,Linkify references to preprocessor macros.,"This includes references to macros inside #ifdef, #ifndef, #undef and #if defined()
",abbeyj,99402,2013-02-04T23:55:05Z,CONTRIBUTOR,True,77,6,7,Powerful search for large codebases,Python,09d0f6d046cd151e7af6583b4e3a31e661b991e8,"Linkify references to preprocessor macros.
This includes references to macros inside #ifdef, #ifndef, #undef and #if defined()"
1776,https://api.github.com/repos/mozilla/dxr/pulls/90,90,Linkify references to preprocessor macros.,"This includes references to macros inside #ifdef, #ifndef, #undef and #if defined()
",abbeyj,99402,2013-02-04T23:55:05Z,CONTRIBUTOR,True,77,6,7,Powerful search for large codebases,Python,989dcd79e1528f252737cc00913689130b467e58,Add tests for preprocessor macro references.
1777,https://api.github.com/repos/mozilla/dxr/pulls/90,90,Linkify references to preprocessor macros.,"This includes references to macros inside #ifdef, #ifndef, #undef and #if defined()
",abbeyj,99402,2013-02-04T23:55:05Z,CONTRIBUTOR,True,77,6,7,Powerful search for large codebases,Python,9d407df1c84c2a2a0469f2fa1fee6fa50f281c3b,Merge branch 'testing' of https://github.com/mozilla/dxr into linkify-macro-refs
1778,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,cdd74f2e55c44d3b65fc6854ad12df71d2c346b8,Get rid of the need to say `file = __file__` in each DxrInstanceClass subclass.
1779,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,94cf8e074b212c7c8e4c6d6e5bcb25eec15b3e17,Add `build` dir to .gitignore. It sometimes pops up while doing Python package installation.
1780,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,f6ccb87c25c9a93dd91f6c08a8026ffe0db87394,Remove unused imports from dxr-build.
1781,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,3885bcc361b5a7ebeb9af726468ccd00ed0991fc,Style
1782,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,1a2fa78ef4101147ca636effa12f34bc73ac1bc4,"Move most of dxr-build into a module so we can call it from the test harness without a trip out to the shell.

This will help us obviate the need for makefiles in test environments."
1783,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,22e270c7c05842eb8a524d8374a6e6c8839d75ac,Add `dist` to .gitignore.
1784,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,2a29020b442ea808772d5e10642680879615d1c2,Find dxr-worker.py even if the package is installed and the executable is nowhere near the dxr module.
1785,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,3377021b4a038a6ed010273e44833d05f51f6b2c,Rename build() to build_instance().
1786,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,cca476abb559f4fa2dc1576aaa609bbff699474d,"Find dxr-worker.py even if we're installed as a development egg.

Finding binaries is hard. Let's go multiprocessing. ;-)"
1787,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,7203edd27ce10376fbaa16196644776f8f1494db,Style
1788,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,571ec0f3b8ffd964f546ac70d495166cb78aeca8,"Don't pass the Config object quite so deeply into the stack (to load_template_env or _fill_and_write_template, in particular).

This is a step on the way to being less coupled to the Config object, so we don't have to have concrete conf files in our test envs.

Also, turn config objects into new-style classes."
1789,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,9bdf8f34689c374ef6eebaffb75d60e8007c6b15,"Merge testing branch into my better-testing branch, just to bring the latter up to date.

Man, these names are confusing. Really need to rename these branches."
1790,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,337277381569c13c49fdf700bcc967cb4c875fde,"Rename Config.template to Config.template_folder, because that's what it represents."
1791,https://api.github.com/repos/mozilla/dxr/pulls/89,89,Small changes toward better testing,"Various small changes toward an easier-to-use test harness, the biggest of which is moving the meat of dxr-build into a module so we can call it without going through a shell.
",erikrose,295816,2013-02-02T00:47:32Z,MEMBER,True,466,433,8,Powerful search for large codebases,Python,0d3604c57caedd91f26f8321b6945c1975a21700,Move dxr-worker inside the dxr package so we can find it reliably.
1792,https://api.github.com/repos/mozilla/dxr/pulls/88,88,Minor clean up to the clang plugin makefile,"- Use ""llvm-config --cxxflags"" and ""llvm-config --ldflags""
- Add -Wno-strict-aliasing for GCC
- Don't pass -shared to the linker twice
- Use $(RM) instead of ""rm -rf""
",abbeyj,99402,2013-01-31T22:03:41Z,CONTRIBUTOR,False,6,7,1,Powerful search for large codebases,Python,e04e5d433b2064c5310486e45da9273e6d0271c8,"Minor clean up to the clang plugin makefile
- Use ""llvm-config --cxxflags"" and ""llvm-config --ldflags""
- Add -Wno-strict-aliasing for GCC
- Don't pass -shared to the linker twice
- Use $(RM) instead of ""rm -rf"""
1793,https://api.github.com/repos/mozilla/dxr/pulls/87,87,Fix hyperlinks for members in a constructor's initialization list.,"Previously in code like:
struct MyClass {
    MyClass();
    int my_member;
};
MyClass::MyClass() :
  my_member(42) {}

the last ""my_member"" would not be hyperlinked.
",abbeyj,99402,2013-01-30T22:38:59Z,CONTRIBUTOR,False,15,0,1,Powerful search for large codebases,Python,67e45296334fe555b91dc621c0087355fb905120,"Fix hyperlinks for members in a constructor's initialization list.

Previously in code like:
struct MyClass {
	MyClass();
	int my_member;
};
MyClass::MyClass() :
  my_member(42) {}

the last ""my_member"" would not be hyperlinked."
1794,https://api.github.com/repos/mozilla/dxr/pulls/86,86,Sort files and folders,"This fixes #85.
",brucestephens,3371217,2013-01-30T11:02:43Z,CONTRIBUTOR,False,2,0,1,Powerful search for large codebases,Python,b7e8ccf2e465b07253c3b924860dddb6b7afa18d,"Sort files and folders

This fixes #85."
1795,https://api.github.com/repos/mozilla/dxr/pulls/84,84,"When looking for files to index, walk folders to discard in reverse","This makes sure we don't skip folders after removed folders due to the
internal iteration index not being decremented.
",mook,80558,2013-01-30T05:47:17Z,CONTRIBUTOR,False,2,1,1,Powerful search for large codebases,Python,736107383b3749c072b2bf6a3501374485bde7b7,"When looking for files to index, walk folders to discard in reverse
This makes sure we don't skip folders after removed folders due to the
internal iteration index not being decremented"
1796,https://api.github.com/repos/mozilla/dxr/pulls/83,83,Make sure we use at least one worker when building HTML,"When there are more workers than files, we can end up with a `step` of `0`.  `xrange` really doesn't like that, and throws an exception.  This makes sure that it gets at least 1, so that it just iterates over an empty range instead.
",mook,80558,2013-01-30T05:46:35Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,944f24ccfcb343bf5c089d852c8a6c1d735a515e,Make sure we use at least one worker when building HTML
1797,https://api.github.com/repos/mozilla/dxr/pulls/82,82,Fix include links for filenames which are suffixes of other filenames.,"Previously if bar.h and foo_bar.h both existed then #include ""bar.h"" would not be hyperlinked.
",abbeyj,99402,2013-01-29T21:45:40Z,CONTRIBUTOR,True,1,1,1,Powerful search for large codebases,Python,252edb125a1101df4027e83a9861b3e96347d85e,"Fix include links for filenames which are suffixes of other filenames.

Previously if bar.h and foo_bar.h both existed then #include ""bar.h"" would not be hyperlinked."
1798,https://api.github.com/repos/mozilla/dxr/pulls/81,81,Fix member: queries for classes/structs that only contain member variables or member functions.,"Previously the member: query would fail unless the class contained at least one variable and
and least one function.
",abbeyj,99402,2013-01-28T23:30:54Z,CONTRIBUTOR,True,37,12,5,Powerful search for large codebases,Python,e47102c971d6c6e7995b2a4a432baf85bdd1b5c2,"Fix member: queries for classes/structs that only contain member variables or member functions.

Previously the member: query would fail unless the class contained at least one variable and
and least one function."
1799,https://api.github.com/repos/mozilla/dxr/pulls/81,81,Fix member: queries for classes/structs that only contain member variables or member functions.,"Previously the member: query would fail unless the class contained at least one variable and
and least one function.
",abbeyj,99402,2013-01-28T23:30:54Z,CONTRIBUTOR,True,37,12,5,Powerful search for large codebases,Python,2fb38ed2ce3547002ccf45e4a8513288db1193f2,Add files for test case.
1800,https://api.github.com/repos/mozilla/dxr/pulls/80,80,Fix nose tests on Python 2.6.,,abbeyj,99402,2013-01-28T22:44:08Z,CONTRIBUTOR,False,6,2,2,Powerful search for large codebases,Python,c35836dd4a6a4d35d3d6d06fc00e198bde7d6c9f,Fix nose tests on Python 2.6.
1801,https://api.github.com/repos/mozilla/dxr/pulls/79,79,Add constructor call information to clang plugin,"This is just a slightly modified copy of the regular function/method
call code. Unfortunately there's no place to click on the constructor
invocation to find the definition, but on clicking on the definition
you can find callers and references. I've added a creation of a
BitField object HelloWorld/main.c as an example (click on the BitField
constructor, and main in main.c can be found as a caller).
",brucestephens,3371217,2013-01-28T14:08:59Z,CONTRIBUTOR,False,28,0,2,Powerful search for large codebases,Python,611e5caa32a4f3d8aeb005891fa72a7c252633bc,"Add constructor call information to clang plugin

This is just a slightly modified copy of the regular function/method
call code. Unfortunately there's no place to click on the constructor
invocation to find the definition, but on clicking on the definition
you can find callers and references. I've added a creation of a
BitField object HelloWorld/main.c as an example (click on the BitField
constructor, and main in main.c can be found as a caller)."
1802,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,70311d787ff84761a71a187e7f818763c99d51d5,Install Flask (and whatever else) from requirements files at provision time.
1803,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,1ac180bf53bdcbedbcee087367eb05c23970555d,"Move some files around in preparation for turning the Python parts into a legitimate package. (Tests should fail.)

The dxr folder is going to form the core of an installable package. search.py, query.py, and utils.py never change; they just get copied on build. Thus, those can live in the installed package, and the build can just be a config file and .htaccess. To serve, run dxr-serve.py --config=/my/build/dir. We can explain that in the last 2 lines output from dxr-build, much as we currently do with test-server. For WSGI, we can pass in the path to the config file in an env var.

Because this reduces repetition, it makes dev easier: we can just edit the single, installed (with python setup.py develop) version of the server, and git will pick it up—no more having to edit an untracked build artifact. More standard installation and project layout probably won't hurt our community adoption, either.

Note that the package won't encompass the entire project, as there's no nice way to make setup.py build trilite and the clang plugins (that I know of)."
1804,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,381a1e44c6c56116009a1148d456ac9f7d4c1b26,"Strip out the CGI server, and replace it with a WSGI one.

So far, the WSGI one is just a stub, but it serves and lives in the right place."
1805,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,82d5993e8e7528b104eeda9bd6efa13ac2559c1d,Install the dxr module as a development link so it's importable by things like dxr-serve.py.
1806,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,f4062c13da91b02a2ea4555ff9615accc54ebddb,"Make browsing work (on json-test). Serve static files. Learn the build dir from command-line flags. Ditch app singleton. Introduce WSGI file. Improve dxr-serve UI.

Wow. It's amazing how well Flask fits with DXR's design. Static files and a single template dir map exactly, and the ""instance"" dir represents a build folder. Like fine-toothed gears.

Details:
* Moved template and static folders to the root of the dxr package, where Flask's defaults look for them. Why be weird?
* WSGI file is entirely untested."
1807,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,3cc7d601ca2a7e84203454751fb06b1cb7a91944,"Invoke pip with --no-deps.

We want to make sure all our dependencies are specified in requirements.txt."
1808,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,6ace1c6f9370f89f5481b04f841ebb390d103e6c,Fix some spelling errors.
1809,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,09b9563fb0133bf4c565d53ed602422c2b8cfaaf,"Get the test server finding the right tree dirs, based on the instance dir.

This also represents a conceptual shift: a tree now does in target/trees/<tree_name>. dxr-build doesn't yet reflect this."
1810,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,7814c860b830fcbbbec4a2b222299ee2923feb94,"Load the instance-local config into Flask's config system.

Capitalize the config keys so we don't have to override any Flask stuff; Flask requires capitals."
1811,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,29e58596a3efeea4f968683d9fb8039eee9544a6,"Get the front page serving.

Flask says slashes here are platform-independent."
1812,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,193fbb0f5ca02e76cec159defdd56225ae12eebb,"Make directory listings and "".html""-less source code URLs work."
1813,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,8736482b6725b1cf503ada4385fba5b943bdfa88,Tweak a little text.
1814,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,20db8711737ad4c63bfd8b4028220cd1c4445c56,"Make dxr-build complete on json-test.

* Deal with moved template directory and executables.
* Quit copying test-server.py and the template folder into the target folder."
1815,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,f34de6e4343578b062a8246266ce050d93f87483,"Bring dxr-build up to speed with the changes we made in the organization of the target folder.

In other words, now the thing gets built in the way the server is expecting it to be:

target/
  config.py
  dot-htaccess (probably going away)
  trees/
    HelloWorld/
    index.html

* Factor out some jinja setup repetition in dxr-build.
* Kill the top-level ""server"" folder. Turn its contents from string.Template templates into jinja templates, like everything else. No more double dollar signs. This kills substitute_in_file()."
1816,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,3ba4aa1278a38c8be1e3caef18d6715622ea6ab7,Let dxr-serve take relative paths.
1817,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,13f2e5a7edb16e5c15525229f73914b5310c7f92,"Make dxr-build tolerate being run over an existing target folder.

No more folder-already-exists errors"
1818,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,4258a26566ebe3ad87e7ed660dfc44fd667f5958,"[bug 826482] Fix double slashes appearing in URLs.

These aren't tolerated by the test server anymore.

While I was at it, rewrote build_folder so it's a little (but not much) easier to follow. Took advantage of the filesizeformat Jinja filter so our file sizes are a little nicer (decimals, like the previous author wanted) and our code for dealing with them a little shorter."
1819,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,b4c8b76c9db8c0aefc419bd234f66c9e627933f6,Adjust makefiles after moving all the files around.
1820,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,353f2f1f632201ff0dec68f2dd845de9c48406bc,Remove the unused copy of PLY blowing around in the clang plugin.
1821,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,7ddcb1191eda15c89bb73bdeb54aefd24fb99b42,Port the search view from CGI to Flask. Tests pass!
1822,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,a44c89029e18e79895f8f203680cff6899a3e9b0,Get Puppet config just right enough to run.
1823,https://api.github.com/repos/mozilla/dxr/pulls/77,77,Make a bogus change to see if Jenkins hangs because it's Jenkins or beca...,"...use of something on my flask branch.
",erikrose,295816,2013-01-25T21:54:40Z,MEMBER,False,408,1485,125,Powerful search for large codebases,Python,ab77c59b59d8ac8546f2378971ac6ad681cf6c76,Sleep longer.
1824,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,70311d787ff84761a71a187e7f818763c99d51d5,Install Flask (and whatever else) from requirements files at provision time.
1825,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,1ac180bf53bdcbedbcee087367eb05c23970555d,"Move some files around in preparation for turning the Python parts into a legitimate package. (Tests should fail.)

The dxr folder is going to form the core of an installable package. search.py, query.py, and utils.py never change; they just get copied on build. Thus, those can live in the installed package, and the build can just be a config file and .htaccess. To serve, run dxr-serve.py --config=/my/build/dir. We can explain that in the last 2 lines output from dxr-build, much as we currently do with test-server. For WSGI, we can pass in the path to the config file in an env var.

Because this reduces repetition, it makes dev easier: we can just edit the single, installed (with python setup.py develop) version of the server, and git will pick it up—no more having to edit an untracked build artifact. More standard installation and project layout probably won't hurt our community adoption, either.

Note that the package won't encompass the entire project, as there's no nice way to make setup.py build trilite and the clang plugins (that I know of)."
1826,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,381a1e44c6c56116009a1148d456ac9f7d4c1b26,"Strip out the CGI server, and replace it with a WSGI one.

So far, the WSGI one is just a stub, but it serves and lives in the right place."
1827,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,82d5993e8e7528b104eeda9bd6efa13ac2559c1d,Install the dxr module as a development link so it's importable by things like dxr-serve.py.
1828,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,f4062c13da91b02a2ea4555ff9615accc54ebddb,"Make browsing work (on json-test). Serve static files. Learn the build dir from command-line flags. Ditch app singleton. Introduce WSGI file. Improve dxr-serve UI.

Wow. It's amazing how well Flask fits with DXR's design. Static files and a single template dir map exactly, and the ""instance"" dir represents a build folder. Like fine-toothed gears.

Details:
* Moved template and static folders to the root of the dxr package, where Flask's defaults look for them. Why be weird?
* WSGI file is entirely untested."
1829,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,3cc7d601ca2a7e84203454751fb06b1cb7a91944,"Invoke pip with --no-deps.

We want to make sure all our dependencies are specified in requirements.txt."
1830,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,6ace1c6f9370f89f5481b04f841ebb390d103e6c,Fix some spelling errors.
1831,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,09b9563fb0133bf4c565d53ed602422c2b8cfaaf,"Get the test server finding the right tree dirs, based on the instance dir.

This also represents a conceptual shift: a tree now does in target/trees/<tree_name>. dxr-build doesn't yet reflect this."
1832,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,7814c860b830fcbbbec4a2b222299ee2923feb94,"Load the instance-local config into Flask's config system.

Capitalize the config keys so we don't have to override any Flask stuff; Flask requires capitals."
1833,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,29e58596a3efeea4f968683d9fb8039eee9544a6,"Get the front page serving.

Flask says slashes here are platform-independent."
1834,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,193fbb0f5ca02e76cec159defdd56225ae12eebb,"Make directory listings and "".html""-less source code URLs work."
1835,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,8736482b6725b1cf503ada4385fba5b943bdfa88,Tweak a little text.
1836,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,20db8711737ad4c63bfd8b4028220cd1c4445c56,"Make dxr-build complete on json-test.

* Deal with moved template directory and executables.
* Quit copying test-server.py and the template folder into the target folder."
1837,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,f34de6e4343578b062a8246266ce050d93f87483,"Bring dxr-build up to speed with the changes we made in the organization of the target folder.

In other words, now the thing gets built in the way the server is expecting it to be:

target/
  config.py
  dot-htaccess (probably going away)
  trees/
    HelloWorld/
    index.html

* Factor out some jinja setup repetition in dxr-build.
* Kill the top-level ""server"" folder. Turn its contents from string.Template templates into jinja templates, like everything else. No more double dollar signs. This kills substitute_in_file()."
1838,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,3ba4aa1278a38c8be1e3caef18d6715622ea6ab7,Let dxr-serve take relative paths.
1839,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,13f2e5a7edb16e5c15525229f73914b5310c7f92,"Make dxr-build tolerate being run over an existing target folder.

No more folder-already-exists errors"
1840,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,4258a26566ebe3ad87e7ed660dfc44fd667f5958,"[bug 826482] Fix double slashes appearing in URLs.

These aren't tolerated by the test server anymore.

While I was at it, rewrote build_folder so it's a little (but not much) easier to follow. Took advantage of the filesizeformat Jinja filter so our file sizes are a little nicer (decimals, like the previous author wanted) and our code for dealing with them a little shorter."
1841,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,b4c8b76c9db8c0aefc419bd234f66c9e627933f6,Adjust makefiles after moving all the files around.
1842,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,353f2f1f632201ff0dec68f2dd845de9c48406bc,Remove the unused copy of PLY blowing around in the clang plugin.
1843,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,7ddcb1191eda15c89bb73bdeb54aefd24fb99b42,Port the search view from CGI to Flask. Tests pass!
1844,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,bc57b28e59a9eebc50bcf794f0188af4828ce489,"Fix the <b> tags being escaped in the non-JSON search results.

This is safe because the line gets cgi.escape()d in query.py."
1845,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,359195820fdcd628010a0d4bb634359d9cf6eef9,"Implement a sample WSGI Apache config which serves the json-test dir.

If you want to serve other things on a box where you don't control Apache, use dxr-serve.

* Disable the 000-default vhost so ours can kick in.
* Install mod_wsgi.
* Make dxr package installation actually work in puppet."
1846,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,663e962f5018de005a6c13d664f578b3bcb39fc4,"Stop exporting LD_LIBRARY_PATH in .bashrc.

We're going to start installing the library properly on the Vagrant box. We need to so that Apache's WSGI children will see it. For people not using the Vagrant box, we set LD_LIBRARY_CONFIG in the makefiles during tests."
1847,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,5c02673541a6c8bdb4b40191c7f5915ff2898422,"Install libtrilite globally on the Vagrant box.

This lets Apache's WSGI processes see it."
1848,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,180076f8d622ce2a053582bae7842bdef40faca5,"Stop generating .htaccess files.

Those are really, really clumsy (impossible?) to get working with WSGI. Also, they're not great for performance. If you're going to put a production deployment, it's not a bad assumption that you also control the web server and can put in global config. If you're just booting up DXR to play around, you can use dxr-serve."
1849,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,8855cdffcc6dd430c9f6f6f7ee092bef78a06025,"Get rid of the --server arg to dxr-build.

We no longer generate any Python code, so this option has little use anymore.

Merge create_server() (whose name no longer at all describes what it does) with its calling function. Someday I'll refactor this whole script."
1850,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,9ec2ebcb6256b25268f33da0f8b194acd72433fa,Bring documentation up to date with the horrors I have wrought.
1851,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,ea6c9a1d6a77c01944fbd33726559474bf9d2bab,Merge `testing` into `flask` so Leeroy will run it.
1852,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,c887c9b53ef250a5870f5e3780292fe9304a156e,Stick a newline after `requirements/dev.txt`.
1853,https://api.github.com/repos/mozilla/dxr/pulls/76,76,"Switch from CGI to WSGI, reorganize project, and much more","Read the individual commits, but here are the highlights:
- Turn CGI into a Flask app, served via WSGI. There are no more .htaccess files necessary (or perhaps even possible).
- Reimagine as a proper Python package. This lets us stop generating Python source code as part of the instance.
- Drastically simplify instances: they no longer contain executables or copies of templates and static resources. All that stuff lives in the dxr Python module, once and for all. This makes development a lot faster, since you don't have to rebuild all the time. 3rd-party templates (which I want to rename ""themes"" because we have other things called ""templates"") should still be supported, though I haven't tried it.
- Fix the double-slash-in-URLs bug.
- Rework the testrunner just enough to get Jenkins to not freak out intermittently about socket errors.
",erikrose,295816,2013-01-24T23:50:25Z,MEMBER,True,598,1753,135,Powerful search for large codebases,Python,24a06b1df9eba0ef081d2dadca5641f89ede0b5f,"Specify dependencies in setup.py. Flatten out requirements. Install python libs from source.

Our Vagrant VM is Ubuntu, but we'll deploy on RHEL, and they'll probably have different sets of packaged Python libs. To avoid having an explosion of intertwingled requirements files, we'll just install everything from pip for now. Our thought for production deployment is to have the admin node build the compiled (and other) libs, since that box is architecturally and shared-lib-ly identical to the webheads.

Also, get rid of python-wsgi-intercept, which we don't need."
1854,https://api.github.com/repos/mozilla/dxr/pulls/74,74,Fix callers: and called-by:,"See
https://bugzilla.mozilla.org/show_bug.cgi?id=823777
and
https://github.com/mozilla/dxr/issues/57
",abbeyj,99402,2013-01-23T20:29:35Z,CONTRIBUTOR,True,150,113,2,Powerful search for large codebases,Python,ac2b17f9184eb618e8b048b98e938715bb952722,"Fix callers: and called-by:
See
https://bugzilla.mozilla.org/show_bug.cgi?id=823777
and
https://github.com/mozilla/dxr/issues/57"
1855,https://api.github.com/repos/mozilla/dxr/pulls/73,73,Add support for typedefs,"Typedefs are hyperlinked, both at the definition and at any references.
Searches using type: and type-ref: now find typedefs.
",abbeyj,99402,2013-01-23T19:33:36Z,CONTRIBUTOR,False,97,7,8,Powerful search for large codebases,Python,3351f847ce1cea5d7486d546715bfc47eb3772e5,"Add support for typedefs

Typedefs are hyperlinked, both at the definition and at any references.
Searches using type: and type-ref: now find typedefs."
1856,https://api.github.com/repos/mozilla/dxr/pulls/73,73,Add support for typedefs,"Typedefs are hyperlinked, both at the definition and at any references.
Searches using type: and type-ref: now find typedefs.
",abbeyj,99402,2013-01-23T19:33:36Z,CONTRIBUTOR,False,97,7,8,Powerful search for large codebases,Python,24114abaa01367cf2c77049cb94d3ac4805a832a,Merge branch 'or-filter' of github.com:abbeyj/dxr into typedefs
1857,https://api.github.com/repos/mozilla/dxr/pulls/73,73,Add support for typedefs,"Typedefs are hyperlinked, both at the definition and at any references.
Searches using type: and type-ref: now find typedefs.
",abbeyj,99402,2013-01-23T19:33:36Z,CONTRIBUTOR,False,97,7,8,Powerful search for large codebases,Python,3b2680f24071f2bf53795f102390c9f2ded31b78,Use UnionFilter for handling type: and type-ref: queries.
1858,https://api.github.com/repos/mozilla/dxr/pulls/73,73,Add support for typedefs,"Typedefs are hyperlinked, both at the definition and at any references.
Searches using type: and type-ref: now find typedefs.
",abbeyj,99402,2013-01-23T19:33:36Z,CONTRIBUTOR,False,97,7,8,Powerful search for large codebases,Python,c18bf1d7b116000a12228054368522257eaa3b3e,Merge branch 'testing' of https://github.com/mozilla/dxr into typedefs
1859,https://api.github.com/repos/mozilla/dxr/pulls/72,72,"Add indices for types.qualname, functions.qualname, variables.qualname,","typedefs.qualname, refs.refid, and decldef.defid.

This speeds up queries like +function-ref.  I've seen about a 30x improvement.
",abbeyj,99402,2013-01-22T21:50:12Z,CONTRIBUTOR,True,11,8,3,Powerful search for large codebases,Python,a1a2384ca36604254f0906fbb1e9cf63611970cf,"Add indices for types.qualname, functions.qualname, variables.qualname,
typedefs.qualname, refs.refid, and decldef.defid.

This speeds up queries like +function-ref.  I've seen about a 30x improvement."
1860,https://api.github.com/repos/mozilla/dxr/pulls/72,72,"Add indices for types.qualname, functions.qualname, variables.qualname,","typedefs.qualname, refs.refid, and decldef.defid.

This speeds up queries like +function-ref.  I've seen about a 30x improvement.
",abbeyj,99402,2013-01-22T21:50:12Z,CONTRIBUTOR,True,11,8,3,Powerful search for large codebases,Python,486343119cdefbaae9765f826966917f290fb0a8,Add TODO comment about making the index on files.path unique.
1861,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,51b104e65909ac1045ecf99715ecbdd278fe9713,"Remove ""t"" prefix from columns in the ""types"" table."
1862,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,ff482d2049823cbfc562c8ecfd94caa4adeff90b,"Remove ""f"" prefix from columns in the functions table."
1863,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,80fa50cdf5fe44bd9456c84bc36ef2cf9bcc2fb3,"Remove ""v"" prefix from columns in the ""variables"" table."
1864,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,f5f03301b3d29e58cec3d56978cee92906a1a46b,"Remove ""t"" prefix from columns in the ""typedefs"" table.
Record the name and qualname of the typedef and stop recording the underlying type
for now since it is not used."
1865,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,090a40cbc9e8026c94fd53ce308bb574c36dfc94,"Remove ""w"" prefix from columns in the ""warnings"" table."
1866,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,91b4e151ecb45ff9ec1af42b5acffa627b175366,"Remove ""macro"" prefix from columns in the ""macros"" table."
1867,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,503e3e04b8323220949460da24f69f7ea7009c95,"Remove ""s"" prefix from columns in the ""scopes"" table."
1868,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,e77d3a0f50ea890be579cd30a8742b61469011a0,"Rename the ""ID"" column in the ""files"" table to ""id"" (lowercase)"
1869,https://api.github.com/repos/mozilla/dxr/pulls/71,71,Remove prefixes from SQL column names,"Many columns in the SQL tables are prefixed with a letter or shortened version of the table name.  Like variables.vqualname, functions.fqualname, types.tqualname, and so on.  This is unneeded and leads to confusion since some columns are prefixed and others aren't.

These changes remove the prefixes.  Whenever a table has a qualname column is is now just called ""qualname"".
",abbeyj,99402,2013-01-17T22:26:52Z,CONTRIBUTOR,False,293,293,5,Powerful search for large codebases,Python,5b8c3f7e152513f53c9c9abad29953b643246320,"Fix typo of ""d"" instead of ""id"" for column in ""functions"" table."
1870,https://api.github.com/repos/mozilla/dxr/pulls/70,70,"Build in build directory, not source directory.","Also, don't kill the object directory if it's the source directory.
",jcranmer,589481,2013-01-17T19:33:27Z,CONTRIBUTOR,False,9,5,3,Powerful search for large codebases,Python,e7dc46a00fd5c40fa54cd4651f73f1fbf67c36c8,"Move cwd of the build command to the object directory instead of the source directory.

Also, don't kill the object directory if it's the source directory."
1871,https://api.github.com/repos/mozilla/dxr/pulls/69,69,Treat declarations of pure virtual functions as definitions.,"A pure virtual function won't (usually) have a definition.  Without one, we won't hyperlink
the name of the function where it is called.  As a workaround until we have better support
for (pure) virtual functions, we treat the declaration as a definition.
",abbeyj,99402,2013-01-16T21:33:27Z,CONTRIBUTOR,True,2,3,1,Powerful search for large codebases,Python,e62f0059a6a7a5e968534bc5e9f9466e90f05635,"Treat declarations of pure virtual functions as definitions.
A pure virtual function won't (usually) have a definition.  Without one, we won't hyperlink
the name of the function where it is called.  As a workaround until we have better support
for (pure) virtual functions, we treat the declaration as a definition."
1872,https://api.github.com/repos/mozilla/dxr/pulls/69,69,Treat declarations of pure virtual functions as definitions.,"A pure virtual function won't (usually) have a definition.  Without one, we won't hyperlink
the name of the function where it is called.  As a workaround until we have better support
for (pure) virtual functions, we treat the declaration as a definition.
",abbeyj,99402,2013-01-16T21:33:27Z,CONTRIBUTOR,True,2,3,1,Powerful search for large codebases,Python,be032f2ab946b5f8ba753a9dca8ccd3658250da6,Merge branch 'testing' of https://github.com/mozilla/dxr into pure-virtual
1873,https://api.github.com/repos/mozilla/dxr/pulls/68,68,Don't emit variable definition entries for things which are only declara...,"...tions.

Add decldef entries for variable declarations.

This fixes ""Jump to definition"" on a static class member jumping to the header instead of the actual definition.
It also avoids duplicate definitions for function parameters that are mentioned by name in the function's prototype.
Now the only the variable in the function definition counts as the definition.
",abbeyj,99402,2013-01-15T23:01:15Z,CONTRIBUTOR,True,71,9,9,Powerful search for large codebases,Python,8ef73f10ddeb91726ec90de1793ce5733166cd26,"Don't emit variable definition entries for things which are only declarations.
Add decldef entries for variable declarations.

This fixes ""Jump to definition"" on a static class member jumping to the header instead of the actual definition.
It also avoids duplicate definitions for function parameters that are mentioned by name in the function's prototype.
Now the only the variable in the function definition counts as the definition."
1874,https://api.github.com/repos/mozilla/dxr/pulls/67,67,Upgrade to LLVM 3.2.,"Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61. (This is continued from #65.)
",erikrose,295816,2013-01-11T22:53:52Z,MEMBER,False,29,7,3,Powerful search for large codebases,Python,66fb42260c288c38b1389fe6021076391a609180,"Upgrade to LLVM 3.2.

Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61."
1875,https://api.github.com/repos/mozilla/dxr/pulls/67,67,Upgrade to LLVM 3.2.,"Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61. (This is continued from #65.)
",erikrose,295816,2013-01-11T22:53:52Z,MEMBER,False,29,7,3,Powerful search for large codebases,Python,251c5dc1951d3613fd34a9cff5b8d28189edf35e,Add debugging output to jenkins.sh
1876,https://api.github.com/repos/mozilla/dxr/pulls/67,67,Upgrade to LLVM 3.2.,"Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61. (This is continued from #65.)
",erikrose,295816,2013-01-11T22:53:52Z,MEMBER,False,29,7,3,Powerful search for large codebases,Python,afe09bf3eb74d0e8a371e04710e48939382c233b,Make ls in debugging output recursive
1877,https://api.github.com/repos/mozilla/dxr/pulls/67,67,Upgrade to LLVM 3.2.,"Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61. (This is continued from #65.)
",erikrose,295816,2013-01-11T22:53:52Z,MEMBER,False,29,7,3,Powerful search for large codebases,Python,657529c4105857983c5c31b894d9c52d84e3c915,"Remove debugging output and make jenkins do ""make clean"" so old outputs can't confuse things."
1878,https://api.github.com/repos/mozilla/dxr/pulls/66,66,Vagrant destroy,"Destroy the vagrant box at the end of each Jenkins run.
",erikrose,295816,2013-01-11T22:43:16Z,MEMBER,True,9,4,2,Powerful search for large codebases,Python,b3071eb7038908e2a2ddb7a82515a809f4d81a07,State what jenkins.sh does.
1879,https://api.github.com/repos/mozilla/dxr/pulls/66,66,Vagrant destroy,"Destroy the vagrant box at the end of each Jenkins run.
",erikrose,295816,2013-01-11T22:43:16Z,MEMBER,True,9,4,2,Powerful search for large codebases,Python,22580f9325802df6c00730b882e315e379b4c699,"Print any build log that fails.

This makes it a heck of a lot easier to debug failures that happen only on Jenkins."
1880,https://api.github.com/repos/mozilla/dxr/pulls/66,66,Vagrant destroy,"Destroy the vagrant box at the end of each Jenkins run.
",erikrose,295816,2013-01-11T22:43:16Z,MEMBER,True,9,4,2,Powerful search for large codebases,Python,121f0fc83b11a5f5cb2ef6c0b76a3cab996fc251,"Destroy the vagrant box at the end of each Jenkins run.

This is what the vagrant Jenkins plugin does. I suspect state is leaking from run to run without this."
1881,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,b3071eb7038908e2a2ddb7a82515a809f4d81a07,State what jenkins.sh does.
1882,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,be3264cbb95928fbee41db3277adf2af67563650,"Upgrade to LLVM 3.2.

Use the binary tarball from llvm.org, since there are no good Ubuntu packages. This will let us merge #61."
1883,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,26a7c76dfb82c6acf23bd63549b43f491ceb4d3b,"Print any build log that fails.

This makes it a heck of a lot easier to debug failures that happen only on Jenkins."
1884,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,51dce18897eb44ae16a0418ff080d6f80f0b336e,"Destroy the vagrant box at the end of each Jenkins run.

This is what the vagrant Jenkins plugin does. I suspect state is leaking from run to run without this."
1885,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,6d6a2a07efa0e2544dd90da8a7219a2ed6ff36e0,"Always destroy the Vagrant box, even if the tests fail horribly."
1886,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,16762f1d025dfa9af6f6e1400417c0c9aa7d8b5d,"(squash) Even better, thanks to Mook."
1887,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,9179510559b385f95e93619324b74fc8c7d84a4b,And pass --force to destroy so it works without a tty.
1888,https://api.github.com/repos/mozilla/dxr/pulls/65,65,Upgrade to LLVM 3.2,,erikrose,295816,2013-01-11T21:14:21Z,MEMBER,False,37,10,4,Powerful search for large codebases,Python,3df5dc66a42afc718b53d4290fcc6d3ae7d9068e,Shell script more good.
1889,https://api.github.com/repos/mozilla/dxr/pulls/64,64,Stick the few lines of Jenkins shell script in a file so we can change-t...,"...rack it.
",erikrose,295816,2013-01-10T00:52:51Z,MEMBER,True,4,0,1,Powerful search for large codebases,Python,39853c8486800c05ef6d4269c45d29b5bfd75e1d,Stick the few lines of Jenkins shell script in a file so we can change-track it.
1890,https://api.github.com/repos/mozilla/dxr/pulls/63,63,Don't mount shared folder when on Jenkins.,"This should dodge the NFS crash.
",erikrose,295816,2013-01-09T21:24:24Z,MEMBER,True,6,10,3,Powerful search for large codebases,Python,c22cf430e726b8773d55231439f7c40837400eed,"Make tests pass on Jenkins!

* Quit using NFS shared folders on Jenkins, since they don't work at the moment.
* Enable symlinks on the dxr shared folder so trilite will build.
* Make many tweaks to the Jenkins config:
  * Build our vagrant box manually rather than with the Jenkins plugin. Run the tests over ssh from a normal ""execute shell"" build step as well, since it doesn't find our manually-created box otherwise.
  * Get the path to vagrant executable right."
1891,https://api.github.com/repos/mozilla/dxr/pulls/62,62,Add a temporary script that `scp`s the checkout into the Vagrant VM on J...,"...enkins so we can get CI passing.

Once https://bugzilla.mozilla.org/show_bug.cgi?id=826549 is done, we can remove this.
",erikrose,295816,2013-01-09T18:42:18Z,MEMBER,True,9,0,1,Powerful search for large codebases,Python,e382975f60f56f4762cd188fae16cd417558789c,"Add a temporary script that `scp`s the checkout into the Vagrant VM on Jenkins so we can get CI passing.

Once https://bugzilla.mozilla.org/show_bug.cgi?id=826549 is done, we can remove this."
1892,https://api.github.com/repos/mozilla/dxr/pulls/61,61," Add ""const"" to the end of the fully qualified name of const methods.","This avoids confusing two separate methods ""void foo()"" and
""void foo() const"".
",abbeyj,99402,2013-01-07T21:32:36Z,CONTRIBUTOR,True,26,5,5,Powerful search for large codebases,Python,78be76febc806ed84683cfa42e4e05a92cc0eab2,Merge branch 'testing' of https://github.com/mozilla/dxr into testing
1893,https://api.github.com/repos/mozilla/dxr/pulls/61,61," Add ""const"" to the end of the fully qualified name of const methods.","This avoids confusing two separate methods ""void foo()"" and
""void foo() const"".
",abbeyj,99402,2013-01-07T21:32:36Z,CONTRIBUTOR,True,26,5,5,Powerful search for large codebases,Python,86b06448328411aafe15c3da446441af88018067,"Add ""const"" to the end of the fully qualified name of const methods.
This avoids confusing two separate methods ""void foo()"" and
""void foo() const""."
1894,https://api.github.com/repos/mozilla/dxr/pulls/61,61," Add ""const"" to the end of the fully qualified name of const methods.","This avoids confusing two separate methods ""void foo()"" and
""void foo() const"".
",abbeyj,99402,2013-01-07T21:32:36Z,CONTRIBUTOR,True,26,5,5,Powerful search for large codebases,Python,570ac1b2037a96083e5c99793f7a060318990617,Add test files missing from previous commit.
1895,https://api.github.com/repos/mozilla/dxr/pulls/60,60,Make Jenkins happy,"As soon as Jenkins gets the Virtualbox kernel module loaded (https://bugzilla.mozilla.org/show_bug.cgi?id=826549), this should make the tests pass on Jenkins. Let's merge it in the meantime; it makes things better, not worse.
",erikrose,295816,2013-01-04T23:42:24Z,MEMBER,True,3,1,1,Powerful search for large codebases,Python,27b10eed42dfacdf750fc2ccfe33ca6e918e99a7,"Set LD_LIBRARY_PATH in the json-test makefile. This should solve bug 823322.

I'm not sure where that makefile comes from. If something generates it, we should fix this at the source."
1896,https://api.github.com/repos/mozilla/dxr/pulls/60,60,Make Jenkins happy,"As soon as Jenkins gets the Virtualbox kernel module loaded (https://bugzilla.mozilla.org/show_bug.cgi?id=826549), this should make the tests pass on Jenkins. Let's merge it in the meantime; it makes things better, not worse.
",erikrose,295816,2013-01-04T23:42:24Z,MEMBER,True,3,1,1,Powerful search for large codebases,Python,379f7420ae994341cd4334d4a233e2a785e6ec83,"Fix libtrilite not getting built on test.

(Ripped off from abbeyj's pull req)"
1897,https://api.github.com/repos/mozilla/dxr/pulls/60,60,Make Jenkins happy,"As soon as Jenkins gets the Virtualbox kernel module loaded (https://bugzilla.mozilla.org/show_bug.cgi?id=826549), this should make the tests pass on Jenkins. Let's merge it in the meantime; it makes things better, not worse.
",erikrose,295816,2013-01-04T23:42:24Z,MEMBER,True,3,1,1,Powerful search for large codebases,Python,4840ebdced754a7abca866b9c52ebfc48ea2c216,Merge abbeyj's LD_LIBRARY_PATH fixes in. I like his relative paths better.
1898,https://api.github.com/repos/mozilla/dxr/pulls/59,59,Fix for failing tests due to not being able to locate libtrilite.so,,abbeyj,99402,2013-01-02T23:34:32Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,6ff31e318318c54f5966f14e0ab44490aaec5f7a,Fix for failing tests due to not being able to locate libtrilite.so
1899,https://api.github.com/repos/mozilla/dxr/pulls/59,59,Fix for failing tests due to not being able to locate libtrilite.so,,abbeyj,99402,2013-01-02T23:34:32Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,7a38be37460100426e7668e5cc375cf3f6d8204e,"Second attempt to fix ""make test"""
1900,https://api.github.com/repos/mozilla/dxr/pulls/59,59,Fix for failing tests due to not being able to locate libtrilite.so,,abbeyj,99402,2013-01-02T23:34:32Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,97a877c2bccdf3c0e465532c465d2cb074e57773,Make sure build is run before attempting to test.
1901,https://api.github.com/repos/mozilla/dxr/pulls/59,59,Fix for failing tests due to not being able to locate libtrilite.so,,abbeyj,99402,2013-01-02T23:34:32Z,CONTRIBUTOR,False,3,3,3,Powerful search for large codebases,Python,78be76febc806ed84683cfa42e4e05a92cc0eab2,Merge branch 'testing' of https://github.com/mozilla/dxr into testing
1902,https://api.github.com/repos/mozilla/dxr/pulls/58,58,"Don't emit ""type""s for declarations, only definitions"," Previously code like:
    struct Foo;
    struct Foo;
    struct Foo {};
would emit one ""type"" and one ""decldef"" for each line.  This could
result in ""Jump to Definition"" going to the wrong place.  Now this code
results in one ""decldef"" for each of the first two lines and one ""type""
for the last line.
",abbeyj,99402,2013-01-02T22:56:23Z,CONTRIBUTOR,True,20,27,1,Powerful search for large codebases,Python,201835a55bc81cc6048b01b5160436e4063777c0,"Don't emit ""type""s for declarations, only definitions.  Previously code
like:
	struct Foo;
	struct Foo;
	struct Foo {};
would emit one ""type"" and one ""decldef"" for each line.  This could
result in ""Jump to Definition"" going to the wrong place.  Now this code
results in one ""decldef"" for each of the first two lines and one ""type""
for the last line."
1903,https://api.github.com/repos/mozilla/dxr/pulls/56,56,Export compiler command lines in DXR-specific env variables.,"Resolve Issue #55.

Rather than just export CC and CXX environment variables, export the
same information as DXR-specific environment variables.  This helps
integration into non-GNU build systems.
",cleeland,1247303,2012-12-27T15:19:30Z,NONE,True,3,0,1,Powerful search for large codebases,Python,f9ec57319a2ab292506a0707dafd3af7c8c508f4,"Export compiler command lines in DXR-specific env variables.

Rather than just export CC and CXX environment variables, export the
same information as DXR-specific environment variables.  This helps
integration into non-GNU build systems."
1904,https://api.github.com/repos/mozilla/dxr/pulls/53,53,"tests: force set LD_LIBRARY_PATH before running any test scripts, to mak...","...e

sure trilite can be found.

[ER: Let's see what Leeroy Jenkins things of this.]
",erikrose,295816,2012-12-23T18:19:39Z,MEMBER,False,7,1,1,Powerful search for large codebases,Python,75bb2d7eb008393e18d83b00a91ecb9536664b04,"tests: force set LD_LIBRARY_PATH before running any test scripts, to make
sure trilite can be found."
1905,https://api.github.com/repos/mozilla/dxr/pulls/51,51,dxr-build: allow specifying tree build order,"Add support for an optional |order| parameter to tree configs; it should be
an integer, with smaller values being built first.  Trees with unspecified
order will be built after those with specified order, in sorted by tree
name.

This is necessary because I'm running this against a tree that requires the objdir of a second tree to actually build.  (In this case, I need to build the bulk of Mozilla before building Komodo; similar things happened with Songbird, where a XULRunner + TagLib + gstreamer + etc. build was required before building Songbird itself.)  See also, say, GCC needing binutils.  Basically, anything that needs to build some imported code in a separate build step separate from the main build system (mostly because the imported code takes a long time to build and does not change often).

This at least introduces a defined build order to things - before it was just building things in whatever order dict().keys() was returning, which is unspecified.
",mook,80558,2012-12-21T02:42:46Z,CONTRIBUTOR,True,8,1,1,Powerful search for large codebases,Python,01341da4fbb74a1678f29d3e6fee36459f2d333c,"dxr-build: allow specifying tree build order

Add support for an optional |order| parameter tp tree configs; it should be
an integer, with smaller values being built first.  Trees with unspecified
order will be built after those with specified order, in sorted by tree
name."
1906,https://api.github.com/repos/mozilla/dxr/pulls/50,50,dxr-build: add ignore patterns involving the whole path,"This adds support for ignore_patterns that take the whole path into
account.  Any ignore patterns that start with ""/"" will be matched against
the whole path relative to the root of the source tree, instead of just the
leaf name of the item.

Note that this doesn't do the right thing - it will happily match sub-
directories with a single ""*"".

For example, setting ignore pattern to "".hg /build/"" will mean ignoring both 1) any files or directories named "".hg"", and 2) a directory at the root of the repo named ""build"".  This, however, will not ignore ""/widget/windows/build/"" because even though the leaf name matches, it does not start at the root of the source tree.
",mook,80558,2012-12-21T02:38:34Z,CONTRIBUTOR,False,10,0,2,Powerful search for large codebases,Python,162c57c65c844580e9dbe0119c93e9f5198dd120,"dxr-build: add ignore patterns involving the whole path

This adds support for ignore_patterns that take the whole path into
account.  Any ignore patterns that start with ""/"" will be matched against
the whole path relative to the root of the source tree, instead of just the
leaf name of the item.

Note that this doesn't do the right thing - it will happily match sub-
directories with a single ""*""."
1907,https://api.github.com/repos/mozilla/dxr/pulls/50,50,dxr-build: add ignore patterns involving the whole path,"This adds support for ignore_patterns that take the whole path into
account.  Any ignore patterns that start with ""/"" will be matched against
the whole path relative to the root of the source tree, instead of just the
leaf name of the item.

Note that this doesn't do the right thing - it will happily match sub-
directories with a single ""*"".

For example, setting ignore pattern to "".hg /build/"" will mean ignoring both 1) any files or directories named "".hg"", and 2) a directory at the root of the repo named ""build"".  This, however, will not ignore ""/widget/windows/build/"" because even though the leaf name matches, it does not start at the root of the source tree.
",mook,80558,2012-12-21T02:38:34Z,CONTRIBUTOR,False,10,0,2,Powerful search for large codebases,Python,c5b07d864b77f534328e5344b0881611d4c1f27c,dxr-build.py: correctly skip directory path matches
1908,https://api.github.com/repos/mozilla/dxr/pulls/49,49,Add profiling ability for SQL queries.,"Appending ""&explain=true"" to the end of the URL of any query will run
the query as normal but not return the results to the browser.
Instead it will report the results of ""EXPLAIN QUERY PLAN"" for every
SQL statement that is run along with the time that each statement took.

This can be useful in diagnosing slow queries and figuring out how to
speed them up.
",abbeyj,99402,2012-12-20T21:33:47Z,CONTRIBUTOR,True,51,5,2,Powerful search for large codebases,Python,a538f803bd585eac41545f408a005fefa95125fa,"Add profiling ability for SQL queries.

Appending ""&explain=true"" to the end of the URL of any query will run
the query as normal but not return the results to the browser.
Instead it will report the results of ""EXPLAIN QUERY PLAN"" for every
SQL statement that is run along with the time that each statement took.

This can be useful in diagnosing slow queries and figuring out how to
speed them up."
1909,https://api.github.com/repos/mozilla/dxr/pulls/48,48,Delete unused sets of templates. Closes bug 821411.,"Can't believe my luck: nothing seems to reference these at all!
",erikrose,295816,2012-12-14T21:20:22Z,MEMBER,True,0,3107,1089,Powerful search for large codebases,Python,5b5ef7d80f56f0c697e19c0c79e0b6634102e453,Delete unused sets of templates. Closes bug 821411.
1910,https://api.github.com/repos/mozilla/dxr/pulls/47,47,"Replace the last use of the ""keyup"" event with ""input"". Fixes bug 819474.","https://bugzilla.mozilla.org/show_bug.cgi?id=819474
",erikrose,295816,2012-12-14T01:03:34Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,eaabd2019047772246ecbe344c9bdd4d6b832227,"Replace the last use of the ""keyup"" event with ""input"". Fixes bug 819474."
1911,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,9b7120f15928cfb1ac6b5dcd68d1269af3e15061,Start standardizing JS on single quotes.
1912,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,4ea47fccd37e9d97901ebf86057a30b16ef4cffa,"Change whitespace in layout.css.

This is for both internal consistency and consistency with other webdev projects."
1913,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,eccfcd1bd9e052f51b6e6ac3236fa58390233147,"Fix search text entry bug and a couple unfiled ones.

Instead of copying the input contents and everything else from one form to another, just move the page elements around by twiddling CSS. This gets rid of half the HTML and JS on the index page and avoids us having to muck with selection ranges manually, which vary in API across browsers.

Also, switch from ""keyup"" event to ""input"". This makes editing the search terms without pressing keys (e.g., selecting Cut or Paste from a menu) works.

Redo much of the CSS:
* Get rid of overspecified selectors.
* Kill inline styling.
* Add horizontal padding in very narrow window sizes (like on mobile) for the pre-search (big logo) manifestation.
* Keep things from falling apart when text-only zooming.
* Make pre-search input field more visually consistent with its post-search manifestation."
1914,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,66c9f3160cffc392f4336d6b994705d4f75af925,"Factor up search box into a macro.

Quit repeating it everywhere. Keep it from showing up twice on the splash page and being styled badly elsewhere."
1915,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,e8a651a1251abf6d51da1b8330e92be676571bf7,"[bug 821376] In the tree menu, select the actual tree we're browsing."
1916,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,b7d62098c492dc63136da61187ff6d3fe23ddb8b,"Splice tree menu into a new home when we get off the splash page.

I think this way is least evil: we don't have to have 2 forms, nor does our layout get fragile.

Also...
* Rename treetip for consistency.
* Quit overstyling the tree menu. That looks nasty on the Mac.

Where's my Jinja `with` directive?"
1917,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,bac3e495723817ff6cedde3af3d7ed22311d2e10,"Post-search view is no longer wrong in Safari.

The div around ""tree-tip"" and ""tip"" was too tall."
1918,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,ba55d9f8b56bea7ed61419e5e2895486fdd0c747,"Fix collateral damage.

Fixed these bugs:
* Going to http://33.33.33.77:8000/HelloWorld/ and then type some stuff in the query box. Search runs, but results don't show.
* (Same root cause:) If you hit Return in the query box and then open Advanced Search and type in the Text Search field, incremental search doesn't work because ""results is null""."
1919,https://api.github.com/repos/mozilla/dxr/pulls/46,46,"[bug 817815, 821376] Stop screwing up the search string. Fix a smattering of other bugs in the process.","So begins the avalanche. :-)

This fixes the search string up-screwing, stops repeating forms and markup a zillion times, makes a start on homogenizing JS and CSS style, fixes another minor bug (821376) with the tree menu, makes it look okay on mobile and WebKit, and so much more.

Next comes some attention to the back end: rethinking the build process, choosing a framework so I don't end up writing my own, getting some tests going, and addressing some of the back-end bugs (the case-sensitivity, etc.).
",erikrose,295816,2012-12-13T18:26:00Z,MEMBER,True,321,331,6,Powerful search for large codebases,Python,0d9e015f60906994d5622f64e72d0f9c656eabe0,"Get rid of search_box macro and fold into layout.html.

(Still better than the original situation, where we were repeating the markup over and over.)

Now that I understand the template hierarchy better, it turns out the search box lands in the same place on each page, so we can just use `extends` and `block`. This also makes the `block tip` substitutions work again. (To test this latter bit, hit Return in the search field and then hit Return again on the search field on the page that results. You should see ""Query executed in 0.006s"" rather than ""Enter search query here."")"
1920,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,66754f4b694121fbab11b7276d6cb04d47dd30b2,"Breaking everything, by moving stuff around"
1921,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,2a8eda54476233961b33dbcf46e3a78fe1dda163,"Fixed some of bugs I made, and fixed multi-tree builds"
1922,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,b97d45f1fef9470bfcd346824d8b148d638be73a,Ready to redo the template engine
1923,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,8da1b7eedc164b8174398fdbf7da928aed744003,Things are still broken... :)
1924,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,18e00905cf12342bbd68cddeb16973a502baedc9,"Template engine finally works...

Most features I've broken are back now, the rest are more or less
removed and to be rewritten using the new template system..."
1925,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,d42a7dda66c0eebd73fcc96e62ed147ebfe25799,Refactored lots of things
1926,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,131c5ff62de7bb68bbae3fe971d1f9e72e917dcb,Added more filters
1927,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,72f318fec00738bbac8ad5f46d890e97d8b701d5,More work on templates and test
1928,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,b6e7bee178b6642ba926872b5d05513b2cea7b43,Minor fixes to template and queries
1929,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,86917d66f7dc79b38ae73e2521f59b4532cfa44e,Another blob of changes
1930,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,122d0209e0c461e51f1ab7b0a3cab474b28bc9ab,Hacks and fixes
1931,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,72c6e9aa89862be23b4bedf417c09bb8379937e5,"Cleaning up, adding features, messiong around :)"
1932,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,f565a6d6ddeed41152abca7bbaaa35c670a8e357,"More icons, fixes and random stuff"
1933,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,e0664cea42b2ce59fbb04b0a9468a243809160b9,Syntax highligting using pygments
1934,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,987faba033cf0cf39d4ca487296eb8ebf07a8547,Big refactor of things
1935,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,be90495ad80736fbdea84c7b74b4bd7596e5a18f,"Architecture rewritting, I hope it's better :)"
1936,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,37652c0b7b6e841e3b45b38d94c64150c8aad75e,Rewrite is starting to work
1937,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,1f46f9074cdba3cf3198011168b56e9b70f6dd3a,Icons and refactor makefiles
1938,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,3693db27368facffc61c45b5fb2870c80570352d,More UI work
1939,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,786e995e2010c774b008fb5b1ffd6e2afa99af81,Migrated to trilite
1940,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,1e7342828e3aee11ee2380b6299eb531d0731b40,"Added hg plugin, and lots of other stuff"
1941,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,b80f6f3814ebf7ea22dc0a0a73a0f02e7fd08176,Removed sqlite-tokenizer
1942,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,1fd436f515404fc22ce38b3c4db6b0f2c12f68fb,"Added minimal theme, updated documentation"
1943,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,df1fd594cf4870ef5e2cfcce040bb19c25a639e1,Lot's of small fixes
1944,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,26a7353903d3f98d5d30531a019ad4be1226e1c1,Incremental search everywhere...
1945,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,09b101334ab599b53a010dfc354c6295cae6a25b,Improved start page
1946,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,81662f036aa3142eb96939c7b1504ae0a36428ee,Better start page
1947,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,deee7e56f8161c21e04968b335f7a57516f0e7da,Updated the todo
1948,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,4ce1051fdb25487ebf86cdee6d02a02daf951fec,Added urllink plugin
1949,https://api.github.com/repos/mozilla/dxr/pulls/45,45,Failin',"this should not be merged. using it to test leeroy-jenkins integration. It should break.
",lonnen,21467,2012-12-11T21:57:21Z,MEMBER,False,11607,7475,1289,Powerful search for large codebases,Python,91e0aa860fd9caf9dab2dc4904b82966a6baa984,Recognize .cxx as an extension for C++ code.
1950,https://api.github.com/repos/mozilla/dxr/pulls/44,44,this should be green,"this change should not be merged. using it to test leeroy-jenkins integration.
",lonnen,21467,2012-12-11T21:54:52Z,MEMBER,False,0,3,1,Powerful search for large codebases,Python,6f1d91cf83e16646ffbd1e418fb66aee952cdb7c,trivial change
1951,https://api.github.com/repos/mozilla/dxr/pulls/43,43,add noop test target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:28:25Z,MEMBER,True,2,1,1,Powerful search for large codebases,Python,e98be702a121d9ca9ed9f55a8c12c6cacbccd004,add noop test target to the makefile
1952,https://api.github.com/repos/mozilla/dxr/pulls/42,42,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:23:41Z,MEMBER,False,2,1,1,Powerful search for large codebases,Python,61a00a7057dc93e53cc415d5c415ab2c7e81f215,add noop test target to the makefule
1953,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,66754f4b694121fbab11b7276d6cb04d47dd30b2,"Breaking everything, by moving stuff around"
1954,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,2a8eda54476233961b33dbcf46e3a78fe1dda163,"Fixed some of bugs I made, and fixed multi-tree builds"
1955,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,b97d45f1fef9470bfcd346824d8b148d638be73a,Ready to redo the template engine
1956,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,8da1b7eedc164b8174398fdbf7da928aed744003,Things are still broken... :)
1957,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,18e00905cf12342bbd68cddeb16973a502baedc9,"Template engine finally works...

Most features I've broken are back now, the rest are more or less
removed and to be rewritten using the new template system..."
1958,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,d42a7dda66c0eebd73fcc96e62ed147ebfe25799,Refactored lots of things
1959,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,131c5ff62de7bb68bbae3fe971d1f9e72e917dcb,Added more filters
1960,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,72f318fec00738bbac8ad5f46d890e97d8b701d5,More work on templates and test
1961,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,b6e7bee178b6642ba926872b5d05513b2cea7b43,Minor fixes to template and queries
1962,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,86917d66f7dc79b38ae73e2521f59b4532cfa44e,Another blob of changes
1963,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,122d0209e0c461e51f1ab7b0a3cab474b28bc9ab,Hacks and fixes
1964,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,72c6e9aa89862be23b4bedf417c09bb8379937e5,"Cleaning up, adding features, messiong around :)"
1965,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,f565a6d6ddeed41152abca7bbaaa35c670a8e357,"More icons, fixes and random stuff"
1966,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,e0664cea42b2ce59fbb04b0a9468a243809160b9,Syntax highligting using pygments
1967,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,987faba033cf0cf39d4ca487296eb8ebf07a8547,Big refactor of things
1968,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,be90495ad80736fbdea84c7b74b4bd7596e5a18f,"Architecture rewritting, I hope it's better :)"
1969,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,37652c0b7b6e841e3b45b38d94c64150c8aad75e,Rewrite is starting to work
1970,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,1f46f9074cdba3cf3198011168b56e9b70f6dd3a,Icons and refactor makefiles
1971,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,3693db27368facffc61c45b5fb2870c80570352d,More UI work
1972,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,786e995e2010c774b008fb5b1ffd6e2afa99af81,Migrated to trilite
1973,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,1e7342828e3aee11ee2380b6299eb531d0731b40,"Added hg plugin, and lots of other stuff"
1974,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,b80f6f3814ebf7ea22dc0a0a73a0f02e7fd08176,Removed sqlite-tokenizer
1975,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,1fd436f515404fc22ce38b3c4db6b0f2c12f68fb,"Added minimal theme, updated documentation"
1976,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,df1fd594cf4870ef5e2cfcce040bb19c25a639e1,Lot's of small fixes
1977,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,26a7353903d3f98d5d30531a019ad4be1226e1c1,Incremental search everywhere...
1978,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,09b101334ab599b53a010dfc354c6295cae6a25b,Improved start page
1979,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,81662f036aa3142eb96939c7b1504ae0a36428ee,Better start page
1980,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,deee7e56f8161c21e04968b335f7a57516f0e7da,Updated the todo
1981,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,4ce1051fdb25487ebf86cdee6d02a02daf951fec,Added urllink plugin
1982,https://api.github.com/repos/mozilla/dxr/pulls/41,41,Add `test` target to the makefile,"This will add a noop test target so I can hook up Jenkins + Leeroy. Later, when we add tests, things should just work automatically.
",lonnen,21467,2012-12-11T19:22:29Z,MEMBER,False,11606,7475,1289,Powerful search for large codebases,Python,91e0aa860fd9caf9dab2dc4904b82966a6baa984,Recognize .cxx as an extension for C++ code.
1983,https://api.github.com/repos/mozilla/dxr/pulls/40,40,Vagrant for local development,"Adds a Vagrant box for local development in a VM and some Puppet scripts to install dependencies and set up the box. Changes that alter the system are done in puppet, changes that alter the local repository are done in make files.

This also brings the current master of Trilite in as a submodule. This gives us control over what version of Trilite works with what version of the source code. It also simplifies the build process. There is (an open PR against Trilite)[https://github.com/jonasfj/trilite/pull/1] that will ignore all the files derived by building the project. Until that is merged the submodule will report untracked modified content after it is built. It's simple to clear out, but I think an upstream `.gitignore` change is the best way to fix the problem so we'll have to live with it for now. I'll update if it is fixed before this PR is accepted.

This also includes a documentation file about how to get started with Vagrant locally, which includes a code block detailing where to run `make` to get Hello-World running.
",lonnen,21467,2012-12-10T23:50:54Z,MEMBER,True,343,6,15,Powerful search for large codebases,Python,1a07c67107405f87e4fa3fad3d8ac1e05c616be5,"vagrant is up and running

vagrant provides a VM with all the dependencies and environment
exports set up. The user still has to run a few `make` files by hand."
1984,https://api.github.com/repos/mozilla/dxr/pulls/40,40,Vagrant for local development,"Adds a Vagrant box for local development in a VM and some Puppet scripts to install dependencies and set up the box. Changes that alter the system are done in puppet, changes that alter the local repository are done in make files.

This also brings the current master of Trilite in as a submodule. This gives us control over what version of Trilite works with what version of the source code. It also simplifies the build process. There is (an open PR against Trilite)[https://github.com/jonasfj/trilite/pull/1] that will ignore all the files derived by building the project. Until that is merged the submodule will report untracked modified content after it is built. It's simple to clear out, but I think an upstream `.gitignore` change is the best way to fix the problem so we'll have to live with it for now. I'll update if it is fixed before this PR is accepted.

This also includes a documentation file about how to get started with Vagrant locally, which includes a code block detailing where to run `make` to get Hello-World running.
",lonnen,21467,2012-12-10T23:50:54Z,MEMBER,True,343,6,15,Powerful search for large codebases,Python,6667b3738941c075e218366ac4f3e13aa7a75336,Added Vagrant documentation
1985,https://api.github.com/repos/mozilla/dxr/pulls/40,40,Vagrant for local development,"Adds a Vagrant box for local development in a VM and some Puppet scripts to install dependencies and set up the box. Changes that alter the system are done in puppet, changes that alter the local repository are done in make files.

This also brings the current master of Trilite in as a submodule. This gives us control over what version of Trilite works with what version of the source code. It also simplifies the build process. There is (an open PR against Trilite)[https://github.com/jonasfj/trilite/pull/1] that will ignore all the files derived by building the project. Until that is merged the submodule will report untracked modified content after it is built. It's simple to clear out, but I think an upstream `.gitignore` change is the best way to fix the problem so we'll have to live with it for now. I'll update if it is fixed before this PR is accepted.

This also includes a documentation file about how to get started with Vagrant locally, which includes a code block detailing where to run `make` to get Hello-World running.
",lonnen,21467,2012-12-10T23:50:54Z,MEMBER,True,343,6,15,Powerful search for large codebases,Python,baef763d7a603ec0dcbc4647450d7d48451e4743,"updating trilite submodule

udpated to include better .gitignore file, which will make using trilite
as a submodule easier"
1986,https://api.github.com/repos/mozilla/dxr/pulls/39,39,Add testing build products to .gitignore.,"Pebbles before the avalanche… :-)
",erikrose,295816,2012-12-06T01:19:03Z,MEMBER,True,4,0,1,Powerful search for large codebases,Python,9aa6cdc21027b22993b084607b6c63f9a06169c5,Add testing build products to .gitignore.
1987,https://api.github.com/repos/mozilla/dxr/pulls/38,38,Fix a few typos I found while setting up a dev environment.,,erikrose,295816,2012-12-06T01:17:46Z,MEMBER,True,9,13,4,Powerful search for large codebases,Python,e757294c5781b5cf49d48f9dd23953eb865a3517,Fix a few typos I found while setting up a dev environment.
1988,https://api.github.com/repos/mozilla/dxr/pulls/37,37,"Fix for ""Jump to definition"" sometimes jumping to a declaration instead.","Now ""function"" is emitted to the .csv only for function definitions, not
declarations.  Declarations will get a ""decldef"" if a definition is
available elsewhere in the translation unit.

Having multiple ""function"" entries for a single function would cause
the UNION in indexer.py:update_refs to return more than one row
(one from functions and one from decldef).  If the one from decldef
won then ""Jump to definition"" worked.  If the one from functions won
then you'd be taken to the declaration instead.  SQLite seems to
break this tie based on the numeric value of the ID so the behavior
was somewhat nondeterministic when minor changes were made to the
source code.
",abbeyj,99402,2012-11-21T17:41:54Z,CONTRIBUTOR,True,44,25,2,Powerful search for large codebases,Python,d2a866f713e13a32cfe0b28df989ddfd4224a162,"Fix for ""Jump to definition"" sometimes jumping to a declaration instead.
Now ""function"" is emitted to the .csv only for function definitions, not
declarations.  Declarations will get a ""decldef"" if a definition is
available elsewhere in the translation unit.

Having multiple ""function"" entries for a single function would cause
the UNION in indexer.py:update_refs to return more than one row
(one from functions and one from decldef).  If the one from decldef
won then ""Jump to definition"" worked.  If the one from functions won
then you'd be taken to the declaration instead.  SQLite seems to
break this tie based on the numeric value of the ID so the behavior
was somewhat nondeterministic when minor changes were made to the
source code."
1989,https://api.github.com/repos/mozilla/dxr/pulls/36,36,Add extents for preprocessor macros.,"Now macro: searches show proper results on the search page.
",abbeyj,99402,2012-11-19T20:00:59Z,CONTRIBUTOR,True,9,1,3,Powerful search for large codebases,Python,42115ac91c705e583d3ff84c3b469226d5e09f42,"Add extents for preprocessor macros.
Now macro: searches show proper results on the search page."
1990,https://api.github.com/repos/mozilla/dxr/pulls/35,35,Fix extents for overloaded operators.,"- For declarations only the ""operator"" part was hyperlinked, not the part
  following.  Now the entire name (e.g. ""operator++"") will be hyperlinked.
- For calls only the first character was being hyperlinked.  In
  ""a += b"", only the ""+"" was hyperlinked.  Now ""+="" is hyperlinked.
",abbeyj,99402,2012-11-16T21:03:26Z,CONTRIBUTOR,True,7,1,2,Powerful search for large codebases,Python,9b9670c3250ff174ba7b447f3e06a4191d23c86d,"Fix extents for overloaded operators.
- For declarations only the ""operator"" part was hyperlinked, not the part
  following.  Now the entire name (e.g. ""operator++"") will be hyperlinked.
- For calls only the first character was being hyperlinked.  In
  ""a += b"", only the ""+"" was hyperlinked.  Now ""+="" is hyperlinked."
1991,https://api.github.com/repos/mozilla/dxr/pulls/34,34,"Support quoted arguments for query parameters and fix ""Find references"" to not produce references to unrelated items","Support quoted arguments for query parameters, e.g.: path:""file name with spaces"" or warning:""unused variable""

Fix the first and last character of a file not being shown when formatting search results.

Add more information to qualified names so that ""Find references"" doesn't get a bunch of hits to unrelated items that happen to share the same name.
",abbeyj,99402,2012-11-15T23:00:39Z,CONTRIBUTOR,True,118,69,6,Powerful search for large codebases,Python,48954ec4e4288b5ea34991dcf30be1c00401aa7a,"Support quoted arguments for query parameters, e.g.:
  path:""file name with spaces""
  warning:""unused variable""
Fix advanced search for phrases containing two or more consecutive spaces, e.g.:
  ""hello  world"""
1992,https://api.github.com/repos/mozilla/dxr/pulls/34,34,"Support quoted arguments for query parameters and fix ""Find references"" to not produce references to unrelated items","Support quoted arguments for query parameters, e.g.: path:""file name with spaces"" or warning:""unused variable""

Fix the first and last character of a file not being shown when formatting search results.

Add more information to qualified names so that ""Find references"" doesn't get a bunch of hits to unrelated items that happen to share the same name.
",abbeyj,99402,2012-11-15T23:00:39Z,CONTRIBUTOR,True,118,69,6,Powerful search for large codebases,Python,2437db5f104995e62227163f927a3fa5ca9b132d,"Fix the first and last character of a file not being shown when
formatting search results."
1993,https://api.github.com/repos/mozilla/dxr/pulls/34,34,"Support quoted arguments for query parameters and fix ""Find references"" to not produce references to unrelated items","Support quoted arguments for query parameters, e.g.: path:""file name with spaces"" or warning:""unused variable""

Fix the first and last character of a file not being shown when formatting search results.

Add more information to qualified names so that ""Find references"" doesn't get a bunch of hits to unrelated items that happen to share the same name.
",abbeyj,99402,2012-11-15T23:00:39Z,CONTRIBUTOR,True,118,69,6,Powerful search for large codebases,Python,6fa54933efa1bba07b03d5943d14dc7fc89f2c1f,"Add more information to qualified names so that  ""Find references""
doesn't get a bunch of hits to unrelated items that happen to share
the same name.
- Store fully qualified names for all variables, including the name
  of the function they are in (if any).  This lets you distinguish
  between two variables called ""tmp"" that are declared in different
  functions.
- Add types of all parameters to functions so that overloaded
  functions can be distinguished.  Before both
    void foo(int);
  and
    void foo(double);
  would have been recorded as just ""foo"".  Now they are
  ""foo(int)"" and ""foo(double)"" respectively."
1994,https://api.github.com/repos/mozilla/dxr/pulls/33,33,Two small fixes,"A fix for tooltip menu items that would be broken when containing <, >, &, "", or ' 

Remove ""Find sub classes"" and ""Find base classes"" menu items for enums and unions since they don't have sub classes or base classes.

These are both relatively small changes.
",abbeyj,99402,2012-11-07T21:54:29Z,CONTRIBUTOR,True,28,21,2,Powerful search for large codebases,Python,29b841eabe738c1445b95021aa3416e92b5a657e,"Fix tooltips in pop-up menus when they contain <, >, &, "", or '
For instance the tooltip for ""Jump to definition"" used to appear as
    Jump to the definition in
instead of
    Jump to the definition in 'somefile.cpp'"
1995,https://api.github.com/repos/mozilla/dxr/pulls/33,33,Two small fixes,"A fix for tooltip menu items that would be broken when containing <, >, &, "", or ' 

Remove ""Find sub classes"" and ""Find base classes"" menu items for enums and unions since they don't have sub classes or base classes.

These are both relatively small changes.
",abbeyj,99402,2012-11-07T21:54:29Z,CONTRIBUTOR,True,28,21,2,Powerful search for large codebases,Python,eb315d0155fdf873eaa399a13d86dbd341118683,"Remove the ""Find sub classes"" and ""Find base classes"" menu items
for enums and unions.
They items only make sense for classes and structs."
1996,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,566c128972d2734025ee40393520418562cfafd7,"Fix formating of incremental search results when the matching
source code contains a dollar sign.

Consider a source file that contains this line:
    a = '$';

When the template is formatted this will boil down to a call like
    ""...<code>{{line}}</code>..."".replace(
        new RegExp(""\\{\\{line\\}\\}"", ""g""),
	""a = '$';"");
The desired result is:
    ""...<code>a = '$';</code>...""
Instead the $' is treated as a a replacement pattern (see
https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter)
so the result ends up being the malformed:
    ""...<code>a = '</code>...;</code>...""

To fix this all dollar signs in the replacement string should be
doubled to escape them before passing to String.replace."
1997,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,c223ff36dab1a52d0c708c345b8dee9522c6ff78,Add support for extents for warnings.
1998,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,da1da9887b8052f8445f3e031f5ca1cbbb180685,Merge remote-tracking branch 'upstream/testing' into testing
1999,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,d8cf59a5214fbfcb3f3eb6ba148d8437621e8d80,"Add support for a warning-opt: parameter to search by the clang
option that produces the warning. Examples:
Find warnings generated by -Wswitch:
	+warning-opt:-Wswitch
Find warnings from -Wbool-conversion, -Wnull-conversion, etc.:
	warning-opt:conversion
Find warnings about ""foo"" but ignore any about dangling elses
	warning:foo -+warning-opt:-Wdangling-else"
2000,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,90572bb7f0ecd9d6204cae4cf1434cf4d597ea55,Remove references to non-existent sqlite-tokenizer directory from makefile.
2001,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,5598e9de0f4fd7ffc360f76621ba69b6f685932a,"Allow a debug build of the clang plugin with
$ make -C plugins/clang DEBUG=1"
2002,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,dea388c8f0ba087e74925b583bd57f1fe536f5f2,"Keep the annotations lined up with their corresponding lines
even if your monospace font isn't 15px high."
2003,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,443f07ab3b57429a06585946103a1115bbf30782,"Fix handling of whitespace characters in the advanced search fields.
Make regexp field behave itself when you are in the process of entering
a regexp and don't yet have matching beginning and ending delimiters."
2004,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,99384d980eaec113bbe20e2eeefeb5269ad12285,Fix broken page when submitting from advanced search fields.
2005,https://api.github.com/repos/mozilla/dxr/pulls/32,32,Fix for dollar signs in source code and better results for warnings,"Fix formatting of incremental search results when the matching source code contains a dollar sign.
Add support for extents for warnings.
",abbeyj,99402,2012-10-08T19:03:33Z,CONTRIBUTOR,True,71,14,10,Powerful search for large codebases,Python,1d473ad3b2edb967dc41ec713a655e2e8f4a2ba3,"Fix scrolling to selected line on Google Chrome.
Chrome can reset the scroll position after onload is called,
so use setTimeout to scroll to the desired location after that
has happened."
2006,https://api.github.com/repos/mozilla/dxr/pulls/31,31,Recognize .cxx as an extension for C++ code.,"I have some C++ code in .cxx files.  This change allows them to be indexed properly by DXR.
",abbeyj,99402,2012-10-04T18:30:59Z,CONTRIBUTOR,True,4,4,4,Powerful search for large codebases,Python,91e0aa860fd9caf9dab2dc4904b82966a6baa984,Recognize .cxx as an extension for C++ code.
2007,https://api.github.com/repos/mozilla/dxr/pulls/31,31,Recognize .cxx as an extension for C++ code.,"I have some C++ code in .cxx files.  This change allows them to be indexed properly by DXR.
",abbeyj,99402,2012-10-04T18:30:59Z,CONTRIBUTOR,True,4,4,4,Powerful search for large codebases,Python,0f6df51b4644e28e69b2775a92a07122c0aae24c,"Fix the -j command line switch.
(ConfigParser expects overrides to be strings, not ints)"
2008,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,1dbcf3358c92c78eb6bc6f6620fd17ab55fe0b51,"www: strip quotes from the search term in FTS queries

Those are part of the FTS syntax and not matchable through it,
so strip those to avoid confusing the query parser."
2009,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,4966cc07da9bc6f15af547db1006fe1223b56dfd,"www: Fix link generation bug in the information popup

The virtroot variable is embedded as-is into an string
concatenation, so have it be an empty string to fix the
generated links."
2010,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,ec51e9dfe598317cc48f0d4ceba40105bd786be3,"cov: define the build_database method on the code coverage plugin

This method was claimed as implemented by that plugin, but never defined.
Provide an empty implementation as that plugin doesn't deal with the
database.

https://bugzilla.mozilla.org/show_bug.cgi?id=760158"
2011,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,39df2a821cb4ffcdc07b14b5d1d1c251e6ed08b2,www: prevent exception if a derived query base object is unknown
2012,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,1bc2de018455ab6947e05d35ec28f1e7549c2ee3,"clang: Do not generate links for unresolved references

If a reference could not be resolved (and hence doesn't have an
associated refid), then don't generate a link pointing to None.

Partly helps with https://bugzilla.mozilla.org/show_bug.cgi?id=759379"
2013,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,60eef51e8a90673698a7f8e63614ea49d80f80a0,"www: Fix error on information popups for typedefs

The label generation was using non-existing fields in the typedefs
table. Helps improve https://bugzilla.mozilla.org/show_bug.cgi?id=753740"
2014,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,6956f33f3287ac0103877bd448f11b139c3a96a9,"dxr: don't create links to system headers

the information stored from those files may still be needed in the
database for cross-referencing purposes, so just don't offer links
to these.

https://bugzilla.mozilla.org/show_bug.cgi?id=753739"
2015,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,e3c745634be0878c83de0adbedd8857b16df063a,"clang: try harder at binding #includes to files

Try the basename as well in order to resolve the file #includes
point to, this fixes links to files in the mozilla/ directory,
as it's generated by the build environment.

https://bugzilla.mozilla.org/show_bug.cgi?id=753726"
2016,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,6e0c106d0a042ec0ca7dfb36a655f7ee9c714f92,"dxr: index nsis files

Those files need to be indexed, but the xdg fast mimetype
detection would falsely report those as application/octet-stream
due to the many non-ascii chars a the beginning of some files.

https://bugzilla.mozilla.org/show_bug.cgi?id=759764"
2017,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,bd1bf881460960da7c70fb28efd66bfcd194ae48,"www: Resolve typedefs to the original type

The information popup now displays where the original type
is declared. works for typedefs of enums/classes/structs.

https://bugzilla.mozilla.org/show_bug.cgi?id=753740"
2018,https://api.github.com/repos/mozilla/dxr/pulls/30,30,Lanedo changes,"Bugs fixed/improved in this pull request:
https://bugzilla.mozilla.org/show_bug.cgi?id=760158
https://bugzilla.mozilla.org/show_bug.cgi?id=759379
https://bugzilla.mozilla.org/show_bug.cgi?id=759379

Other minor fixes in parameter handling are also included

NOTE Jun 8th: A few more fixes have gone into this unapplied pull request, concretely fixes for:
https://bugzilla.mozilla.org/show_bug.cgi?id=753744
https://bugzilla.mozilla.org/show_bug.cgi?id=759764
https://bugzilla.mozilla.org/show_bug.cgi?id=753726
https://bugzilla.mozilla.org/show_bug.cgi?id=753740
https://bugzilla.mozilla.org/show_bug.cgi?id=753739
",garnacho,46663,2012-06-01T15:17:06Z,CONTRIBUTOR,True,88,17,8,Powerful search for large codebases,Python,99b09511030931bdecec6a02ab75eefd30e4de88,"Improve documentation to set up DXR

A sample configuration file was added as well, and the docs have
been updated to mention update.sh"
2019,https://api.github.com/repos/mozilla/dxr/pulls/29,29,Parameter handling,"Several improvements to cgi parameter handling, including fixes to:
https://bugzilla.mozilla.org/show_bug.cgi?id=724282
https://bugzilla.mozilla.org/show_bug.cgi?id=756435
",garnacho,46663,2012-05-18T16:04:18Z,CONTRIBUTOR,True,34,26,3,Powerful search for large codebases,Python,13635d5502cd59a62d0ead100646298687d7ebf0,"www: ensure search strings are escaped before being used in regexp matches

Fixes exceptions when trying to match on non-ascii characters that might be
part of the regex syntax.

https://bugzilla.mozilla.org/show_bug.cgi?id=724282"
2020,https://api.github.com/repos/mozilla/dxr/pulls/29,29,Parameter handling,"Several improvements to cgi parameter handling, including fixes to:
https://bugzilla.mozilla.org/show_bug.cgi?id=724282
https://bugzilla.mozilla.org/show_bug.cgi?id=756435
",garnacho,46663,2012-05-18T16:04:18Z,CONTRIBUTOR,True,34,26,3,Powerful search for large codebases,Python,0124e7ac383a4315124abfbd05dd21f01fdf65f5,"www: ensure all user provided strings in queries are binded by sqlite

Sqlite ensures provided strings are properly escaped when binding those
at query construction, decreasing the risk of exploitation and other
possible mistakes at the time of building the query."
2021,https://api.github.com/repos/mozilla/dxr/pulls/29,29,Parameter handling,"Several improvements to cgi parameter handling, including fixes to:
https://bugzilla.mozilla.org/show_bug.cgi?id=724282
https://bugzilla.mozilla.org/show_bug.cgi?id=756435
",garnacho,46663,2012-05-18T16:04:18Z,CONTRIBUTOR,True,34,26,3,Powerful search for large codebases,Python,18254224e37df3b65d3c6c1feeff55b07dce5118,"www: prevent xss in cgi pages

Ensure all user provided parameters are handled correctly before being
embedded into HTML, and perform harder checks on the validity of those
parameters.

https://bugzilla.mozilla.org/show_bug.cgi?id=756435"
2022,https://api.github.com/repos/mozilla/dxr/pulls/29,29,Parameter handling,"Several improvements to cgi parameter handling, including fixes to:
https://bugzilla.mozilla.org/show_bug.cgi?id=724282
https://bugzilla.mozilla.org/show_bug.cgi?id=756435
",garnacho,46663,2012-05-18T16:04:18Z,CONTRIBUTOR,True,34,26,3,Powerful search for large codebases,Python,072858b6d0583b38a23b81e858e1d6b5bc9d00a1,"www: have the ""raw"" link point to the raw file contents

https://bugzilla.mozilla.org/show_bug.cgi?id=670060"
2023,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,abcb9da2af34505939269d61e3ff4605c3415795,www: Handle path: parameter on text queries
2024,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,8f422f651092637364bb6f9f7d54a56942c39c18,www: strip() search term before querying the sidebar contents
2025,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,9d7f08dd9be743f461c8b9ec7e8f5a5e24b2a2e6,"dxr: Handle strings and comments within preprocessor macros

This is so those are handled as clickable when the HTML is generated
https://bugzilla.mozilla.org/show_bug.cgi?id=748378"
2026,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,67db66d9f33d25e78f8c5e5158de85cb862777d7,dxr: Handle strings in .idl tokenizer
2027,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,5d52a95b00dad923e45afbc45227513cb91f2650,idl: handle decimal numbers in idl tokenizer
2028,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,3e3c0fcde6e378766bdc0118ad43964d32e7009f,"idl: handle '?' in idl tokenizers

This character is part of the syntax, so handle it gracefully"
2029,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,8410ac1f54173394b35f4370250845c97338bec6,"idl: Handle '_' within identifiers

This is so identifiers with that char don't get splitted and
are dealt with as a single token"
2030,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,dc4c09b4fac2fa2fa744c13ccff3d2fbe05037b4,"idl: Handle the 'import' keyword

This keyword is part of the idl syntax, so handle it as such
https://bugzilla.mozilla.org/show_bug.cgi?id=684997"
2031,https://api.github.com/repos/mozilla/dxr/pulls/28,28,P1 bugs,"Pull request to fix the remaining P1 bugs in bugzilla.mozilla.org:
- https://bugzilla.mozilla.org/show_bug.cgi?id=684997: Several fixes have gone into the idl parser, so now all of these appear and are syntax-highlighted properly
- https://bugzilla.mozilla.org/show_bug.cgi?id=748378: The cpp tokenizer now handles strings and comments within preprocessor macros, so it's clickable in HTML
- Additionally, ""path:"" and ""ext:"" are now handled in the search form
",garnacho,46663,2012-05-11T11:06:48Z,CONTRIBUTOR,True,86,33,4,Powerful search for large codebases,Python,736b174feadacde596600f806a7eacf190414006,www: handle 'ext:' in string queries
2032,https://api.github.com/repos/mozilla/dxr/pulls/27,27,Page titles,"Set title on generated HTML files, 
https://bugzilla.mozilla.org/show_bug.cgi?id=750726
",garnacho,46663,2012-05-08T09:51:17Z,CONTRIBUTOR,True,7,2,2,Powerful search for large codebases,Python,909311efac8419dfcd6f56ad71117b46a5a31ced,"dxr: Set filename as title on generated HTML files

https://bugzilla.mozilla.org/show_bug.cgi?id=750726"
2033,https://api.github.com/repos/mozilla/dxr/pulls/26,26,Decl def,"This branch fixes declaration/definition switching
- On the information popup, links to both locations are shown
- On the left hand sidebar, links invariably point to the definition
",garnacho,46663,2012-05-04T13:56:32Z,CONTRIBUTOR,True,98,65,4,Powerful search for large codebases,Python,81fc2878d8afcf43816d16071aa51bf6ba74fdea,"dxr: Set extents on definitions

The .csv files will now contain extents information about
function definitions, which allows for a more direct storage
of the declaration/definition map"
2034,https://api.github.com/repos/mozilla/dxr/pulls/26,26,Decl def,"This branch fixes declaration/definition switching
- On the information popup, links to both locations are shown
- On the left hand sidebar, links invariably point to the definition
",garnacho,46663,2012-05-04T13:56:32Z,CONTRIBUTOR,True,98,65,4,Powerful search for large codebases,Python,fa97359562f623ca204b4d5eee6a5b27ac57bede,"dxr: Fill in the decldef table directly from the the csv data

Instead of storing in memory and then iterating through all the
data, store directly in the database and then match the defid at
a later stage."
2035,https://api.github.com/repos/mozilla/dxr/pulls/26,26,Decl def,"This branch fixes declaration/definition switching
- On the information popup, links to both locations are shown
- On the left hand sidebar, links invariably point to the definition
",garnacho,46663,2012-05-04T13:56:32Z,CONTRIBUTOR,True,98,65,4,Powerful search for large codebases,Python,cc235f2861295d9b305a8451616698d305a78f68,"www: Fix declaration/definition switching on the information popup

The information popup now offers information about both where functions
are declared and defined, allowing switching between those."
2036,https://api.github.com/repos/mozilla/dxr/pulls/26,26,Decl def,"This branch fixes declaration/definition switching
- On the information popup, links to both locations are shown
- On the left hand sidebar, links invariably point to the definition
",garnacho,46663,2012-05-04T13:56:32Z,CONTRIBUTOR,True,98,65,4,Powerful search for large codebases,Python,2644db4ecca6870cfcc63ab38bfe8435a07f976c,"dxr: make left hand sidebar point to the function declaration

This is most noticeable in header files, where items in the left
hand list will link to the method implementation in the .cpp file,
which is a more intuitive way to read through code.

https://bugzilla.mozilla.org/show_bug.cgi?id=751525"
2037,https://api.github.com/repos/mozilla/dxr/pulls/24,24,Fix for issue #22,"Update docs to reflect requirement for sqlite 3.7+ due to fts4 usage.
",cleeland,1247303,2012-04-19T20:58:07Z,NONE,True,3,3,1,Powerful search for large codebases,Python,27b3379371fd855730297d79823fba33b90dcc90,Update docs to reflect requirement for sqlite 3.7+ due to fts4 usage. Fixes issue #22.
2038,https://api.github.com/repos/mozilla/dxr/pulls/23,23,Fix issue #21.,,cleeland,1247303,2012-04-19T20:57:13Z,NONE,True,5,2,1,Powerful search for large codebases,Python,ff1d8a169f059489f2f8bcd2befe873b92222a96,Fix issue #21.
2039,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,59f80df54d89fb937af590f3bc1234e3cc2f8512,"dxr-index: Perform atomic updates on the target directory

All content will be generated in a temporary directory, which
then replaces the target dir after the whole indexing operation
finished."
2040,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,4e54128e5c0b9c762e5f93ae0d8791eeddde2264,"dxr: Add JSON serializer

It will be used in the JSON-based interface to DXR data."
2041,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,bd7979077558af5d385b5b278c2ee88a10fae6d9,"Update sample config file

The ""revision"" key is used to customize revision ID extraction
across different kinds of repository"
2042,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,f90b5ea0d2edb9c788581086f9004e10a9bd9175,"dxr: Update JsonOutput to write directly to a FD

No string accumulators are necessary as the data is usually
serializable right away."
2043,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,6f6a13642e7e8c581e222e3a0a729555d2a5327e,"dxr: start separation of queries into a different file

This is so both the html and json formatters can make use
of the same data."
2044,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,5a9e5659437bf139569d945287a82d0f93ba91d4,"www: Make search.cgi import the queries module

This also cleans up the code slightly"
2045,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,5853619e0df87a9b25b16149d40093fc3c2671f0,"www: Add json.cgi for JSON output

This cgi takes the tree/string/query GET parameters. tree and
string are similar to query.cgi, being respectively the tree to
query (ie: mozilla-central) and string the search term(s), query
so far may be one of fts/regex/files to trigger the different
queries."
2046,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,d70294028f1bcd688aaa4d982bba9e632cf42d6a,"dxr: Add update.sh

This script is based on prior work from Christian Dywan.
It pulls, builds and indexes a source code repository as
specified in the dxr.config file."
2047,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,03167072d95c1ff2b7ab82f225e2f1be59a34b9c,"setup-env: Use dxr.config and read parameters from there

Instead of ""<srcdir> [<objdir>]"" setup-env.sh now takes
""<dxr.config> <treename>"" as parameters and then reads
the relevant parameters (srcdir, objdir, etcpp) from the
dxr.config file.
Based on a patch from groleo <groleo@gmail.com>."
2048,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,720a8196398bd16ad45dbc7bb0e7d0b02e120349,"Use absolute path for sqlite-tokenizer building & loading

Int setup-env.sh and dxr-index.py prefix the path to the sql
tokenizer library with DXRSRC.
This fixes the tests framework."
2049,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,df45adfd6c6883a3461f897e626c32545b23efa4,"update README

The way to operate with setup-env.sh has changed"
2050,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,85fcad498ac4da6a3b2d2ae4918bb9402984de55,"dxr-index: fix index.html generation to happen on the temporary dir

This is so all indexing data is generated on the temporary directory,
which then replaces atomically the target directory."
2051,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,587bf5d58d0d3770c7e3c56c5ac6e02d6136b911,"dxr: Do not parse the configuration file when building each html file

Instead reuse the tree configuration passed onto the constructor, as it
contains the keys we need."
2052,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,b6f2e3dd7a58e00100609ae260ae6eefa711e908,"www: Export more JSON queries

Queries of type [macros|functions|variables|warnings|callers] are now
handled."
2053,https://api.github.com/repos/mozilla/dxr/pulls/20,20,Lanedo changes,"Included features:
- data export/querying through JSON
- atomic updates on the target directory
- add update.sh script to pull/build/index a source code dir
- minor performance fixes
",garnacho,46663,2012-03-05T17:08:38Z,CONTRIBUTOR,True,550,138,13,Powerful search for large codebases,Python,0425a703ac99cf647303c4117e1dcd59635c8156,Merge branch 'master' into lanedo-changes
2054,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,6d01570525416ff9192309866f4350ff75e63d8c,"dxr-index: Use FTS4 sqlite table to store searchable contents

This replaces both file_index.txt and file_list.txt files, which
aren't generated anymore. As FTS lookups are most performant on
MATCH or on rowid matching, an additional files table is created
to improve performance on path-based searches."
2055,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,55a95d72be35535c1f05152fc5eafb2b14b66fca,"www,search: Use FTS4 sqlite table for searches

the FTS table is accessed either through using the MATCH operator,
or through the rowid. All usage of the .txt files has been removed."
2056,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,710eeca6b03d1ba32d691ebeecb192dcff014037,"www,search: Add timing measurements about content generation"
2057,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,be4d5b90ccaf118d8c27fc51f283d11d49b37d17,"www,search: Add timings for the overall request

This timing is measured on the browser side, the overall time
since the request is issued to when the content is shown is
measured"
2058,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,c6e5f04cc67e13694ded135d867c0689a1f3e907,"Add FTS4 code-friendlier tokenizer

This tokenizer will provide tokens for both the joined and
split forms of CamelCase and underscore_separated strings,
enabling searches of full function/class names, or parts of
these. This results in more coherent results from code searches.

The module loading is a bit convoluted, and could be simplified
in the future if python sqlite bindings enabled extension loading.
It currently requires a module function to be called through ctypes,
and a call to a custom sqlite function to enable the tokenizer
for the calling handle."
2059,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,7cb0bfc18a5459013d212a37254311548dd5038b,"dxr-index: Use dxrCodeTokenizer for code tokenization

All inserted text in the fts table will use this tokenizer. The
dxr_code_tokenizer_init() call and ""select initialize_tokenizer()""
sqlite command need to happen before any operations on the fts
table."
2060,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,2ffbd235713341d14a909c802f603c2087fc4c11,"www: Load/initialize the code tokenizer

It needs to be initialized before any operation on the
fts table, as any MATCH query will require the custom loaded
code."
2061,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,731d423786acb5d0d4da62d55e7ecb1dc142709b,"Use xdg.Mime to determine files if files can indexed

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=712038"
2062,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,71bf3cb652bc331aa7ab73b7a069274111da4560,"Blame actions in the sidebar of each file

Add ""Actions"" at the top of the sidebar, including Log, Blame, Diff and Raw.
Each one can be overridden in dxr.config. hg, git and bzr are supported for
determining the current revision, alternatively ""revision="" can contain a
custom command. A ""Notice:"" is printed once if the repository is not hg.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=701411"
2063,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,5e5096c63346bb6ac7e6216bb4e16d8c64226d6c,"Make sure all forms have an action

An artifact of circumventing the form handling
with Javascript is that Firefox makes a URL
to the root rather than the cgi for keyword searches.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=710162"
2064,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,591c80e9f40ca7722fb0efb09bc227830028181e,"Bail out of clang indexer if .csv files missing

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=707628"
2065,https://api.github.com/repos/mozilla/dxr/pulls/19,19,Lanedo changes,"These are the changes sported so far in dxr.lanedo.com, the changes can be grouped in several features:
- FTS4 support, including the tokenizer, and support in dxr-index and the www side
- Filtering out files from unhandled mimetypes
- Add pane with blame actions
- Other miscellaneous fixes to the build/indexing process
",garnacho,46663,2012-02-10T18:11:31Z,CONTRIBUTOR,True,842,108,17,Powerful search for large codebases,Python,c71ee1d73eb9f257d62ce8b81c813a0056264364,"Hide -Xclang options in cc.sh and invoke compiler through cc.sh

libtool does not really like ""-Xclang -load"".  This way, these flags
are no longer exposed on the command line for libtool to fiddle with."
2066,https://api.github.com/repos/mozilla/dxr/pulls/18,18,Random collection of fixes,"Hello,

I recently got DXR working for (a piece of) the Chromium tree.
Here are the minor tweaks I needed to make to get things to work.

I'm happy to discuss any of these patches individually if you like.  If you only want some of them, I'm happy to  put them into independent branches, or you can cherry-pick the ones you want.  Let me know.
",evmar,3847,2012-02-08T23:46:26Z,CONTRIBUTOR,True,14,12,6,Powerful search for large codebases,Python,f23c6c02773c49f3500fae405c8469f66ae6d6a0,"Make it clear that dxr.config goes into wwwdir

It's required to be there by the CGI scripts."
2067,https://api.github.com/repos/mozilla/dxr/pulls/18,18,Random collection of fixes,"Hello,

I recently got DXR working for (a piece of) the Chromium tree.
Here are the minor tweaks I needed to make to get things to work.

I'm happy to discuss any of these patches individually if you like.  If you only want some of them, I'm happy to  put them into independent branches, or you can cherry-pick the ones you want.  Let me know.
",evmar,3847,2012-02-08T23:46:26Z,CONTRIBUTOR,True,14,12,6,Powerful search for large codebases,Python,8239c1422d4b39ca3595bccb47bc3c452a0fe8f4,"Put both src and obj clang paths on plugin include path

Supports building against Clang where the build dir != src dir."
2068,https://api.github.com/repos/mozilla/dxr/pulls/18,18,Random collection of fixes,"Hello,

I recently got DXR working for (a piece of) the Chromium tree.
Here are the minor tweaks I needed to make to get things to work.

I'm happy to discuss any of these patches individually if you like.  If you only want some of them, I'm happy to  put them into independent branches, or you can cherry-pick the ones you want.  Let me know.
",evmar,3847,2012-02-08T23:46:26Z,CONTRIBUTOR,True,14,12,6,Powerful search for large codebases,Python,e9890ef9c291ae5a2c86a60cebf2202a0b8c4f59,"clang: Quote vtype in CSV output

The type can be a string with embedded quotes and commas, such as
  typeof(open(""/dev/null"", 0))"
2069,https://api.github.com/repos/mozilla/dxr/pulls/18,18,Random collection of fixes,"Hello,

I recently got DXR working for (a piece of) the Chromium tree.
Here are the minor tweaks I needed to make to get things to work.

I'm happy to discuss any of these patches individually if you like.  If you only want some of them, I'm happy to  put them into independent branches, or you can cherry-pick the ones you want.  Let me know.
",evmar,3847,2012-02-08T23:46:26Z,CONTRIBUTOR,True,14,12,6,Powerful search for large codebases,Python,3fef700b44e1ae1a70fec59999f77a0d217854c8,"Print out current on parse error when loading indexer output

For example, this code discovered a random other .csv file in my
source tree and attempted to load it, causing an exception other
than IndexError in this block."
2070,https://api.github.com/repos/mozilla/dxr/pulls/18,18,Random collection of fixes,"Hello,

I recently got DXR working for (a piece of) the Chromium tree.
Here are the minor tweaks I needed to make to get things to work.

I'm happy to discuss any of these patches individually if you like.  If you only want some of them, I'm happy to  put them into independent branches, or you can cherry-pick the ones you want.  Let me know.
",evmar,3847,2012-02-08T23:46:26Z,CONTRIBUTOR,True,14,12,6,Powerful search for large codebases,Python,8cdfd35f2ff3a9bf418b987e9aaf137da5ae0900,"Use ""python"" instead of ""python2"" in Python shebangs

On most systems, /usr/bin/python is Python 2.  On some systems, there
is a symlink from /usr/bin/python2 to Python 2, but not on all.

(There are also systems, like Arch Linux, that point
/usr/bin/python to Python 3.  They believe the correct thing for
Python 2 software to do is to use /usr/bin/python and require
Arch end users to fix these paths manually.  See
  http://www.mail-archive.com/arch-general@archlinux.org/msg23313.html
)"
2071,https://api.github.com/repos/mozilla/dxr/pulls/17,17,serialize byfile stuff independently,"The code is virtually there. It reduces RAM requirements just enough to index mozilla-current on a machine that previously faied with MemoryException.
",kalikiana,1204189,2011-12-08T12:19:02Z,NONE,False,19,25,1,Powerful search for large codebases,Python,0428ebdc630ea1f64a1f83e497a4618dc5e433e8,serialize byfile stuff independently
2072,https://api.github.com/repos/mozilla/dxr/pulls/16,16,Show 'Loading...' in type popover and show errors,"Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=704105
",kalikiana,1204189,2011-12-06T15:47:56Z,NONE,True,6,1,1,Powerful search for large codebases,Python,532de6c207b2f51d4365b8e3b89d04582707a88e,"Show 'Loading...' in type popover and show errors

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=704105"
2073,https://api.github.com/repos/mozilla/dxr/pulls/15,15,Improve interface with multiple trees,"Make the combo box work, show it if there are multiple trees
and show a browse link for each tree.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=705319
",kalikiana,1204189,2011-12-06T15:26:27Z,NONE,True,12,7,4,Powerful search for large codebases,Python,658c79483b957f6c57e3a0ab34f36f61d2021f17,"Improve interface with multiple trees

Make the combo box work, show it if there are multiple trees
and show a browse link for each tree.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=705319"
2074,https://api.github.com/repos/mozilla/dxr/pulls/14,14,Emit an error when realpath() fails instead of crashing Clang,,kalikiana,1204189,2011-12-06T15:20:50Z,NONE,True,17,1,1,Powerful search for large codebases,Python,0f5a1ae7ee677cbd0ba41d75c5cb834aa73a82f6,Emit an error when realpath() fails instead of crashing Clang
2075,https://api.github.com/repos/mozilla/dxr/pulls/13,13,Always list the file itself as a match,"Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=678334
",kalikiana,1204189,2011-12-06T15:16:44Z,NONE,True,1,1,1,Powerful search for large codebases,Python,9137120162747de33a7340493946ba1c4541ec91,"Always list the file itself as a match

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=678334"
2076,https://api.github.com/repos/mozilla/dxr/pulls/12,12,Don't hardcode python2.6 in search.cgi,"With Python 2.7 you get opaque server errors. However python2
with Python 2.5 at worst leads to understandable backtraces
",kalikiana,1204189,2011-12-06T15:15:04Z,NONE,True,4,4,4,Powerful search for large codebases,Python,dc0e8247757557dcc8bee1ef3e804b8590df18c5,"Don't hardcode python2.6 in search.cgi

With Python 2.7 you get opaque server errors. However python2
with Python 2.5 at worst leads to understandable backtraces"
2077,https://api.github.com/repos/mozilla/dxr/pulls/11,11,Look for config in system location,"The config file can be put in /etc/dxr/dxr.config.

Handle errors with opening the config file.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=705321
",kalikiana,1204189,2011-12-06T15:11:18Z,NONE,True,52,38,3,Powerful search for large codebases,Python,b4a15265feda68ad6fb0fb5fa9cb27d71a921665,"Look for config in system location

The config file can be put in /etc/dxr/dxr.config.

Handle errors with opening the config file.

Fixes: https://bugzilla.mozilla.org/show_bug.cgi?id=705321"
2078,https://api.github.com/repos/mozilla/dxr/pulls/10,10,Clarify setup-env.sh command line parameter and warn if srcdir == objdir,"I have renamed the help text for the setup-env.sh to clarify that the second parameter is actually the object dir (not the ""data"" dir). Also warn if object dir == source dir since a) it is not recommended and b) we will warn in the situation when someone actually has src dir != obj dir but forgot to pass the parameter to setup-env.sh.
",gicmo,2040,2011-12-04T23:00:16Z,CONTRIBUTOR,True,2,1,1,Powerful search for large codebases,Python,6eb86a3d0ac36532dce65129aa5210b4bd734277,"Clarify setup-env.sh commandline parameter

Rename [<datadir>] to [<objdir>] in the help text of setup-env.sh
to better reflect the actual meaning of the second parameter."
2079,https://api.github.com/repos/mozilla/dxr/pulls/10,10,Clarify setup-env.sh command line parameter and warn if srcdir == objdir,"I have renamed the help text for the setup-env.sh to clarify that the second parameter is actually the object dir (not the ""data"" dir). Also warn if object dir == source dir since a) it is not recommended and b) we will warn in the situation when someone actually has src dir != obj dir but forgot to pass the parameter to setup-env.sh.
",gicmo,2040,2011-12-04T23:00:16Z,CONTRIBUTOR,True,2,1,1,Powerful search for large codebases,Python,1a3101a33067b30ba37e05ec23d98ec240f87846,"Warn if setup-env.sh is called without object dir

Since source dir == object dir is not recommended give a warning on
stdout. A nice side effect is that it will also remind the caller
to pass the object dir as an argument -if forgotten- in case source
dir != object dir."
2080,https://api.github.com/repos/mozilla/dxr/pulls/9,9,Follow the current llvm/clang version 3 API changes,"- DiagnosticsClient -> DiagnosticsConsumer
- DiagnosticsConsumer::clone (pure virutal) has to be implemented in derived classes
- CXXRecordDecl::isDefinition -> CXXRecordDecl::isCompleteDefinition
- Diagnostic -> DiagnosticsEngine
- MacroExapnds now also takes a SourceRange parameter
",gicmo,2040,2011-11-14T13:15:54Z,CONTRIBUTOR,True,20,14,1,Powerful search for large codebases,Python,56252fb23ace8d0d35b620d3f59cb555eeabd576,"Follow the current llvm/clang version 3 API changes

* DiagnosticsClient -> DiagnosticsConsumer
* DiagnosticsConsumer::clone (pure virutal) has to be implemented in derived classes
* CXXRecordDecl::isDefinition -> CXXRecordDecl::isCompleteDefinition
* Diagnostic -> DiagnosticsEngine
* MacroExapnds now also takes a SourceRange parameter"
2081,https://api.github.com/repos/mozilla/dxr/pulls/7,7,A spelling mistake fix,,ehsan,168508,2011-08-08T19:52:20Z,MEMBER,True,1,1,1,Powerful search for large codebases,Python,55cbd869f24a3f7c100c45cd1a4eafd5dba5b89c,Fix a misspelling
2082,https://api.github.com/repos/mozilla/dxr/pulls/6,6,check that the shell sourcing the script is bash and abort otherwise,,MarkoSchuetz,944309,2011-08-05T10:02:28Z,CONTRIBUTOR,False,12,3,1,Powerful search for large codebases,Python,1b103521315bb510d80e66d8452346accedf582b,check that the shell sourcing the script is bash and abort otherwise
2083,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,d1d6bdd169d1e8726609c12a0fef563ea5ffa8f9,Fixing minor errors.
2084,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,c2f7c54425f7f8ca7f293cf365be5236baedcba3,Merge /src/dxr/dxr-clang into clang
2085,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,bc1d988190bea460be285f8d9958fd0bf827d1d3,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin
2086,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,a721aa833f159c686eb88a95b196c8c14db296d8,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin
2087,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,2d566edb6b0a6a7077103a975396714327c7fd55,"Always set SRCDIR to the absolute path, because using relative paths can cause the clang plugin to crash"
2088,https://api.github.com/repos/mozilla/dxr/pulls/5,5,Make it possible to rerun setup-env.sh to rebuild the cxx-clang plugin,"Now you can run setup-env.sh two times in a row
",ehsan,168508,2011-08-04T19:57:15Z,MEMBER,True,20,4,6,Powerful search for large codebases,Python,c858f8a9cf170d2a3303f130ba774e5d1feb2302,Add a linebreak before the warnings: example
2089,https://api.github.com/repos/mozilla/dxr/pulls/2,2,some small changes,"small changes I needed to make in order to get it setup on NetBSD
",MarkoSchuetz,944309,2011-07-28T14:53:12Z,CONTRIBUTOR,True,6,5,1,Powerful search for large codebases,Python,0b05da5b95b156cb9b136aef71e38d34df5682ac,fix hard-coded path to bash
2090,https://api.github.com/repos/mozilla/dxr/pulls/2,2,some small changes,"small changes I needed to make in order to get it setup on NetBSD
",MarkoSchuetz,944309,2011-07-28T14:53:12Z,CONTRIBUTOR,True,6,5,1,Powerful search for large codebases,Python,0f56747714340193ee1c091f00c534aabbb5b964,make is not necessarily GNU make: allow setting name of GNU make in environment
2091,https://api.github.com/repos/mozilla/dxr/pulls/2,2,some small changes,"small changes I needed to make in order to get it setup on NetBSD
",MarkoSchuetz,944309,2011-07-28T14:53:12Z,CONTRIBUTOR,True,6,5,1,Powerful search for large codebases,Python,95e0801c92344d2213ba9cabf440d997950c4740,fix iteration over plugins
