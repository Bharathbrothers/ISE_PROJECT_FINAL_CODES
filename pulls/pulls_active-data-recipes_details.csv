,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/active-data-recipes/pulls/135,135,Add Mozilla Code of Conduct,"Fixes #134


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-30T06:41:45Z,CONTRIBUTOR,True,15,0,1,A repository of various activedata queries and recipes,Python,442536be5b3cef41f6aa042fcb1ff646b1701f77,"Add Mozilla Code of Conduct file

Fixes #134.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/active-data-recipes/pulls/132,132,Sources,,ahal,273734,2019-03-28T21:17:29Z,MEMBER,True,174,213,73,A repository of various activedata queries and recipes,Python,d111a28d146120ee1214096cfd0e9675cb7a4dbb,Make Configuration() object a singleton and stop passing it around
2,https://api.github.com/repos/mozilla/active-data-recipes/pulls/132,132,Sources,,ahal,273734,2019-03-28T21:17:29Z,MEMBER,True,174,213,73,A repository of various activedata queries and recipes,Python,dbcdaacc5ffdf7d2851749a9c2605255e20c3513,Move queries/recipes to top-level
3,https://api.github.com/repos/mozilla/active-data-recipes/pulls/131,131,Sitepackages,,ahal,273734,2019-03-25T19:23:10Z,MEMBER,False,12,20,2,A repository of various activedata queries and recipes,Python,cfb678082073eb954716b881acb0218e8f7a58a2,Give 'doclint' tox testenv access to global packages
4,https://api.github.com/repos/mozilla/active-data-recipes/pulls/131,131,Sitepackages,,ahal,273734,2019-03-25T19:23:10Z,MEMBER,False,12,20,2,A repository of various activedata queries and recipes,Python,a91bac5c8d2feb21cac109a3091431940da5fed5,Install packages in TravisCI with verbose mode
5,https://api.github.com/repos/mozilla/active-data-recipes/pulls/129,129,Refactor cli,,ahal,273734,2019-03-23T04:58:57Z,MEMBER,True,107,165,1,A repository of various activedata queries and recipes,Python,4a151ba134fe730f38f50853fe5eb6de1ef40f2d,Refactor cli.py
6,https://api.github.com/repos/mozilla/active-data-recipes/pulls/128,128,Fix TravisCI,,ahal,273734,2019-03-21T21:20:56Z,MEMBER,True,88,18,4,A repository of various activedata queries and recipes,Python,71bde437e3a81b7f065c6283b62ea8d368e9e5a1,Fix TravisCI
7,https://api.github.com/repos/mozilla/active-data-recipes/pulls/127,127,Intermittent rate,get the total tasks and failed tasks to find the intermittent rate per config,jmaher,62588,2019-03-19T12:36:20Z,CONTRIBUTOR,True,63,2,5,A repository of various activedata queries and recipes,Python,e539b58d0d7c578444c0dfbbab1c37eb0a6307d8,fix config_durations to be more accurate
8,https://api.github.com/repos/mozilla/active-data-recipes/pulls/127,127,Intermittent rate,get the total tasks and failed tasks to find the intermittent rate per config,jmaher,62588,2019-03-19T12:36:20Z,CONTRIBUTOR,True,63,2,5,A repository of various activedata queries and recipes,Python,a7ba22fd6c3f870f306dac05e745cfa1d3418e09,new recipe for finding total tasks and failures for all config types
9,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,e539b58d0d7c578444c0dfbbab1c37eb0a6307d8,fix config_durations to be more accurate
10,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,73b52467c3736c88a6e6c6018c6c2424ea43383e,support for unique failures and additional output for assessing unique failures
11,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,9409e27466630933babd701420aada873e748a41,"when viewing unique failures for a config/suite, ensure we have the branch for investigation"
12,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,4b265475bbfd32a649af209301ca5b16a923d7d5,clean up code
13,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,054b54ebc5b9ccebf88b9fbaebf5744ded5eb38d,modernize recipe
14,https://api.github.com/repos/mozilla/active-data-recipes/pulls/126,126,Unique config regressions per week,"this has changes from my other PR as well, I think my git rebase messed this up.",jmaher,62588,2019-03-14T18:22:20Z,CONTRIBUTOR,True,189,2,5,A repository of various activedata queries and recipes,Python,9a92b5bb56f16e4fb959518dc1a7e4c3e61e55b5,add docs to fix doclint
15,https://api.github.com/repos/mozilla/active-data-recipes/pulls/125,125,fix config_durations to be more accurate,"in using this adr to generate a lot of relevant data, I found these few changes to make it more accurate and agree with other data sources.",jmaher,62588,2019-03-14T18:16:22Z,CONTRIBUTOR,False,4,2,2,A repository of various activedata queries and recipes,Python,e539b58d0d7c578444c0dfbbab1c37eb0a6307d8,fix config_durations to be more accurate
16,https://api.github.com/repos/mozilla/active-data-recipes/pulls/124,124,Output file,"Add --output-file <fullpath of file> so that the result will be send to a file (only the result goes to the file, other information such as verbose log statements don't).",TrangNguyenBC,42683686,2019-03-06T16:22:36Z,CONTRIBUTOR,True,8,4,3,A repository of various activedata queries and recipes,Python,f35020dd5875281ba8bf5296751c373c929b3721,"add --output-file (-of) arguments, write result string to file"
17,https://api.github.com/repos/mozilla/active-data-recipes/pulls/124,124,Output file,"Add --output-file <fullpath of file> so that the result will be send to a file (only the result goes to the file, other information such as verbose log statements don't).",TrangNguyenBC,42683686,2019-03-06T16:22:36Z,CONTRIBUTOR,True,8,4,3,A repository of various activedata queries and recipes,Python,d00741453fb079b1f71721796e519b2e3f996e79,allow filename
18,https://api.github.com/repos/mozilla/active-data-recipes/pulls/124,124,Output file,"Add --output-file <fullpath of file> so that the result will be send to a file (only the result goes to the file, other information such as verbose log statements don't).",TrangNguyenBC,42683686,2019-03-06T16:22:36Z,CONTRIBUTOR,True,8,4,3,A repository of various activedata queries and recipes,Python,7788d3e3d60036b2c99153fd3b895e9ddb751a66,input data is full filepath instead of file name
19,https://api.github.com/repos/mozilla/active-data-recipes/pulls/124,124,Output file,"Add --output-file <fullpath of file> so that the result will be send to a file (only the result goes to the file, other information such as verbose log statements don't).",TrangNguyenBC,42683686,2019-03-06T16:22:36Z,CONTRIBUTOR,True,8,4,3,A repository of various activedata queries and recipes,Python,b9c9fb8a735613710deae920a4b8334eaa59edb7,"remove print_to_file() function, change ""-of"" to ""-o"""
20,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,a9a249eff4be2121dc34319d8a473d93a255e4e8,add calendar picker to every recipe input form
21,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,5aac39683dd453208850707362d00018b59cd928,change calendar to single input with range
22,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,64ecb7b99bc44e0259f76e74d25b21d1c1c18bd0,"only show calendar for context with Datetime type, update Relative time"
23,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,2a7be5e55e7fa6fcdc1e166753ff33ba1af344a8,run recipe ok with YYYY-MM-DD format
24,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,1edcb5dd8916737eab910cc5a2fd897fbec3679e,remove unnecessary codes
25,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,b04559da086fb05912634a55d683f1aff84fa090,"put RequestParser to context for clearer structure, fix bug datetime is not callable for argparse (use validdatetime)"
26,https://api.github.com/repos/mozilla/active-data-recipes/pulls/123,123,Calendar picker,"- Use DateRangePicker library (http://www.daterangepicker.com/)
- Users can pick a date from calendar or select 1 option in custom range
- Problem need be solved: the webpage does not consider a string such as ""today-month"" as valid input",TrangNguyenBC,42683686,2019-03-02T00:13:00Z,CONTRIBUTOR,True,100,32,8,A repository of various activedata queries and recipes,Python,74edcabaa8e9a52d49f931ef454dbe70bf9e7f3f,"remove list of month, custom range, chang short type of date to 3 characters"
27,https://api.github.com/repos/mozilla/active-data-recipes/pulls/121,121,Required contexts,"All contexts can not be null on web page
Contexts without default value will be required on cli",TrangNguyenBC,42683686,2019-02-21T13:41:10Z,CONTRIBUTOR,True,7,3,2,A repository of various activedata queries and recipes,Python,3e2cf39013f936efbc0253689adc7c042a83c080,required contexts
28,https://api.github.com/repos/mozilla/active-data-recipes/pulls/121,121,Required contexts,"All contexts can not be null on web page
Contexts without default value will be required on cli",TrangNguyenBC,42683686,2019-02-21T13:41:10Z,CONTRIBUTOR,True,7,3,2,A repository of various activedata queries and recipes,Python,ac163cbe7dcee3831f327e045fa0b5ec203f1770,"replace ""get()"" function to fix ""defaults"": None"
29,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,7635600b1cf9393e4b82d69f7aed0cf35561bc4d,"number validation, delete unused function sort_context_dict"
30,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,e167931d1127442a2a50445f940e5632566d22ce,"add ""type, choices"" to context"
31,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,1ad82b81215a37c167e46d89d40e5d28e832e309,multiple choice dropdown
32,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,ace4a845d92244f48143678f2c75c60d965d426a,delete unused code
33,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,c539ed51340d2477e1fed320c70a794ec2b4f7ba,set default value
34,https://api.github.com/repos/mozilla/active-data-recipes/pulls/119,119,Webapp - dropdown list,"Implement drop-down list (both single and multiple choice drop-down list) for contexts which have ""choices"" attributes, apply for ""branches"" context.",TrangNguyenBC,42683686,2019-02-13T06:16:46Z,CONTRIBUTOR,True,82,31,4,A repository of various activedata queries and recipes,Python,0d1f300b847672c518bf28f6a2b6d94161c9a7a2,remove commented out code
35,https://api.github.com/repos/mozilla/active-data-recipes/pulls/118,118,Show error message when running webapp,"Show the detailed error message getting from server (for example, when users put a legal but meaningless value into a textbox). The value validation will be solved in another pull request.",TrangNguyenBC,42683686,2019-02-08T01:14:10Z,CONTRIBUTOR,True,81,48,7,A repository of various activedata queries and recipes,Python,bd27a080d06ffbd04c52d66a18b596cfb8f91b4a,show error message
36,https://api.github.com/repos/mozilla/active-data-recipes/pulls/118,118,Show error message when running webapp,"Show the detailed error message getting from server (for example, when users put a legal but meaningless value into a textbox). The value validation will be solved in another pull request.",TrangNguyenBC,42683686,2019-02-08T01:14:10Z,CONTRIBUTOR,True,81,48,7,A repository of various activedata queries and recipes,Python,0b1ce4498c341891a82d621af01fff1285d878d0,"remove unused function, fix bug recognize ""groupby"" as tuple instead of list"
37,https://api.github.com/repos/mozilla/active-data-recipes/pulls/118,118,Show error message when running webapp,"Show the detailed error message getting from server (for example, when users put a legal but meaningless value into a textbox). The value validation will be solved in another pull request.",TrangNguyenBC,42683686,2019-02-08T01:14:10Z,CONTRIBUTOR,True,81,48,7,A repository of various activedata queries and recipes,Python,d49001debb31ecb8e5f8f802f81d5120328aa7a6,add test for webapp error
38,https://api.github.com/repos/mozilla/active-data-recipes/pulls/118,118,Show error message when running webapp,"Show the detailed error message getting from server (for example, when users put a legal but meaningless value into a textbox). The value validation will be solved in another pull request.",TrangNguyenBC,42683686,2019-02-08T01:14:10Z,CONTRIBUTOR,True,81,48,7,A repository of various activedata queries and recipes,Python,f7982b92084e85737066af7267b3a36bf2e71996,update try_users
39,https://api.github.com/repos/mozilla/active-data-recipes/pulls/118,118,Show error message when running webapp,"Show the detailed error message getting from server (for example, when users put a legal but meaningless value into a textbox). The value validation will be solved in another pull request.",TrangNguyenBC,42683686,2019-02-08T01:14:10Z,CONTRIBUTOR,True,81,48,7,A repository of various activedata queries and recipes,Python,577f53739331e631edeff2f31c9f8d4153178aad,use mock_error
40,https://api.github.com/repos/mozilla/active-data-recipes/pulls/117,117,Don't recursively check for context values in functions other than run,"The extract_arguments function assumes that 'args' will be the second
argument of each function. However, we can only be certain of this in
the 'run' function which we control. We shouldn't make this assumption
for other user defined functions.

This does mean that there might be context we miss. Unfortunately we can
never guarantee we'll find all context values using 'inspect'. I think
we might need to switch to a more declarative approach.",ahal,273734,2019-02-07T16:20:15Z,MEMBER,True,2,24,1,A repository of various activedata queries and recipes,Python,cb268c617316dd7912dfadb25e950d262c702650,"Don't recursively check for context values in functions other than run

The extract_arguments function assumes that 'args' will be the second
argument of each function. However, we can only be certain of this in
the 'run' function which we control. We shouldn't make this assumption
for other use defined functions.

This does mean that there might be context we miss. Unfortunately we can
never guarantee we'll find all context values using 'inspect'. I think
we might need to switch to a more declarative approach."
41,https://api.github.com/repos/mozilla/active-data-recipes/pulls/116,116,Display contexts on webapp and --help in same order with COMMON_CONTEXTS & defined in query/recipe,,TrangNguyenBC,42683686,2019-02-05T23:23:33Z,CONTRIBUTOR,True,112,81,7,A repository of various activedata queries and recipes,Python,cca8e71a5b690a312f9eaa3cb98f4d2d6f613688,"set display order in webapp similar to COMMON_CONTEXTS, hide ""attribute"" in inspect.py"
42,https://api.github.com/repos/mozilla/active-data-recipes/pulls/116,116,Display contexts on webapp and --help in same order with COMMON_CONTEXTS & defined in query/recipe,,TrangNguyenBC,42683686,2019-02-05T23:23:33Z,CONTRIBUTOR,True,112,81,7,A repository of various activedata queries and recipes,Python,d66795f6e07c25b58c4b06c9bdf95dcdc13626ce,set display order for cli --help of query and recipe
43,https://api.github.com/repos/mozilla/active-data-recipes/pulls/116,116,Display contexts on webapp and --help in same order with COMMON_CONTEXTS & defined in query/recipe,,TrangNguyenBC,42683686,2019-02-05T23:23:33Z,CONTRIBUTOR,True,112,81,7,A repository of various activedata queries and recipes,Python,31011b1864ca9923a2cf1aa19bcfcbf6a507b300,add item into COMMON_CONTEXTS according to OrderedDict rule
44,https://api.github.com/repos/mozilla/active-data-recipes/pulls/116,116,Display contexts on webapp and --help in same order with COMMON_CONTEXTS & defined in query/recipe,,TrangNguyenBC,42683686,2019-02-05T23:23:33Z,CONTRIBUTOR,True,112,81,7,A repository of various activedata queries and recipes,Python,bd0b1b03bd92b7e248f7d1a63076fa6af5fc6c57,remove unnecessary code
45,https://api.github.com/repos/mozilla/active-data-recipes/pulls/116,116,Display contexts on webapp and --help in same order with COMMON_CONTEXTS & defined in query/recipe,,TrangNguyenBC,42683686,2019-02-05T23:23:33Z,CONTRIBUTOR,True,112,81,7,A repository of various activedata queries and recipes,Python,96bb92c93f1feacdb018278a2b76f7be4daf504f,fix bugs in ordering specific query/recipe context
46,https://api.github.com/repos/mozilla/active-data-recipes/pulls/115,115,"Describe context definitions and hide ""hidden"" attribute of contexts",Related to issue #104 ,TrangNguyenBC,42683686,2019-02-05T01:02:29Z,CONTRIBUTOR,True,75,40,11,A repository of various activedata queries and recipes,Python,60166d193833758092d6ab80514f493bca8a4061,"Describe the context definition, hide hidden context, mark xfail in test_recipes and test_web_api"
47,https://api.github.com/repos/mozilla/active-data-recipes/pulls/115,115,"Describe context definitions and hide ""hidden"" attribute of contexts",Related to issue #104 ,TrangNguyenBC,42683686,2019-02-05T01:02:29Z,CONTRIBUTOR,True,75,40,11,A repository of various activedata queries and recipes,Python,850305118da35a1e2c9196bca63b4dc915b0492f,override multiple attribute of a context
48,https://api.github.com/repos/mozilla/active-data-recipes/pulls/115,115,"Describe context definitions and hide ""hidden"" attribute of contexts",Related to issue #104 ,TrangNguyenBC,42683686,2019-02-05T01:02:29Z,CONTRIBUTOR,True,75,40,11,A repository of various activedata queries and recipes,Python,b7782daff80c5e3f32c7555ff6040458d6d83572,pass all the other values of hidden attribute into `add_argument`
49,https://api.github.com/repos/mozilla/active-data-recipes/pulls/115,115,"Describe context definitions and hide ""hidden"" attribute of contexts",Related to issue #104 ,TrangNguyenBC,42683686,2019-02-05T01:02:29Z,CONTRIBUTOR,True,75,40,11,A repository of various activedata queries and recipes,Python,591fd48f82617633af79a22830a8f27cc52f9979,"hide ""branches"" in try_efficiency"
50,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,2b9dd47c6b1ae22cfc850e43998410f817c596d6,add tp6 compare
51,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,6f6a24e5dec7aedf637b29ec7d984e37488b7889,try to add context variables
52,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,31c9c5ff83723be1f2bc351bf32cf2a275ee86ea,first working version
53,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,2cadeeb43e9a2d26383d025a12ad92331749d8cc,looks a bit nicer
54,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,aba23ea80019c6c35736b9686ccfee5273332b93,comment
55,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,ed5c36acdb590e2009eaf4e4206fb0c4ab70810d,revert
56,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,2365fa72acd84baf34bb2c8250ead5440aa06de7,fix long line
57,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,a6f43709a2f020f3859a547c20ce2151b7baaf67,docs
58,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,405ff2fe192a62a9a14bb4ae6de9238c08c7d35e,add suite name
59,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,f7cd8ec7b81777cd0fe42690064087efe9b40333,Remove unnecessary RUN_CONTEXTS dict
60,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,cf775bc8ab8c57fb2190d6da49f40fedd7c0fe75,Remove unused import
61,https://api.github.com/repos/mozilla/active-data-recipes/pulls/114,114,Show single subtest across all perf suites,,klahnakoski,2334429,2019-02-04T20:51:25Z,CONTRIBUTOR,True,80,1,3,A repository of various activedata queries and recipes,Python,3e651f9bbd988cc7d53ecc612cf8be27bc8b7116,"Remove ""type"": str from context definition.

YAML will load str as the string ""str"" instead of the function, which causes an error. Since this is the default type in argparse anyway, it's easiest to just remove it."
62,https://api.github.com/repos/mozilla/active-data-recipes/pulls/112,112,add proposed GSOC doc,"I hope this can be merged, and then others can update it as they see fit.",klahnakoski,2334429,2019-02-03T16:51:12Z,CONTRIBUTOR,True,55,0,1,A repository of various activedata queries and recipes,Python,30bc6be557b4556bfad05ec6a6e485e3c85643ce,add proposed GSOC doc
63,https://api.github.com/repos/mozilla/active-data-recipes/pulls/111,111,Student Project doc,"I hope to have this merged right away, and I will leave it to others to edit it as they see fit.",klahnakoski,2334429,2019-02-03T16:44:24Z,CONTRIBUTOR,False,141,0,6,A repository of various activedata queries and recipes,Python,f36e12c2bbba9826ecad8e4d6871f9ce0d16f9b4,Add a new push_percentage recipe
64,https://api.github.com/repos/mozilla/active-data-recipes/pulls/111,111,Student Project doc,"I hope to have this merged right away, and I will leave it to others to edit it as they see fit.",klahnakoski,2334429,2019-02-03T16:44:24Z,CONTRIBUTOR,False,141,0,6,A repository of various activedata queries and recipes,Python,dd393028c0eca3df99e9493172eb1b85da19af77,add proposed GSOC doc
65,https://api.github.com/repos/mozilla/active-data-recipes/pulls/109,109,Add a new push_percentage recipe,This recipe will display the percentage of tests that were run for the given push.,ahal,273734,2019-01-30T20:38:56Z,MEMBER,True,85,0,5,A repository of various activedata queries and recipes,Python,b1d9e09db8331d531bcfe732309d099ea33dc559,Add a new push_percentage recipe
66,https://api.github.com/repos/mozilla/active-data-recipes/pulls/107,107,Add recipe to list all failure test of a push id,,TrangNguyenBC,42683686,2019-01-23T20:05:56Z,CONTRIBUTOR,True,78,2,5,A repository of various activedata queries and recipes,Python,513807092ecdf5295b0eb374b38800f20bdebcdd,add recipe to list all failure test of a push id
67,https://api.github.com/repos/mozilla/active-data-recipes/pulls/107,107,Add recipe to list all failure test of a push id,,TrangNguyenBC,42683686,2019-01-23T20:05:56Z,CONTRIBUTOR,True,78,2,5,A repository of various activedata queries and recipes,Python,d741b8abf376af9ba5371bfac6c6bc5f3de6a793,"change context --pushid to --push, modify recipe docstring"
68,https://api.github.com/repos/mozilla/active-data-recipes/pulls/106,106,change default branches to mozilla-central,,TrangNguyenBC,42683686,2019-01-23T15:08:53Z,CONTRIBUTOR,True,12,12,2,A repository of various activedata queries and recipes,Python,c3bb248db72a52389b36590a1f74d8b39b5939fd,change default branches to mozilla-central
69,https://api.github.com/repos/mozilla/active-data-recipes/pulls/106,106,change default branches to mozilla-central,,TrangNguyenBC,42683686,2019-01-23T15:08:53Z,CONTRIBUTOR,True,12,12,2,A repository of various activedata queries and recipes,Python,adaa9c22ae65bfcdc6527d971a6c9e509e828329,fix test case change default branches to mozilla-central
70,https://api.github.com/repos/mozilla/active-data-recipes/pulls/102,102,Add recipe to compare usage across branches,,ahal,273734,2019-01-18T04:16:48Z,MEMBER,True,218,102,28,A repository of various activedata queries and recipes,Python,6a9d89f51705ed16aa1d66ba2d6ef9ed50d1204a,Minor cleanup and formatting
71,https://api.github.com/repos/mozilla/active-data-recipes/pulls/102,102,Add recipe to compare usage across branches,,ahal,273734,2019-01-18T04:16:48Z,MEMBER,True,218,102,28,A repository of various activedata queries and recipes,Python,23559b5ec41692adf8c5ffc30aeb7bb68ed44086,Add ability for recipes to easily override a common context
72,https://api.github.com/repos/mozilla/active-data-recipes/pulls/102,102,Add recipe to compare usage across branches,,ahal,273734,2019-01-18T04:16:48Z,MEMBER,True,218,102,28,A repository of various activedata queries and recipes,Python,82e86c122d066bdc917198a267ce37a3db2d7da9,Support action='append' context values in the web app
73,https://api.github.com/repos/mozilla/active-data-recipes/pulls/102,102,Add recipe to compare usage across branches,,ahal,273734,2019-01-18T04:16:48Z,MEMBER,True,218,102,28,A repository of various activedata queries and recipes,Python,a881de01254f30d189bc51d6ee73a5581f5ec1a1,Rename 'branch' context to 'branches' and make it an append action
74,https://api.github.com/repos/mozilla/active-data-recipes/pulls/102,102,Add recipe to compare usage across branches,,ahal,273734,2019-01-18T04:16:48Z,MEMBER,True,218,102,28,A repository of various activedata queries and recipes,Python,0053a136433bde0e043333557f32da3ce3835e64,"Add recipe to get a summary of which branches have the heaviest load

This also fixes the 'test' export feature and adds a test."
75,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,54da3eabb0bf10b284dfe1167ace72ef3472585f,"Remove FAKE_CONTEXT for query, allow cli contexts, fix app bug"
76,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,4180ee05ae94cb8055998d3fa826eda14d42c413,"remove commented lines, MAPPING"
77,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,387d68d5e8042ace63594ab7cdd0fa62857c202b,using QueryParser
78,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,3a5801c1807fb4c61b1a5dc147d63344465da739,using RequestParser instead of QueryParser & RecipeParser
79,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,f6cc039672126ae4d7e980560812a34f75ff6ec2,"add ""limit"" and ""format"" context to every query to fix bug in printing the query result (every row same with header)"
80,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,ff350cbbe78fe6a4c14a4ebcfe0489265b27745e,fix bug adr query <query_name> --help
81,https://api.github.com/repos/mozilla/active-data-recipes/pulls/101,101,"Remove FAKE_CONTEXT, allow adr query <query> <option>","This PR solves issue #92 
Update adr query to work in the same way as adr recipe: get contexts from cli, if not specified value, use default value in `COMMON_CONTEXT`, so that we can remove `FAKE_CONTEXT`",TrangNguyenBC,42683686,2019-01-17T00:30:13Z,CONTRIBUTOR,True,97,99,7,A repository of various activedata queries and recipes,Python,1598cb75873a64e9d7f3847f7df63bdff05e3532,fix bug run_query() always return table format
82,https://api.github.com/repos/mozilla/active-data-recipes/pulls/100,100,Test Web API,"This PR solves a part of issue #93 
This unit test is written to test ADR Web API (giving a link of recipe name and parameters, the webapi will return result in json format).
Problem need help: I tried to make a `common.py` file for `new_run_query()` class because it is used in both `test_recipes_integration.py` and `test_web_api.py`, but this error occurred: `ImportError: attempted relative import with no known parent package pytest`. Do you have any suggestion for it, @ahal ? Thank you very much!",TrangNguyenBC,42683686,2019-01-15T06:07:19Z,CONTRIBUTOR,True,179,106,7,A repository of various activedata queries and recipes,Python,17e3007d60a65e2d4ebcced93ade03e229547b4c,test web api
83,https://api.github.com/repos/mozilla/active-data-recipes/pulls/100,100,Test Web API,"This PR solves a part of issue #93 
This unit test is written to test ADR Web API (giving a link of recipe name and parameters, the webapi will return result in json format).
Problem need help: I tried to make a `common.py` file for `new_run_query()` class because it is used in both `test_recipes_integration.py` and `test_web_api.py`, but this error occurred: `ImportError: attempted relative import with no known parent package pytest`. Do you have any suggestion for it, @ahal ? Thank you very much!",TrangNguyenBC,42683686,2019-01-15T06:07:19Z,CONTRIBUTOR,True,179,106,7,A repository of various activedata queries and recipes,Python,7098eb14620fb18583f0e68753751b095456319c,Using @pytest.fixture
84,https://api.github.com/repos/mozilla/active-data-recipes/pulls/100,100,Test Web API,"This PR solves a part of issue #93 
This unit test is written to test ADR Web API (giving a link of recipe name and parameters, the webapi will return result in json format).
Problem need help: I tried to make a `common.py` file for `new_run_query()` class because it is used in both `test_recipes_integration.py` and `test_web_api.py`, but this error occurred: `ImportError: attempted relative import with no known parent package pytest`. Do you have any suggestion for it, @ahal ? Thank you very much!",TrangNguyenBC,42683686,2019-01-15T06:07:19Z,CONTRIBUTOR,True,179,106,7,A repository of various activedata queries and recipes,Python,ac360f23ccdca5934468d5aa3c268b72ba1b2468,"Remove fixtures.py, move inline to conftest.pt"
85,https://api.github.com/repos/mozilla/active-data-recipes/pulls/99,99,Hide broken recipes and number validation for context input data,"- Hide broken recipes: if a recipe is failed, it should be marked inside that recipe through `is_fail` function. Web-app will not show these recipes on recipe list (left menu). The integration test was updated also.
- Number validation for context input data: if ""type"" of this context is int, user will be required to put number on the input textbox",TrangNguyenBC,42683686,2019-01-10T18:17:15Z,CONTRIBUTOR,True,69,22,10,A repository of various activedata queries and recipes,Python,8e4260e9ac5ae7f02ad0a613de6fd1bb084a9614,Hide broken recipes on webapp
86,https://api.github.com/repos/mozilla/active-data-recipes/pulls/99,99,Hide broken recipes and number validation for context input data,"- Hide broken recipes: if a recipe is failed, it should be marked inside that recipe through `is_fail` function. Web-app will not show these recipes on recipe list (left menu). The integration test was updated also.
- Number validation for context input data: if ""type"" of this context is int, user will be required to put number on the input textbox",TrangNguyenBC,42683686,2019-01-10T18:17:15Z,CONTRIBUTOR,True,69,22,10,A repository of various activedata queries and recipes,Python,b476a001afcf7a6a47ee4c91fb8580507ba9cf23,Use BROKEN variable
87,https://api.github.com/repos/mozilla/active-data-recipes/pulls/98,98,Using jquery to get recipe result,"When user clicks ""Run"" button, it changes to ""loading"" status. Meanwhile, jquery is used to send request to server and fetch the recipe result.",TrangNguyenBC,42683686,2019-01-07T17:21:48Z,CONTRIBUTOR,True,131,42,6,A repository of various activedata queries and recipes,Python,7cd2fcde1832533c9f06625c5eaab821c9995b5a,Using jquery to get recipe result
88,https://api.github.com/repos/mozilla/active-data-recipes/pulls/98,98,Using jquery to get recipe result,"When user clicks ""Run"" button, it changes to ""loading"" status. Meanwhile, jquery is used to send request to server and fetch the recipe result.",TrangNguyenBC,42683686,2019-01-07T17:21:48Z,CONTRIBUTOR,True,131,42,6,A repository of various activedata queries and recipes,Python,f7891a538dae56f62faa2da7796f02d40f11d7f7,"change function runRecipe(), create script block"
89,https://api.github.com/repos/mozilla/active-data-recipes/pulls/97,97,"Using template (layout.html), change error.html to home.html","- The `layout.html` is the template, `home.html` and `recipe.html` are child pages which extend from `layout.html`
- Use `home.html` as a welcome page",TrangNguyenBC,42683686,2019-01-02T22:22:23Z,CONTRIBUTOR,True,150,254,5,A repository of various activedata queries and recipes,Python,d732ba08dbf831cede7daaf548cc99d124dacc81,"Using template (layout.html), change error.html to home.html"
90,https://api.github.com/repos/mozilla/active-data-recipes/pulls/96,96,"Make the ""search"" bar work",,TrangNguyenBC,42683686,2019-01-02T21:26:05Z,CONTRIBUTOR,True,37,12,3,A repository of various activedata queries and recipes,Python,1edd0b1e32bc308057cafa990844990e3749f0e9,add javascript for search bar
91,https://api.github.com/repos/mozilla/active-data-recipes/pulls/96,96,"Make the ""search"" bar work",,TrangNguyenBC,42683686,2019-01-02T21:26:05Z,CONTRIBUTOR,True,37,12,3,A repository of various activedata queries and recipes,Python,d529825f69984ceb51a8d26f022e7a6f6142f2ce,Add javascript file
92,https://api.github.com/repos/mozilla/active-data-recipes/pulls/95,95,Modify run_query function (use args instead of **context),,TrangNguyenBC,42683686,2018-12-31T18:47:12Z,CONTRIBUTOR,True,59,66,22,A repository of various activedata queries and recipes,Python,30615c92d9f223f19ab4bb4f704590fa61b60cb3,"change run_query(name, config, **context) into run_query(name, config, args)"
93,https://api.github.com/repos/mozilla/active-data-recipes/pulls/95,95,Modify run_query function (use args instead of **context),,TrangNguyenBC,42683686,2018-12-31T18:47:12Z,CONTRIBUTOR,True,59,66,22,A repository of various activedata queries and recipes,Python,6bec1174a7ac81609cd95a7a10a47178499d0d8b,"change run(args, config) to run(config, args)"
94,https://api.github.com/repos/mozilla/active-data-recipes/pulls/90,90,"remove execute query(), global variable G CONFIG & G CONTEXT","Remove global variables avoid conflict if there are multiple requests
Remove execute_query() and send args instead of override_contexts to make code simpler",TrangNguyenBC,42683686,2018-12-20T15:15:02Z,CONTRIBUTOR,True,118,131,21,A repository of various activedata queries and recipes,Python,b76f5a8e8040a59f07eb760cd00f9b33607a60c3,"remove execute query(), global variable G CONFIG & G CONTEXT"
95,https://api.github.com/repos/mozilla/active-data-recipes/pulls/88,88,Initial web app: load recipe information automatically,"This PR solve issue #49 
This is the initial web app which load recipes information automatically and run successfully some recipes. The webpage has 3 columns: 
* List of recipe names 
* Recipe information and user data input: `get_docstrings()`, `get_recipe_contexts()` function
* Result of running recipe
",TrangNguyenBC,42683686,2018-12-14T15:53:34Z,CONTRIBUTOR,True,419,140,10,A repository of various activedata queries and recipes,Python,cf8076e1abd35b9bebf8fbe93a41ef3c9a76fd3b,"Initial web app: load recipe information automatically (docstring and context definition), run successfully some recipes"
96,https://api.github.com/repos/mozilla/active-data-recipes/pulls/88,88,Initial web app: load recipe information automatically,"This PR solve issue #49 
This is the initial web app which load recipes information automatically and run successfully some recipes. The webpage has 3 columns: 
* List of recipe names 
* Recipe information and user data input: `get_docstrings()`, `get_recipe_contexts()` function
* Result of running recipe
",TrangNguyenBC,42683686,2018-12-14T15:53:34Z,CONTRIBUTOR,True,419,140,10,A repository of various activedata queries and recipes,Python,88a8012c0cc693c14881946349a1591e58b7b981,"fix 2 recipes, use docutils, use RUN_CONTEXTS, remove reset button, parse recipe_contexts instead of query_contexts and run_contexts"
97,https://api.github.com/repos/mozilla/active-data-recipes/pulls/88,88,Initial web app: load recipe information automatically,"This PR solve issue #49 
This is the initial web app which load recipes information automatically and run successfully some recipes. The webpage has 3 columns: 
* List of recipe names 
* Recipe information and user data input: `get_docstrings()`, `get_recipe_contexts()` function
* Result of running recipe
",TrangNguyenBC,42683686,2018-12-14T15:53:34Z,CONTRIBUTOR,True,419,140,10,A repository of various activedata queries and recipes,Python,efa25cd7e8faad4f60cd7e0f1fe2345776e80b6f,remove unneeded code
98,https://api.github.com/repos/mozilla/active-data-recipes/pulls/86,86, Separating query contexts and run contexts - Update 16 recipes,"This PR continues from #85 to solve issue #40 with these changes:
These recipes were updated following new structure: 'activedata_usage', 'backout_rate', 'code_coverage', 'code_coverage_by_suite', 'config_durations', 'files_with_coverage',  'inspect', 'seta_accuracy', 'skipped_tests', 'task_durations', 'tests_config_times', 'test_durations', 'tests_in_duration', 'try_efficiency', 'try_usage', 'try_users'",TrangNguyenBC,42683686,2018-12-10T23:00:12Z,CONTRIBUTOR,True,610,331,27,A repository of various activedata queries and recipes,Python,f278be4b1f492542c69c39dec48a32117dccdc28,"Update 16 recipes following new structure:

'activedata_usage', 'backout_rate','code_coverage', 'code_coverage_by_suite','config_durations', 'files_with_coverage', 'inspect', 'seta_accuracy', 'skipped_tests', 'task_durations', try_efficiency', 'try_usage', 'try_users','tests_config_times', 'test_durations', 'tests_in_duration',"
99,https://api.github.com/repos/mozilla/active-data-recipes/pulls/86,86, Separating query contexts and run contexts - Update 16 recipes,"This PR continues from #85 to solve issue #40 with these changes:
These recipes were updated following new structure: 'activedata_usage', 'backout_rate', 'code_coverage', 'code_coverage_by_suite', 'config_durations', 'files_with_coverage',  'inspect', 'seta_accuracy', 'skipped_tests', 'task_durations', 'tests_config_times', 'test_durations', 'tests_in_duration', 'try_efficiency', 'try_usage', 'try_users'",TrangNguyenBC,42683686,2018-12-10T23:00:12Z,CONTRIBUTOR,True,610,331,27,A repository of various activedata queries and recipes,Python,3ab7c219d615a5297fcc1cc9dfb6c685f8aee038,"Update ""intermittent_test_data"""
100,https://api.github.com/repos/mozilla/active-data-recipes/pulls/85,85,Separating query contexts and run contexts,"This PR continues from https://github.com/mozilla/active-data-recipes/pull/78 to solve issue #40 with these changes:
- Change context definition from list to dict
- Add test for context.py
- Update docstring",TrangNguyenBC,42683686,2018-12-05T07:16:32Z,CONTRIBUTOR,False,443,21,5,A repository of various activedata queries and recipes,Python,8668e93540291501fd7b808269e8e0661222ebf3,"Change context definition from list to dict, add test for context.py, update docstring"
101,https://api.github.com/repos/mozilla/active-data-recipes/pulls/84,84,"adjust seta accuracy query to include all test related changes, not l…",…imited to a subset,jmaher,62588,2018-11-16T18:13:55Z,CONTRIBUTOR,True,1,6,2,A repository of various activedata queries and recipes,Python,9eaeb95e2c5d7f31148d463652834da1207745b3,"adjust seta accuracy query to include all test related changes, not limited to a subset"
102,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,5833e3bcba0199441e18aa6bf0b237bf19d87f41,active_data reordered for docopt
103,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,beee791818040790a7e9cf0237635173deecf52f,"intermediate functionality

Supports both ways for argument processing"
104,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,4a07c7a3aaf90725681b0f1191d2d3e4ff2eb362,backout_rate added
105,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,2a64e27f341fef56ffe5df1f6c4e5fc8f7783fb8,backout_rate fix
106,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,7e96921d9b0c3637a9fc7db898d4109fcc9b27c1,adding docopt for further modifications
107,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,8f05b257633e1e32300797243675d1c506ca2701,Modifying docopt to allow parsing with missing arguments
108,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,96a42f5904de37c924022694836462c318e3d970,fixing flake8 violation
109,https://api.github.com/repos/mozilla/active-data-recipes/pulls/83,83,Issue40,"The idea is to force each recipe to rely only on logic to post proceed the data. 

Currently, these recipes were updated to fit the needs:
- backout_rate.py
- activedata_usage.py
- config_durations.py

and these queries:
- backout_rate.query
- activedata_usage.query
- config_durations.query
---
The update lies in rewriting recipe files to hold only logic about which queries to run and how to present output data.
For this reason, each query is now consisting of ""query"" and ""argument_parser"" fields. ""query"" contains information about the query and ""argument_parser"" is an yaml formatted string of 
[docopt](https://github.com/docopt/docopt) help message. 

> The basic idea is that a _good help message has all necessary information_ in it to make a parser. (docopt)
---
Recipe holds information about all the processing requiring things. In order to allow to treat one list of input differently with recipe argument_parser logic and query argument_parser logic modified_docopt was created. It simply overrides main docopt in last 3 lines:
from:
```
    if matched and left == []:  # better error message if left?
            return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    raise DocoptExit()
```
to
```
    if matched:
        return Dict((a.name, a.value) for a in (pattern.flat() + collected))
    DocoptExit()
```
This is done because if there are some arguments which can not be parsed (`left != []`) docopt exits. This update forces docopt to return everything that was matched since one argument list will be used to get data for both recipe and the query.

---

As well, update provides support for not updated queries and recipes:
If no ""argument_parser"" field is loaded from query on `load_query` step, program treats recipe as not updated one.

---

I just had this idea in my mind and wanted to share it :) 

I will be very glad for any discussions and critics

Thanks for always being helpful :)",MadinaB,13504614,2018-11-11T05:41:25Z,CONTRIBUTOR,False,273,84,9,A repository of various activedata queries and recipes,Python,55f62f2c6c4cbab6a451ec029779e5a2adffc1b3,added config_durations
110,https://api.github.com/repos/mozilla/active-data-recipes/pulls/82,82,Allowing optional filters,"I have been working on this trying to solve this task
given in [here](https://github.com/mozilla/active-data-recipes/pull/69)
```
we'd need to build the query dynamically (depending on whether or not a suite was passed in). This is a problem that ADR could try to solve more generally 
```
This update helps to create query with any optional filters which user can either pass or not pass. 
At first, general query should be created and saved in 'some_query_name'.query file which contains all possible filters.
Then optional filters (getting rid of which will not affect the code) should be saved in optional_arguments and passed to run_query as:
```
run_query('some_query_name', config, optional_arguments=optional_arguments, context)
```
So the code will update the query by deleting filters which rely on arguments which were not passed
",MadinaB,13504614,2018-11-10T15:36:28Z,CONTRIBUTOR,False,47,2,1,A repository of various activedata queries and recipes,Python,dc2f430406bd85e01976a16c524add69752a1db5,Allowing optional filters
111,https://api.github.com/repos/mozilla/active-data-recipes/pulls/81,81,Add landing page for each recipe,"Refer to issue #49 

### This PR includes the following:
-  Adding a recipe template.
-  Updating recipe py files such that each recipe populates its details and arguments

### What is missing:
- Styling
- Fixing the broken recipes

",nadaa,1457075,2018-11-09T10:29:09Z,CONTRIBUTOR,False,271,13,23,A repository of various activedata queries and recipes,Python,485ae40fa663e76e56069995ab5a8b13a686b1e6,Add landing page for each recipe
112,https://api.github.com/repos/mozilla/active-data-recipes/pulls/80,80,Tracking time message in verbose,"Some queries take long time to get executed. So this feature could be useful to view in logs. 

<img width=""645"" alt=""screen shot 2018-11-07 at 10 15 03 am"" src=""https://user-images.githubusercontent.com/13504614/48104257-086a4280-e276-11e8-91cd-40a24229c296.png"">



<img width=""751"" alt=""screen shot 2018-11-07 at 10 15 36 am"" src=""https://user-images.githubusercontent.com/13504614/48104272-19b34f00-e276-11e8-8998-ead3b0f937b4.png"">
<img width=""665"" alt=""screen shot 2018-11-07 at 10 15 42 am"" src=""https://user-images.githubusercontent.com/13504614/48104274-1ddf6c80-e276-11e8-8dbe-7409b39efcbb.png"">


",MadinaB,13504614,2018-11-06T17:14:58Z,CONTRIBUTOR,True,14,10,9,A repository of various activedata queries and recipes,Python,393ab8fc2edb1af647538ab63ce53e2e4ddb3206,tracking time message in verbose
113,https://api.github.com/repos/mozilla/active-data-recipes/pulls/80,80,Tracking time message in verbose,"Some queries take long time to get executed. So this feature could be useful to view in logs. 

<img width=""645"" alt=""screen shot 2018-11-07 at 10 15 03 am"" src=""https://user-images.githubusercontent.com/13504614/48104257-086a4280-e276-11e8-91cd-40a24229c296.png"">



<img width=""751"" alt=""screen shot 2018-11-07 at 10 15 36 am"" src=""https://user-images.githubusercontent.com/13504614/48104272-19b34f00-e276-11e8-8998-ead3b0f937b4.png"">
<img width=""665"" alt=""screen shot 2018-11-07 at 10 15 42 am"" src=""https://user-images.githubusercontent.com/13504614/48104274-1ddf6c80-e276-11e8-8dbe-7409b39efcbb.png"">


",MadinaB,13504614,2018-11-06T17:14:58Z,CONTRIBUTOR,True,14,10,9,A repository of various activedata queries and recipes,Python,4a361bf1bc8a071409527d2a5460c12fc602f449,"Update to the right time counting

That was my mistake, commited wrong one out of compared 2 methods in Python's time module. time.clock() is meant to return processor time, so that any time spent in time.sleep() is not counted on *nix systems, but counted on Windows. time.time() returns time in seconds since epoch at the moment of call on all systems."
114,https://api.github.com/repos/mozilla/active-data-recipes/pulls/79,79,Update to TypeError,,MadinaB,13504614,2018-11-06T16:08:49Z,CONTRIBUTOR,True,1,1,1,A repository of various activedata queries and recipes,Python,8331b411aebecb1885c68c379b8039c21975edc7,upd to TypeError
115,https://api.github.com/repos/mozilla/active-data-recipes/pulls/77,77,Additon of table test to test_queries,"Added ""--table"" as args in a third file within total_files.test. Amended the original test to include a check for this, whilst maintaining checks for every other file in ""json"" format.

@ahal I did this on a separate branch and left my other PR open so you can compare. What do you think?",nikk15,42850541,2018-11-01T19:35:09Z,CONTRIBUTOR,True,73,2,2,A repository of various activedata queries and recipes,Python,c7c8fae8312bbb2aa7023acf1eab63d2d6aad917,"Additon of table test to test_queries
Added ""--table"" as args in a third file within total_files.test.
Amended the orignal test to include a check for this, whilst
maintaining checks for every other file in ""json"" format."
116,https://api.github.com/repos/mozilla/active-data-recipes/pulls/76,76,test_formatter created,Passes all checks for now. Done after issue #23 ,MadinaB,13504614,2018-11-01T15:24:08Z,CONTRIBUTOR,True,249,10,14,A repository of various activedata queries and recipes,Python,29d0ef38e1ed7456c6cc324112a7d3704fde000a,test_formatter created
117,https://api.github.com/repos/mozilla/active-data-recipes/pulls/76,76,test_formatter created,Passes all checks for now. Done after issue #23 ,MadinaB,13504614,2018-11-01T15:24:08Z,CONTRIBUTOR,True,249,10,14,A repository of various activedata queries and recipes,Python,bede2950a24c4f4a7b493fb6546551c34eac97be,autopep8 to avoid flake8
118,https://api.github.com/repos/mozilla/active-data-recipes/pulls/76,76,test_formatter created,Passes all checks for now. Done after issue #23 ,MadinaB,13504614,2018-11-01T15:24:08Z,CONTRIBUTOR,True,249,10,14,A repository of various activedata queries and recipes,Python,e2687ba438797791b57837979a75680018718836,moved to pytest
119,https://api.github.com/repos/mozilla/active-data-recipes/pulls/76,76,test_formatter created,Passes all checks for now. Done after issue #23 ,MadinaB,13504614,2018-11-01T15:24:08Z,CONTRIBUTOR,True,249,10,14,A repository of various activedata queries and recipes,Python,4682e1e7fb4bb2178d3338f6bf77560ffe440037,correcting flake8 violations
120,https://api.github.com/repos/mozilla/active-data-recipes/pulls/75,75,Display query_test name and args,"Fixed warning from pytest. Added ""args"" to .test files, as IDS created by query_idfn() in conftest.py expected this value. Plus this also displays the names of each file with whether or not --debug is True and tested. In future, this might be used to switch between ""table"" and ""json"" testing.",nikk15,42850541,2018-10-30T18:05:24Z,CONTRIBUTOR,True,27,27,14,A repository of various activedata queries and recipes,Python,b687df28328824810bed2d63e48922262136f8ef,"Display query_test name and args
Fixed warning from pytest. Added ""args"" to .test files, as IDS created
by query_idfn() in conftest.py expected this value. Plus this also
displays the names of each file with whether or not --debug is True
and tested. In future, this might be used to switch between ""table""
and ""json"" testing."
121,https://api.github.com/repos/mozilla/active-data-recipes/pulls/74,74,Pin pytest version in tox,"Pinned a Pytest version range in tox to account for any upgrades up until, but not including, version 4. That way we can choose when to switch to 4 and, in the meantime, not be affected by discrepancies that may occur with said upgrade.",nikk15,42850541,2018-10-30T17:28:43Z,CONTRIBUTOR,True,2,2,1,A repository of various activedata queries and recipes,Python,03401b05999cb098717cb429cd83aa238c5cc534,"Pin pytest version in tox
Pinned a Pytest version in tox to account for any upgrades up until,
but not including, version 4. That way we can choose when to switch
to 4 and in the meantime not be affected by discrepancies that may
occur."
122,https://api.github.com/repos/mozilla/active-data-recipes/pulls/73,73,Solution for 'adr <recipe> --help',I am treating --help as optional arg here and not conditional..,MadinaB,13504614,2018-10-30T04:29:35Z,CONTRIBUTOR,True,30,6,1,A repository of various activedata queries and recipes,Python,b566e0c90aba4c6e4cbedf9ec6b1cc7ec80ab4bd,solution for 'adr <recipe> --help'
123,https://api.github.com/repos/mozilla/active-data-recipes/pulls/73,73,Solution for 'adr <recipe> --help',I am treating --help as optional arg here and not conditional..,MadinaB,13504614,2018-10-30T04:29:35Z,CONTRIBUTOR,True,30,6,1,A repository of various activedata queries and recipes,Python,2b9b85b8ff5b67e8b515095dbb2680a976ec5165,solution for 'adr <recipe> --help'
124,https://api.github.com/repos/mozilla/active-data-recipes/pulls/73,73,Solution for 'adr <recipe> --help',I am treating --help as optional arg here and not conditional..,MadinaB,13504614,2018-10-30T04:29:35Z,CONTRIBUTOR,True,30,6,1,A repository of various activedata queries and recipes,Python,1a699086a47bf4c050e0b2f5e7e06e5d466a6a69,autopep code format
125,https://api.github.com/repos/mozilla/active-data-recipes/pulls/73,73,Solution for 'adr <recipe> --help',I am treating --help as optional arg here and not conditional..,MadinaB,13504614,2018-10-30T04:29:35Z,CONTRIBUTOR,True,30,6,1,A repository of various activedata queries and recipes,Python,ed8e71726ae94b01d1ad71bab4b2213d749065eb,autopep code format and inspect/query fix
126,https://api.github.com/repos/mozilla/active-data-recipes/pulls/72,72,Setting software requirements,"Since after commit df5a3d, the project no longer supports python 2.7, but supports only python 3.6, it is important to set up software requirements in README.md.",MadinaB,13504614,2018-10-29T20:28:53Z,CONTRIBUTOR,True,5,0,1,A repository of various activedata queries and recipes,Python,513b1b61aec0ed3edeec612565037245cb34c823,setting software requirements
127,https://api.github.com/repos/mozilla/active-data-recipes/pulls/72,72,Setting software requirements,"Since after commit df5a3d, the project no longer supports python 2.7, but supports only python 3.6, it is important to set up software requirements in README.md.",MadinaB,13504614,2018-10-29T20:28:53Z,CONTRIBUTOR,True,5,0,1,A repository of various activedata queries and recipes,Python,40c6844f5601636f2fe36f7148f6c83dedcbfd98, change python 3.6 to Python 3.6 or higher
128,https://api.github.com/repos/mozilla/active-data-recipes/pulls/71,71,resolving comparison err,Solving issue #70,MadinaB,13504614,2018-10-29T19:48:11Z,CONTRIBUTOR,True,8,0,1,A repository of various activedata queries and recipes,Python,15a9c6641aca033042d73cdc5a42bf0b7c1574a9,resolving comparison err
129,https://api.github.com/repos/mozilla/active-data-recipes/pulls/71,71,resolving comparison err,Solving issue #70,MadinaB,13504614,2018-10-29T19:48:11Z,CONTRIBUTOR,True,8,0,1,A repository of various activedata queries and recipes,Python,b2280261168020ebb73b0b99baa28489d334b4fd, raise MissingDataError if query returns null in values
130,https://api.github.com/repos/mozilla/active-data-recipes/pulls/71,71,resolving comparison err,Solving issue #70,MadinaB,13504614,2018-10-29T19:48:11Z,CONTRIBUTOR,True,8,0,1,A repository of various activedata queries and recipes,Python,daf3aa7d16bd80486440216cc0777c1b60a5fc7f,Exception raised right after query call if needed
131,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,b69d7884190bcae7ac19c8e8fcb93aa13e60054c,example recipe
132,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,eac28f83f166930343cb8af154c502a6c3f8bf66,adding to
133,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,1ddbdb13ca466236734c7de35a6b000ca7f5cbfd,recipe to track skipped tests adjusted
134,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,f3115704d9adfd18747370f3e9c180886b7640aa,"setting branch.name, grouping by suite.fullname, adding support for selecting build.platform and suite.fullname"
135,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,7db8972c0935d2b5743d39dfdbc13be58fb47d23,"Updating recipe to track skipped tests

Setting branch.name
Grouping by suite.fullname
Adding support for selecting build.platform and suite.fullname
Fixing flake8 violations"
136,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,aab3346d60a5bcb948909b0684541024937b7e48,setting --max-line-length=100
137,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,edc389bdb14a7bed30651763684ff02ea7b00778,Optional filters
138,https://api.github.com/repos/mozilla/active-data-recipes/pulls/69,69,Recipe to track skipped tests,"Could you please review following to check whether I am moving to right direction?
This is related to issue#27",MadinaB,13504614,2018-10-29T18:57:46Z,CONTRIBUTOR,True,66,10,12,A repository of various activedata queries and recipes,Python,3c0af4e50c8512932f4d9e859c0e86538ac0d39d,sort the result by path
139,https://api.github.com/repos/mozilla/active-data-recipes/pulls/68,68,removing unused variables,They seem to be left unused after some code updates.,MadinaB,13504614,2018-10-29T17:06:40Z,CONTRIBUTOR,True,0,4,4,A repository of various activedata queries and recipes,Python,ea17529a20ef8f06b781e1669c1a48bde0e2793d,removing unused variable
140,https://api.github.com/repos/mozilla/active-data-recipes/pulls/66,66,Editted test_queries to test for table format,"The ""result"" table is in ascii format. In order to assert ""result"" == the ""expected"" table, every character that comprised the ""expected"" table was converted to its exact code point representation and compiled into a string. This is not a perfect fix as it is convoluted and will make the .test files quite large. Any feedback on how to improve this is much appreciated!",nikk15,42850541,2018-10-29T15:11:37Z,CONTRIBUTOR,False,14,84,2,A repository of various activedata queries and recipes,Python,8252c61c180c32d9dc8bee1c616c78fe6b691a49,"Editted test_queries to test for table format
The ""result"" table is in ascii format. In order to assert ""result""
== the ""expected"" table, every character that comprised the ""expected""
table was converted to its exact code point representation and compiled
into a string. This is not a perfect fix as it is convoluted and will
make the .test files quite large. Any feedback on how to improve this
is much appreciated!"
141,https://api.github.com/repos/mozilla/active-data-recipes/pulls/65,65,Issue 49: required things done,"Each recipe has own landing page, where it can be run with recipe arguments. Each recipe, as well, is being provided with a docstring for more convenient usage at the top along with its name. Everything works as expected and from main page we are able to go to pages of each recipe and have 'run' button which generates desired output. Issue #49: Solved",MadinaB,13504614,2018-10-29T15:03:23Z,CONTRIBUTOR,False,104,71,4,A repository of various activedata queries and recipes,Python,35e2f1a40aeb7c14a1aefc381ef2e6b01db770df,working on issue 49
142,https://api.github.com/repos/mozilla/active-data-recipes/pulls/65,65,Issue 49: required things done,"Each recipe has own landing page, where it can be run with recipe arguments. Each recipe, as well, is being provided with a docstring for more convenient usage at the top along with its name. Everything works as expected and from main page we are able to go to pages of each recipe and have 'run' button which generates desired output. Issue #49: Solved",MadinaB,13504614,2018-10-29T15:03:23Z,CONTRIBUTOR,False,104,71,4,A repository of various activedata queries and recipes,Python,575f4dd2e1264845b570737905e9c7cc28561735,autopep8   app.py
143,https://api.github.com/repos/mozilla/active-data-recipes/pulls/65,65,Issue 49: required things done,"Each recipe has own landing page, where it can be run with recipe arguments. Each recipe, as well, is being provided with a docstring for more convenient usage at the top along with its name. Everything works as expected and from main page we are able to go to pages of each recipe and have 'run' button which generates desired output. Issue #49: Solved",MadinaB,13504614,2018-10-29T15:03:23Z,CONTRIBUTOR,False,104,71,4,A repository of various activedata queries and recipes,Python,b063bbe5b64df83c9c3351d3c49a5206f09dc145,Merge branch 'master' into issue49
144,https://api.github.com/repos/mozilla/active-data-recipes/pulls/64,64,fixed an opening tag's name in layout.html,There was an error with  `<stript` in place of `<script` on line 10 in app/templates/layout.html.,MadinaB,13504614,2018-10-29T12:28:33Z,CONTRIBUTOR,True,9,9,1,A repository of various activedata queries and recipes,Python,d6cc9e987218d7315de82090bf0934523a958eba,fixed an opening tag's name in layout.html
145,https://api.github.com/repos/mozilla/active-data-recipes/pulls/63,63,--help display fix,Resolving bug in issue #55,MadinaB,13504614,2018-10-29T11:37:50Z,CONTRIBUTOR,False,5,0,1,A repository of various activedata queries and recipes,Python,ccefb215b97ddc3e51451f9bb7bda3564f20263f,--help display fix
146,https://api.github.com/repos/mozilla/active-data-recipes/pulls/62,62,Fix #58,,kerlynNkep,19359585,2018-10-27T05:58:24Z,CONTRIBUTOR,True,5,10,5,A repository of various activedata queries and recipes,Python,85251c4e0a2908dd7527e5f39c5a0718b0b5d496,"Fix bug in branch selection

When a user runs adr task_durations --branch mozilla-inbound the 'branch' value is still the default set instead of just ['mozilla-inbound']. This pull request provides a fix to bug by selecting the specified branch and displaying its data."
147,https://api.github.com/repos/mozilla/active-data-recipes/pulls/62,62,Fix #58,,kerlynNkep,19359585,2018-10-27T05:58:24Z,CONTRIBUTOR,True,5,10,5,A repository of various activedata queries and recipes,Python,ad8973e877780e652828f37dccfb45b83eebee2b,"Updates from upstream
Merge branch 'master' of https://github.com/mozilla/active-data-recipes"
148,https://api.github.com/repos/mozilla/active-data-recipes/pulls/62,62,Fix #58,,kerlynNkep,19359585,2018-10-27T05:58:24Z,CONTRIBUTOR,True,5,10,5,A repository of various activedata queries and recipes,Python,cea6947147a81d58ec1f80e90bf736f6d1c237e3,Edit code to stop the support of python 2
149,https://api.github.com/repos/mozilla/active-data-recipes/pulls/62,62,Fix #58,,kerlynNkep,19359585,2018-10-27T05:58:24Z,CONTRIBUTOR,True,5,10,5,A repository of various activedata queries and recipes,Python,c00c880b98bbec1a1ef395d2392cd97970c31742,removed references to six package in codes
150,https://api.github.com/repos/mozilla/active-data-recipes/pulls/62,62,Fix #58,,kerlynNkep,19359585,2018-10-27T05:58:24Z,CONTRIBUTOR,True,5,10,5,A repository of various activedata queries and recipes,Python,7499b68aa8077a94a6299bb4b92c2a4ff28e31f4,Delete settings.json
151,https://api.github.com/repos/mozilla/active-data-recipes/pulls/61,61,Added queries to test folder,"Added several more queries that are known to work to the query
test folder. More to follow.",nikk15,42850541,2018-10-26T19:28:37Z,CONTRIBUTOR,True,1112,0,12,A repository of various activedata queries and recipes,Python,760814585021bcc2ecf6cfe78aee1c0f989933c7,"Added queries to test folder
Added several more queries that are known to work to the query
test folder. However, more than half of the queries remain
untested and need to be added in once they are working."
152,https://api.github.com/repos/mozilla/active-data-recipes/pulls/61,61,Added queries to test folder,"Added several more queries that are known to work to the query
test folder. More to follow.",nikk15,42850541,2018-10-26T19:28:37Z,CONTRIBUTOR,True,1112,0,12,A repository of various activedata queries and recipes,Python,b57cfe2a9e867e9f7eba59d44db27791e5b0f1ce,"Added test data for further queries
config_durations, covered_files, meta, user_tasks added to queries
tested."
153,https://api.github.com/repos/mozilla/active-data-recipes/pulls/61,61,Added queries to test folder,"Added several more queries that are known to work to the query
test folder. More to follow.",nikk15,42850541,2018-10-26T19:28:37Z,CONTRIBUTOR,True,1112,0,12,A repository of various activedata queries and recipes,Python,4581e16399cafcfe9710c1fec83cb1b3867af4b1,Replaced emails with mock data. Fixed whitespace.
154,https://api.github.com/repos/mozilla/active-data-recipes/pulls/60,60,"Added Navbar, action dropdown and table border",I am new to Front end and Flask. This PR introduces a css file to store all the styling info as opposed to hard coding styles in the templates.,terrameijar,3416132,2018-10-26T00:35:10Z,NONE,False,101,9,3,A repository of various activedata queries and recipes,Python,a2918f0a5f3c7378988f4cc036c3e2c1139bc4ca,"Added Navbar, action dropdown and table border"
155,https://api.github.com/repos/mozilla/active-data-recipes/pulls/59,59,Committing improvements on the User Interface of the Web application.,"**In this PR, here are the changes I made:**
- Modified the app/templates/home.html file to make the display have more of a material design, with two cards, one for the list of queries and another for the query results.
- Modified the app/templates/layout.html, where I added links to the material design minified css, javascript and icons; a header with menu links to the project repository, made the menu links responsive to display a drawer in mobile and tablet views, and added a footer.
- I opted for a grey-ish theme; because it is easy to look at, for a long period of time.
- I also added a css file in the static/css directory, and imported it in the layout.html file.

**For:** [Issue](https://github.com/mozilla/active-data-recipes/issues/48)

Below are some images of the web app in mobile, tablet and desktop modes.
**Desktop**
![desktop](https://user-images.githubusercontent.com/43969035/47537082-18028800-d881-11e8-9689-253cc2acbdc7.png)

**Tablet**
landscape
![tabletlandscape](https://user-images.githubusercontent.com/43969035/47537090-2650a400-d881-11e8-992c-4b19886c5288.png)
portrait
![tabletportrait](https://user-images.githubusercontent.com/43969035/47537093-28b2fe00-d881-11e8-9e5f-e17f3fc93505.png)

**Mobile**
![mobilesimple](https://user-images.githubusercontent.com/43969035/47537097-3072a280-d881-11e8-9bc0-e801d7fcf94d.png)
with open drawer
![mobilewithdrawer](https://user-images.githubusercontent.com/43969035/47537099-323c6600-d881-11e8-9a62-f3ac4bc01b1f.png)

I will be happy to have your feedback on this.",mesumbejoan,43969035,2018-10-26T00:12:13Z,NONE,False,687,18,3,A repository of various activedata queries and recipes,Python,d5626b670d0469e2beda443f4ff87d991bcb4581,Committing improvements on the User Interface of the Web application.
156,https://api.github.com/repos/mozilla/active-data-recipes/pulls/56,56,"use https, better error printout",,klahnakoski,2334429,2018-10-22T21:02:28Z,CONTRIBUTOR,True,9,5,4,A repository of various activedata queries and recipes,Python,f1f4310ea9289c7789f0eb910bd6e6f92946cba7,"use https, better error printout"
157,https://api.github.com/repos/mozilla/active-data-recipes/pulls/54,54,Add test for adr query --debug,"Added a test for when adr query --debug is run. This has simply been added to the original query test and is measured by asserting if the debug_url returned by the format_query() function with mock data input is either None (for no --debug) or is equal to the expected debug_url (for --debug included).

Currently this is tested with a separate .test file for the same query, triggered by the 'debug' key set to either True or False. I originally experimented with just the 'saved_as' key triggering debug or no debug in the test, but that was not achievable as 'saved_as' is used in query.py to set the build_debug_url() in motion.

For future additions to the query_tests folder, will we need a debug .test for each query? Or is it sufficient to ensure it works on just the one? 

There is a minor issue which I am unsure how to rectify and welcome any advice please! When print_diff() is run for AssertionError, it looks like the result is in !!python/unicode, as opposed to its comparative expected data. 

Any feedback is much appreciated. Thanks in advance!

Cheers.",nikk15,42850541,2018-10-20T22:24:10Z,CONTRIBUTOR,True,123,85,2,A repository of various activedata queries and recipes,Python,944d1ef29a1c97511bee5f9b65cb3c0ecc134cf7,"Add test for adr query --debug

Added a test for when adr query --debug is run. This has simply
been added to the original query test and is measured by asserting
if the debug_url returned by the format_query() function with mock
data input is either None (for no --debug) or is equal to the
expected debug_url (for --debug included).

Currently, this is tested with a separate file triggered by the 'debug'
key set to either True or False. I originally experimented with just
the 'saved_as' key triggering debug or no debug in the test, but that
was not achievable as 'saved_as' is used in query.py to set the
build_debug_url() in motion."
158,https://api.github.com/repos/mozilla/active-data-recipes/pulls/54,54,Add test for adr query --debug,"Added a test for when adr query --debug is run. This has simply been added to the original query test and is measured by asserting if the debug_url returned by the format_query() function with mock data input is either None (for no --debug) or is equal to the expected debug_url (for --debug included).

Currently this is tested with a separate .test file for the same query, triggered by the 'debug' key set to either True or False. I originally experimented with just the 'saved_as' key triggering debug or no debug in the test, but that was not achievable as 'saved_as' is used in query.py to set the build_debug_url() in motion.

For future additions to the query_tests folder, will we need a debug .test for each query? Or is it sufficient to ensure it works on just the one? 

There is a minor issue which I am unsure how to rectify and welcome any advice please! When print_diff() is run for AssertionError, it looks like the result is in !!python/unicode, as opposed to its comparative expected data. 

Any feedback is much appreciated. Thanks in advance!

Cheers.",nikk15,42850541,2018-10-20T22:24:10Z,CONTRIBUTOR,True,123,85,2,A repository of various activedata queries and recipes,Python,32bf65e5e883d37b7423913d10807e52fce329e8,"Updated test for adr query --debug
Amended test to check both debug_url and result in both 'debug: True'
and 'debug: False'. Consolidated .test file to include mock and expected
data for both scenarios in one file. Removed unnecessary 'es_query' and
'timing' keys from data. Updated debug_url to 'https://'."
159,https://api.github.com/repos/mozilla/active-data-recipes/pulls/54,54,Add test for adr query --debug,"Added a test for when adr query --debug is run. This has simply been added to the original query test and is measured by asserting if the debug_url returned by the format_query() function with mock data input is either None (for no --debug) or is equal to the expected debug_url (for --debug included).

Currently this is tested with a separate .test file for the same query, triggered by the 'debug' key set to either True or False. I originally experimented with just the 'saved_as' key triggering debug or no debug in the test, but that was not achievable as 'saved_as' is used in query.py to set the build_debug_url() in motion.

For future additions to the query_tests folder, will we need a debug .test for each query? Or is it sufficient to ensure it works on just the one? 

There is a minor issue which I am unsure how to rectify and welcome any advice please! When print_diff() is run for AssertionError, it looks like the result is in !!python/unicode, as opposed to its comparative expected data. 

Any feedback is much appreciated. Thanks in advance!

Cheers.",nikk15,42850541,2018-10-20T22:24:10Z,CONTRIBUTOR,True,123,85,2,A repository of various activedata queries and recipes,Python,89fc0e1b9e45448657e9f30d464bf8fe72f84f01,Merge branch 'master' into master
160,https://api.github.com/repos/mozilla/active-data-recipes/pulls/54,54,Add test for adr query --debug,"Added a test for when adr query --debug is run. This has simply been added to the original query test and is measured by asserting if the debug_url returned by the format_query() function with mock data input is either None (for no --debug) or is equal to the expected debug_url (for --debug included).

Currently this is tested with a separate .test file for the same query, triggered by the 'debug' key set to either True or False. I originally experimented with just the 'saved_as' key triggering debug or no debug in the test, but that was not achievable as 'saved_as' is used in query.py to set the build_debug_url() in motion.

For future additions to the query_tests folder, will we need a debug .test for each query? Or is it sufficient to ensure it works on just the one? 

There is a minor issue which I am unsure how to rectify and welcome any advice please! When print_diff() is run for AssertionError, it looks like the result is in !!python/unicode, as opposed to its comparative expected data. 

Any feedback is much appreciated. Thanks in advance!

Cheers.",nikk15,42850541,2018-10-20T22:24:10Z,CONTRIBUTOR,True,123,85,2,A repository of various activedata queries and recipes,Python,652454414bbe4061a13e03c494a01d0f0f11f1f7,"Fix extra whitespace flake8 error

Add test for adr query --debug

Added a test for when adr query --debug is run. This has simply
been added to the original query test and is measured by asserting
if the debug_url returned by the format_query() function with mock
data input is either None (for no --debug) or is equal to the
expected debug_url (for --debug included).

Currently, this is tested with a separate file triggered by the 'debug'
key set to either True or False. I originally experimented with just
the 'saved_as' key triggering debug or no debug in the test, but that
was not achievable as 'saved_as' is used in query.py to set the
build_debug_url() in motion.

Updated test for adr query --debug
Amended test to check both debug_url and result in both 'debug: True'
and 'debug: False'. Consolidated .test file to include mock and expected
data for both scenarios in one file. Removed unnecessary 'es_query' and
'timing' keys from data. Updated debug_url to 'https://'."
161,https://api.github.com/repos/mozilla/active-data-recipes/pulls/54,54,Add test for adr query --debug,"Added a test for when adr query --debug is run. This has simply been added to the original query test and is measured by asserting if the debug_url returned by the format_query() function with mock data input is either None (for no --debug) or is equal to the expected debug_url (for --debug included).

Currently this is tested with a separate .test file for the same query, triggered by the 'debug' key set to either True or False. I originally experimented with just the 'saved_as' key triggering debug or no debug in the test, but that was not achievable as 'saved_as' is used in query.py to set the build_debug_url() in motion.

For future additions to the query_tests folder, will we need a debug .test for each query? Or is it sufficient to ensure it works on just the one? 

There is a minor issue which I am unsure how to rectify and welcome any advice please! When print_diff() is run for AssertionError, it looks like the result is in !!python/unicode, as opposed to its comparative expected data. 

Any feedback is much appreciated. Thanks in advance!

Cheers.",nikk15,42850541,2018-10-20T22:24:10Z,CONTRIBUTOR,True,123,85,2,A repository of various activedata queries and recipes,Python,22c581051b0a142d6480c6600f32318eab2f4a0c,Merge branch 'master' of https://github.com/nikk15/active-data-recipes
162,https://api.github.com/repos/mozilla/active-data-recipes/pulls/52,52,initial adr to understand seta success rate,"@ahal if you have any feedback, let me know- this is a WIP- I would like to have this display a table broken down by weeks instead of outputing all root cause regressions over time.",jmaher,62588,2018-10-18T22:23:11Z,CONTRIBUTOR,True,163,1,5,A repository of various activedata queries and recipes,Python,3efe7fdb0ac563956a8addb3d5170863b1444ccb,initial adr to understand seta success rate
163,https://api.github.com/repos/mozilla/active-data-recipes/pulls/51,51,Add scheduled testing,"This is to fix issue #18 
* Modified `tox.ini`, `conftest.py`
* Added `base.test` file in new directory `recipe_integration_tests`, `test_recipes_integration.py`
Needed to be improved: run all recipes multiple times with different arguments",TrangNguyenBC,42683686,2018-10-18T06:48:49Z,CONTRIBUTOR,True,51,1,2,A repository of various activedata queries and recipes,Python,ebae8841a2cb462a7b87f60da754e193f22bf46a,"Add scheduled testing - using pytest parameterize, add integ environment to tox"
164,https://api.github.com/repos/mozilla/active-data-recipes/pulls/50,50,Fix bug in branch selection,When a user runs adr task_durations --branch mozilla-inbound the 'branch' value is still the default set instead of just ['mozilla-inbound']. This pull request provides a fix to bug by selecting the specified branch and displaying its data.,kerlynNkep,19359585,2018-10-17T22:19:35Z,CONTRIBUTOR,True,1,1,1,A repository of various activedata queries and recipes,Python,85251c4e0a2908dd7527e5f39c5a0718b0b5d496,"Fix bug in branch selection

When a user runs adr task_durations --branch mozilla-inbound the 'branch' value is still the default set instead of just ['mozilla-inbound']. This pull request provides a fix to bug by selecting the specified branch and displaying its data."
165,https://api.github.com/repos/mozilla/active-data-recipes/pulls/50,50,Fix bug in branch selection,When a user runs adr task_durations --branch mozilla-inbound the 'branch' value is still the default set instead of just ['mozilla-inbound']. This pull request provides a fix to bug by selecting the specified branch and displaying its data.,kerlynNkep,19359585,2018-10-17T22:19:35Z,CONTRIBUTOR,True,1,1,1,A repository of various activedata queries and recipes,Python,3006c3de99d4858684d92c2b69aaccb2c77ebe89,Removed a print statement
166,https://api.github.com/repos/mozilla/active-data-recipes/pulls/50,50,Fix bug in branch selection,When a user runs adr task_durations --branch mozilla-inbound the 'branch' value is still the default set instead of just ['mozilla-inbound']. This pull request provides a fix to bug by selecting the specified branch and displaying its data.,kerlynNkep,19359585,2018-10-17T22:19:35Z,CONTRIBUTOR,True,1,1,1,A repository of various activedata queries and recipes,Python,6e67be6948094fd7b16f29adf59c718b1cf15aed,Fix extra whitespace flake8 error
167,https://api.github.com/repos/mozilla/active-data-recipes/pulls/47,47,Add app front-end,A front-end app for Active Data Recipes using flask #34 ,nadaa,1457075,2018-10-16T14:59:46Z,CONTRIBUTOR,True,90,1,5,A repository of various activedata queries and recipes,Python,f2ac3e426be7dd9c66e8986d5983a1772f8199a7,add app front-end
168,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,531123c51fc2292b321754a3d533dd5e2224fa0d,"Fixed JSON output formatting.
The format_query function expected to return a tuple but it looked like
it was missed. Added URL to the expected return. --format json now works
on the command line for ADR."
169,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,4cc1fca5d2a9f1fc0472d097af1f0e48ebd5252c,Added a unittest for query.py
170,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,8767cd9afc5e917efa94b00f631bddb34dff75c0,"Added a unittest for query.py
Created test_queries.py to test mocked query data in the newly created query_tests folder.
Currently there is only mocked data for total_files.test in this folder.
In the conftest.py file, added the ability to read all query_tests folder for test_queries.py."
171,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,01180bf140bc8f076b2df690c9d96c1901a7b71e,Merge branch 'master' of https://github.com/nikk15/active-data-recipes
172,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,c14e5ea843e563d8640727583a2ce1c6f1ff46cd,"Replaced args with config object
Edited test_queries.py to reflect the addition of a config object
to ADR."
173,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,b10f07a311c6b782edccbd96ed9f903de489b747,Editted typo in notes for test_queries.py
174,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,3d8b251868a03643104870dd2365b2cf5168e76a,"Added monkeypatch to test_queries.py
For the test_query() function in test_queries.py, replaced
'query_activedata' attribute from query  module with RunQuery
object that, when called, returns mocked data from the
query_tests files."
175,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,f4d0ff82ac9b240446391d21a1c5b71e1969610c,Fixed flake8 violations
176,https://api.github.com/repos/mozilla/active-data-recipes/pulls/46,46,Added a unittest for query.py,"#28  @ahal  My additions so far.

- Added test_queries.py, following a similar structure to the recipe tests.
- Edited conftest.py to also include ability to read .test files from the newly created query_tests folder.
- For now I have only been testing against the data total_files query returns, as that query is known to work. 

I haven't been able to successfully run the test yet as I struck an error. If someone could please take a look at my notes in the test_queries.py file, I would love some feedback. Am I on the right track?

Thank you!
",nikk15,42850541,2018-10-13T20:08:43Z,CONTRIBUTOR,True,226,2,3,A repository of various activedata queries and recipes,Python,c0a23d8bdef3742233686fd5a5f3d7a69aa37fa9,Fixed flake8 violations
177,https://api.github.com/repos/mozilla/active-data-recipes/pulls/44,44,Add Configuration object,"Hi @ahal,
I am sorry I did something wrong when rebasing from upstream, causing the old pull request disappeared. I followed you guide: using `__slots__` to limit number of properties, move config file to `adr` package, also edit MANIFEST.in to include these files. Also, making barebone `Configuration` with these `__slots__` properties without loading config file; it would be easier to use in testing.
Some other minor changes: Remove entry point for adr-query, re-format test.py to run tox successfully. Thank you!",TrangNguyenBC,42683686,2018-10-12T05:00:41Z,CONTRIBUTOR,True,162,103,28,A repository of various activedata queries and recipes,Python,fbe6b79c7a6247854b19c44f3130456bfcaeb62b,Add Configuration object
178,https://api.github.com/repos/mozilla/active-data-recipes/pulls/43,43,Fixed JSON output formatting.,The format_query function expected to return a tuple but it looked like it was missed. Added URL to the expected return. --format json now works on the command line for ADR.,nikk15,42850541,2018-10-10T23:17:24Z,CONTRIBUTOR,True,1,1,1,A repository of various activedata queries and recipes,Python,531123c51fc2292b321754a3d533dd5e2224fa0d,"Fixed JSON output formatting.
The format_query function expected to return a tuple but it looked like
it was missed. Added URL to the expected return. --format json now works
on the command line for ADR."
179,https://api.github.com/repos/mozilla/active-data-recipes/pulls/42,42,Raise MissingDataError in query.py,,Pokinawa,5402161,2018-10-10T21:42:12Z,NONE,False,6,6,2,A repository of various activedata queries and recipes,Python,02fb1588e4e248f51fbda3d6d384b63febceef11,Raise MissingDataError in query.py
180,https://api.github.com/repos/mozilla/active-data-recipes/pulls/42,42,Raise MissingDataError in query.py,,Pokinawa,5402161,2018-10-10T21:42:12Z,NONE,False,6,6,2,A repository of various activedata queries and recipes,Python,eec9ab7b25c0e595b9bd79c920e9e95d2c6a46b7,Addressed escaping single quotes feedback
181,https://api.github.com/repos/mozilla/active-data-recipes/pulls/42,42,Raise MissingDataError in query.py,,Pokinawa,5402161,2018-10-10T21:42:12Z,NONE,False,6,6,2,A repository of various activedata queries and recipes,Python,960cfcdea611b8c8a795c0c504a2211e8710bfe0,check for empty data key instead of message
182,https://api.github.com/repos/mozilla/active-data-recipes/pulls/42,42,Raise MissingDataError in query.py,,Pokinawa,5402161,2018-10-10T21:42:12Z,NONE,False,6,6,2,A repository of various activedata queries and recipes,Python,a58496a44152dbf0cbe8dba804bf9405419e6dd6,Merge branch 'master' into master
183,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,7d4467908049e3ba15f24be68bdbf3e11e98729c,Add test_formatter
184,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,dcab8f7a8575cb3e69c2ee54a21e44540fbdfb67,add flask app for recipes
185,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,782fb4d3398b0b89fdbdc82ff352270158398d98,Merge branch 'master' into fix-34
186,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,206488df3610bb19d3c2b6aef8d689c298e97f77,Run flake8 on all directories (not just adr)
187,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,3b643f5ff3419e3dc3799b5acdc93169e526a4a4,"Fixed JSON output formatting.
The format_query function expected to return a tuple but it looked like
it was missed. Added URL to the expected return. --format json now works
on the command line for ADR."
188,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,e63e00e792a04d3770a05ab7af806819f0b5c02d,Add test_formatter
189,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,42549ad154f9692e93ce99f7e88c7a45d2c46cd1,add flask app for recipes
190,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,8066d436725c535bef1366970349b4ca44fcfdd9,made changes on app
191,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,0fc2cba41118343d4c5c963c9b9830cf58a4bc7a,solve confilict
192,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,0614dd04e725827cad4ef6a7d20a07c40ba2e10f,delete the previous app folder
193,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,39e7972e56c77e8a6cee8ceff0c585d8245d7715,fix flak8
194,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,13fb541286721c13177e7af4a95e9c2b541ceab7,Add Configuration object
195,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,1b55bab79b30640aeb1a418fc030c1f85a9fdd31,Raise MissingDataError in query.py
196,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,544b209616d73a516de3cd6c228630fb8a896019,Add test_formatter
197,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,ad69cc38544885cd5c8508d3f48f9062f6f7d03d,add flask app for recipes
198,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,890e134f683ffc4ac94b5146e761e3803298d83e,Add test_formatter
199,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,42b2f2db582840ddda376d1c671a3d742eca4fdd,add flask app for recipes
200,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,fdb8ef6469bebc9fcb879797a83413c4798640f2,made changes on app
201,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,14fec39f0cdcfe09eff4d41797b39ca79542b8c3,fix flak8
202,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,981193e4070065666adcfa6ff1be8428febdac76,update app
203,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,e97773c2fb5f4c41f0c69093712e1108ec61a912,fix flake8 and remove print
204,https://api.github.com/repos/mozilla/active-data-recipes/pulls/38,38,Add a flask app for adr,"Issue #34 
A flask app for active data recipes to help users navigate and execute the recipes.
",nadaa,1457075,2018-10-09T16:17:08Z,CONTRIBUTOR,False,254,111,33,A repository of various activedata queries and recipes,Python,e5b934fc3fa874320253fc4bf4e4b7f41881d9c6,resolve conf after pull origin
205,https://api.github.com/repos/mozilla/active-data-recipes/pulls/37,37,Stop hardcoding mc_root_dirs.txt #33,Hi @ahal I commited the hgmo.py file in adr/util (and edited setup.py also). Please let me know if I should change something. Thank you :-),TrangNguyenBC,42683686,2018-10-05T06:16:10Z,CONTRIBUTOR,True,24,0,3,A repository of various activedata queries and recipes,Python,6d2bc0a3c734df38ec12948c28ae31c52c7c435f,Stop hardcoding mc_root_dirs.txt #33
206,https://api.github.com/repos/mozilla/active-data-recipes/pulls/36,36,Add test_formatter,"This to fix issue #23
Add a unittest for formatter.py file. 

This is a basic unittest to test the four formatters (table,json,tab,markdown). It could be better if the test data is stored in an external file.  Also adding more test cases. Tabformatter only expects the input to be a list, so I didn't include its test. for now ",nadaa,1457075,2018-10-02T21:31:48Z,CONTRIBUTOR,False,47,0,6,A repository of various activedata queries and recipes,Python,7d4467908049e3ba15f24be68bdbf3e11e98729c,Add test_formatter
207,https://api.github.com/repos/mozilla/active-data-recipes/pulls/36,36,Add test_formatter,"This to fix issue #23
Add a unittest for formatter.py file. 

This is a basic unittest to test the four formatters (table,json,tab,markdown). It could be better if the test data is stored in an external file.  Also adding more test cases. Tabformatter only expects the input to be a list, so I didn't include its test. for now ",nadaa,1457075,2018-10-02T21:31:48Z,CONTRIBUTOR,False,47,0,6,A repository of various activedata queries and recipes,Python,ea3719fd914e31db9b98cf92044b1715aed6d17c,update test_formatter
208,https://api.github.com/repos/mozilla/active-data-recipes/pulls/35,35,Add --debug to open a query in ActiveData's query tool #17,"Thank @klahnakoski for detailed information. I followed it and made a modification. And I have some concerns: 1) When I tried to run the query, the command is ""adr query"" instead of ""adr-query""; 2) I used `FAKE_CONTEXT[""debug""] = args.debug`; but not sure it is a good solution or not 3) When opening a browser, I tried to use args.url, it stores ""http://activedata.allizom.org/query"" (which is the same with the url in the guide) but it didn't work, so I tried ""http://activedata.allizom.org/tools/query.html"" instead. Thank you.",TrangNguyenBC,42683686,2018-10-02T04:39:55Z,CONTRIBUTOR,True,25,5,2,A repository of various activedata queries and recipes,Python,c20d8ac4827d09706a5434f07ad3d800b2643de0,Add --debug to open a query in ActiveData's query tool #17
209,https://api.github.com/repos/mozilla/active-data-recipes/pulls/35,35,Add --debug to open a query in ActiveData's query tool #17,"Thank @klahnakoski for detailed information. I followed it and made a modification. And I have some concerns: 1) When I tried to run the query, the command is ""adr query"" instead of ""adr-query""; 2) I used `FAKE_CONTEXT[""debug""] = args.debug`; but not sure it is a good solution or not 3) When opening a browser, I tried to use args.url, it stores ""http://activedata.allizom.org/query"" (which is the same with the url in the guide) but it didn't work, so I tried ""http://activedata.allizom.org/tools/query.html"" instead. Thank you.",TrangNguyenBC,42683686,2018-10-02T04:39:55Z,CONTRIBUTOR,True,25,5,2,A repository of various activedata queries and recipes,Python,3a6d68dca6c4a1a4ef3ae7037a7ad3068237afbc,Add --debug to open a query in ActiveData's query tool #17
210,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,370224716468ebcd6eea69b858ad69959a4ae756,"Refactored the overall handling of arguments and how recipe/query runners are called.

cli.py
- changed entry point from cli() to main().
- created the main() method to handle argument parsing and subparser creation.
- created helper method to populate parsers.
- created helper method to handle -l/--list, -v/--verbose, etc.
- created two methods, query_handler and recipe_handler.

query.py
- streamlined the query parsing process by removing unnecessary operations.
- renamed run_auery to load_and_run_query.
- created new run_query that interfaces with cli.py, and handles the top level business logic.

recipe.py
- split off the recipe handlers to new file from cli.py."
211,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,79f3b1f786c2f2a4fe15500e4eaf86111a46bf2f,Forgo to add recipe.py
212,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,5c1714bb88c03672e87e58e53d894e382b8f15d5,"adr/recipes
- changed all recipes to import RecipeParser from recipe.py instead."
213,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,2d8f62b13a7bd64f7a72a09a54f155ed4448c1a4,"Merge pull request #1 from worldomonation/refactor_cli

Refactor cli"
214,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,e4fa612536792b40880167eb0795b87a02a18780,"merged from upstream, applied refactoring correcton on top of the upstream fix"
215,https://api.github.com/repos/mozilla/active-data-recipes/pulls/29,29,Refactor ADR command line runner for recipe and query,"A moderately extensive refactor of the recipe and query runner.

Major changes:

- recipe runner is split out of cli.py.
- query runner has number of operations reduced.
- cli.py repurposed to only handle command line interaction with user.

Under the hood changes:

- most operations have been split into helper commands.
- log import logic is changed to reference logger instance by name.
- use of subparser to separate code paths.
- documentation for nearly all methods.

Additional upstream changes merged:

- url parameter argument work by @nadaa merged into this PR and adjusted to work with structural changes introduced in this patch.",worldomonation,6549265,2018-09-24T16:02:33Z,CONTRIBUTOR,True,345,190,21,A repository of various activedata queries and recipes,Python,a39d8e0da97cbe8ae8c100af2cdd50f495f63a37,Cover case where adr is invoked without any arguments.
216,https://api.github.com/repos/mozilla/active-data-recipes/pulls/26,26,Replacing traceback with error message on empty query (try_usage),"Addresses issue  #15 

I didn't think to run tox before making changes, so I'm not 100% sure the `ERROR: InvocationError for command '/active-data-recipes/.tox/flake8/bin/flake8 adr' (exited with code 1)` was introduced by my change. However, it does pass all other tests.

Changed try_usage.py and cli.py only. Could use refactor as time allows, but currently returns the following error message rather than the previous traceback:

`Error: The queried data does not exist. (ActiveData didn\'t return any data.)`",mUtterberg,35174396,2018-09-20T18:18:31Z,CONTRIBUTOR,True,15,6,6,A repository of various activedata queries and recipes,Python,4f084c9e01ece197f7cb246de397e09086cf7dca,"Update try_usage.py & cli.py, create errors.py - replaces traceback with MissingDataError exception message.

Update cli.py

Update try_usage.py

Update try_usage.py

Update try_usage.py

Update try_usage.py

Update try_usage.py

Update try_usage.py

Update cli.py

Update cli.py

Update cli.py

Addressing flake8 errors: whitespace violations and bare exception.

Added errors.py with MissingDataError class and data validation function.

Reverted try/except to match traceback on error type. Removed the validation function."
217,https://api.github.com/repos/mozilla/active-data-recipes/pulls/26,26,Replacing traceback with error message on empty query (try_usage),"Addresses issue  #15 

I didn't think to run tox before making changes, so I'm not 100% sure the `ERROR: InvocationError for command '/active-data-recipes/.tox/flake8/bin/flake8 adr' (exited with code 1)` was introduced by my change. However, it does pass all other tests.

Changed try_usage.py and cli.py only. Could use refactor as time allows, but currently returns the following error message rather than the previous traceback:

`Error: The queried data does not exist. (ActiveData didn\'t return any data.)`",mUtterberg,35174396,2018-09-20T18:18:31Z,CONTRIBUTOR,True,15,6,6,A repository of various activedata queries and recipes,Python,ef24772efc5964c4ba9b6d0c486bd4f9b7916be2,Reraise custom exception if ActiveData query returns no data.
218,https://api.github.com/repos/mozilla/active-data-recipes/pulls/26,26,Replacing traceback with error message on empty query (try_usage),"Addresses issue  #15 

I didn't think to run tox before making changes, so I'm not 100% sure the `ERROR: InvocationError for command '/active-data-recipes/.tox/flake8/bin/flake8 adr' (exited with code 1)` was introduced by my change. However, it does pass all other tests.

Changed try_usage.py and cli.py only. Could use refactor as time allows, but currently returns the following error message rather than the previous traceback:

`Error: The queried data does not exist. (ActiveData didn\'t return any data.)`",mUtterberg,35174396,2018-09-20T18:18:31Z,CONTRIBUTOR,True,15,6,6,A repository of various activedata queries and recipes,Python,be8f0d7affa5529dc9971a5a4ee484e7bc0c3657,Merge branch 'master' into master
219,https://api.github.com/repos/mozilla/active-data-recipes/pulls/26,26,Replacing traceback with error message on empty query (try_usage),"Addresses issue  #15 

I didn't think to run tox before making changes, so I'm not 100% sure the `ERROR: InvocationError for command '/active-data-recipes/.tox/flake8/bin/flake8 adr' (exited with code 1)` was introduced by my change. However, it does pass all other tests.

Changed try_usage.py and cli.py only. Could use refactor as time allows, but currently returns the following error message rather than the previous traceback:

`Error: The queried data does not exist. (ActiveData didn\'t return any data.)`",mUtterberg,35174396,2018-09-20T18:18:31Z,CONTRIBUTOR,True,15,6,6,A repository of various activedata queries and recipes,Python,5932d24a33880b112121f5e19b6f460066f2d6ae,Add try/except block in recipe.py to catch MissingDataError and remove unused imports from test files and cli.py
220,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,d89650c65da81e40c93129648da708f1996759e5,"Issue 19

- refactored adr.cli:cli to main.
- split the handler for recipes and queries into standalone methods.
- added command line support to default to recipes if no subcommand is specified."
221,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,6041d5304df94e6e0bd9005c5f711a73b6ea74de,- added docstrings
222,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,c53fe73d986eca15112e7becc0a6be7e163f3b0b,- refactored recipe out of the cli.py.
223,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,ae10f5593566a5f1fa5553ed49f048ba42743c3a,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
224,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,d870b162143b3380ff8f5393dc7d8483fa72a9d3,"- refactored query handler code in cli.py.
- refactored query handler code in query.py to be more modular and better documented."
225,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,b27119814f925d91dcb77765099dacec92e24b02,"- removed debugging statements
- conform to PEP8"
226,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,cdd8036555fb1900ae5a00771fc3b57b5b7ce2ac,Pulling upstream changes
227,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,b43424b66a372a337c80148ab3514aa4d884ee30,"Issue 19

- refactored adr.cli:cli to main.
- split the handler for recipes and queries into standalone methods.
- added command line support to default to recipes if no subcommand is specified."
228,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,eb599cda851acdb9fc2a05dfc12d3fc5dfce30d3,- added docstrings
229,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,d628a8a24c58c2a98e9074d13cbda37cb0c6541c,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
230,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,cb11adb419f877929c0c2e8257b1cc8b5bc039bc,"- refactored query handler code in cli.py.
- refactored query handler code in query.py to be more modular and better documented."
231,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,f3044891320cae847fd2c228a8f925d6589dd20b,Not using now in the fake_context
232,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,52ba4b2802927aa0233ab693d6985a042e8bd4a9,Mistakenly added test/local files.
233,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,8e872dafe2335ad01e750c477a59cb3cba01757e,Removed legacy portion of code
234,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,4b40fd6b9d65e454dfe23a583e9d7c6e809e3c98,Merge remote-tracking branch 'origin/master' into issue_19_1
235,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,46841590f3bb764cc048301049e0fa677c56a023,Flake8 changes
236,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,b982ac78bd0bdd94629032bbafbc3bdbc6d30bba,Merge branch 'worldomonation-issue_19_1'
237,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,75e204513eaffcfa3f6980dbcf5b376f5eaab89f,Merge branch 'master' into issue_19_1
238,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,fd28f67e544015c826183ec8267ceba59f7b11dd,show number of activedata requests by day
239,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,8f04868b112ecf322f1e19069d02e06dc4106e55,"add docs, use ""today"" instead of ""now"""
240,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,223e494c097d7a4af547e5207bdc3e6d79469077,Update activedata_usage docstring
241,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,f14e542ad1694b040eda6b5a056fa525b0b9aa8b,"Issue 19

- refactored adr.cli:cli to main.
- split the handler for recipes and queries into standalone methods.
- added command line support to default to recipes if no subcommand is specified."
242,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,9819a3672ac2a1764ac33c82e7b0f1d146e9c285,- added docstrings
243,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,f91fabb5c325d8590bfe7add065279a181a07aa6,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
244,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,d11d93746037f482d3616ac96020daf38cc7f45a,Mistakenly added test/local files.
245,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,61db414025f5cc2c90f45978e25bfcad4e3294e9,"- refactored query handler code in cli.py.
- refactored query handler code in query.py to be more modular and better documented."
246,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,df9dc8d1f8e492d4d032b6f3a518053714c7e15b,Flake8 changes
247,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,9f7ae87c71f408879a5c1fa933564122f73a87b8,Not using now in the fake_context
248,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,6c9417c5374c7d3b27abbbac34167393cb09302d,- added docstrings
249,https://api.github.com/repos/mozilla/active-data-recipes/pulls/25,25,"Refactor of cli, recipe and query","The previous PR became rather polluted due to my mistakes, plus it had rebase/merge issues.

I've remade the PR with a new branch, with rebasing done (hopefully) properly this time.

Changelogs still apply from the previous PR, and have been copy/pasted here:

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.
- setup: removed `adr-query` entry point
- adr.cli: removed query handler that was temporarily copied to `adr.cli:query_handler` for changeset `c53fe73`
- adr.query: refactored how the query file is found and read. Now it assumes the name exists, due to previous checks being present.
- adr.query: `run_query` (old) renamed to `load_and_run_query`; code logic remains unchanged.
- adr.query: new function `run_query` created to mirror `run_recipe`. It wraps around the top level business logic of the old `cli` method.
- adr.query: marked older methods as deprecated.
- adr.query: added docstrings.",worldomonation,6549265,2018-09-20T17:28:45Z,CONTRIBUTOR,False,332,188,20,A repository of various activedata queries and recipes,Python,827d292e0ac9250aeb1753a01386b4db10b7cbff,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
250,https://api.github.com/repos/mozilla/active-data-recipes/pulls/24,24,add URL argument ,"Update cli.py and query.py as described here #16  
Allow users to specify a URL with the recipe from the CLI  as 
```
adr <recipe> --url <url>
```",nadaa,1457075,2018-09-20T16:54:06Z,CONTRIBUTOR,True,11,6,2,A repository of various activedata queries and recipes,Python,678fc499db425d2f0848efc7fa81414893017c73,add url argument to argparse
251,https://api.github.com/repos/mozilla/active-data-recipes/pulls/24,24,add URL argument ,"Update cli.py and query.py as described here #16  
Allow users to specify a URL with the recipe from the CLI  as 
```
adr <recipe> --url <url>
```",nadaa,1457075,2018-09-20T16:54:06Z,CONTRIBUTOR,True,11,6,2,A repository of various activedata queries and recipes,Python,6ec5c131e64e389d37dd96b685c8b8b1be455c28,update to use the passed url from cli.py
252,https://api.github.com/repos/mozilla/active-data-recipes/pulls/24,24,add URL argument ,"Update cli.py and query.py as described here #16  
Allow users to specify a URL with the recipe from the CLI  as 
```
adr <recipe> --url <url>
```",nadaa,1457075,2018-09-20T16:54:06Z,CONTRIBUTOR,True,11,6,2,A repository of various activedata queries and recipes,Python,7fe6b0219059ded2cda2ea8d9e02b3fc4c37fc97,pass args.url to query.py
253,https://api.github.com/repos/mozilla/active-data-recipes/pulls/24,24,add URL argument ,"Update cli.py and query.py as described here #16  
Allow users to specify a URL with the recipe from the CLI  as 
```
adr <recipe> --url <url>
```",nadaa,1457075,2018-09-20T16:54:06Z,CONTRIBUTOR,True,11,6,2,A repository of various activedata queries and recipes,Python,11259828db1a210ac87bbd3e978b54f66612b249,add a function to update Active_URL variable
254,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,d89650c65da81e40c93129648da708f1996759e5,"Issue 19

- refactored adr.cli:cli to main.
- split the handler for recipes and queries into standalone methods.
- added command line support to default to recipes if no subcommand is specified."
255,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,6041d5304df94e6e0bd9005c5f711a73b6ea74de,- added docstrings
256,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,c53fe73d986eca15112e7becc0a6be7e163f3b0b,- refactored recipe out of the cli.py.
257,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,ae10f5593566a5f1fa5553ed49f048ba42743c3a,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
258,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,d870b162143b3380ff8f5393dc7d8483fa72a9d3,"- refactored query handler code in cli.py.
- refactored query handler code in query.py to be more modular and better documented."
259,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,b27119814f925d91dcb77765099dacec92e24b02,"- removed debugging statements
- conform to PEP8"
260,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,cdd8036555fb1900ae5a00771fc3b57b5b7ce2ac,Pulling upstream changes
261,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,b43424b66a372a337c80148ab3514aa4d884ee30,"Issue 19

- refactored adr.cli:cli to main.
- split the handler for recipes and queries into standalone methods.
- added command line support to default to recipes if no subcommand is specified."
262,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,eb599cda851acdb9fc2a05dfc12d3fc5dfce30d3,- added docstrings
263,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,d628a8a24c58c2a98e9074d13cbda37cb0c6541c,"- reordered helper functions in cli.py.
- refactored the command line list command to _list() method."
264,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,cb11adb419f877929c0c2e8257b1cc8b5bc039bc,"- refactored query handler code in cli.py.
- refactored query handler code in query.py to be more modular and better documented."
265,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,f3044891320cae847fd2c228a8f925d6589dd20b,Not using now in the fake_context
266,https://api.github.com/repos/mozilla/active-data-recipes/pulls/22,22,issue_19,"Made multiple changes, not all of them complete or as modularized as I like.

- setup: removed script entry point for adr-query.
- adr.cli: removed cli() as the entry point for recipe.
- adr.cli: copied some code from adr.query; ultimate goal is to encapsulate all query calls.
- adr.cli: created new method main() which is the new entry point for both `adr query` and `adr recipe`/
- adr.cli: switched to using subparsers to support the above.
- adr.cli: extracted common calls between `recipe` and `query` to helper functions.
- adr.query: changed log import from adr.cli to reference by name.",worldomonation,6549265,2018-09-19T20:48:28Z,CONTRIBUTOR,False,378,139,21,A repository of various activedata queries and recipes,Python,52ba4b2802927aa0233ab693d6985a042e8bd4a9,Mistakenly added test/local files.
267,https://api.github.com/repos/mozilla/active-data-recipes/pulls/21,21,show number of activedata requests by day,,klahnakoski,2334429,2018-09-12T15:32:58Z,CONTRIBUTOR,True,47,6,5,A repository of various activedata queries and recipes,Python,0c1bac9f2e0b61403ec9440843cc01529b69f534,show number of activedata requests by day
268,https://api.github.com/repos/mozilla/active-data-recipes/pulls/21,21,show number of activedata requests by day,,klahnakoski,2334429,2018-09-12T15:32:58Z,CONTRIBUTOR,True,47,6,5,A repository of various activedata queries and recipes,Python,1639ca53bdffea422578a27315e05ec4f3f0c043,Merge remote-tracking branch 'upstream/master' into ad-usage
269,https://api.github.com/repos/mozilla/active-data-recipes/pulls/21,21,show number of activedata requests by day,,klahnakoski,2334429,2018-09-12T15:32:58Z,CONTRIBUTOR,True,47,6,5,A repository of various activedata queries and recipes,Python,234d0254d3a40665454139801c62ad678d236d5c,"add docs, use ""today"" instead of ""now"""
270,https://api.github.com/repos/mozilla/active-data-recipes/pulls/21,21,show number of activedata requests by day,,klahnakoski,2334429,2018-09-12T15:32:58Z,CONTRIBUTOR,True,47,6,5,A repository of various activedata queries and recipes,Python,96f2194e2085d5ebf8790242a3f78cfe5c326eef,comment
271,https://api.github.com/repos/mozilla/active-data-recipes/pulls/21,21,show number of activedata requests by day,,klahnakoski,2334429,2018-09-12T15:32:58Z,CONTRIBUTOR,True,47,6,5,A repository of various activedata queries and recipes,Python,952585ce6d90f2c38af1ee690f05dee1addcecb7,Update activedata_usage docstring
272,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,f537465a4450e687242a32a0a0315ded8b4afb12,add editorconfig
273,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,0b192accafc912d49834e404a07e140eb39ff801,for tab-delimited output; good for cut-and-paste to spreadsheets
274,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,431305391896d17a65e128ef823c5acb87066aab,"Show chunk durations over time, sorted by most-obvious-changed first"
275,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,ae7ddcd4e180e929301215037966ee410ed0b9b3,fix name change bug
276,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,dfe121a2b5a9d5cdb918dc45f6950d5f20b89fa2,fix bug
277,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,a8ccc8581c39e9f9c21cfe8cb624e5f2eaf7420e,remove debugging
278,https://api.github.com/repos/mozilla/active-data-recipes/pulls/13,13,Chunk Durations,"Get median chunk durations for given time period.  Indicate if and when timing has changed.

Example:

    set PYTHONPATH=.
    python adr\main.py chunk_durations_over_time  --from=today-2month --to=today --format=tab

... then cut and paste output to google sheet and ...

![image](https://user-images.githubusercontent.com/2334429/34741250-fe7da712-f54f-11e7-9f2f-83100752fcea.png)
",klahnakoski,2334429,2018-01-09T20:16:08Z,CONTRIBUTOR,False,166,0,4,A repository of various activedata queries and recipes,Python,880880d60d99b724d8d3d32bf8748499df937645,use num_days
279,https://api.github.com/repos/mozilla/active-data-recipes/pulls/12,12,More formats,"**Merge editorconfig first**

So I can cut-and-paste to a spreadsheet and chart",klahnakoski,2334429,2018-01-09T20:02:07Z,CONTRIBUTOR,True,40,0,2,A repository of various activedata queries and recipes,Python,f537465a4450e687242a32a0a0315ded8b4afb12,add editorconfig
280,https://api.github.com/repos/mozilla/active-data-recipes/pulls/12,12,More formats,"**Merge editorconfig first**

So I can cut-and-paste to a spreadsheet and chart",klahnakoski,2334429,2018-01-09T20:02:07Z,CONTRIBUTOR,True,40,0,2,A repository of various activedata queries and recipes,Python,0b192accafc912d49834e404a07e140eb39ff801,for tab-delimited output; good for cut-and-paste to spreadsheets
281,https://api.github.com/repos/mozilla/active-data-recipes/pulls/11,11,add editorconfig,... to override my own editor preferences,klahnakoski,2334429,2018-01-09T15:54:05Z,CONTRIBUTOR,True,22,0,1,A repository of various activedata queries and recipes,Python,f537465a4450e687242a32a0a0315ded8b4afb12,add editorconfig
282,https://api.github.com/repos/mozilla/active-data-recipes/pulls/10,10,[Docs] - Mozilla/active-data-recipes - README.md (minor tweaks -> spe…,"…lling, accent, grammar)

[Docs] - Mozilla/active-data-recipes - README.md (minor tweaks -> spelling, accent, grammar)",ghost,10137,2017-12-21T16:29:08Z,NONE,False,5,5,1,A repository of various activedata queries and recipes,Python,eda04f4f98c57b37b4470d986a7ff922d7ac72b3,"[Docs] - Mozilla/active-data-recipes - README.md (minor tweaks -> spelling, accent, grammar)

[Docs] - Mozilla/active-data-recipes - README.md (minor tweaks -> spelling, accent, grammar)"
283,https://api.github.com/repos/mozilla/active-data-recipes/pulls/9,9,"add recipies for average time/config, intermittent tests and their ra…","…te per config, and intermittent rate for a test across all configs",jmaher,62588,2017-12-21T16:24:33Z,CONTRIBUTOR,True,205,0,7,A repository of various activedata queries and recipes,Python,94726f60f4fc9d5d2d14287563c28d5938a44c7a,"add recipies for average time/config, intermittent tests and their rate per config, and intermittent rate for a test across all configs"
284,https://api.github.com/repos/mozilla/active-data-recipes/pulls/8,8,"Add queries for config runtime, task runtime, and test case runtime",,jmaher,62588,2017-12-05T18:22:09Z,CONTRIBUTOR,True,206,2,9,A repository of various activedata queries and recipes,Python,6356c2783bfa5b9547f84dd531030fac7a13ccf6,"add support for timing measurements of configs, tasks, tests"
285,https://api.github.com/repos/mozilla/active-data-recipes/pulls/7,7,"fix raw_coverage to have complete file list, add file_counts for regu…","…lar reporting

adr file_counts:
┌──────────────┬─────────────┬───────────────┐
│ Revision     │ Total Files │ Total Covered │
├──────────────┼─────────────┼───────────────┤
│ ed94dc665071 │ 90236       │ 231245        │
│ 41a66272bd11 │ 86661       │ 231245        │
│ 277e2ae05f74 │ 98077       │ 231245        │
│ cbebb4f65eea │ 88749       │ 231241        │
│ 6409f04e33d6 │ 93420       │ 231237        │
│ 2bdf6eed0f64 │ 84760       │ 231237        │
│ 05ae89bebb64 │ 83436       │ -1            │
│ 2203d23429f6 │ 97376       │ 231227        │
│ d16b52f5d195 │ 93991       │ 231227        │
│ bda35e3d8ce4 │ 87273       │ 231211        │
└──────────────┴─────────────┴───────────────┘

in addition, the code for querying all files covered and related suites accounts for large subdirs and will iterate to subdirs if needed- still sort of sloppy, but is a lot more accurate than we had prior to this PR",jmaher,62588,2017-11-10T19:24:25Z,CONTRIBUTOR,True,169,11,7,A repository of various activedata queries and recipes,Python,c08876ec38915fa8329c8d652d65535558a1a161,"fix raw_coverage to have complete file list, add file_counts for regular reporting"
286,https://api.github.com/repos/mozilla/active-data-recipes/pulls/6,6,"support for ignoring perf suites, chunked jobs; also adding list of t…",…op level directories and support to iterate over them and create a master coverage map,jmaher,62588,2017-10-19T14:40:18Z,CONTRIBUTOR,True,146,63,2,A repository of various activedata queries and recipes,Python,15ddbb483883aa4f94404dcfaac1a300266c8f19,"support for ignoring perf suites, chunked jobs; also adding list of top level directories and support to iterate over them and create a master coverage map"
287,https://api.github.com/repos/mozilla/active-data-recipes/pulls/5,5,Update README.md,,ahal,273734,2017-10-18T21:09:21Z,MEMBER,False,2,0,1,A repository of various activedata queries and recipes,Python,b6b699d32ea83adc234b7bbaa7b06af146336907,Update README.md
288,https://api.github.com/repos/mozilla/active-data-recipes/pulls/4,4,add support for finding the minimum number of jobs needed to gain max…,…imum coverage on a given file,jmaher,62588,2017-10-18T20:58:12Z,CONTRIBUTOR,True,109,0,2,A repository of various activedata queries and recipes,Python,1807457fdc232ab05bdd304354f83d082bb50fea,add support for finding the minimum number of jobs needed to gain maximum coverage on a given file
289,https://api.github.com/repos/mozilla/active-data-recipes/pulls/3,3,use optimized query and account for all suites and sub-suites,,jmaher,62588,2017-10-16T19:05:27Z,CONTRIBUTOR,True,50,44,2,A repository of various activedata queries and recipes,Python,6496c938a0f871b0cb501a29be098ccf23345d48,use optimized query and account for all suites and sub-suites
290,https://api.github.com/repos/mozilla/active-data-recipes/pulls/2,2,support code coverage source.file count per test suite,,jmaher,62588,2017-10-11T20:47:21Z,CONTRIBUTOR,True,73,0,2,A repository of various activedata queries and recipes,Python,5648aee5de469b7a62f168356c75f7a1d94f8211,support code coverage source.file count per test suite
291,https://api.github.com/repos/mozilla/active-data-recipes/pulls/1,1,code coverage!,I hope the absolute import `from adr.formatter import all_formatters` is not a problem,klahnakoski,2334429,2017-10-06T18:22:55Z,CONTRIBUTOR,True,61,1,3,A repository of various activedata queries and recipes,Python,592ea32255cb49cade8ee56353fe083977e27c4b,code coverage!
