,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/build-relengapi/pulls/393,393,Add Mozilla Code of Conduct,"Fixes #392


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T16:48:09Z,NONE,False,15,0,1,Your Interface to Release Engineering Automation -,Python,69e8752f0043668d078c54edd15f6e1cbc0f1fe5,"Add Mozilla Code of Conduct file

Fixes #392.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/build-relengapi/pulls/389,389,migrate last tables to new names and change db session to heroku,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/389)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T22:53:49Z,CONTRIBUTOR,True,75,84,17,Your Interface to Release Engineering Automation -,Python,539ab42c66c783fac2f3023f0cb696de461e5d95,last tables rename
2,https://api.github.com/repos/mozilla/build-relengapi/pulls/389,389,migrate last tables to new names and change db session to heroku,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/389)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T22:53:49Z,CONTRIBUTOR,True,75,84,17,Your Interface to Release Engineering Automation -,Python,904d1abf7b632f179ca89d73136941c9580346b8,not being used
3,https://api.github.com/repos/mozilla/build-relengapi/pulls/389,389,migrate last tables to new names and change db session to heroku,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/389)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T22:53:49Z,CONTRIBUTOR,True,75,84,17,Your Interface to Release Engineering Automation -,Python,2398e371a1d294e0579247254ed239e98a6302e0,move back to relengapi session for all
4,https://api.github.com/repos/mozilla/build-relengapi/pulls/389,389,migrate last tables to new names and change db session to heroku,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/389)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T22:53:49Z,CONTRIBUTOR,True,75,84,17,Your Interface to Release Engineering Automation -,Python,7dc6a2890d067d9e901800a59cae23ad4ce0443e,wrong order
5,https://api.github.com/repos/mozilla/build-relengapi/pulls/389,389,migrate last tables to new names and change db session to heroku,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/389)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T22:53:49Z,CONTRIBUTOR,True,75,84,17,Your Interface to Release Engineering Automation -,Python,5b555418af3280e3e542ac6c682e69d445775135,set a smaller pool_size
6,https://api.github.com/repos/mozilla/build-relengapi/pulls/388,388,"use one session, 'heroku', for all blueprints that we already migrate…","…d to posgresql

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/388)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T21:36:51Z,CONTRIBUTOR,True,55,61,12,Your Interface to Release Engineering Automation -,Python,664f9392b984c3005eaca9714c3f49a154446154,"use one session, 'heroku', for all blueprints that we already migrated to posgresql"
7,https://api.github.com/repos/mozilla/build-relengapi/pulls/388,388,"use one session, 'heroku', for all blueprints that we already migrate…","…d to posgresql

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/388)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T21:36:51Z,CONTRIBUTOR,True,55,61,12,Your Interface to Release Engineering Automation -,Python,6f9c1b5b0777f1b7b9a8b32efea95e404bcc2d83,fix tests to also use heroku session
8,https://api.github.com/repos/mozilla/build-relengapi/pulls/388,388,"use one session, 'heroku', for all blueprints that we already migrate…","…d to posgresql

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/388)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T21:36:51Z,CONTRIBUTOR,True,55,61,12,Your Interface to Release Engineering Automation -,Python,a76ad35789f950b831c555ae2ed0e3197a054503,remaining sessions converted to heroku
9,https://api.github.com/repos/mozilla/build-relengapi/pulls/388,388,"use one session, 'heroku', for all blueprints that we already migrate…","…d to posgresql

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/388)
<!-- Reviewable:end -->
",garbas,20208,2017-05-23T21:36:51Z,CONTRIBUTOR,True,55,61,12,Your Interface to Release Engineering Automation -,Python,9a523da8905c49d6836439ba7056d1f31d10bdca,missed one
10,https://api.github.com/repos/mozilla/build-relengapi/pulls/387,387,"slaveloan: removing it, since development was abandoned","

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/387)
<!-- Reviewable:end -->
",garbas,20208,2017-05-22T12:17:22Z,CONTRIBUTOR,True,0,2697,23,Your Interface to Release Engineering Automation -,Python,cc7416ba8c4fdecbcb2a181e19a1991cf28484f4,"slaveloan: removing it, since development was abandoned"
11,https://api.github.com/repos/mozilla/build-relengapi/pulls/386,386,tooltool: tables rename and using tootool session,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/386)
<!-- Reviewable:end -->
",garbas,20208,2017-05-19T13:17:47Z,CONTRIBUTOR,True,42,41,7,Your Interface to Release Engineering Automation -,Python,1359140b7ca4465e86109b7df6452d74abdb75e2,tooltool: tables rename and using tootool session
12,https://api.github.com/repos/mozilla/build-relengapi/pulls/385,385,archiver: renaming tables and using its own connection,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/385)
<!-- Reviewable:end -->
",garbas,20208,2017-05-19T12:01:00Z,CONTRIBUTOR,True,11,9,3,Your Interface to Release Engineering Automation -,Python,532d68c68fad1c7b68b90169adfc3a52f1231b85,archiver: renaming tables and using its own connection
13,https://api.github.com/repos/mozilla/build-relengapi/pulls/385,385,archiver: renaming tables and using its own connection,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/385)
<!-- Reviewable:end -->
",garbas,20208,2017-05-19T12:01:00Z,CONTRIBUTOR,True,11,9,3,Your Interface to Release Engineering Automation -,Python,74f32bc56e28747f6d53370c619f79bafede141c,archiver: fixing tests
14,https://api.github.com/repos/mozilla/build-relengapi/pulls/384,384,mapper: renaming tables,,garbas,20208,2017-02-23T21:20:36Z,CONTRIBUTOR,True,3,3,1,Your Interface to Release Engineering Automation -,Python,56b4b08620295e201d97e9172cb401d73e14b103,mapper: renaming tables
15,https://api.github.com/repos/mozilla/build-relengapi/pulls/383,383,nix: switch to pypi2nix,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/383)
<!-- Reviewable:end -->
",garbas,20208,2017-02-22T17:42:47Z,CONTRIBUTOR,True,1657,530,12,Your Interface to Release Engineering Automation -,Python,fc83ad06fb4581e48a66e588c29767e989358ebf,nixify using pypi2nix tool
16,https://api.github.com/repos/mozilla/build-relengapi/pulls/383,383,nix: switch to pypi2nix,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/383)
<!-- Reviewable:end -->
",garbas,20208,2017-02-22T17:42:47Z,CONTRIBUTOR,True,1657,530,12,Your Interface to Release Engineering Automation -,Python,c28b4b3a3746d6252b93ce4c50116a1b56960016,bumping the version to 4.0.0
17,https://api.github.com/repos/mozilla/build-relengapi/pulls/383,383,nix: switch to pypi2nix,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/383)
<!-- Reviewable:end -->
",garbas,20208,2017-02-22T17:42:47Z,CONTRIBUTOR,True,1657,530,12,Your Interface to Release Engineering Automation -,Python,20b57eb2c937bdc0515cb8bd2ade63332721e544,nix: initially copy settings.py in nix-shell
18,https://api.github.com/repos/mozilla/build-relengapi/pulls/383,383,nix: switch to pypi2nix,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/383)
<!-- Reviewable:end -->
",garbas,20208,2017-02-22T17:42:47Z,CONTRIBUTOR,True,1657,530,12,Your Interface to Release Engineering Automation -,Python,6ad356d31b61e0fb53b7aa3555313ff7770481b3,nix: update to latest nixpkgs-unstable channel
19,https://api.github.com/repos/mozilla/build-relengapi/pulls/383,383,nix: switch to pypi2nix,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/383)
<!-- Reviewable:end -->
",garbas,20208,2017-02-22T17:42:47Z,CONTRIBUTOR,True,1657,530,12,Your Interface to Release Engineering Automation -,Python,4d3d2ef25dda5f1fdcdbba03f03fe7407a4f22e2,ignore files new nix files (fixing tests)
20,https://api.github.com/repos/mozilla/build-relengapi/pulls/382,382,treestatus: adding redirect for details page,"

<!-- Reviewable:start -->
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/382)
<!-- Reviewable:end -->
",garbas,20208,2017-02-01T10:16:51Z,CONTRIBUTOR,True,7,1,1,Your Interface to Release Engineering Automation -,Python,4859c86d6dea2a119660eaa34e932f80e7c927ad,treestatus: adding redirect for details page
21,https://api.github.com/repos/mozilla/build-relengapi/pulls/381,381,treestatus proxy,"redirect frontend to new frontend and proxy the api
only proxy public api, GET requests

DO NOT MERGE!

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/381)
<!-- Reviewable:end -->
",garbas,20208,2017-01-26T21:43:18Z,CONTRIBUTOR,True,48,2109,15,Your Interface to Release Engineering Automation -,Python,8a4f6a63f14c0ba14c1e2ae19cf14fc7cd50de49,nix: updating to more recent nixpkgs
22,https://api.github.com/repos/mozilla/build-relengapi/pulls/381,381,treestatus proxy,"redirect frontend to new frontend and proxy the api
only proxy public api, GET requests

DO NOT MERGE!

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/381)
<!-- Reviewable:end -->
",garbas,20208,2017-01-26T21:43:18Z,CONTRIBUTOR,True,48,2109,15,Your Interface to Release Engineering Automation -,Python,319511a4e72b464525dbfc0b7bbdcecf45e0320e,"treestatus: redirect frontend to new frontend and proxy the api

only proxy public api, GET requests"
23,https://api.github.com/repos/mozilla/build-relengapi/pulls/381,381,treestatus proxy,"redirect frontend to new frontend and proxy the api
only proxy public api, GET requests

DO NOT MERGE!

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/build-relengapi/381)
<!-- Reviewable:end -->
",garbas,20208,2017-01-26T21:43:18Z,CONTRIBUTOR,True,48,2109,15,Your Interface to Release Engineering Automation -,Python,8cfb3ba970a6469f8d2969a8f065025dc9ea2879,treestatus: remove documentation and point to new documentation
24,https://api.github.com/repos/mozilla/build-relengapi/pulls/380,380,Bug 1299960 - Linkify URLs when one is not a sheriff,"Totally untested since I don't want to set up an entire buildapi instance on my laptop at 1am, but I think this is what we would want if we wanted to do this. Maybe I need to reverse the order between linkifyBugs and linkifyURLs, dunno if they conflict with each other.
",KWierso,172215,2016-09-02T07:50:50Z,CONTRIBUTOR,False,15,3,2,Your Interface to Release Engineering Automation -,Python,d513cc9ad747e858172b67091229bbda452cc7e6,Bug 1299960 - Linkify URLs when one is not a sheriff
25,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,e6948a323a1c83c1f9f8463b564fef8e852a55ce,setup: moving relengapi package from root to src/relengapi folder
26,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,cc81d14b429bf208909488ad789d25cbb0b2eee8,bootstrap relengapi_tools
27,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,51f5e5ad5da77449b3f76a695c69806714fafbbb,moving src/relengapi related files into that folder
28,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,e0a3ed677f38b4e92ff09b75798edece16a85fdd,tools: gardening (fixing linting errors) and making sure tests are running
29,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,9809e26d0cce247e56156dcfd62c4195cdc00c89,tools: updated README
30,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,4d83a52b18671dc9d5e101ee1d200446098b7a3a,relengapi_tools: using neo for creating development env
31,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,5975d68268a366dee6b019392785cf82c1b1cbdf,relengapi_clobberer & relengapi_common: init
32,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,d7632820f5a874f9ce19055f0edb3a0b7fde013b,removing old relengapi code
33,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,9dad18ff790f07b8a6c02dcb3fd35af2aba8f33e,heroku: initial procfile and helper scripts
34,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,977a458e99d4c667c7a360630b23896f4d70c5ef,heroku: fix requirements.txt
35,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,9a6e8452115834ef0de31b4d667b6fc88e14ef44,heroku: adding settings.py file used in heroku
36,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,82842d53484bbecaa88ab852df38be75f1ba2e92,heroku: SQLALCHEMY_DATABASE_URI -> DATABASE_URL
37,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,1a71b29b530755fcc24e3455fb23d1a50bcfa06f,"relengapi_tools: fixing tests

- we need to split out App, Layout and Routes to app.js so we can test it"
38,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,2177d44d6e51cf4a45465c8b7785831a8d0b12fb,clobberer: adding initial example test
39,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,6a4735b5fb4735f5789fa978bad2af172d9be09e,docs: initial version of docs
40,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,7d73f25ad4fef1631e22f57f5ecb9738f5659eb0,travis: integration fixed
41,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,89f04dd6198b78908d033362d767c266946297b8,setup: adding some docs
42,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,8c235088f450905b3b93ef37b8ae6b43af48aae6,travis: no parameter for NODE_VERSION needed
43,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,457846d7d8531f470a025939b3a0f47c7eab5484,travis: we need to clone neo sooner (before make install)
44,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,c245ec1dd6718aad6ac10a12cfeec0bb5d0dee61,travis: we need to point package.json to cloned version of neo
45,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,692662b1cc43681de88508c1ddd6f1b38a2e6d3b,travis: neo needs to be installed and published
46,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,4b2306b1a6ac90134dbb0331c3a18b87af15ccd1,"tools: karma is needed to run ""npm run test"""
47,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,743c102f0e1ae865f766072a7a3b9bdd033a9585,Add Heroku generated app.json
48,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,e5173fc200f68d2dddbee4998c98eb2a0cf256d0,setup: adding newrelic and move psycopg2 driver to ./requirements.txt
49,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,0d8d0e8e9bec882e8bfa00d16edaff7e01efe09f,setup: typo
50,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,8a674a94cb2f08820ecfd3d0cee0a3e47c02e291,heroku: newrelic setup for flask+gunicorn setup
51,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,d2cad93051929bdf888cb7f01c313dc4dab30617,"travis: dont build branches starting with ""heroku-"""
52,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,86f7ba684eb3e34c07461f6b5d3d5653bc1268d5,docs: updating README file
53,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,d57156dbbe65d13541d30f9af29661772b88a520,"common: when running all apps we serve tools build folder

- create_app_list renamed to create_tools_app
- serving other apps under /__api__"
54,https://api.github.com/repos/mozilla/build-relengapi/pulls/379,379,clobberer: sync production database to staging and locally,"#23
",garbas,20208,2016-08-22T16:25:41Z,CONTRIBUTOR,False,29700,64536,444,Your Interface to Release Engineering Automation -,Python,269cc5fc51c4c2b6342327e6382c77171aff93d0,tools: deploying a bit bigger update that reuses more of new things in neo
55,https://api.github.com/repos/mozilla/build-relengapi/pulls/378,378,Correct Authorization: example HTTP syntax - fixes #377,"Several places were missing the required ':' for a valid HTTP header.
",hwine,132412,2016-07-08T19:24:14Z,CONTRIBUTOR,True,3,3,2,Your Interface to Release Engineering Automation -,Python,9553756fad3c5ac08eb5498699abd1d5a1cb361e,"Correct Authorization: example HTTP syntax

Several places were missing the required ':' for a valid HTTP header."
56,https://api.github.com/repos/mozilla/build-relengapi/pulls/376,376,Fix a few typos in tokenauth docs,,KWierso,172215,2016-07-06T01:23:51Z,CONTRIBUTOR,True,2,2,1,Your Interface to Release Engineering Automation -,Python,6493a7b823e3bf2289e51c9323f60309a2849b84,"Fix a few typos in tokenauth docs, #375"
57,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,e6948a323a1c83c1f9f8463b564fef8e852a55ce,setup: moving relengapi package from root to src/relengapi folder
58,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,cc81d14b429bf208909488ad789d25cbb0b2eee8,bootstrap relengapi_tools
59,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,51f5e5ad5da77449b3f76a695c69806714fafbbb,moving src/relengapi related files into that folder
60,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,e0a3ed677f38b4e92ff09b75798edece16a85fdd,tools: gardening (fixing linting errors) and making sure tests are running
61,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9809e26d0cce247e56156dcfd62c4195cdc00c89,tools: updated README
62,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,4d83a52b18671dc9d5e101ee1d200446098b7a3a,relengapi_tools: using neo for creating development env
63,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,5975d68268a366dee6b019392785cf82c1b1cbdf,relengapi_clobberer & relengapi_common: init
64,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,d7632820f5a874f9ce19055f0edb3a0b7fde013b,removing old relengapi code
65,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9dad18ff790f07b8a6c02dcb3fd35af2aba8f33e,heroku: initial procfile and helper scripts
66,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,977a458e99d4c667c7a360630b23896f4d70c5ef,heroku: fix requirements.txt
67,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9a6e8452115834ef0de31b4d667b6fc88e14ef44,heroku: adding settings.py file used in heroku
68,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,82842d53484bbecaa88ab852df38be75f1ba2e92,heroku: SQLALCHEMY_DATABASE_URI -> DATABASE_URL
69,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,1a71b29b530755fcc24e3455fb23d1a50bcfa06f,"relengapi_tools: fixing tests

- we need to split out App, Layout and Routes to app.js so we can test it"
70,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,2177d44d6e51cf4a45465c8b7785831a8d0b12fb,clobberer: adding initial example test
71,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,6a4735b5fb4735f5789fa978bad2af172d9be09e,docs: initial version of docs
72,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,7d73f25ad4fef1631e22f57f5ecb9738f5659eb0,travis: integration fixed
73,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,89f04dd6198b78908d033362d767c266946297b8,setup: adding some docs
74,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,8c235088f450905b3b93ef37b8ae6b43af48aae6,travis: no parameter for NODE_VERSION needed
75,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,457846d7d8531f470a025939b3a0f47c7eab5484,travis: we need to clone neo sooner (before make install)
76,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,c245ec1dd6718aad6ac10a12cfeec0bb5d0dee61,travis: we need to point package.json to cloned version of neo
77,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,692662b1cc43681de88508c1ddd6f1b38a2e6d3b,travis: neo needs to be installed and published
78,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,4b2306b1a6ac90134dbb0331c3a18b87af15ccd1,"tools: karma is needed to run ""npm run test"""
79,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,743c102f0e1ae865f766072a7a3b9bdd033a9585,Add Heroku generated app.json
80,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,e5173fc200f68d2dddbee4998c98eb2a0cf256d0,setup: adding newrelic and move psycopg2 driver to ./requirements.txt
81,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,0d8d0e8e9bec882e8bfa00d16edaff7e01efe09f,setup: typo
82,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,8a674a94cb2f08820ecfd3d0cee0a3e47c02e291,heroku: newrelic setup for flask+gunicorn setup
83,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,d2cad93051929bdf888cb7f01c313dc4dab30617,"travis: dont build branches starting with ""heroku-"""
84,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,86f7ba684eb3e34c07461f6b5d3d5653bc1268d5,docs: updating README file
85,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,d57156dbbe65d13541d30f9af29661772b88a520,"common: when running all apps we serve tools build folder

- create_app_list renamed to create_tools_app
- serving other apps under /__api__"
86,https://api.github.com/repos/mozilla/build-relengapi/pulls/374,374,Clobberer service,"# 

Initia
- [ ] document what changed in the api
- [ ] document deployment of releng
- [ ] add tests for frontend (especially async actions - redux-saga)
- [ ] 
",garbas,20208,2016-05-31T13:29:00Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,269cc5fc51c4c2b6342327e6382c77171aff93d0,tools: deploying a bit bigger update that reuses more of new things in neo
87,https://api.github.com/repos/mozilla/build-relengapi/pulls/373,373,add docs for TREESTATUS_CACHE,,djmitche,28673,2016-04-07T15:11:33Z,CONTRIBUTOR,False,12,0,1,Your Interface to Release Engineering Automation -,Python,2ba79b7561e4d6dd9442ff3857783f300f588da6,add docs for TREESTATUS_CACHE
88,https://api.github.com/repos/mozilla/build-relengapi/pulls/372,372,Ticket 371 : Changed let to var.,,ewongbb,1243862,2016-04-06T01:08:11Z,CONTRIBUTOR,False,2,2,1,Your Interface to Release Engineering Automation -,Python,e2cee5b4b313486f44f5db53b73a51b22c8f7495,Ticket 371 : Changed let to var.
89,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,e6948a323a1c83c1f9f8463b564fef8e852a55ce,setup: moving relengapi package from root to src/relengapi folder
90,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,cc81d14b429bf208909488ad789d25cbb0b2eee8,bootstrap relengapi_tools
91,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,51f5e5ad5da77449b3f76a695c69806714fafbbb,moving src/relengapi related files into that folder
92,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,e0a3ed677f38b4e92ff09b75798edece16a85fdd,tools: gardening (fixing linting errors) and making sure tests are running
93,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9809e26d0cce247e56156dcfd62c4195cdc00c89,tools: updated README
94,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,4d83a52b18671dc9d5e101ee1d200446098b7a3a,relengapi_tools: using neo for creating development env
95,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,5975d68268a366dee6b019392785cf82c1b1cbdf,relengapi_clobberer & relengapi_common: init
96,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,d7632820f5a874f9ce19055f0edb3a0b7fde013b,removing old relengapi code
97,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9dad18ff790f07b8a6c02dcb3fd35af2aba8f33e,heroku: initial procfile and helper scripts
98,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,977a458e99d4c667c7a360630b23896f4d70c5ef,heroku: fix requirements.txt
99,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,9a6e8452115834ef0de31b4d667b6fc88e14ef44,heroku: adding settings.py file used in heroku
100,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,82842d53484bbecaa88ab852df38be75f1ba2e92,heroku: SQLALCHEMY_DATABASE_URI -> DATABASE_URL
101,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,1a71b29b530755fcc24e3455fb23d1a50bcfa06f,"relengapi_tools: fixing tests

- we need to split out App, Layout and Routes to app.js so we can test it"
102,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,2177d44d6e51cf4a45465c8b7785831a8d0b12fb,clobberer: adding initial example test
103,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,6a4735b5fb4735f5789fa978bad2af172d9be09e,docs: initial version of docs
104,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,7d73f25ad4fef1631e22f57f5ecb9738f5659eb0,travis: integration fixed
105,https://api.github.com/repos/mozilla/build-relengapi/pulls/370,370,WIP: m10e initial setup work,"m10e - codename for microservice work
",garbas,20208,2016-03-31T12:03:06Z,CONTRIBUTOR,False,0,0,0,Your Interface to Release Engineering Automation -,Python,adc778fef12442dde55f31707cce46de40fe3893,Add Heroku generated app.json
106,https://api.github.com/repos/mozilla/build-relengapi/pulls/369,369,nixify relengapi,"Purpose of this PR is to introduce Nix as a build a tool to help setup development platform. This does not remove current developer workflow using `pip/virtualenv`, but only extends it.

And why would somebody consider using Nix?
## Atomic operations

This is a fancy word that makes sure you never end up with a broken environment. `pip install --upgrade` (or `npm install` or `apt-get upgrade`) is known to sometimes break your environment which causes developers to lose time on maintaining their environment rather then solving an assigned problem. 

Nix commands are atomic by its design. Only once everything was successfully downloaded and installed, Nix switches to new environment. If something fails during installation 
## Works alongside your system package manager

Usually adoption of new technology comes in ""All or nothing"" form. Meaning you need to use it all the way or not at all. This is especially true for package managers.

Nix is different. Nix won't write to `/usr` and because of this it can work alongside any other package manager. Nix installs everything inside `/nix/store` folder and in worse case, when you are unhappy with Nix, you can simple remove Nix (and every package installed by Nix) from your system by deleting `/nix` folder. Until you are ready to give it another try :smile: 
## System dependencies

`pip` is a language specific package manager and handles only packages at language specific level. Even a simple application such as `relengapi` have some system dependencies (eg. python-ldap, ...).

Nix can install all dependencies, including system one. Your project can directly depend on specific python version, nodejs for frontend work, openldap, ... you name it.
## Complete dependency tree

In a group where developers share development environment we quite often hear ""It works on my laptop!"". Reproducability of environments between systems is a hard problem and Nix excels at this.

Nix forces you to specify **ALL** of your dependencies, including system one. While this is a bit cumberstone to do, it is the **only** way to make sure others can reproduce environment on their machines. Also only one person has to do that initially and then everybody benefits.
## Cross platform / Binaries

Nix works across platforms Linux 32/64, FreeBSD, Darwin/OSX, Windows/Cygwin. This PR was only tested on Linux 64.

Nix ecosystem comes with CI server which you can setup yourself (like I did, http://hydra.garbas.si). This way you can create binaries (for custom packages) which can be also used both in production and during development. Since binaries are reused between production and development, you can catch many installation problems before deploying to production.
## Nix is easy to use

A typical developer does not need to know anything about Nix to be able to used it. Once Nix is installed one need to only know 2 commands:
- `nix-shell` to enter development environment
- `nix-build` to perform build of the project (the same command is used in CI and later in production)

When changes in Nix setup are needed, a  minimum knowledge of Nix is needed. Also Nix is a DSL sized language which can be learned in less then a day.
## Nix is not perfect

I don't want to fool you that Nix is perfect. It definitely can be improved and many improvements are in the making. 
- While there is a very good manual for every piece of code newcomer documentation (eg. Getting started chapter) is clearly missing.
- Command line utilities _feel_ a bit old. Revamp of command line UX is in making.
- While it might feel you are learning yet another tool (which is also true) you will soon realize that you will stop using many other package managers (no more pip/npm/apt-get/....).
# Give it a try
1. Install Nix using bellow command
   
   ``` sh
   % curl https://nixos.org/nix/install | sh
   ```
2. Clone `feature/nixify` branch
   
   ``` sh
   % git clone https://github.com/garbas/mozilla-relengapi
   % cd mozilla-relengapi 
   mozilla-relengapi/ % git checkout -b feature/nixify origin/feature/nixify
   ```
3. Enter development environment and run tests
   
   ``` sh
   mozilla-relengapi/ % nix-shell
   (nix-shell) mozilla-relengapi/ % relengapi run-tests
   ```
   
   press CTRL-D to exit.
4. Build relengapi script
   
   ``` sh
   mozilla-relengapi/ % nix-build
   mozilla-relengapi/ % ./result/bin/relengapi --help
   ```
   ## Ask questions in comments below
",garbas,20208,2016-03-22T14:56:41Z,CONTRIBUTOR,True,577,44,8,Your Interface to Release Engineering Automation -,Python,947ffcca2413179a31393ee9c416c49e02e3019e,"setup: splitting requirements.txt file into its extra sections, #369

- change travis job to bootstra using requirements files"
107,https://api.github.com/repos/mozilla/build-relengapi/pulls/369,369,nixify relengapi,"Purpose of this PR is to introduce Nix as a build a tool to help setup development platform. This does not remove current developer workflow using `pip/virtualenv`, but only extends it.

And why would somebody consider using Nix?
## Atomic operations

This is a fancy word that makes sure you never end up with a broken environment. `pip install --upgrade` (or `npm install` or `apt-get upgrade`) is known to sometimes break your environment which causes developers to lose time on maintaining their environment rather then solving an assigned problem. 

Nix commands are atomic by its design. Only once everything was successfully downloaded and installed, Nix switches to new environment. If something fails during installation 
## Works alongside your system package manager

Usually adoption of new technology comes in ""All or nothing"" form. Meaning you need to use it all the way or not at all. This is especially true for package managers.

Nix is different. Nix won't write to `/usr` and because of this it can work alongside any other package manager. Nix installs everything inside `/nix/store` folder and in worse case, when you are unhappy with Nix, you can simple remove Nix (and every package installed by Nix) from your system by deleting `/nix` folder. Until you are ready to give it another try :smile: 
## System dependencies

`pip` is a language specific package manager and handles only packages at language specific level. Even a simple application such as `relengapi` have some system dependencies (eg. python-ldap, ...).

Nix can install all dependencies, including system one. Your project can directly depend on specific python version, nodejs for frontend work, openldap, ... you name it.
## Complete dependency tree

In a group where developers share development environment we quite often hear ""It works on my laptop!"". Reproducability of environments between systems is a hard problem and Nix excels at this.

Nix forces you to specify **ALL** of your dependencies, including system one. While this is a bit cumberstone to do, it is the **only** way to make sure others can reproduce environment on their machines. Also only one person has to do that initially and then everybody benefits.
## Cross platform / Binaries

Nix works across platforms Linux 32/64, FreeBSD, Darwin/OSX, Windows/Cygwin. This PR was only tested on Linux 64.

Nix ecosystem comes with CI server which you can setup yourself (like I did, http://hydra.garbas.si). This way you can create binaries (for custom packages) which can be also used both in production and during development. Since binaries are reused between production and development, you can catch many installation problems before deploying to production.
## Nix is easy to use

A typical developer does not need to know anything about Nix to be able to used it. Once Nix is installed one need to only know 2 commands:
- `nix-shell` to enter development environment
- `nix-build` to perform build of the project (the same command is used in CI and later in production)

When changes in Nix setup are needed, a  minimum knowledge of Nix is needed. Also Nix is a DSL sized language which can be learned in less then a day.
## Nix is not perfect

I don't want to fool you that Nix is perfect. It definitely can be improved and many improvements are in the making. 
- While there is a very good manual for every piece of code newcomer documentation (eg. Getting started chapter) is clearly missing.
- Command line utilities _feel_ a bit old. Revamp of command line UX is in making.
- While it might feel you are learning yet another tool (which is also true) you will soon realize that you will stop using many other package managers (no more pip/npm/apt-get/....).
# Give it a try
1. Install Nix using bellow command
   
   ``` sh
   % curl https://nixos.org/nix/install | sh
   ```
2. Clone `feature/nixify` branch
   
   ``` sh
   % git clone https://github.com/garbas/mozilla-relengapi
   % cd mozilla-relengapi 
   mozilla-relengapi/ % git checkout -b feature/nixify origin/feature/nixify
   ```
3. Enter development environment and run tests
   
   ``` sh
   mozilla-relengapi/ % nix-shell
   (nix-shell) mozilla-relengapi/ % relengapi run-tests
   ```
   
   press CTRL-D to exit.
4. Build relengapi script
   
   ``` sh
   mozilla-relengapi/ % nix-build
   mozilla-relengapi/ % ./result/bin/relengapi --help
   ```
   ## Ask questions in comments below
",garbas,20208,2016-03-22T14:56:41Z,CONTRIBUTOR,True,577,44,8,Your Interface to Release Engineering Automation -,Python,223ba1158d529c0dcc302dfaddcb874827359ae6,"setup: nixify, fixes #369

- nicer messages when requirements files and default.nix are out of sync
- also check that version from default.nix matches the one defined in
  requirements file
- nix expessions look more like json this will be make it easier to
  automate things at later point via nix's `builtins.fromJSON` function"
108,https://api.github.com/repos/mozilla/build-relengapi/pulls/368,368,remove un-detected merge conflicts,"I just want to see Travis run here..
",djmitche,28673,2016-03-14T19:28:00Z,CONTRIBUTOR,True,0,6,1,Your Interface to Release Engineering Automation -,Python,7bc99371241fe38025d880b6312803872918d7f2,remove un-detected merge conflicts
109,https://api.github.com/repos/mozilla/build-relengapi/pulls/367,367,Bug 1254340: bump celery version to avoid issues with 3.1.21,,djmitche,28673,2016-03-08T15:25:10Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,478e4474023f3970b56cfe1fb29fdf2e5dafc0e9,Bug 1254340: bump celery version to avoid issues with 3.1.21
110,https://api.github.com/repos/mozilla/build-relengapi/pulls/366,366,Bug 1249414: Handle error other than BadData in processing signature,,djmitche,28673,2016-03-02T17:59:20Z,CONTRIBUTOR,True,23,0,3,Your Interface to Release Engineering Automation -,Python,6cf2b31ae9d3229f78fcaf91012838e1daf3efbd,Bug 1249414: Handle error other than BadData in processing signature
111,https://api.github.com/repos/mozilla/build-relengapi/pulls/366,366,Bug 1249414: Handle error other than BadData in processing signature,,djmitche,28673,2016-03-02T17:59:20Z,CONTRIBUTOR,True,23,0,3,Your Interface to Release Engineering Automation -,Python,b49a4e16e5a392d4c5389fb38a97015c6ba30180,upgrade itsdangerous
112,https://api.github.com/repos/mozilla/build-relengapi/pulls/366,366,Bug 1249414: Handle error other than BadData in processing signature,,djmitche,28673,2016-03-02T17:59:20Z,CONTRIBUTOR,True,23,0,3,Your Interface to Release Engineering Automation -,Python,ce1a8e6b6b1208f1a3f0e9f12e1eafc418426586,"actually test exception block, fix test comments"
113,https://api.github.com/repos/mozilla/build-relengapi/pulls/365,365,clobber: added Taskcluster purge cache simple form,,garbas,20208,2016-02-25T17:32:34Z,CONTRIBUTOR,True,530,59,13,Your Interface to Release Engineering Automation -,Python,b9f02acfc26d3bbb3feeda030e6b74bd4fc2e344,"project gardening

- adding requirements.txt with all versions pinned
- added mapper sqlalchemy database configuration to example settings_example.py
- gitingore update
- removing argparse since we depend on python 2.7"
114,https://api.github.com/repos/mozilla/build-relengapi/pulls/365,365,clobber: added Taskcluster purge cache simple form,,garbas,20208,2016-02-25T17:32:34Z,CONTRIBUTOR,True,530,59,13,Your Interface to Release Engineering Automation -,Python,f2652e0a2309807f1d5b72dee28c4b0c4f05013d,"clobberer: taskcluster purge cache form

- ``/clobberer/tc/branches`` and ``/clobberer/tc/purgecache`` api points
- tests for above api point
- configuration options to list caches which should be ignored"
115,https://api.github.com/repos/mozilla/build-relengapi/pulls/364,364,Updated command for building docs in README.md file,"Updated readme for : https://github.com/mozilla/build-relengapi/issues/363
",murarisumit,2667258,2016-02-20T07:40:33Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,097a1a5c7295643e81f9759bab7d48c32a4fe13d,Updated command for building docs in README.md file
116,https://api.github.com/repos/mozilla/build-relengapi/pulls/362,362,Bug 1248205 - Don't allow changing the motd for more than one tree at a time,"Not really tested much, but I think this should work. 

The change to treeStatusControl.html should hide the MotD elements on the main treestatus page unless only a single tree is selected selected (it won't show without first selecting a single tree), while still leaving it visible on the individual tree pages.

The change to treestatus.js should prevent mass clobbering if you select a single tree on the main page, type a MotD into the form, then continue to select additional trees before clicking ""Update"".

I was going to use an ng-if instead of ng-hide, but that seemed to break updating MotDs entirely.
",KWierso,172215,2016-02-15T03:35:44Z,CONTRIBUTOR,True,3,3,2,Your Interface to Release Engineering Automation -,Python,7de3a9e7a1ee898909273899d76b421d474d07ac,Bug 1248205 - Don't allow changing the motd for more than one tree at a time
117,https://api.github.com/repos/mozilla/build-relengapi/pulls/361,361,Bug 1245170: Allow tooltool uploads with non-user-associated tokens,"Still needs tests; see https://bugzilla.mozilla.org/show_bug.cgi?id=1245170 for the motivation.
",djmitche,28673,2016-02-02T22:20:42Z,CONTRIBUTOR,True,22,5,2,Your Interface to Release Engineering Automation -,Python,83076e1317f0f0af14e6715bc5830bfd35ccc442,"Allow uploads using authentication not corresponding to a real person

This allows uploads via permanent credentials; specifically with a
temporary token via RelengAPI-Proxy."
118,https://api.github.com/repos/mozilla/build-relengapi/pulls/360,360,Bug 1204758: use yield_per to hold memory use a little lower,,djmitche,28673,2016-01-20T01:08:04Z,CONTRIBUTOR,True,5,0,1,Your Interface to Release Engineering Automation -,Python,93d475267b5563b22ace36d4eecdedb86f3e188b,Bug 1204758: use yield_per to hold memory use a little lower
119,https://api.github.com/repos/mozilla/build-relengapi/pulls/359,359,use yield_per to hold memory use a little lower,,djmitche,28673,2016-01-20T01:07:07Z,CONTRIBUTOR,False,5,0,1,Your Interface to Release Engineering Automation -,Python,fc1eef8458c6667c224a597f264d873fe596fdff,use yield_per to hold memory use a little lower
120,https://api.github.com/repos/mozilla/build-relengapi/pulls/358,358,Bug 1204758: stream mapfiles rather than building them in memory,"@hwine do you want to have a look?
",djmitche,28673,2016-01-19T17:00:14Z,CONTRIBUTOR,True,12,16,1,Your Interface to Release Engineering Automation -,Python,9cabe8df349710a2c63b6a2d196606a98d1f67e5,Bug 1204758: stream mapfiles rather than building them in memory
121,https://api.github.com/repos/mozilla/build-relengapi/pulls/357,357,updated loan_url by pointing to https instead of http for bugzilla co…,"This fix #356 
",ciobancai,791109,2015-11-16T14:57:21Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,0cba4b91875a98477e2360981a0b4ca21fcac58a,updated loan_url by pointing to https instead of http for bugzilla comments
122,https://api.github.com/repos/mozilla/build-relengapi/pulls/355,355,Bug 1215215 - Add link to main treestatus page to tree page headers,"This adds an easier-to-click target for getting back to the main treeherder page.
",KWierso,172215,2015-10-27T23:40:59Z,CONTRIBUTOR,True,2,2,2,Your Interface to Release Engineering Automation -,Python,2c0361a104b98e451988ded34a1dfb3ea452d106,Bug 1215215 - Add link to main treestatus page to tree page headers
123,https://api.github.com/repos/mozilla/build-relengapi/pulls/354,354,Add a robots.txt,"This fixes #281 
",ciobancai,791109,2015-10-21T16:07:27Z,CONTRIBUTOR,True,14,0,3,Your Interface to Release Engineering Automation -,Python,b7074e1c3d8b358a4ae1a4adde9c8ec515e788f2,Added robots_txt function in app.py
124,https://api.github.com/repos/mozilla/build-relengapi/pulls/354,354,Add a robots.txt,"This fixes #281 
",ciobancai,791109,2015-10-21T16:07:27Z,CONTRIBUTOR,True,14,0,3,Your Interface to Release Engineering Automation -,Python,e81616b657fca991d4575668f89a15599b2a4f89,Added robots.txt file to web root
125,https://api.github.com/repos/mozilla/build-relengapi/pulls/354,354,Add a robots.txt,"This fixes #281 
",ciobancai,791109,2015-10-21T16:07:27Z,CONTRIBUTOR,True,14,0,3,Your Interface to Release Engineering Automation -,Python,74252d1fc4b9a246957fad8dabf4f1e2d9c2c48e,Add test for robots.txt
126,https://api.github.com/repos/mozilla/build-relengapi/pulls/353,353,Bug 1215544: fix HTML escaping in treestatus,,djmitche,28673,2015-10-16T15:11:25Z,CONTRIBUTOR,True,3,3,1,Your Interface to Release Engineering Automation -,Python,8d3a423d5e4e355740fb4122e67cc6120511dd91,Bug 1215544: fix HTML escaping in treestatus
127,https://api.github.com/repos/mozilla/build-relengapi/pulls/352,352,First bug  #351,,ciobancai,791109,2015-10-13T14:09:05Z,CONTRIBUTOR,True,6,11,3,Your Interface to Release Engineering Automation -,Python,7a08d4a1148daf95117ce95b8ea734c867407a9d,Updated bzrest version to 1.1
128,https://api.github.com/repos/mozilla/build-relengapi/pulls/352,352,First bug  #351,,ciobancai,791109,2015-10-13T14:09:05Z,CONTRIBUTOR,True,6,11,3,Your Interface to Release Engineering Automation -,Python,1e5f4d328aa156353bad11f5350d06fae9b0ec2b,"Updated function init_app in order to use BUGZILLA_API_KEY in stead of BUGZILLA_USER and BUGZILLA_PASS
Updated Slaveloan documentation"
129,https://api.github.com/repos/mozilla/build-relengapi/pulls/352,352,First bug  #351,,ciobancai,791109,2015-10-13T14:09:05Z,CONTRIBUTOR,True,6,11,3,Your Interface to Release Engineering Automation -,Python,67e6502749cd35d0ad16044fa769944b3a2457c3,"Updated slaveloan documentation
Updated bzrest version to use 1.1 or higher"
130,https://api.github.com/repos/mozilla/build-relengapi/pulls/350,350,Mask issue #157 by not displaying index or module links,"Stop confusing people by nature of having an empty index.
",Callek,1415602,2015-09-22T19:25:03Z,CONTRIBUTOR,True,4,0,1,Your Interface to Release Engineering Automation -,Python,637152df4765aeb062697fbea5ad8f23f8543294,Mask issue #157 by not displaying index or module links
131,https://api.github.com/repos/mozilla/build-relengapi/pulls/348,348,Replace use of flags in string.replace with a RegExp,"Per https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace
flags is deprecated and not supported in V8.
",djmitche,28673,2015-09-16T16:43:03Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,0c2d6a3af1de00cb27612d28ad05c7ead5355d35,"Replace use of flags in string.replace with a RegExp

Per https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/replace
flags is deprecated and not supported in V8."
132,https://api.github.com/repos/mozilla/build-relengapi/pulls/301,301,restapi Angular service should set Content-Type on requests,"I just had to add `headers: {'Content-Type': 'application/json'}` to a restapi request; restapi should do this for me when there is data present.
",djmitche,28673,2015-09-16T16:40:45Z,CONTRIBUTOR,True,22,26,2,Your Interface to Release Engineering Automation -,Python,6b91678b4f7306c359013880480303fcd5214f06,"Fix up restapi requests

 * use `restapi.post` in tokens.js
 * correctly find config arg
 * always include ""content-type"" header, even for PATCH"
133,https://api.github.com/repos/mozilla/build-relengapi/pulls/347,347,Production code shouldn't require nose,"```
Traceback (most recent call last):
  File ""/data/releng-stage/src/relengapi/virtualenv/bin/relengapi"", line 9, in <module>
    load_entry_point('relengapi==3.3.0', 'console_scripts', 'relengapi')()
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/pkg_resources.py"", line 356, in load_entry_point
    return get_distribution(dist).load_entry_point(group, name)
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/pkg_resources.py"", line 2439, in load_entry_point
    return ep.load()
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/pkg_resources.py"", line 2155, in load
    ['__name__'])
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/relengapi/cmd.py"", line 11, in <module>
    import relengapi.app
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/relengapi/app.py"", line 85, in <module>
    'treestatus',
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/relengapi/app.py"", line 71, in _load_bp
    relengapi_mod = __import__('relengapi.blueprints.' + n)
  File ""/data/releng-stage/src/relengapi/virtualenv/lib/python2.7/site-packages/relengapi/blueprints/base/__init__.py"", line 16, in <module>
    from nose.plugins.base import Plugin
ImportError: No module named nose.plugins.base
```

This should be solveable with a try/except block, in the meantime since nose doesn't break prod I'm installing it for our staging system.
",djmitche,28673,2015-09-15T07:10:14Z,CONTRIBUTOR,True,16,9,1,Your Interface to Release Engineering Automation -,Python,5f8b238308d0f19176610edb0e5fd6eb60f2a68f,Run without nose installed
134,https://api.github.com/repos/mozilla/build-relengapi/pulls/346,346,Release 3.3.0,"This reverts (and re-applies) #326 so we don't release with that.
",Callek,1415602,2015-09-14T20:06:26Z,CONTRIBUTOR,True,50,1,3,Your Interface to Release Engineering Automation -,Python,8c781f16cfc5d5a9a70ae2902e90c21a3df0a308,"Revert PR #326 for relengapi 3.3.0 release, so we don't show the treestatus in the root of the app until its ready for prime-time"
135,https://api.github.com/repos/mozilla/build-relengapi/pulls/346,346,Release 3.3.0,"This reverts (and re-applies) #326 so we don't release with that.
",Callek,1415602,2015-09-14T20:06:26Z,CONTRIBUTOR,True,50,1,3,Your Interface to Release Engineering Automation -,Python,b05b963f4deafccb9fae9586a728854497d9b9e6,Bump to version relengapi-3.3.0
136,https://api.github.com/repos/mozilla/build-relengapi/pulls/346,346,Release 3.3.0,"This reverts (and re-applies) #326 so we don't release with that.
",Callek,1415602,2015-09-14T20:06:26Z,CONTRIBUTOR,True,50,1,3,Your Interface to Release Engineering Automation -,Python,9e00755e48cc2b0246923f141a572852a09d57d5,Reapply PR #326 since relengapi 3.3.0 is tagged and released
137,https://api.github.com/repos/mozilla/build-relengapi/pulls/345,345,mock-1.3.0 install is buggy,"If you run against the lastest mock, it fails because funcsigs isn't installed - see https://github.com/testing-cabal/mock/issues/316.

Easiest fix is to temporarily require funcsigs ourselves.
",djmitche,28673,2015-09-13T14:28:22Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,fb93e0d350ae931b2e15e80bc9ad66a322f3cb91,Install funcsigs for mock's benefit
138,https://api.github.com/repos/mozilla/build-relengapi/pulls/344,344,docs: Some documentation missing '/mapper' prefix,"The example URLs were all correct, but the headings were not.
",hwine,132412,2015-09-12T00:43:12Z,CONTRIBUTOR,True,5,5,1,Your Interface to Release Engineering Automation -,Python,dc3982c9612f70563f50ff43d806642440ccd7bc,docs: Some documentation missing '/mapper' prefix
139,https://api.github.com/repos/mozilla/build-relengapi/pulls/343,343,Do not sort 'from foo import bar as foobar' to the top on import lines,,Callek,1415602,2015-09-11T16:27:09Z,CONTRIBUTOR,True,6,6,6,Your Interface to Release Engineering Automation -,Python,0ffe260c2e663f1e5f84c58434b9faab2e310dbb,Do not sort 'from foo import bar as foobar' to the top on import lines
140,https://api.github.com/repos/mozilla/build-relengapi/pulls/340,340,Flask-Login 0.3 has breaking changes over 0.2.11,"Discovered on Flask-Login's 0.3.0 release today, and some slaveloan tests
",Callek,1415602,2015-09-10T23:50:51Z,CONTRIBUTOR,True,26,22,7,Your Interface to Release Engineering Automation -,Python,95a423ab95e771b8acdd4bf7654df5cbea21c816,Update to Flask-Login 0.3.0 and fix our code to suit.
141,https://api.github.com/repos/mozilla/build-relengapi/pulls/304,304,Upgrade AngularJS,"The version of AngularJS we're using has a bug where it doesn't unCamelCase attribute names correctly when specified in isolate scopes.
",djmitche,28673,2015-09-10T22:16:26Z,CONTRIBUTOR,True,20366,12147,4,Your Interface to Release Engineering Automation -,Python,d0b7ece8fe7fbb1b7c11143acbd5887dbcdb1855,Upgrade AngularJS to 1.4.5
142,https://api.github.com/repos/mozilla/build-relengapi/pulls/336,336,logger.bind bleeds to other modules/scopes,"So in both badpenny code and archiver code we use logger.bind, that seems to leak the binding outside of the scope you intend, e.g.:

```
-------------------- >> begin captured logging << --------------------
relengapi.blueprints.slaveloan.bugzilla: WARNING: No bugzilla user specified. (Set BUGZILLA_USER in config to fix) (task_id='a321
e6a9-0e45-4655-bb55-707f3b9bd5b8' task_name='relengapi.blueprints.badpenny.execution._run_job' request_id='a5267d58-4e94-40ab-83f
a-eba015fa9f80' archiver_task_state='STARTED' archiver_task=u'foo' user='anonymous:')
relengapi.blueprints.slaveloan.bugzilla: WARNING: No bugzilla password specified. (Set BUGZILLA_PASS in config to fix) (task_id='
a321e6a9-0e45-4655-bb55-707f3b9bd5b8' task_name='relengapi.blueprints.badpenny.execution._run_job' request_id='a5267d58-4e94-40ab
-83fa-eba015fa9f80' archiver_task_state='STARTED' archiver_task=u'foo' user='anonymous:')
relengapi.lib.testing.context: INFO: request: POST /slaveloan/loans/ (task_id='a321e6a9-0e45-4655-bb55-707f3b9bd5b8' task_name='r
elengapi.blueprints.badpenny.execution._run_job' request_id='a5267d58-4e94-40ab-83fa-eba015fa9f80' archiver_task_state='STARTED'
archiver_task=u'foo' user='anonymous:')
relengapi.lib.testing.context: INFO: response: 400 BAD REQUEST - You can't request loans on behalf of others. (task_id='a321e6a9-
0e45-4655-bb55-707f3b9bd5b8' task_name='relengapi.blueprints.badpenny.execution._run_job' request_id='83c8eef7-d805-4cd2-8609-d84
446ea6afe' archiver_task_state='STARTED' archiver_task=u'foo' user='anonymous:')
--------------------- >> end captured logging << ---------------------
```

from just a slaveloan fail (intentional fail in this case)

@djmitche @lundjordan either of you feel confident tackling this?
",djmitche,28673,2015-09-10T21:17:51Z,CONTRIBUTOR,True,16,1,1,Your Interface to Release Engineering Automation -,Python,bab795306cbba98a4f64e478af3c19f814b962cb,reset structlog context after each test
143,https://api.github.com/repos/mozilla/build-relengapi/pulls/341,341,Lock Flask-Login version to work around issue #340,"This works around issue#340 to get new PR's passing again
",Callek,1415602,2015-09-10T20:18:27Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,74381528bc80a9cf8a63daacf10d35bc461b824f,Lock Flask-Login version to work around issue #340
144,https://api.github.com/repos/mozilla/build-relengapi/pulls/341,341,Lock Flask-Login version to work around issue #340,"This works around issue#340 to get new PR's passing again
",Callek,1415602,2015-09-10T20:18:27Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,1c70785a3834821b4f7b166d7f7993798809922d,"Whops, typo"
145,https://api.github.com/repos/mozilla/build-relengapi/pulls/339,339,Only isort relengapi/,"@Callek - the `-rc .` was picking up my virtualenv, and that has lots of unsorted files in it :)
",djmitche,28673,2015-09-10T19:35:56Z,CONTRIBUTOR,True,3,3,1,Your Interface to Release Engineering Automation -,Python,e65bfb6b06633e92cce36e26e7a8c3eeb7f49425,Only isort relengapi/
146,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,b3c4c43b9ea5ddec46691bf943e0385c202a5542,Create isort.cfg
147,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,70daf8b958c2d9f97cf1eae233da101117255c12,Move isort.cfg to .isort.cfg
148,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,d0643a95ddd136205f4a750d9853c3c9121cec35,Bulk sort by using isort -vb **/*.py
149,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,223ff728b5b652db5073e14191653643c5033b03,Add absolute import to every file
150,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,445fe02b419517752bf897e273caada23e7fc022,Fixes for absolute-import can't find
151,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,12d010402a476ae4ee938be92e5e1932007b1153,"Add isort to setup.py, use it in validate.sh and remove fiximports"
152,https://api.github.com/repos/mozilla/build-relengapi/pulls/302,302,Suggest and require absolute imports,"We use absolute imports just about everywhere.  They're easier to read, as you're not left searching through a list of directories for the relevant file.  We should include that in the patch requirements doc and (not sure how) enforce that in validate.sh.
",Callek,1415602,2015-09-09T19:10:06Z,CONTRIBUTOR,True,518,399,133,Your Interface to Release Engineering Automation -,Python,c661f164a153b92cc920ecaf712dd2af10818db3,Add documentation for isort
153,https://api.github.com/repos/mozilla/build-relengapi/pulls/338,338,Bugfix - AutoType should allow newlines for type comments,"I noticed that docs were getting truncated, e.g.

https://api.pub.build.mozilla.org/docs/usage/tokenauth/#types

> **typ** (_Enum(prm, tmp, usr)_) -- token type (short string). This defaults to `prm` for backward

This patch makes that:

> **typ** (_Enum(prm, tmp, usr)_) -- token type (short string). This defaults to `prm` for backward compatibility, but should always be specified.

There are many other places in the code this is an issue
",Callek,1415602,2015-09-09T03:25:11Z,CONTRIBUTOR,True,5,1,1,Your Interface to Release Engineering Automation -,Python,38ea995c729f238a5f1a4f551a76c4a833fe761d,Bugfix - AutoType should allow newlines for type comments
154,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,4cea06fb38bb02930352e80c998aed44f5e71968,Begin with s\!loans/all\!loans/?all=1\! - and some test structure
155,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,f4620607ae2f83f361c54f0670bbebbfac8c0d0b,More better tests
156,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,441ed6538c98a8d1e595a97dbd26324142c31205,Need to import json
157,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,a9d9e914e0a217785dd7d4680bc6a51ae1a461e8,s/rv/resp/
158,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,726f392baa7c18c071f675ad93c361d7aed2661a,Clear pyflakes properly
159,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,4f2e2f13c02e708ef34dbd489afdf3d0997ca0e5,Test endpoint /loans/<int>
160,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,7a885d864a9a576cfe74d414942fc062151c074e,1-indexed not 0-indexed
161,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,9488d342bec4dbd9873b45c472f38f9c289d08bf,Test marking a loan as complete
162,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,527d42152ca142592d4ac13822804ca5e7751496,Make sure we use the database for @test_context
163,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,b0f0d3c668ed7affb6fb05ff3dc336768309cd12,"POST to /loans to create a new loan, instead of /loans/request"
164,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,2957fc5cd26fd504cf61742d621e282f411391f3,don't 301
165,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,3b82d0a2bd80fc8fe8f71f2c0ee7a1539f5eb7b7,BadRequest is 400 not 403 ;C:\Sources\mozilla-build\msys
166,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,5ebba07289f97dd169fe9d121a128b0d4776abbe,add another test context for a logged in user with no perms
167,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,8dfb8166b6a3ce605f8739a107e0a5c2be574fe8,Add test for unpermed e-mail
168,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,2e3ed5c2ee556adc2c13cefe35d137338838abfa,fix pep8
169,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,64ba6fe3ffeebf9645dc93c924926b41141a9569,Add test for an actual loan submission
170,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,8d553efa73e011cdaf02cbc9a1a8d4b7b66ab2a8,Add 5 more tests and allow non-admins to see their own Loans (when providing an ID)
171,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,586108102b0bd77f1adbfa7061ac5a16a2abfc15,Add 3 more tests and fix formatting
172,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,a52cefef4a364d660957d520b525860588ae4be2,Add support for specific admin loans via the main rest endpoint for loans. Also adds 7 more tests
173,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,66fe071f691a002a1c5b0d9e5ab66c931f3a35c1,Fully obsolete 'loans/new' which was the admin-only endpoint
174,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,1b4b0f6bc8a7c3df7f185324dc6e8a9d42154c78,"Remove metadata file for slaveloan, its now unused and only contributes to reduced coverage"
175,https://api.github.com/repos/mozilla/build-relengapi/pulls/273,273,Consider using REST path semantics better,"_From @Callek on October 23, 2014 23:31_

From Issue #4:

> - Regarding REST endpoints, I agree - we should try to use verbs where possible, and also to keep semantic meaning with the path. So I'd prefer GET /loans?inactive=1 to GET /loans/all, and creating a loan (whether for yourself or someone else) should be via POST /loans.

_Copied from original issue: mozilla/build-relengapi-slaveloan#6_
",Callek,1415602,2015-09-09T03:04:37Z,CONTRIBUTOR,True,583,114,6,Your Interface to Release Engineering Automation -,Python,9e02d053e3ca3dcb4b4682086d6bbcd1de0f3a7b,Doc improvements
176,https://api.github.com/repos/mozilla/build-relengapi/pulls/335,335,Set LOGIN_DISABLED explicitly to False in the test context,"This is to solve https://github.com/maxcountryman/flask-login/commit/2fc6a7e06b560233eadb44f8eba74e2a1bce88be on our local end, and to make sure that tests which care to verify that login is required will be able to pass accurately.
",Callek,1415602,2015-09-03T23:22:12Z,CONTRIBUTOR,True,16,6,4,Your Interface to Release Engineering Automation -,Python,bccaed413f3ef0267eb1352c4fca56855d76b0e8,Allow @login_required to work during tests
177,https://api.github.com/repos/mozilla/build-relengapi/pulls/335,335,Set LOGIN_DISABLED explicitly to False in the test context,"This is to solve https://github.com/maxcountryman/flask-login/commit/2fc6a7e06b560233eadb44f8eba74e2a1bce88be on our local end, and to make sure that tests which care to verify that login is required will be able to pass accurately.
",Callek,1415602,2015-09-03T23:22:12Z,CONTRIBUTOR,True,16,6,4,Your Interface to Release Engineering Automation -,Python,35204bf9d8bc37de7e1da3706506cd854611cc29,Don't disable login_view on tests by default
178,https://api.github.com/repos/mozilla/build-relengapi/pulls/335,335,Set LOGIN_DISABLED explicitly to False in the test context,"This is to solve https://github.com/maxcountryman/flask-login/commit/2fc6a7e06b560233eadb44f8eba74e2a1bce88be on our local end, and to make sure that tests which care to verify that login is required will be able to pass accurately.
",Callek,1415602,2015-09-03T23:22:12Z,CONTRIBUTOR,True,16,6,4,Your Interface to Release Engineering Automation -,Python,c1aa7c0948a3cc30d5bd2b9ebfe6b68c06d8be60,Add docs
179,https://api.github.com/repos/mozilla/build-relengapi/pulls/334,334,Use UTCDateTime for treestatus,"..and add some tests so nobody makes the same mistake again!
",djmitche,28673,2015-09-03T15:24:00Z,CONTRIBUTOR,True,34,15,3,Your Interface to Release Engineering Automation -,Python,c3c16523fa80951f90c2d58ce80754061c8e11af,"Use UTCDateTime instead of DateTime

This doesn't change the underlying column type, so no migration is
necessary.  It does avoid issues with formatting times."
180,https://api.github.com/repos/mozilla/build-relengapi/pulls/334,334,Use UTCDateTime for treestatus,"..and add some tests so nobody makes the same mistake again!
",djmitche,28673,2015-09-03T15:24:00Z,CONTRIBUTOR,True,34,15,3,Your Interface to Release Engineering Automation -,Python,a1e5de206c6e3b402f37f9e66fb6213b6575b079,test for uses of the DateTime column type
181,https://api.github.com/repos/mozilla/build-relengapi/pulls/332,332,"Bug 1192021: log directly to mozdef, rather than via syslog","This switches things around substantially: non-mozdef output is now
not JSON encoded, so it will be easier to read, and only messages tagged
with `mozdef=True` will be sent to mozdef.  This is currently limited to
tooltool and tokenauth.
",djmitche,28673,2015-09-02T21:13:38Z,CONTRIBUTOR,True,74,76,7,Your Interface to Release Engineering Automation -,Python,751951fa015ecfe1147dbacf2e038288903a27f3,"Bug 1192021: log directly to mozdef, rather than via syslog

This switches things around substantially: non-mozdef output is now
not JSON encoded, so it will be easier to read, and only messages tagged
with `mozdef=True` will be sent to mozdef.  This is currently limited to
tooltool and tokenauth."
182,https://api.github.com/repos/mozilla/build-relengapi/pulls/332,332,"Bug 1192021: log directly to mozdef, rather than via syslog","This switches things around substantially: non-mozdef output is now
not JSON encoded, so it will be easier to read, and only messages tagged
with `mozdef=True` will be sent to mozdef.  This is currently limited to
tooltool and tokenauth.
",djmitche,28673,2015-09-02T21:13:38Z,CONTRIBUTOR,True,74,76,7,Your Interface to Release Engineering Automation -,Python,d66446fca343001be62499466fcba1e563732e96,add more testing
183,https://api.github.com/repos/mozilla/build-relengapi/pulls/323,323,Use real HTTP verbs in treestatus,"For example, `REVERT` is not a standard verb.
",Callek,1415602,2015-09-02T18:03:59Z,CONTRIBUTOR,True,42,43,3,Your Interface to Release Engineering Automation -,Python,3aa85acfb810e8d27fa4c68534769e3395e56103,Use DELETE not REVERT verb
184,https://api.github.com/repos/mozilla/build-relengapi/pulls/323,323,Use real HTTP verbs in treestatus,"For example, `REVERT` is not a standard verb.
",Callek,1415602,2015-09-02T18:03:59Z,CONTRIBUTOR,True,42,43,3,Your Interface to Release Engineering Automation -,Python,05764f7a09cfc2806feb995f45241eaa38a4f39e,"Set apimethod params right to support revert, and fix some pep8"
185,https://api.github.com/repos/mozilla/build-relengapi/pulls/323,323,Use real HTTP verbs in treestatus,"For example, `REVERT` is not a standard verb.
",Callek,1415602,2015-09-02T18:03:59Z,CONTRIBUTOR,True,42,43,3,Your Interface to Release Engineering Automation -,Python,e4d552380ba50c07d475233da49a8290773750cc,Err BadRequest is http 400 not 503
186,https://api.github.com/repos/mozilla/build-relengapi/pulls/323,323,Use real HTTP verbs in treestatus,"For example, `REVERT` is not a standard verb.
",Callek,1415602,2015-09-02T18:03:59Z,CONTRIBUTOR,True,42,43,3,Your Interface to Release Engineering Automation -,Python,eb71a557a6f397e505e58d353e36c7e12636ec11,...wsme forces int on request args too... No need to test 'january'
187,https://api.github.com/repos/mozilla/build-relengapi/pulls/323,323,Use real HTTP verbs in treestatus,"For example, `REVERT` is not a standard verb.
",Callek,1415602,2015-09-02T18:03:59Z,CONTRIBUTOR,True,42,43,3,Your Interface to Release Engineering Automation -,Python,319c4383816cb714313d775ff33d3a827e18bb0f,Use ?revert=1 in front end
188,https://api.github.com/repos/mozilla/build-relengapi/pulls/331,331,Use a null StorageBackend to avoid SQLite errors,"This avoids

```
[Tue Sep 01 21:47:02 2015] [error] 2015-09-01 21:47:02,510 [sqlalchemy.pool.NullPool] Exception during reset or similar
[Tue Sep 01 21:47:02 2015] [error] Traceback (most recent call last):
[Tue Sep 01 21:47:02 2015] [error]   File ""/data/www/relengapi/virtualenv/lib/python2.7/site-packages/sqlalchemy/pool.py"", line 631, in _finalize_fairy
[Tue Sep 01 21:47:02 2015] [error]     fairy._reset(pool)
[Tue Sep 01 21:47:02 2015] [error]   File ""/data/www/relengapi/virtualenv/lib/python2.7/site-packages/sqlalchemy/pool.py"", line 765, in _reset
[Tue Sep 01 21:47:02 2015] [error]     pool._dialect.do_rollback(self)
[Tue Sep 01 21:47:02 2015] [error]   File ""/data/www/relengapi/virtualenv/lib/python2.7/site-packages/sqlalchemy/engine/default.py"", line 412, in do_rollback
[Tue Sep 01 21:47:02 2015] [error]     dbapi_connection.rollback()
[Tue Sep 01 21:47:02 2015] [error]   File ""/data/www/relengapi/virtualenv/lib/python2.7/site-packages/newrelic-2.46.0.37/newrelic/hooks/database_dbapi2.py"", line 76, in rollback
[Tue Sep 01 21:47:02 2015] [error]     return self.__wrapped__.rollback()
[Tue Sep 01 21:47:02 2015] [error] ProgrammingError: SQLite objects created in a thread can only be used in that same thread.The object was created in thread id 140357840086784 and this is thread id 140357585073920
```

by just not using sqlite at all
",djmitche,28673,2015-09-02T14:52:43Z,CONTRIBUTOR,True,20,0,1,Your Interface to Release Engineering Automation -,Python,8afd30a11a2022ca88b9df029014225881e9d09f,Use a null StorageBackend to avoid SQLite errors
189,https://api.github.com/repos/mozilla/build-relengapi/pulls/326,326,Add a root page widget for treestatus,,djmitche,28673,2015-09-01T18:20:25Z,CONTRIBUTOR,True,15,0,2,Your Interface to Release Engineering Automation -,Python,4b8959b8ebf5e9deee7a88a793dd69d1c5c96c5a,add treestatus root widget
190,https://api.github.com/repos/mozilla/build-relengapi/pulls/330,330,Set and verify MySQL connection charset,"This will at least catch the case where the client charset is `latin1`.

(the PR will reduce coverage since we don't test against MySQL in Travis)
",djmitche,28673,2015-09-01T13:59:41Z,CONTRIBUTOR,True,13,0,1,Your Interface to Release Engineering Automation -,Python,6f541a5969296b2d79998989c2d98d6caef7e969,Verify MySQL connection charset
191,https://api.github.com/repos/mozilla/build-relengapi/pulls/330,330,Set and verify MySQL connection charset,"This will at least catch the case where the client charset is `latin1`.

(the PR will reduce coverage since we don't test against MySQL in Travis)
",djmitche,28673,2015-09-01T13:59:41Z,CONTRIBUTOR,True,13,0,1,Your Interface to Release Engineering Automation -,Python,cdb4a3bceb56abd625d9da555b0c4948bcdb569a,actually set the client charset
192,https://api.github.com/repos/mozilla/build-relengapi/pulls/329,329,test_sqs_listen fails with moto==0.4.11,"..but passes with moto-0.4.1.
",djmitche,28673,2015-08-31T15:36:56Z,CONTRIBUTOR,True,6,2,2,Your Interface to Release Engineering Automation -,Python,600e5b9743334a98165c549c45d16b15848fd60b,Work around a bug in moto-0.4.11
193,https://api.github.com/repos/mozilla/build-relengapi/pulls/328,328,Make the tree log time a little easier to read,"Not sure why I didn't notice this before, but the table cell was running
into its neighbors, making it difficult to read.  This adds a little
more breathing room, and moves the timezone (UTC) up to the header so
it's not repeated on every line.
",djmitche,28673,2015-08-28T20:11:00Z,CONTRIBUTOR,True,8,2,2,Your Interface to Release Engineering Automation -,Python,59a7f5b46dfd66d8304a16409e06af0905d6017e,"Make the tree log time a little easier to read

Not sure why I didn't notice this before, but the table cell was running
into its neighbors, making it difficult to read.  This adds a little
more breathing room, and moves the timezone (UTC) up to the header so
it's not repeated on every line."
194,https://api.github.com/repos/mozilla/build-relengapi/pulls/327,327,Add tree status colors,"These were likely lost accidentally while deleting a slew of unused CSS
rules.
",djmitche,28673,2015-08-28T20:03:50Z,CONTRIBUTOR,True,13,0,1,Your Interface to Release Engineering Automation -,Python,92f384e3bc5b0f5c177d65ef0fe40e1fe8549e9e,"Add tree status colors

These were likely lost accidentally while deleting a slew of unused CSS
rules."
195,https://api.github.com/repos/mozilla/build-relengapi/pulls/324,324,Add compat endpoints for compatibility with old treestatus,"This is part of the deployment strategy: proxy requests from the old treestatus URL to the new.  But RelengAPI wraps every API response in {'result': ..}, while the old treestatus did not.
",djmitche,28673,2015-08-26T15:47:48Z,CONTRIBUTOR,True,69,1,4,Your Interface to Release Engineering Automation -,Python,80ee3bdc10ed5f755fb3ccb5a67e336e3fbafb93,Add compat endpoints for compatibility with old treestatus
196,https://api.github.com/repos/mozilla/build-relengapi/pulls/324,324,Add compat endpoints for compatibility with old treestatus,"This is part of the deployment strategy: proxy requests from the old treestatus URL to the new.  But RelengAPI wraps every API response in {'result': ..}, while the old treestatus did not.
",djmitche,28673,2015-08-26T15:47:48Z,CONTRIBUTOR,True,69,1,4,Your Interface to Release Engineering Automation -,Python,f2006ee16bf8eeaefda66bf3a03250c5661ffcc0,pin WSME version
197,https://api.github.com/repos/mozilla/build-relengapi/pulls/324,324,Add compat endpoints for compatibility with old treestatus,"This is part of the deployment strategy: proxy requests from the old treestatus URL to the new.  But RelengAPI wraps every API response in {'result': ..}, while the old treestatus did not.
",djmitche,28673,2015-08-26T15:47:48Z,CONTRIBUTOR,True,69,1,4,Your Interface to Release Engineering Automation -,Python,8da2c172bb48a8cff55d48cda749445bbfd22a08,switch  to  and allow missing trailing slash
198,https://api.github.com/repos/mozilla/build-relengapi/pulls/290,290,"Make `relengapi.apimethod`, etc. exist when importing `relengapi`","`relengapi` used to be a namespace package, which meant it couldn't have attributes at import time, and they were added only later when `relengapi.app` was imported.

It's no longer a namespace package, so this is no longer required.
",djmitche,28673,2015-08-20T21:26:49Z,CONTRIBUTOR,True,30,37,25,Your Interface to Release Engineering Automation -,Python,7dd941b8103654eedd2865dbb60a43ff2b7b8e86,"Don't make any symbols available at `relengapi`.

The only symbols previously available were `p` and `apimethod`, and both
are better imported from `relengapi.lib.foo` instead."
199,https://api.github.com/repos/mozilla/build-relengapi/pulls/285,285,Set `CELERY_ACCEPT_CONTENT` if it's not already set,"This warning is kind of silly -- if you're exposing your celery queue to malicious data, you're already doing it wrong, pickle or not.  So we should silence this in code by setting `CELERY_ACCEPT_CONTENT` if it's not already set.

```
[2015-06-18 10:36:30,016: WARNING/MainProcess] /data/www/relengapi/virtualenv/lib/python2.7/site-packages/celery/apps/worker.py:161: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))
```
",djmitche,28673,2015-08-20T21:25:36Z,CONTRIBUTOR,True,7,0,1,Your Interface to Release Engineering Automation -,Python,8d5c38cf55a6699de66b8d8189431bc5f1b517b9,Default to JSON encodings for Celery messages
200,https://api.github.com/repos/mozilla/build-relengapi/pulls/321,321,Alembic relative dirs,"I applied this manually in staging and it worked.
",djmitche,28673,2015-08-06T20:50:12Z,CONTRIBUTOR,True,12,1,4,Your Interface to Release Engineering Automation -,Python,9920d6588e2caa69502057d7980616512d312957,Bump to version relengapi-3.2.0
201,https://api.github.com/repos/mozilla/build-relengapi/pulls/321,321,Alembic relative dirs,"I applied this manually in staging and it worked.
",djmitche,28673,2015-08-06T20:50:12Z,CONTRIBUTOR,True,12,1,4,Your Interface to Release Engineering Automation -,Python,fab74abf11ec48804b86e22d7c650176222c5cd1,Set cwd so relative dirs in alembic.ini work
202,https://api.github.com/repos/mozilla/build-relengapi/pulls/319,319,Bug 1191361 - Trees closed for archiver failures,"What's happening in 1191361 is we are hanging on polling hgmo. This patch adds a timeout to the requests call. It also removes the need to poll hgmo twice (we used head(hgmo_url) and get(hgmo_url) before).

It was mentioned in irc that the overall task timeout should be tweaked as well. Right now, that is set to 1hr which is too generic/generous for mozharness archives. However, changing that is a more invasive change. I say that because, as it is now, we have set the timeout in the task definition (not in the apply_async call). In order to change the overall timeout, we would need to make this configurable and defined at each apply_async call so that we could have a quick timeout for mh archives or a long timeout for larger subdir archives.

What I am trying to do in this patch is at least stop hgmo calls hanging. Configuring the overall task timeout seems like a follow up.

@djmitche what do you think?
",lundjordan,1648433,2015-08-05T19:50:00Z,CONTRIBUTOR,True,32,27,3,Your Interface to Release Engineering Automation -,Python,f8ed3c64beacc107c27baf497ff59c4f4640131d,only calls a request to hgmo once and adds a timeout
203,https://api.github.com/repos/mozilla/build-relengapi/pulls/319,319,Bug 1191361 - Trees closed for archiver failures,"What's happening in 1191361 is we are hanging on polling hgmo. This patch adds a timeout to the requests call. It also removes the need to poll hgmo twice (we used head(hgmo_url) and get(hgmo_url) before).

It was mentioned in irc that the overall task timeout should be tweaked as well. Right now, that is set to 1hr which is too generic/generous for mozharness archives. However, changing that is a more invasive change. I say that because, as it is now, we have set the timeout in the task definition (not in the apply_async call). In order to change the overall timeout, we would need to make this configurable and defined at each apply_async call so that we could have a quick timeout for mh archives or a long timeout for larger subdir archives.

What I am trying to do in this patch is at least stop hgmo calls hanging. Configuring the overall task timeout seems like a follow up.

@djmitche what do you think?
",lundjordan,1648433,2015-08-05T19:50:00Z,CONTRIBUTOR,True,32,27,3,Your Interface to Release Engineering Automation -,Python,58d3440e049465da78643aa4b9f4e01b466c9c31,Merge branch 'master' into archiver
204,https://api.github.com/repos/mozilla/build-relengapi/pulls/319,319,Bug 1191361 - Trees closed for archiver failures,"What's happening in 1191361 is we are hanging on polling hgmo. This patch adds a timeout to the requests call. It also removes the need to poll hgmo twice (we used head(hgmo_url) and get(hgmo_url) before).

It was mentioned in irc that the overall task timeout should be tweaked as well. Right now, that is set to 1hr which is too generic/generous for mozharness archives. However, changing that is a more invasive change. I say that because, as it is now, we have set the timeout in the task definition (not in the apply_async call). In order to change the overall timeout, we would need to make this configurable and defined at each apply_async call so that we could have a quick timeout for mh archives or a long timeout for larger subdir archives.

What I am trying to do in this patch is at least stop hgmo calls hanging. Configuring the overall task timeout seems like a follow up.

@djmitche what do you think?
",lundjordan,1648433,2015-08-05T19:50:00Z,CONTRIBUTOR,True,32,27,3,Your Interface to Release Engineering Automation -,Python,52ad5d0c9ead71778022a31781b7f1881dc4b78b,fixes hg_url check tests
205,https://api.github.com/repos/mozilla/build-relengapi/pulls/319,319,Bug 1191361 - Trees closed for archiver failures,"What's happening in 1191361 is we are hanging on polling hgmo. This patch adds a timeout to the requests call. It also removes the need to poll hgmo twice (we used head(hgmo_url) and get(hgmo_url) before).

It was mentioned in irc that the overall task timeout should be tweaked as well. Right now, that is set to 1hr which is too generic/generous for mozharness archives. However, changing that is a more invasive change. I say that because, as it is now, we have set the timeout in the task definition (not in the apply_async call). In order to change the overall timeout, we would need to make this configurable and defined at each apply_async call so that we could have a quick timeout for mh archives or a long timeout for larger subdir archives.

What I am trying to do in this patch is at least stop hgmo calls hanging. Configuring the overall task timeout seems like a follow up.

@djmitche what do you think?
",lundjordan,1648433,2015-08-05T19:50:00Z,CONTRIBUTOR,True,32,27,3,Your Interface to Release Engineering Automation -,Python,a8bd7dd2dacda9815bba87c0a5657d7f60a95deb,merges upstream -> archiver
206,https://api.github.com/repos/mozilla/build-relengapi/pulls/319,319,Bug 1191361 - Trees closed for archiver failures,"What's happening in 1191361 is we are hanging on polling hgmo. This patch adds a timeout to the requests call. It also removes the need to poll hgmo twice (we used head(hgmo_url) and get(hgmo_url) before).

It was mentioned in irc that the overall task timeout should be tweaked as well. Right now, that is set to 1hr which is too generic/generous for mozharness archives. However, changing that is a more invasive change. I say that because, as it is now, we have set the timeout in the task definition (not in the apply_async call). In order to change the overall timeout, we would need to make this configurable and defined at each apply_async call so that we could have a quick timeout for mh archives or a long timeout for larger subdir archives.

What I am trying to do in this patch is at least stop hgmo calls hanging. Configuring the overall task timeout seems like a follow up.

@djmitche what do you think?
",lundjordan,1648433,2015-08-05T19:50:00Z,CONTRIBUTOR,True,32,27,3,Your Interface to Release Engineering Automation -,Python,3a4f3ad53dc3dc5487184482724c5aaa73b7fbbd,uses requests raise_for_status instead of checking purely for an exact 200 response
207,https://api.github.com/repos/mozilla/build-relengapi/pulls/318,318,Bug 1174215: Add endpoint to return all configured project names,"https://bugzil.la/1174215 has details
",hwine,132412,2015-08-05T18:21:22Z,CONTRIBUTOR,True,68,16,3,Your Interface to Release Engineering Automation -,Python,f8cfff209bf26bf744c387be6b51a4d5da0a5a4b,bug 1174215 - add /projects endpoint; r=
208,https://api.github.com/repos/mozilla/build-relengapi/pulls/318,318,Bug 1174215: Add endpoint to return all configured project names,"https://bugzil.la/1174215 has details
",hwine,132412,2015-08-05T18:21:22Z,CONTRIBUTOR,True,68,16,3,Your Interface to Release Engineering Automation -,Python,3554e213efaa312d3d796842b3b758fa4e8f7b54,"Rearrange docs.

To keep all GET endpoints together."
209,https://api.github.com/repos/mozilla/build-relengapi/pulls/318,318,Bug 1174215: Add endpoint to return all configured project names,"https://bugzil.la/1174215 has details
",hwine,132412,2015-08-05T18:21:22Z,CONTRIBUTOR,True,68,16,3,Your Interface to Release Engineering Automation -,Python,f550d35d65161ca535de767c2dfba702e584384b,Modifications based on dustin's feedback.
210,https://api.github.com/repos/mozilla/build-relengapi/pulls/318,318,Bug 1174215: Add endpoint to return all configured project names,"https://bugzil.la/1174215 has details
",hwine,132412,2015-08-05T18:21:22Z,CONTRIBUTOR,True,68,16,3,Your Interface to Release Engineering Automation -,Python,e249578a4933a134293defab752e5d045a8b2735,minor fixups for database use in mapper tests
211,https://api.github.com/repos/mozilla/build-relengapi/pulls/318,318,Bug 1174215: Add endpoint to return all configured project names,"https://bugzil.la/1174215 has details
",hwine,132412,2015-08-05T18:21:22Z,CONTRIBUTOR,True,68,16,3,Your Interface to Release Engineering Automation -,Python,4de481a8fbd9ab157b5563c5982ead02f48cdd10,"Remove no-longer-needed import.

Pyflakes complained - I failed to run validate.sh locally before prior
commit."
212,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,a221a4663bf1a30a4805015d4c13d350fbd8355f,"allow running migration tests locally, too"
213,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,c3ded0e00ef949a88b8a297e5797fcfa5ba6f9bb,Add a grooming task to delete all instances of a file
214,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,76c8fbd3ea564a4f0a018a09291baca41c57ba9c,"Launch expiration grooming task when file instance is verified.

This also adds a column to the File table in the relengapi database,
which will take keep track of when the file expires. This is to
handle updating or canceling the expiration of the file's instances."
215,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,f3ca482d29674a9ff6b0c76dc50f884528a47abb,Add tests for checking expiring files
216,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,d2b01a5d0f84ac96de225422b4c3960b8a588b9d,"Update logic for updating time to live

You can only update time to live if the file already has an existing
expiration date, or is a new file with a time to live value. You may
also update a file to make it permanent, which you can no longer update
the time to live value.

This patch also brings in coverage tests, as well as using
relengapi.lib.time instead of datetime.datetime/"
217,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,2b432f6f5f8b8b306bd026c2465115200de24d03,Add migration for expiration column
218,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,52e139e5b25f274995730df48df2b05a7f4d07ae,Add date expiration to webview
219,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,20328e7e1749633e534ae7ca3da66135d36fc849,"Modify ttl from days to seconds.

This commit also changes the expiration task from hourly to daily."
220,https://api.github.com/repos/mozilla/build-relengapi/pulls/317,317,Bug 1167636 - Add option for TTL,"Now with database migrations out of the way, here is the server implementation of the time to live value. This pull request adds a new column to tooltool.table.File that tracks expiring file instances. A recurring badpenny job will groom files that have expired. 

If there is no TTL field in the upload request, files will be marked to be kept forever. TTL values can be updated if there is a previous TTL value, but not if the file is marked permanent. This means you can extend the life of an expired file by re-uploading it with a new TTL value. 

References:
- [Bug 1167636](https://bugzilla.mozilla.org/show_bug.cgi?id=1167636)
- [[build-tooltool] PR #23](78bc8d0b2502b2e4cb30f9393ba7d1b2fc949d71)
",acmiyaguchi,3304040,2015-07-31T23:47:34Z,CONTRIBUTOR,True,201,6,11,Your Interface to Release Engineering Automation -,Python,22f60718f54f7b8dfecdfe5e49d79a568f8a80ce,Change ttl to be used for both input and output
221,https://api.github.com/repos/mozilla/build-relengapi/pulls/316,316,[alembic] Apply full downgrade and upgrades to db migrations in validation.sh,"This fixes a bug dealing with offline migration tests. Downgrades offline do not allow for incremental changes using relative values, ie we cant go from `<head>:<head-1>`, and then from `<head-1>:<head-2>`. This will apply a full downgrade and a full upgrade, but through the alembic mechanism rather than from bash.
",acmiyaguchi,3304040,2015-07-31T22:30:12Z,CONTRIBUTOR,True,20,25,1,Your Interface to Release Engineering Automation -,Python,47f7afa174b7beb9d3a77ca3f447b864aa317557,"Apply full downgrade and upgrades to db migrations

This fixes a bug dealing with offline migration tests. Downgrades
offline do not allow for incremental changes using relative values, ie
we cant go from <head>:<head-1>, and then from <head-1>:<head-2>. This
will apply a full downgrade and a full upgrade, but through the alembic
mechanism rather than from bash."
222,https://api.github.com/repos/mozilla/build-relengapi/pulls/315,315,Icing on the Alembic Cake,"@acmiyaguchi 

This just makes validate a little nicer, and allows me (and anyone with a MySQL instance) to run the MySQL tests locally, rather than waiting for Travis.
",djmitche,28673,2015-07-31T16:35:48Z,CONTRIBUTOR,True,50,30,3,Your Interface to Release Engineering Automation -,Python,c19e48fd4f6824501cb8b533920b5c775c7044ae,"allow running migration tests locally, too"
223,https://api.github.com/repos/mozilla/build-relengapi/pulls/315,315,Icing on the Alembic Cake,"@acmiyaguchi 

This just makes validate a little nicer, and allows me (and anyone with a MySQL instance) to run the MySQL tests locally, rather than waiting for Travis.
",djmitche,28673,2015-07-31T16:35:48Z,CONTRIBUTOR,True,50,30,3,Your Interface to Release Engineering Automation -,Python,24e922e52baca3f15ece88b695a88a5759894db0,extend 'relengapi repl' to support --command
224,https://api.github.com/repos/mozilla/build-relengapi/pulls/315,315,Icing on the Alembic Cake,"@acmiyaguchi 

This just makes validate a little nicer, and allows me (and anyone with a MySQL instance) to run the MySQL tests locally, rather than waiting for Travis.
",djmitche,28673,2015-07-31T16:35:48Z,CONTRIBUTOR,True,50,30,3,Your Interface to Release Engineering Automation -,Python,ccfe9754be8db8f653328d033c93a1415d796d49,get the list of db names from relengapi
225,https://api.github.com/repos/mozilla/build-relengapi/pulls/315,315,Icing on the Alembic Cake,"@acmiyaguchi 

This just makes validate a little nicer, and allows me (and anyone with a MySQL instance) to run the MySQL tests locally, rather than waiting for Travis.
",djmitche,28673,2015-07-31T16:35:48Z,CONTRIBUTOR,True,50,30,3,Your Interface to Release Engineering Automation -,Python,46b549a7c53da35eb2387df6851568b12f1169ce,quiet logging while building docs
226,https://api.github.com/repos/mozilla/build-relengapi/pulls/315,315,Icing on the Alembic Cake,"@acmiyaguchi 

This just makes validate a little nicer, and allows me (and anyone with a MySQL instance) to run the MySQL tests locally, rather than waiting for Travis.
",djmitche,28673,2015-07-31T16:35:48Z,CONTRIBUTOR,True,50,30,3,Your Interface to Release Engineering Automation -,Python,d35505791aaab9b5afaceefc4f2d00823f93577f,coverage for 'relengapi repl'
227,https://api.github.com/repos/mozilla/build-relengapi/pulls/314,314,Bubbles,,ghost,10137,2015-07-30T21:34:24Z,NONE,False,6,4,1,Your Interface to Release Engineering Automation -,Python,4e2592de0c78e5e4fda3ed3e88228014a1687008,meh
228,https://api.github.com/repos/mozilla/build-relengapi/pulls/314,314,Bubbles,,ghost,10137,2015-07-30T21:34:24Z,NONE,False,6,4,1,Your Interface to Release Engineering Automation -,Python,309423f131a455bcf9cd204ad3e4100f885a4e8a,Blah
229,https://api.github.com/repos/mozilla/build-relengapi/pulls/313,313,meh,,ghost,10137,2015-07-30T20:12:40Z,NONE,False,6,4,1,Your Interface to Release Engineering Automation -,Python,4e2592de0c78e5e4fda3ed3e88228014a1687008,meh
230,https://api.github.com/repos/mozilla/build-relengapi/pulls/311,311,Badpenny execution fails when calling the task fails,"```
[2015-07-29 10:20:05,306: ERROR/Worker-1] Job 53 failed
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/blueprints/badpenny/execution.py"", line 69, in _run_job
    task.task_func(job_status)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/lib/celery.py"", line 29, in __call__
    return TaskBase.__call__(self, *args, **kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 439, in __protected_call__
    return orig(self, *args, **kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/task.py"", line 420, in __call__
    return self.run(*args, **kwargs)
TypeError: backend_cleanup() takes no arguments (1 given)
[2015-07-29 10:20:05,310: ERROR/MainProcess] Task relengapi.blueprints.badpenny.execution._run_job[cbaeddb9-9ad6-4d19-bf81-0fb88e223692] raised unexpected: DetachedInstanceError('Instance <BadpennyJob at 0x7f8688d6b590> is not bound to a Session; attribute refresh operation cannot proceed',)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 240, in trace_task
    R = retval = fun(*args, **kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/lib/celery.py"", line 29, in __call__
    return TaskBase.__call__(self, *args, **kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 438, in __protected_call__
    return self.run(*args, **kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/blueprints/badpenny/execution.py"", line 73, in _run_job
    job_status._finish(successful=False)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/blueprints/badpenny/execution.py"", line 45, in _finish
    l = tables.BadpennyJobLog(id=self.job.id, content=content)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sqlalchemy/orm/attributes.py"", line 237, in __get__
    return self.impl.get(instance_state(instance), dict_)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sqlalchemy/orm/attributes.py"", line 573, in get
    value = state._load_expired(state, passive)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sqlalchemy/orm/state.py"", line 480, in _load_expired
    self.manager.deferred_scalar_loader(self, toload)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sqlalchemy/orm/loading.py"", line 608, in load_scalar_attributes
    (state_str(state)))
DetachedInstanceError: Instance <BadpennyJob at 0x7f8688d6b590> is not bound to a Session; attribute refresh operation cannot proceed
```
",djmitche,28673,2015-07-29T18:41:37Z,CONTRIBUTOR,True,22,15,3,Your Interface to Release Engineering Automation -,Python,7ea4d4bb006eea3e84321ef3deb9113f70418976,"Fix handling of sessions in badpenny execution

Objects like `self.job` are invalidated after a rollback, which may
occur while the task is executing.  Instead, this keeps `self.job_id`
around and either updates or queries as necessary."
231,https://api.github.com/repos/mozilla/build-relengapi/pulls/312,312,Run celery.backend_cleanup via Badpenny,"@lundjordan what do you think?
",djmitche,28673,2015-07-29T15:35:58Z,CONTRIBUTOR,True,47,0,4,Your Interface to Release Engineering Automation -,Python,e543002e64309a87e4614f41a6ec25f39f7de7d7,Run celery.backend_cleanup via Badpenny
232,https://api.github.com/repos/mozilla/build-relengapi/pulls/312,312,Run celery.backend_cleanup via Badpenny,"@lundjordan what do you think?
",djmitche,28673,2015-07-29T15:35:58Z,CONTRIBUTOR,True,47,0,4,Your Interface to Release Engineering Automation -,Python,9629195fbd951506d4c27bd811af57a49c005bf8,only run celery.backend_cleanup in the cases beat might run it
233,https://api.github.com/repos/mozilla/build-relengapi/pulls/310,310,fixes typo where task id was referenced before use,"I can't use task now that we moved it outside the block it was created. we know what the task id is though as we define it in task_id already
",lundjordan,1648433,2015-07-28T21:01:43Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,6998ce49dbc756e735999a3edf3dbb8258fb33e8,fixes typo where task id was referenced before use
234,https://api.github.com/repos/mozilla/build-relengapi/pulls/309,309,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves

https://bugzilla.mozilla.org/show_bug.cgi?id=1182532#c17
",lundjordan,1648433,2015-07-27T17:29:13Z,CONTRIBUTOR,True,181,35,4,Your Interface to Release Engineering Automation -,Python,a6bc3b8f1525eece2037eca868f4ef8d2dc10bef,"adds a pending expiry column to task tracker, fixes bug where s3 url is returned that doesn't exist"
235,https://api.github.com/repos/mozilla/build-relengapi/pulls/309,309,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves

https://bugzilla.mozilla.org/show_bug.cgi?id=1182532#c17
",lundjordan,1648433,2015-07-27T17:29:13Z,CONTRIBUTOR,True,181,35,4,Your Interface to Release Engineering Automation -,Python,c175c0e1892ab820a1408ab3d4118ff7cf5fc496,adds tests for tracker's pending expiry
236,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,3d573ee275972366019bc0e464aa2c43ffe78657,"Port treestatus

Originally from
  https://github.com/mozilla/treestatus"
237,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,5c56429d05777964518336690811b927641ee0eb,"when not remembering a change, don't remove the change from the stack"
238,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,dfc4fb665ec6ebea3f35d45acb5dabc8019df61b,"Combine all tree modifictions into one method

The PATCH is always applied to /trees, with the specific tree(s)
affected specified in the body.  The various fields of a tree update
become optional.  This makes the business rules a little complicated,
but maps well to the desired UI, which entails submitting a bulk update
to the whole list of trees."
239,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,1c18ba03441c6e0964e5d8f0d7f9a9f766f36050,"database fixups

Drop the unnecessary token and user tables, change some columns to be
text (unlimited length), and rename 'action' to 'status'."
240,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,492778c67b5e29cf22e49e0fcade619be50b30de,Add a 'refresh' button to reload the onscreen data
241,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,792ef73a2d898985d0cc379deee03cd558c80ddb,delete logs and history when deleting a tree
242,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,a48476f5ddd7aa7a16fbd9b26a4c8cf08f2206b4,Set cache-control and ACAO headers
243,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,adaf5b20d32973ca94c18cbec554f731366bbfb0,use memcached to back the often-hit get_trees
244,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,38d7b479a1b0e451b35b49216c73dbd6e0ffa151,remove broken position: absolute from footer
245,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,9046d88218090b7c16950d79319be9671f2027a3,"Store treestatus in the relengapi database

The tree status is small and (thanks to memcached) fairly low-traffic."
246,https://api.github.com/repos/mozilla/build-relengapi/pulls/308,308,Port Treestatus,"This makes some pretty substantial changes to the sheriff/admin UIs, but is largely the same for users.

Functionally, a big difference here is that trees are no longer removed from outstanding changes if an update is made with the ""remember"" checkbox unchecked.  That allows the common workflow of closing trees with reason ""OMG!"", then later following up with a new reason (""bug 1234"") without remembering the latter change.  When the first change is undone, the status returns to what it was before.

The DB changes quite a bit, too -- new table names, column names, and column types.  Transitioning from one to the other shouldn't be too hard, though - a decent mysqldump should do the trick.  We'll also need to change the hghook to point at a different URL.  I had a look at the hook already, and it's an easy fix -- just needs to be landed.  During the few minutes of transition, we'd just need to update tree statuses in two places.
",djmitche,28673,2015-07-23T22:12:59Z,CONTRIBUTOR,True,2010,0,13,Your Interface to Release Engineering Automation -,Python,2754d5649e2ace2820613f0fdd22dfe8eb01e1b0,remove cache-hit debug print
247,https://api.github.com/repos/mozilla/build-relengapi/pulls/307,307,add api.loads and api.dumps,"Regular old `json.dumps` will barf on a WSME type; and `json.loads` will successfully load such a thing, but represent it as a dictionary rather than a WSME object.  These little gems take care of both problems.
",djmitche,28673,2015-07-23T21:09:13Z,CONTRIBUTOR,True,56,1,3,Your Interface to Release Engineering Automation -,Python,4aff7b00d83de857be482cb13f14c3fd040c4f68,add api.loads and api.dumps
248,https://api.github.com/repos/mozilla/build-relengapi/pulls/307,307,add api.loads and api.dumps,"Regular old `json.dumps` will barf on a WSME type; and `json.loads` will successfully load such a thing, but represent it as a dictionary rather than a WSME object.  These little gems take care of both problems.
",djmitche,28673,2015-07-23T21:09:13Z,CONTRIBUTOR,True,56,1,3,Your Interface to Release Engineering Automation -,Python,87c5c7b3a0cc17e35c0b6136bdb2bcf62cab0fde,improve docs
249,https://api.github.com/repos/mozilla/build-relengapi/pulls/306,306,memcached docs fixes,,djmitche,28673,2015-07-23T21:03:27Z,CONTRIBUTOR,True,2,2,1,Your Interface to Release Engineering Automation -,Python,d2ee9c6e424fe5a025100ca00e7affdcf21e1b15,memcached docs fixes
250,https://api.github.com/repos/mozilla/build-relengapi/pulls/305,305,support adding response headers with a decorator,"Another useful bit I found while porting treestatus
",djmitche,28673,2015-07-23T19:10:09Z,CONTRIBUTOR,True,228,0,4,Your Interface to Release Engineering Automation -,Python,788c95f566d29f80c6013f18aac768346b0a31d5,support adding response headers with a decorator
251,https://api.github.com/repos/mozilla/build-relengapi/pulls/305,305,support adding response headers with a decorator,"Another useful bit I found while porting treestatus
",djmitche,28673,2015-07-23T19:10:09Z,CONTRIBUTOR,True,228,0,4,Your Interface to Release Engineering Automation -,Python,5c68c14a4566d68da64450ecf1e1791acb05ae50,"Add status code filtering, defaulting to all"
252,https://api.github.com/repos/mozilla/build-relengapi/pulls/305,305,support adding response headers with a decorator,"Another useful bit I found while porting treestatus
",djmitche,28673,2015-07-23T19:10:09Z,CONTRIBUTOR,True,228,0,4,Your Interface to Release Engineering Automation -,Python,1d4e516d663c48267bdfc632c852f3be01721421,add coverage
253,https://api.github.com/repos/mozilla/build-relengapi/pulls/303,303,Add reason to testing response logging,"A small improvement I made while working on tree status
",djmitche,28673,2015-07-23T15:08:36Z,CONTRIBUTOR,True,7,1,1,Your Interface to Release Engineering Automation -,Python,f82f46549a74be2d7c3adb0450126129ac2eaf70,Add reason to testing response logging
254,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,7c8eadade4dd1c1da6d589a7ec90d6187e7dcb06,NOTES
255,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,c80f6b95b859469ebae1699799d327936d3e1dac,WIP - probably get rid of alembic.ini and just use 'relengapi alembic'?
256,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,ff76e400820f29e971811bd18f6d39f80f5f4fb8,Let createdb stamp the current database with 'head'
257,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,b9fb6786a7a2f53204b8109698c5674452ea2845,Add wrapper for alembic
258,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,b798bed8c982a3c1eff0cdbe5be4a778aa647a87,Code formatting to pass pep8
259,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,64f0ea8eef160dc58b399fe8c4260d6cce2fe14a,"Move alembic.context into env and pass as parameter

Alembic doesn't seem to let its context be importable outside of env.py,
so we pass it in as a parameter."
260,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,f10b66cf723cbc30cbbfe64b8fd19ec0e929a390,Add sqlalchemy.url and metadata to env
261,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,d0ea27c9670b567fa60ac88126089af07fa14407,Fix pyflakes by adding __all__
262,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,708f28ddba7317557a40e3ca3b651e07a1603c45,"Clean up project, and add alembic file to sdist"
263,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,89d23083aca4ced3b16d81f668fedcb81528ca01,Add empty migration file to keep revisions folder
264,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,885002ba3b8e7a62d3c2b90b81701762177a6bd8,"Bugfix for alembic downgrade, forgot self parameter"
265,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,9713aaa3d8dfe49e54ab4658f409e2bbe0cfaaa0,Move imports above variables in script.py.mako
266,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,53ab19bd00849a3b4a1f363531f577f9994ae1b9,Create tests for code coverage
267,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,11f48dcc6843391c01a5c6d189affc18cc210e05,Make alembic 0.7.0 or greater required
268,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,5ec0a502dde311e00a944fb8756939babb78a68f,Add `Database Migrations` section to documentation
269,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,1489a0d7e1d1d74b7dfbf9cc2f3c082ffc7eb62a,Add init to list of commands
270,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,e41143212e8209b4e68dad141babc4996c777197,Add validation test for heads and migrations
271,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,aa434e24a8cc70a7cdaf9d5db1b122b5474d39e2,Fix mysql index creation by running createdb twice.
272,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,430a6bc3755d93fc65a8c9ee80f847c3510f3b0d,"Update tests and coverage

- Add coverage for init
- Add coverage for bad input in AlembicSubcommand
- Remove error paths that will never get reached
- Remove copy and pasted comments that make no sense in context"
273,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,7eb1a78e99dc2722b45897b81d20d0b5cbf4d0b8,Remove unused structlog in base/__init__
274,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,9bf3176a9767288103197c10a293abb05b98ddc6,Add a guide to writing migrations
275,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,8ba1d4e75596670a9ddef27cc77133cc150a77d8,sketch of running migrations under coverage
276,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,c98018992291d2c0800d517661ca8be2aeb2ab2b,"Add an option to disable all logging

This allows us to capture output of alembic commands without logging
from stdout."
277,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,b072961ee1c060502b1c3113e093194105ea2f03,Fix defaults for downgrade with --sql
278,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,0b52f1e50ff6b8d2c97a8ab27d2ec588d73ff905,"Add validation tests for offline migration

* This also adds downgrades and upgrades under code coverage"
279,https://api.github.com/repos/mozilla/build-relengapi/pulls/300,300,Add `relengapi alembic` wrapper for database migrations,"This adds a wrapper based on [Flask-Migrate](https://flask-migrate.readthedocs.org/en/latest/) to the relengapi command line. To use it, run `relengapi alembic DBNAME` with the appropriate command. Basic usage follows Flask-Migration, with the exception of having to specify the database name. For example, to run a migration for table change in the relengapi db, run the following:

```
$ relengapi alembic relengapi migrate
$ relengapi alembic relengapi upgrade
```

`relengapi createdb` will also search for available alembic configurations for databases under `relengapi/alembic`, and stamp them with `head`. 

Note that this omits the initialization of alembic configurations with command line utility, they need to be created by hand.  

This should address issue #25 to some degree, although I haven't looked into adding support for the validation script, or possible changes to the documentation.
",acmiyaguchi,3304040,2015-07-21T18:51:43Z,CONTRIBUTOR,True,1161,8,21,Your Interface to Release Engineering Automation -,Python,fc9f9845f635cf86a6ce9ab357910c1f3e6f453c,Ignore .taskclusterrc in validation script
280,https://api.github.com/repos/mozilla/build-relengapi/pulls/299,299,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves
",lundjordan,1648433,2015-07-17T21:16:01Z,CONTRIBUTOR,True,34,8,8,Your Interface to Release Engineering Automation -,Python,f172285c6dee495d8df18a6ef137727d1d74b931,"add arg for badpenny job, cleanup_old_tasks in archiver"
281,https://api.github.com/repos/mozilla/build-relengapi/pulls/299,299,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves
",lundjordan,1648433,2015-07-17T21:16:01Z,CONTRIBUTOR,True,34,8,8,Your Interface to Release Engineering Automation -,Python,097f45e061c2bfe55b80e22db020716da216a2a2,add log lines to archiver tasks.py and require that async_result returns an id and succeeded before creating tracker
282,https://api.github.com/repos/mozilla/build-relengapi/pulls/299,299,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves
",lundjordan,1648433,2015-07-17T21:16:01Z,CONTRIBUTOR,True,34,8,8,Your Interface to Release Engineering Automation -,Python,d1e2785d59bf487ff74b8ec21ca2a2ebb813ed42,"fix archiver task cleanup test with fake dummy badpenny job_status, bumps version to 3.1.3"
283,https://api.github.com/repos/mozilla/build-relengapi/pulls/299,299,Archiver,"Bug 1182532 - archiver is broken - mozharness can't be deployed on slaves
",lundjordan,1648433,2015-07-17T21:16:01Z,CONTRIBUTOR,True,34,8,8,Your Interface to Release Engineering Automation -,Python,504f9141a0e52ee18524bdcbd92334fe44d9021d,updates release notes
284,https://api.github.com/repos/mozilla/build-relengapi/pulls/298,298,bug 1182532 - log task_id not the sql gen id when deleting archiver tracker tasks,"quick typo fix in logging. forgive me if I should have asked for a review on this before landing
",lundjordan,1648433,2015-07-16T23:12:29Z,CONTRIBUTOR,True,2,2,2,Your Interface to Release Engineering Automation -,Python,c0531caba63f06444b4f11987602d53529c2ec3f,log task_id not the sql gen id when deleting archiver tracker tasks
285,https://api.github.com/repos/mozilla/build-relengapi/pulls/298,298,bug 1182532 - log task_id not the sql gen id when deleting archiver tracker tasks,"quick typo fix in logging. forgive me if I should have asked for a review on this before landing
",lundjordan,1648433,2015-07-16T23:12:29Z,CONTRIBUTOR,True,2,2,2,Your Interface to Release Engineering Automation -,Python,8823af6472ebf7b2bc453e19765c360c2a0dcc5b,bump minor version to 3.1.2
286,https://api.github.com/repos/mozilla/build-relengapi/pulls/297,297,Add form-horizontal CSS to form,"This fixes a mistakenly not pushed piece of the CSS for the main page.

r? @djmitche
",Callek,1415602,2015-07-16T20:52:14Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,ada652729927c7128b004f6d78708d629a22238a,Add form-horizontal CSS to form
287,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,b059cd1c970310afcdfbbc185b3154ad518255d7,adds comments for implementation strategy of sql based celery checks
288,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,2d6721e089f84d824f172c5d63120a66ed40785d,adds first impl of untested db support for tracking archiver celery tasks
289,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,34f202cd1989f53dd45be0d5b7cf5eca06790594,Merge branch 'master' into archiver
290,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,0f82d45da086dff6777c2a5d529d9ff2b69f9d01,adds tests and finishes implementing task tracker for archiver
291,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,13ea0c0f10bab23a9636469dbcd209cd35c5fe09,addresses pep8 and mixed imports found in validate. updates deploy docs
292,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,f5b9687c71025f845aff9b60331adfede2c68bb9,"address PR comments in 296, coverage, typos, and catching sql errors"
293,https://api.github.com/repos/mozilla/build-relengapi/pulls/296,296,Archiver,"This  combats against creating multiple celery tasks for the same job and manages clean up. It does this by:
- setting a time limit of how long a task can run for (protecting from getting hung tasks)
- setting an expiry of how long a task can be un-actioned in the message queue
- tracking the state of celery tasks with a db backend.
  - Prior to this I only tracked if the state given by celery was 'STARTED'. But celery tasks could also be PENDING or RETRY. You can't trust PENDING as that's the default state for tasks that were never even created.
- explicitly capping the revision at 12 chars.
  - If a buildbot job or user hits the archiver api with both the short hash and the long hash, archiver used to think this was two separate archives. This could be an issue if a bunch of buildbot jobs have the short hash stored in buildbot properties.
- some house keeping with the trackers in the db. If the task goes past it's time limit or is in a finished state and the tracker still exists in the db, a badpenny job will clean it up.
- add more logging to help track health of archiver

Though _much_ more work than simply:  `if create_and_upload_archive.AsyncResult(task_id).state != 'STARTED'`, managing the tasks through a tracker should provide us with much more control.
",lundjordan,1648433,2015-07-15T00:13:56Z,CONTRIBUTOR,True,278,11,7,Your Interface to Release Engineering Automation -,Python,a4a26f39511ca784d786ea4323ac10f1429a81d7,bumps version to 3.1.1
294,https://api.github.com/repos/mozilla/build-relengapi/pulls/295,295,[cosmetic] Disable download link in tooltool if there are no active file instances,"The tooltool page exposes the download link to files with nonexistent instances. This pr disables the download link link so you aren't redirected to a broken link, which  could be the result of removed instances or incomplete file uploads.
",acmiyaguchi,3304040,2015-07-14T23:46:59Z,CONTRIBUTOR,True,19,8,4,Your Interface to Release Engineering Automation -,Python,fc48692817ab2b413b9197820017ab80c8401a69,Disable download link if no active s3 instance exists
295,https://api.github.com/repos/mozilla/build-relengapi/pulls/295,295,[cosmetic] Disable download link in tooltool if there are no active file instances,"The tooltool page exposes the download link to files with nonexistent instances. This pr disables the download link link so you aren't redirected to a broken link, which  could be the result of removed instances or incomplete file uploads.
",acmiyaguchi,3304040,2015-07-14T23:46:59Z,CONTRIBUTOR,True,19,8,4,Your Interface to Release Engineering Automation -,Python,b78a3399b2fb0c0c06796cdf749b06b72f32dab8,Modify tests to incorporate has_instances
296,https://api.github.com/repos/mozilla/build-relengapi/pulls/292,292,Clean up building-a-blueprint docs,"The sample test script includes a bunch of badpenny unnecessarily.
",djmitche,28673,2015-07-02T15:05:58Z,CONTRIBUTOR,True,0,15,2,Your Interface to Release Engineering Automation -,Python,6efa6fc6480e8436f1c58df46e84db9f9e2d3705,remove unused client_d
297,https://api.github.com/repos/mozilla/build-relengapi/pulls/292,292,Clean up building-a-blueprint docs,"The sample test script includes a bunch of badpenny unnecessarily.
",djmitche,28673,2015-07-02T15:05:58Z,CONTRIBUTOR,True,0,15,2,Your Interface to Release Engineering Automation -,Python,c26534de10eb22d7006414cf5d9788f14500c9e6,Merge djmitche/build-relengapi:issue234 (PR #289)
298,https://api.github.com/repos/mozilla/build-relengapi/pulls/292,292,Clean up building-a-blueprint docs,"The sample test script includes a bunch of badpenny unnecessarily.
",djmitche,28673,2015-07-02T15:05:58Z,CONTRIBUTOR,True,0,15,2,Your Interface to Release Engineering Automation -,Python,2b43e8c5de50e0f0945dc44508cb91ddff561f47,Merge djmitche/build-relengapi:issue242 (PR #287)
299,https://api.github.com/repos/mozilla/build-relengapi/pulls/292,292,Clean up building-a-blueprint docs,"The sample test script includes a bunch of badpenny unnecessarily.
",djmitche,28673,2015-07-02T15:05:58Z,CONTRIBUTOR,True,0,15,2,Your Interface to Release Engineering Automation -,Python,4254df1597b5de167ece1f5211dab638a50a9548,remove unnecessary imports
300,https://api.github.com/repos/mozilla/build-relengapi/pulls/293,293,bumps relengapi to 3.1.0 for new archiver endpoint,,lundjordan,1648433,2015-07-01T19:20:55Z,CONTRIBUTOR,True,6,1,3,Your Interface to Release Engineering Automation -,Python,84c608d7128796b1e9e24a7bdf1a1d3b04612cb1,bumps relengapi to 3.1.0 for new archiver endpoint
301,https://api.github.com/repos/mozilla/build-relengapi/pulls/289,289,remove unused client_d,"Technically an API change, but that field is never used for input or output.
",djmitche,28673,2015-06-23T15:41:18Z,CONTRIBUTOR,True,0,3,1,Your Interface to Release Engineering Automation -,Python,6efa6fc6480e8436f1c58df46e84db9f9e2d3705,remove unused client_d
302,https://api.github.com/repos/mozilla/build-relengapi/pulls/288,288,"If an authorization header is present, use it or fail","Failing instead of silently succeeding gives users a better indication of an issue with their credentials.

This will break @mrrrgn's try runs which use ""TODO"" as a token.  That will need some modification in mozharness, etc. before this lands.
",djmitche,28673,2015-06-23T15:39:53Z,CONTRIBUTOR,True,29,23,2,Your Interface to Release Engineering Automation -,Python,5772942b37b9703a6c7f98c78ef8ea9ead2f91b9,"If an authorization header is present, use it or fail

Failing instead of silently succeeding gives users a better indication
of an issue with their credentials."
303,https://api.github.com/repos/mozilla/build-relengapi/pulls/287,287,Verify visibilities are set for uploads,"This avoids some ISEs on manifests that lack visibilities
",djmitche,28673,2015-06-23T15:35:41Z,CONTRIBUTOR,True,16,2,2,Your Interface to Release Engineering Automation -,Python,cae57bebb1f69276c49d9eafe161ac7b64e91ca0,Verify visibilities are set for uploads
304,https://api.github.com/repos/mozilla/build-relengapi/pulls/286,286,Bug 1175411: Add docs for configuring logging,"Logging is configured outside of RelengAPI, but that's tricky to do with celery.  So best to document it.
",djmitche,28673,2015-06-18T17:49:06Z,CONTRIBUTOR,True,40,0,1,Your Interface to Release Engineering Automation -,Python,e10497d922f0df45ac955097adfa07bc7955aef6,"Add docs for configuring logging

Logging is configured outside of RelengAPI, but that's tricky to do with
celery.  So best to document it."
305,https://api.github.com/repos/mozilla/build-relengapi/pulls/284,284,add some docs on badpenny perms,,djmitche,28673,2015-06-17T21:21:57Z,CONTRIBUTOR,True,8,1,2,Your Interface to Release Engineering Automation -,Python,c66101534c10c9187d05f9df0a6d2bb04399c9a8,add some docs on badpenny perms
306,https://api.github.com/repos/mozilla/build-relengapi/pulls/283,283,"Bug 1173648: fix display, cleanup of badpenny tasks","The existing code assumed that tasks were returned in the order they were created, and the tests did nothing to dissuade them (one of the downsides of testing with SQLite).  I bulked up the test a little bit, and refactored the filtering to go job-by-job rather than loading everything into a list, since 7 days of once-a-minute jobs could start to be a lot of RAM.
",djmitche,28673,2015-06-16T20:13:51Z,CONTRIBUTOR,True,23,13,3,Your Interface to Release Engineering Automation -,Python,52261058fff0d7f19f2f31de89ef0796c0c74257,fix display of times greater than 10s
307,https://api.github.com/repos/mozilla/build-relengapi/pulls/283,283,"Bug 1173648: fix display, cleanup of badpenny tasks","The existing code assumed that tasks were returned in the order they were created, and the tests did nothing to dissuade them (one of the downsides of testing with SQLite).  I bulked up the test a little bit, and refactored the filtering to go job-by-job rather than loading everything into a list, since 7 days of once-a-minute jobs could start to be a lot of RAM.
",djmitche,28673,2015-06-16T20:13:51Z,CONTRIBUTOR,True,23,13,3,Your Interface to Release Engineering Automation -,Python,204ed3514c316b9d30ec377d6b96710546ddc9a9,"Fix an assumption about the ordering of jobs in the DB

This also refactors the cleanup a little to iterate over jobs and bail
out before even looking at the non-expired jobs."
308,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,87672c456876e9403ab17d58c9e14fc4340e311e,don't load disabled users
309,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,ab87d62959223ab3f47e9cf35cbd8a621c6bc60f,don't issue disabled tokens
310,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,694747f20d4bbea52fe909a62d83441e77701410,display disabled tokens as such
311,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,27266ed374c11f80b26288c50759b944f3de250b,refactor the blueprint's __init__ to call init_app on other modules
312,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,eb1e7d21f57743461e9c691c22b3299d01cf7ff4,prohibit open redirects
313,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,33b0567dfd742d40f165338c944e37d9fe1d192d,install coveralls
314,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,bf2dac4d4c4d57f3a75d60591920c97a6a7c97a7,unset RELENGAPI_SETTINGS during validation
315,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,75e351c0102514a56636cebb5a4fec5ce245fab6,fix commented-out test
316,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,a953b4f5b9d8b45f03e44458f7f8ea6099cfc17d,test and fix up main()
317,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,839e3eb887493cc6a2491d6b04df542c9d7615f0,test some commands
318,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,a9280f01ecd9797cdc39f7c912495b4815549712,"don't cover functions that will be rewritten soon, anyway"
319,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,8e731345e481bf50e06ea875bcb514fbbcc75e58,only allow sha512
320,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,bb538e711ae0fb4c793f38296b7173040d39fd1d,remove TODO
321,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,031e01d97207a1e992e6a8df8a096ce2c3053a96,test purge
322,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,523cf239794f8e2b36a633689d0db840c4960aa0,test fetch_files
323,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,8d944064592630d165338aef99d97783a3f52f14,don't run client tests twice in validate
324,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,2f8d80038ff9160d5aac72a1f85646ec7d03f282,address miscellaneous missing coverage
325,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,4783be306967a04f84b465322d1389081523a5f1,test and improve execute
326,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,51717fdc1259c8b02d50b968d9764c6a680f2a0d,finish testing untar_file
327,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,ff39c0a42a387298de86b66f6eff64fb1e96f069,test fetch_file
328,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,b6c9b1b1ac23a913f2c2eea8f423bcccaceb7f8d,test touch and (sorta) _urlopen
329,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,e10b0c8edf2fc204e20e14be5b4164ab489436c6,"test and fix add_files

Calling new_fr.validate() doesn't work if that file is not in the
current directory, and anyway the digest is already calculated so
there's nothing to validate.  Files already in the manifest need not
exist in the current directory, so they can't be validated either."
330,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,28017aa6a2b5bbcd9e2767a786866451ae249be6,test validate_manifest
331,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,41bc9b07013ac3a9a17d39f835cc1d74b3dd956c,don't remove the fist element of argv twice
332,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,4ed7f6b29d855ef1885e05cec32dc33800ee94eb,"make tar log to stdout, not stderr"
333,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,0dde10b6b2689802249a127b9676fd7e2aaa7994,Spell the 'Authorization' header correctly
334,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,10798a5f20c4ca4c46c8bd1d78467cd1e131bd34,Reset DB sessions after every Celery task
335,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,cd29346fa771237b9bd86d9f8b96a030306b0d0b,Enforce referential integrity with SQLite
336,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,f59e2baafb0b3ac861f5cf00c7ca348d1063da24,only remove relengapi-docs if it exists
337,https://api.github.com/repos/mozilla/build-relengapi/pulls/259,259,Allow non admins to request a loan,"_From @Callek on March 31, 2015 4:56_

_Copied from original issue: mozilla/build-relengapi-slaveloan#37_
",Callek,1415602,2015-06-15T16:38:19Z,CONTRIBUTOR,True,47102,188,251,Your Interface to Release Engineering Automation -,Python,d882c465a5724da85610c634bb30d13dcd4aac2a,"correctly delete logs for old jobs, too"
338,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,aa5c0a1bdca216add282c6a57be61ccabc394899,Add support for structlog
339,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,6b86f7c13b66d27e68783386b1177a4cbc04b8aa,use structlog everywhere
340,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,f192f773b9cc13db826698fbfaedc6f5061d583f,add developer docs
341,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,550acc2c6820f9ff1e4e5c21ac77e46040479f41,"add g.request_id, log it, and include it in errors"
342,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,f9f2648d1d1b84e48aec7cd3e321502877d72d66,"Use thread-local logging

In both flask and celery contexts.  This allows per-request and per-task
logging data."
343,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,6fe60bcf5b3f577e6c6ff770703f4890014f1fcf,log badpenny task names
344,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,5df48138a6a20a5e49226828165ee5eb9edd219a,Support getting request IDs from a header
345,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,96e71059297b28a38e77c5a42018e63f05188776,add structure to tooltool logs
346,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,c702bbf74d6d3bc373248e74b2dc916149c98916,add structure to tokenauth logging
347,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,59db8db6c68bfed84ebfb3d233662d2b850deb99,log the current user
348,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,faaad148a5940950a75b23a6263fe5bcd1088558,use structlog in archiver
349,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,7eb8db2d01482f29c9e512b04f2649e651dc0fa0,use mozdef structure
350,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,fb8698f609917bce4b5abd5f309a50fea76729e8,update docs
351,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,3d5c4ca1ef7cd863fb678da6223fbc9225207236,Bug 1137793: add specific info about uploads and downloads
352,https://api.github.com/repos/mozilla/build-relengapi/pulls/220,220,Use structlog for relengapi logging,"Structured logging seems the way of the future, and `structlog` provides a nice, simple way to use it with Python's `logging`.

This could be useful for general logging in relengapi, but would be _particularly_ useful for logging from celery tasks -- the structure can contain the task id, and processors can then correlate that to a badpenny task or whatever other identifier is required (so a fix for #129)
",djmitche,28673,2015-06-15T14:42:23Z,CONTRIBUTOR,True,473,149,44,Your Interface to Release Engineering Automation -,Python,7a9586d1923528079eb9756e2bd8570f317cc82c,fix up archiver logging after rebase
353,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,ef230605204d293ace08ebd928416eef1f96e972,"renames blueprint to archiver, adds to app.py, adds doc strings, removes hgmo and mozharness refs out of generic methods"
354,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,2e7b2a1a184842a4cdcca6bac6cdbbfef2d94e8c,re-order imports of tasks.py
355,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,ca9c4df7f0fd49c3557f0840cdf8800770c747b4,"adds docs, cleans up pep and mixed imports, tests still WIP"
356,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,0e62163ec64afeed7a1b28fd9c926d68b700ef4b,impls tests
357,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,d4054d685c513a18dee89a16cd5a8b24adce2de7,commiting imports that were forced changed by validate
358,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,8909711b6e9f9adeec61a51db3f1d9c886897241,Merge branch 'master' of https://github.com/mozilla/build-relengapi into archiver
359,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,a85df9c40353719fa6e1bb9c656e7175abd69c01,fix always true archiver test asserts
360,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,408a48fe0203db4b8cc2fc335644c8caea026879,"addresses review, makes generic, archiving more efficient

supports subdir query arg and is more generic than mozharness. copying raw gzip response not working

fixes gzip response, rewrites tests, docs, and addresses pep errors
force response decode, update doc usage to reflect changes"
361,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,78b596bd69c4338409da401d4e99efdda4e0566a,Merge branch 'master' into archiver
362,https://api.github.com/repos/mozilla/build-relengapi/pulls/279,279,Bug 1154795 - add an endpoint to relengapi that creates and returns a Mozharness archive via S3,"this consolidates my relengapi repo into the now unified build-relengapi and addresses feedback comments regarding:
- hardcoded repo and subdir: now supports any hg repo, branch, and subdir configuration
- hardcoded regions: regions are in the cfg
- blueprints no longer copy skeleton repo style of blueprints/name_of_blueprint.py and instead uses blueprints/name_of_blueprint/{**init**.py, etc}
- my settings.py cfg uses https not http
- I ended up downloading the src archive to disk but in a tempfile

from feedback that is not implemented:
- I did not end up using celery subtasks as I felt it may be overkill for the situation
- I also did not use celery's retry because in the event of a FAILURE, the current logic has it that if the s3 key being requested does not exist, the task to download and upload it will just be re-created again anyway. The need to support retry didn't seem overly important due to this.
",lundjordan,1648433,2015-06-09T22:53:31Z,CONTRIBUTOR,True,576,0,11,Your Interface to Release Engineering Automation -,Python,b0067daafc24df7ad47be82736a57f1f44ea396c,fix dict typo for deploy archiver docs
363,https://api.github.com/repos/mozilla/build-relengapi/pulls/278,278,Add mapper documentation from wiki and docstrings,"@petemoore 
",djmitche,28673,2015-06-08T16:15:05Z,CONTRIBUTOR,True,163,116,2,Your Interface to Release Engineering Automation -,Python,f5ae12a82c2437df9872298ddbfa332086e496ad,Add mapper documentation from wiki and docstrings
364,https://api.github.com/repos/mozilla/build-relengapi/pulls/277,277,Bug 1171004: Docs overhaul,"This adds contribution guidelines, and also gets rid of the stuff talking about the skeleton.
",djmitche,28673,2015-06-08T15:47:13Z,CONTRIBUTOR,True,100,73,5,Your Interface to Release Engineering Automation -,Python,7689d3ee0634ca6ae5133682650f494134dfce46,add contirbuting guidelines with patch review checklist
365,https://api.github.com/repos/mozilla/build-relengapi/pulls/277,277,Bug 1171004: Docs overhaul,"This adds contribution guidelines, and also gets rid of the stuff talking about the skeleton.
",djmitche,28673,2015-06-08T15:47:13Z,CONTRIBUTOR,True,100,73,5,Your Interface to Release Engineering Automation -,Python,714ff442cf120d5ccde37da43211201ecbd96e5b,Rework the new-blueprint docs
366,https://api.github.com/repos/mozilla/build-relengapi/pulls/277,277,Bug 1171004: Docs overhaul,"This adds contribution guidelines, and also gets rid of the stuff talking about the skeleton.
",djmitche,28673,2015-06-08T15:47:13Z,CONTRIBUTOR,True,100,73,5,Your Interface to Release Engineering Automation -,Python,d727df9b5c335935af6894894bf95bae97d2cb14,include CONTRIBUTING.rst in manifest
367,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,33b0567dfd742d40f165338c944e37d9fe1d192d,install coveralls
368,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,58df979e0b2a2b680c0283133aa765771c7eca43,Add Problemtracking support
369,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,1797f401072baa9bc7351f871019508607e7d2e6,use .s instead of raw task
370,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,f95f1eb0290288ac67f0cb7856e8abf26a81ff1b,Use getattr not get for current_app.bzclient
371,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,19789e9e3a4e4fa490cebf347e148f439ed3f514,Use getattr properly
372,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,8bc72a9cf0eaddecdf6e60e9117487f24c3a6e7d,Use logger not log
373,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,5f26a87dc1ebd24ed8fcd6020a9385a8bce3d4a9,Don't dummy-task file_tracking_bug
374,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,bf2dac4d4c4d57f3a75d60591920c97a6a7c97a7,unset RELENGAPI_SETTINGS during validation
375,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,75e351c0102514a56636cebb5a4fec5ce245fab6,fix commented-out test
376,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,a953b4f5b9d8b45f03e44458f7f8ea6099cfc17d,test and fix up main()
377,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,839e3eb887493cc6a2491d6b04df542c9d7615f0,test some commands
378,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,a9280f01ecd9797cdc39f7c912495b4815549712,"don't cover functions that will be rewritten soon, anyway"
379,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,8e731345e481bf50e06ea875bcb514fbbcc75e58,only allow sha512
380,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,bb538e711ae0fb4c793f38296b7173040d39fd1d,remove TODO
381,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,031e01d97207a1e992e6a8df8a096ce2c3053a96,test purge
382,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,523cf239794f8e2b36a633689d0db840c4960aa0,test fetch_files
383,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,8d944064592630d165338aef99d97783a3f52f14,don't run client tests twice in validate
384,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,2f8d80038ff9160d5aac72a1f85646ec7d03f282,address miscellaneous missing coverage
385,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,4783be306967a04f84b465322d1389081523a5f1,test and improve execute
386,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,51717fdc1259c8b02d50b968d9764c6a680f2a0d,finish testing untar_file
387,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,ff39c0a42a387298de86b66f6eff64fb1e96f069,test fetch_file
388,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,b6c9b1b1ac23a913f2c2eea8f423bcccaceb7f8d,test touch and (sorta) _urlopen
389,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,e10b0c8edf2fc204e20e14be5b4164ab489436c6,"test and fix add_files

Calling new_fr.validate() doesn't work if that file is not in the
current directory, and anyway the digest is already calculated so
there's nothing to validate.  Files already in the manifest need not
exist in the current directory, so they can't be validated either."
390,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,28017aa6a2b5bbcd9e2767a786866451ae249be6,test validate_manifest
391,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,41bc9b07013ac3a9a17d39f835cc1d74b3dd956c,don't remove the fist element of argv twice
392,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,0c607afc5488e16b0f4ef5d3ac1e4c250a8047c1,Remove 'session' setup from database calls that don't require one
393,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,84ec527733a73e24389346e60c8fe833e0a00660,New loans endpoint should return the loan object they represent
394,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,c9db42b9c3d8a268c5fa564a941bff6bf7ffcf12,Add admin requirement to request a loan (for now)
395,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,e3f3b57edd246a5c58c354b06041d22abb85b9ed,"Use native dict for machines/classes endpoint return type, rather than building a custom one from wsme"
396,https://api.github.com/repos/mozilla/build-relengapi/pulls/235,235,Fold all relengapi blueprints together,"This incorporates the Git history of all of the component projects (mapper, slaveloan, clobberer, and tooltool), so the list of commits is huge.  After the merges, there's a bunch of work to remove the hacks required to support a multi-repo project.  And I made a bit of an editorial pass through the documentation while flattening it.

A few benefits here:
- A single version simplifies deployment and testing
- With only a single project, we can easily use Alembic to manage the relengapi DB
- We can refactor things without landing patches to multiple repos
- Release notes can include changes to all code
- Name collisions in DB tables, etc. cause errors before deployment to staging
- It's still nice and easy to develop -- no external dependencies are required for a development deployment to pass its tests
- Documentation feels less disjointed
",djmitche,28673,2015-05-27T21:53:24Z,CONTRIBUTOR,False,6629,643,141,Your Interface to Release Engineering Automation -,Python,7e6d604b86622f736a05130a9dc62de1270b826e,Remove temporary endpoint
397,https://api.github.com/repos/mozilla/build-relengapi/pulls/233,233,Fix mistyped HTML comment,"This was a minor nit I noticed while looking in my IDE...

r? @djmitche
",Callek,1415602,2015-05-13T20:45:57Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,684dfdc3d5f3f5107fb47fc66f3b407c7126db3a,Fix mistyped HTML comment
398,https://api.github.com/repos/mozilla/build-relengapi/pulls/227,227,"When !can_view and !can_issue, tokenauth view should show *something*","As it is, if you can't issue or view tokens, you get a big 'ol blank screen, which leads to lots of ""[what browser version are you using](https://bugzilla.mozilla.org/show_bug.cgi?id=1162556)"" kind of debugging.
",djmitche,28673,2015-05-13T14:21:30Z,CONTRIBUTOR,True,10,1,2,Your Interface to Release Engineering Automation -,Python,31c6903cf6d2612ffb9aa4974c7d99e343d7fc9e,"Show an alert when the user has no token permissions

This also fixes the please-login screen to use an alert instead of just
a <p>."
399,https://api.github.com/repos/mozilla/build-relengapi/pulls/232,232,Add req of Sphinx>=1.3,"PR #194 broke upgrade attempts due to the lack of a hint to upgrade Sphinx.

In manual testing Sphinx 1.3 is enough to get past the error:
`sphinx.errors.ThemeError: no theme named 'classic' found (missing theme.conf?)`
",Callek,1415602,2015-05-11T21:21:33Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,5c34360fac6151b6bbd535156d57c3b3df3e059c,Add req of Sphinx>=1.3
400,https://api.github.com/repos/mozilla/build-relengapi/pulls/231,231,Revert setting MySQL timezone to UTC,"See #31, #229.
",djmitche,28673,2015-05-08T16:42:28Z,CONTRIBUTOR,True,0,3,1,Your Interface to Release Engineering Automation -,Python,5d5b745259023da52f4b07e5705eacb84d8bf273,"Revert setting MySQL timezone to UTC

See #31, #229."
401,https://api.github.com/repos/mozilla/build-relengapi/pulls/230,230,Use the correct function signature for fake test_client.open,"This fixes the tooltool build failure in https://travis-ci.org/djmitche/build-tooltool/jobs/61779980
",djmitche,28673,2015-05-08T16:41:05Z,CONTRIBUTOR,True,2,3,1,Your Interface to Release Engineering Automation -,Python,4b87a4546b561b941619fab55cc20ef0c695260e,Use the correct function signature for fake test_client.open
402,https://api.github.com/repos/mozilla/build-relengapi/pulls/228,228,Add support for Mozilla-style POSIX groups,"This will enable us to match scm_level_\* groups, specifically.

@jdow does this look awful?  @callek, designed review-guy-for-relengapi, what do you think?
",djmitche,28673,2015-05-07T20:20:40Z,CONTRIBUTOR,True,29,3,2,Your Interface to Release Engineering Automation -,Python,640721aa5fc53ee9643f273e5544d274fdddb654,"Add support for Mozilla-style POSIX groups

This will enable us to match scm_level_* groups, specifically."
403,https://api.github.com/repos/mozilla/build-relengapi/pulls/226,226,Add relengapi contribute.json,"This lists github as the repository, even though it's not the RoR.  I
think that will be simpler for contirbutors.

This refs #224.
",djmitche,28673,2015-05-05T16:05:42Z,CONTRIBUTOR,True,29,0,2,Your Interface to Release Engineering Automation -,Python,e79a9be3bc9cef5f47ddcf6145974cf32cd6759c,"Add relengapi contribute.json

This lists github as the repository, even though it's not the RoR.  I
think that will be simpler for contirbutors."
404,https://api.github.com/repos/mozilla/build-relengapi/pulls/226,226,Add relengapi contribute.json,"This lists github as the repository, even though it's not the RoR.  I
think that will be simpler for contirbutors.

This refs #224.
",djmitche,28673,2015-05-05T16:05:42Z,CONTRIBUTOR,True,29,0,2,Your Interface to Release Engineering Automation -,Python,d61eb04cb7d57caa4c160a6969ad9dd3eab1b570,add celery
405,https://api.github.com/repos/mozilla/build-relengapi/pulls/31,31,Handle extra MySQL engine options,"When setting up a MySQL engine or connection, set some extra options:
- storage_engine (defaulting to InnoDB)
- always use unicode
- set timezone = UTC

Buildbot is a good example for the storage engine, at least (although it sets MyISAM).
",djmitche,28673,2015-05-01T17:26:35Z,CONTRIBUTOR,True,32,5,1,Your Interface to Release Engineering Automation -,Python,4512b73ccf21ec76c50c1fd44c21826f29ea6b6a,build a more generic way to instantiate db engines per dialect
406,https://api.github.com/repos/mozilla/build-relengapi/pulls/31,31,Handle extra MySQL engine options,"When setting up a MySQL engine or connection, set some extra options:
- storage_engine (defaulting to InnoDB)
- always use unicode
- set timezone = UTC

Buildbot is a good example for the storage engine, at least (although it sets MyISAM).
",djmitche,28673,2015-05-01T17:26:35Z,CONTRIBUTOR,True,32,5,1,Your Interface to Release Engineering Automation -,Python,589475fd093afc0590b56f226cbde0615d065bcc,"special-case MySQL storage engine, unicode, and timezone"
407,https://api.github.com/repos/mozilla/build-relengapi/pulls/210,210,Format user tokens better,"When authenticating with a token, str(current_user) contains only the token ID, which doesn't indicate _whose_ token it is.  That info should be readily avaliable, and would make logging a lot more helpful!
",djmitche,28673,2015-04-25T16:45:12Z,CONTRIBUTOR,True,24,2,2,Your Interface to Release Engineering Automation -,Python,310065bd577dc9025d02684ed1bc5f9276154907,put more data in token stringifications
408,https://api.github.com/repos/mozilla/build-relengapi/pulls/203,203,"On token generation page, ""issue"" button should be disabled, not hidden","Mostly a new user issue - it's not obvious that to issue a token, the description must be non-empty.
Having the ""issue"" button visible, but disabled, would suggest that something more needs to be done.
",djmitche,28673,2015-04-25T16:44:22Z,CONTRIBUTOR,True,9,1,3,Your Interface to Release Engineering Automation -,Python,3a08041943a86934ba98f522ccbb4bf704eea764,"disable, rather than hiding, the tokenauth Issue button"
409,https://api.github.com/repos/mozilla/build-relengapi/pulls/203,203,"On token generation page, ""issue"" button should be disabled, not hidden","Mostly a new user issue - it's not obvious that to issue a token, the description must be non-empty.
Having the ""issue"" button visible, but disabled, would suggest that something more needs to be done.
",djmitche,28673,2015-04-25T16:44:22Z,CONTRIBUTOR,True,9,1,3,Your Interface to Release Engineering Automation -,Python,59034f476f077d9368e21ce5b90d910f5a3aad1e,display new tokens with a smaller font size
410,https://api.github.com/repos/mozilla/build-relengapi/pulls/223,223,dont show orange revoke tokens button if there are no revokable tokens,"fix for https://github.com/mozilla/build-relengapi/issues/198
",grenade,111819,2015-04-23T16:22:18Z,MEMBER,True,29,2,1,Your Interface to Release Engineering Automation -,Python,f3c673d6ea14ca719769ddf9ca6ebfb9f49cb1ba,"dont show orange revoke tokens button if there are no revokable tokens

fix for https://github.com/mozilla/build-relengapi/issues/198"
411,https://api.github.com/repos/mozilla/build-relengapi/pulls/223,223,dont show orange revoke tokens button if there are no revokable tokens,"fix for https://github.com/mozilla/build-relengapi/issues/198
",grenade,111819,2015-04-23T16:22:18Z,MEMBER,True,29,2,1,Your Interface to Release Engineering Automation -,Python,267cb57942923a072df027397a445f6fdbcedc18,handle prm tokens and scenarios where no tokens exist
412,https://api.github.com/repos/mozilla/build-relengapi/pulls/33,33,Use python-versioneer to handle version numbers,"@warner has a cool library that makes it easier to bump versions of Python packages.  RelengAPI should use it, and recommend that other blueprints use it too.
",djmitche,28673,2015-04-22T16:39:52Z,CONTRIBUTOR,False,1122,19,8,Your Interface to Release Engineering Automation -,Python,d995389a07a5609f313362100cd021cad309a69b,(WIP) set up to use versioneer to track versions
413,https://api.github.com/repos/mozilla/build-relengapi/pulls/161,161,Improve the <perm> directive to describe permissions in a tooltip,"If you hover over a permission anywhere in the Releng API UI, it should give you the description for that permission.

This will require adding an endpoint that describes permissions (probably in the `auth` blueprint), then calling that appropriately from Angular code.
",djmitche,28673,2015-04-22T15:52:26Z,CONTRIBUTOR,True,40,12,9,Your Interface to Release Engineering Automation -,Python,34e9de409fddd08fbfae60cee8cc0b7a6e174c79,"Update the <perm> element to include a tooltip with the permission's documentation

Plus:
 * make <perm> take an attribute rather than contents
 * add an iterator for permissions
 * include all permissions in every Angular template
 * use <perm> in /auth/"
414,https://api.github.com/repos/mozilla/build-relengapi/pulls/188,188,"During tests, log all paths used with the test client","So `client.get('/foo/bar')` should log something like

```
test_client: INFO: GET /foo/bar
```

This will require monkey-patching werkzeug a little bit; see https://github.com/mozilla/build-relengapi/blob/master/relengapi/lib/testing/context.py#L85
",djmitche,28673,2015-04-21T22:07:40Z,CONTRIBUTOR,True,26,5,1,Your Interface to Release Engineering Automation -,Python,cc598d00c012910b9bb77fea8588197adb98f261,Log test requests and responses
415,https://api.github.com/repos/mozilla/build-relengapi/pulls/69,69,Fold validate.sh output in Travis,"Travis sets a few environment variables, so we can tell when we're in travis:

```
TRAVIS_JOB_ID=25905243
```

and in that case, issuing lines like

```
travis_fold:start:something
...
travis_fold:end:something
```

will fold the contained contents down to a single line.
",djmitche,28673,2015-04-21T20:39:32Z,CONTRIBUTOR,True,42,14,1,Your Interface to Release Engineering Automation -,Python,d02062c2575368ec8027d0a6324650f5bf385f8e,Fold validate output under TRAVIS
416,https://api.github.com/repos/mozilla/build-relengapi/pulls/190,190,API method to force a run of a badpenny task,"For testing and probably a lot of other reasons, it'd be nice to be able to manually trigger a run of a badpenny task.

This should be a single new API method, protected by a new permission.
",djmitche,28673,2015-04-20T16:19:17Z,CONTRIBUTOR,True,282,82,7,Your Interface to Release Engineering Automation -,Python,848936275a922b49dd21eb1b1586942d39004fea,add an API call to run a badpenny task immediately
417,https://api.github.com/repos/mozilla/build-relengapi/pulls/190,190,API method to force a run of a badpenny task,"For testing and probably a lot of other reasons, it'd be nice to be able to manually trigger a run of a badpenny task.

This should be a single new API method, protected by a new permission.
",djmitche,28673,2015-04-20T16:19:17Z,CONTRIBUTOR,True,282,82,7,Your Interface to Release Engineering Automation -,Python,df89e91de7b187dd096dc70e7900ba26ecb457c8,"Refactor the badpenny UI to be more functional

Fixes #211, fixes #209."
418,https://api.github.com/repos/mozilla/build-relengapi/pulls/190,190,API method to force a run of a badpenny task,"For testing and probably a lot of other reasons, it'd be nice to be able to manually trigger a run of a badpenny task.

This should be a single new API method, protected by a new permission.
",djmitche,28673,2015-04-20T16:19:17Z,CONTRIBUTOR,True,282,82,7,Your Interface to Release Engineering Automation -,Python,6af4a3226781fd10808d39574d478b6178dfc24c,add a 'Run Now' button to run a task now
419,https://api.github.com/repos/mozilla/build-relengapi/pulls/222,222,Implement 'constant' auth,"This is handy when you're not on the 'net and thus browserid is not
practical.
",djmitche,28673,2015-04-20T16:17:50Z,CONTRIBUTOR,True,92,1,4,Your Interface to Release Engineering Automation -,Python,a90e3db8b97da15323be143fce9efac53d14b2f4,"Implement 'constant' auth

This is handy when you're not on the 'net and thus browserid is not
practical."
420,https://api.github.com/repos/mozilla/build-relengapi/pulls/222,222,Implement 'constant' auth,"This is handy when you're not on the 'net and thus browserid is not
practical.
",djmitche,28673,2015-04-20T16:17:50Z,CONTRIBUTOR,True,92,1,4,Your Interface to Release Engineering Automation -,Python,2f9b008cc0275c336295e961cec482eda14d86e1,add warning
421,https://api.github.com/repos/mozilla/build-relengapi/pulls/221,221,allow RELENGAPI_SETTINGS to be relative to the current directory,"Without this, I have to manually set RELENGAPI_SETTINGS when I switch between blueprints (tooltool vs. clobberer vs. relengapi).  With this, I can just set it to `settings.py` and it will use that file in the cwd.

r?
",djmitche,28673,2015-04-17T23:17:02Z,CONTRIBUTOR,True,10,4,2,Your Interface to Release Engineering Automation -,Python,aea6b916d9207e3459f29908ba07a159f8869977,allow RELENGAPI_SETTINGS to be relative to the current directory
422,https://api.github.com/repos/mozilla/build-relengapi/pulls/217,217,Add 'relengapi repl' for debugging use,"I found this useful, and it doesn't hurt.
",djmitche,28673,2015-04-08T19:22:29Z,CONTRIBUTOR,True,43,0,2,Your Interface to Release Engineering Automation -,Python,573c12dc1fb85bee350f978ef9ee9d258ea28017,Add 'relengapi repl' for debugging use
423,https://api.github.com/repos/mozilla/build-relengapi/pulls/215,215,"Badpenny tasks are always shown as finishing ""instantly""","This row from badpenny_jobs:

```
| 319 |       4 | 2015-04-07 19:15:05 | 2015-04-07 19:15:05 | 2015-04-07 19:23:49 |          0 | NULL   | NULL |
```

displays as ""Job started 4/7/2015 3:15:05 PM, finished instantly (details)"".  That ain't right.
",djmitche,28673,2015-04-07T20:17:52Z,CONTRIBUTOR,True,17,6,4,Your Interface to Release Engineering Automation -,Python,a9247313bb8f18cb6fce8fa087de4ecd923c9a7c,Bump to version relengapi-2.0.3
424,https://api.github.com/repos/mozilla/build-relengapi/pulls/215,215,"Badpenny tasks are always shown as finishing ""instantly""","This row from badpenny_jobs:

```
| 319 |       4 | 2015-04-07 19:15:05 | 2015-04-07 19:15:05 | 2015-04-07 19:23:49 |          0 | NULL   | NULL |
```

displays as ""Job started 4/7/2015 3:15:05 PM, finished instantly (details)"".  That ain't right.
",djmitche,28673,2015-04-07T20:17:52Z,CONTRIBUTOR,True,17,6,4,Your Interface to Release Engineering Automation -,Python,dde40ddec93f1e753c993d36b193ecb3187d3c27,Show badpenny job durations correctly
425,https://api.github.com/repos/mozilla/build-relengapi/pulls/213,213,Bug 1151636: ignore results for badpenny tasks,"This avoids creating a lot of result queues that serve no purpose.
",djmitche,28673,2015-04-07T14:53:35Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,60ec9f1fab733cef3aa8dc00b316b173c9f0e1e4,"Bug 1151636: ignore results for badpenny tasks

This avoids creating a lot of result queues that serve no purpose."
426,https://api.github.com/repos/mozilla/build-relengapi/pulls/212,212,Enable logging of SQL statements,"This solves #48, using @rahulrrixe's commit from #173.

Rahul, what do you think?
",djmitche,28673,2015-04-03T22:51:53Z,CONTRIBUTOR,True,19,4,3,Your Interface to Release Engineering Automation -,Python,b448ef0af7630008b1ae41019b5f399e7383a20e,"add SQLALCHEMY_LOG_FLAG

remove trailing spaces

new logger

add sqlalchemy flag

echo_pool for sqlalchemy logging

remove typo error

update sqlalchemy log

correct indentation

remove print statement

update sqlalchemy logging"
427,https://api.github.com/repos/mozilla/build-relengapi/pulls/212,212,Enable logging of SQL statements,"This solves #48, using @rahulrrixe's commit from #173.

Rahul, what do you think?
",djmitche,28673,2015-04-03T22:51:53Z,CONTRIBUTOR,True,19,4,3,Your Interface to Release Engineering Automation -,Python,461b82ba15c47ca2b9f6b82127ba062a8dd92906,Only log DB queries when enabled
428,https://api.github.com/repos/mozilla/build-relengapi/pulls/208,208,wsgi/Werkzeug/Flask handle the 'Authorization' header,"If you actually send ""Authorization: foo"" over HTTP, it doesn't make it to the server the way the tests suggest.
",djmitche,28673,2015-04-03T15:32:44Z,CONTRIBUTOR,True,4,1,2,Your Interface to Release Engineering Automation -,Python,933a8ddd8d98ab8c6f050d15ea786391c804d839,Reference WSGIPassAuthorization in docs
429,https://api.github.com/repos/mozilla/build-relengapi/pulls/208,208,wsgi/Werkzeug/Flask handle the 'Authorization' header,"If you actually send ""Authorization: foo"" over HTTP, it doesn't make it to the server the way the tests suggest.
",djmitche,28673,2015-04-03T15:32:44Z,CONTRIBUTOR,True,4,1,2,Your Interface to Release Engineering Automation -,Python,7f80595bbf34a58220347f6101ac44f52f8a6d16,"Requre Flask-Login 0.2.11, as 0.2.10 doesn't handle 'Authorization' correctly"
430,https://api.github.com/repos/mozilla/build-relengapi/pulls/202,202,data truncated for datetime columns,"When running badpenny tasks and updating the job rows:

```
[2015-03-27 18:22:29,935: WARNING/Worker-1] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'started_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,940: WARNING/Worker-2] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'started_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,980: WARNING/Worker-2] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'completed_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,996: WARNING/Worker-1] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'completed_at' at row 1
```
",djmitche,28673,2015-04-02T13:17:27Z,CONTRIBUTOR,True,3,1,2,Your Interface to Release Engineering Automation -,Python,09c7c1b7f31c5b6a65eb2949d8868473deddbf3d,add a missed release note
431,https://api.github.com/repos/mozilla/build-relengapi/pulls/202,202,data truncated for datetime columns,"When running badpenny tasks and updating the job rows:

```
[2015-03-27 18:22:29,935: WARNING/Worker-1] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'started_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,940: WARNING/Worker-2] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'started_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,980: WARNING/Worker-2] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'completed_at' at row 1
  cursor.execute(statement, parameters)
[2015-03-27 18:22:29,996: WARNING/Worker-1] /home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/sqlalchemy/engine/default.py:436: Warning: Data truncated for column 'completed_at' at row 1
```
",djmitche,28673,2015-04-02T13:17:27Z,CONTRIBUTOR,True,3,1,2,Your Interface to Release Engineering Automation -,Python,0a58c18b59022e1bbe9d0a2a3ee81c5b2478bb23,correctly special-case datetimes for MySQL
432,https://api.github.com/repos/mozilla/build-relengapi/pulls/206,206,log badpenny activities more verbosely,,djmitche,28673,2015-04-01T01:27:26Z,CONTRIBUTOR,True,2,0,1,Your Interface to Release Engineering Automation -,Python,48572a48681221050d81e3d24ee9174f995c369e,log badpenny activities more verbosely
433,https://api.github.com/repos/mozilla/build-relengapi/pulls/205,205,Celery logging,"#179, but with tests and docs.  r? @Callek?
",djmitche,28673,2015-04-01T01:05:28Z,CONTRIBUTOR,True,95,17,3,Your Interface to Release Engineering Automation -,Python,3b61a67f63c9d92398b0b93a71baf79cd8cbb783,Add setting for celery logging
434,https://api.github.com/repos/mozilla/build-relengapi/pulls/205,205,Celery logging,"#179, but with tests and docs.  r? @Callek?
",djmitche,28673,2015-04-01T01:05:28Z,CONTRIBUTOR,True,95,17,3,Your Interface to Release Engineering Automation -,Python,b2d0bfa216c5026403fce7bc888e3f35e3db5ca3,Alternate signal
435,https://api.github.com/repos/mozilla/build-relengapi/pulls/205,205,Celery logging,"#179, but with tests and docs.  r? @Callek?
",djmitche,28673,2015-04-01T01:05:28Z,CONTRIBUTOR,True,95,17,3,Your Interface to Release Engineering Automation -,Python,cd418b166605b293544f6d348d466368e3d4ffac,add docs and tests
436,https://api.github.com/repos/mozilla/build-relengapi/pulls/200,200,session cleanup under celery fails,"After #193:

```
[2015-03-26 13:02:08,076: CRITICAL/MainProcess] Task relengapi.blueprints.tooltool.grooming.check_file_pending_uploads[0a10970e-cb66-4a2d-a5ff-d081ab51b96a] INTERNAL ERROR: RuntimeError('working outside of application context',)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 306, in trace_task
    retval=retval, state=state)
  File ""/home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/celery/utils/dispatch/signal.py"", line 166, in send
    response = receiver(signal=self, sender=sender, **named)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/lib/db.py"", line 149, in task_postrun
    current_app.db.flush_sessions()
  File ""/home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/werkzeug/local.py"", line 338, in __getattr__
    return getattr(self._get_current_object(), name)
  File ""/home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/werkzeug/local.py"", line 297, in _get_current_object
    return self.__local()
  File ""/home/dustin/code/relengapi/t/tooltool/sandbox/lib/python2.7/site-packages/flask/globals.py"", line 34, in _find_app
    raise RuntimeError('working outside of application context')
RuntimeError: working outside of application context
```
",djmitche,28673,2015-03-27T22:23:34Z,CONTRIBUTOR,False,6,8,2,Your Interface to Release Engineering Automation -,Python,27ede315f4fb881851abf56a4238f390ee3f71f7,correctly flush sessions after celery tasks
437,https://api.github.com/repos/mozilla/build-relengapi/pulls/184,184,"Make sure ""Flask App"" docs include all app attributes","https://api.pub.build.mozilla.org/docs/development/@relengapi/app/ probably doesn't list everything it should.
",djmitche,28673,2015-03-27T21:40:35Z,CONTRIBUTOR,True,38,9,2,Your Interface to Release Engineering Automation -,Python,06d0a0546c15c77050d0b60d4c639e44611288d4,add docs for app attributes
438,https://api.github.com/repos/mozilla/build-relengapi/pulls/201,201,Add logging of token creation and revocation,"This adds the logging mentioned in #163.
",djmitche,28673,2015-03-27T21:28:33Z,CONTRIBUTOR,True,35,12,3,Your Interface to Release Engineering Automation -,Python,88ae7239c33415e9f80b942966c48dee43416f8e,Add logging of token creation and revocation
439,https://api.github.com/repos/mozilla/build-relengapi/pulls/201,201,Add logging of token creation and revocation,"This adds the logging mentioned in #163.
",djmitche,28673,2015-03-27T21:28:33Z,CONTRIBUTOR,True,35,12,3,Your Interface to Release Engineering Automation -,Python,f3fe19bb20fa24cc1a6863610179a71fb7f393a2,Log more information about token auth changes
440,https://api.github.com/repos/mozilla/build-relengapi/pulls/178,178,SQS tests are flaky,"I wonder if there's some race condition with moto and the threading, where we sometimes make calls to the ""real"" SQS.  The bogus certificate in this error looks very strange, though.

```
Exception in thread us-east-1/'my-sqs-queue' -> <function listener at 0x7ffe0f72ec08>:

Traceback (most recent call last):

File ""/opt/python/2.7.9/lib/python2.7/threading.py"", line 810, in __bootstrap_inner

self.run()

File ""/opt/python/2.7.9/lib/python2.7/threading.py"", line 763, in run

self.__target(*self.__args, **self.__kwargs)

File ""/home/travis/build/mozilla/build-relengapi/relengapi/lib/aws.py"", line 92, in _listen_thd

msg = queue.read(wait_time_seconds=20, **read_args)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/sqs/queue.py"", line 208, in read

message_attributes=message_attributes)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/sqs/queue.py"", line 302, in get_messages

message_attributes=message_attributes)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/sqs/connection.py"", line 220, in receive_message

queue.id, queue)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 1169, in get_list

response = self.make_request(action, params, path, verb)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 1115, in make_request

return self._mexe(http_request)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 942, in _mexe

request.body, request.headers)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 1001, in request

self._send_request(method, url, body, headers)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 1035, in _send_request

self.endheaders(body)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 997, in endheaders

self._send_output(message_body)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 850, in _send_output

self.send(msg)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 812, in send

self.connect()

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/https_connection.py"", line 138, in connect

'certificate' % hostname)

InvalidCertificateException: Host queue.amazonaws.com returned an invalid certificate (remote hostname ""queue.amazonaws.com"" does not match certificate): {u'subject': (((u'organizationName', u'*.54.239.19.168'),), ((u'organizationalUnitName', u'Domain Control Validated'),), ((u'commonName', u'*.54.239.19.168'),)), u'subjectAltName': ((u'DNS', u'*54.239.19.168'), (u'DNS', '54.239.19.168'), (u'DNS', u'*')), u'notAfter': 'Feb 21 20:55:31 GMT'}

................................

======================================================================

ERROR: relengapi.tests.test_lib_aws.test_sqs_listen

----------------------------------------------------------------------

Traceback (most recent call last):

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/nose/case.py"", line 197, in runTest

self.test(*self.arg)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/moto/core/models.py"", line 69, in wrapper

result = func(*args, **kwargs)

File ""/home/travis/build/mozilla/build-relengapi/relengapi/lib/testing/context.py"", line 98, in __call__

wrapped(*given_args, **kwargs)

File ""/home/travis/build/mozilla/build-relengapi/relengapi/tests/test_lib_aws.py"", line 126, in test_sqs_listen

app.aws.sqs_write('us-east-1', 'my-sqs-queue', 'BODY1')

File ""/home/travis/build/mozilla/build-relengapi/relengapi/lib/aws.py"", line 72, in sqs_write

queue.write(m)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/sqs/queue.py"", line 226, in write

message_attributes=message.message_attributes)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/sqs/connection.py"", line 331, in send_message

queue.id, verb='POST')

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 1191, in get_object

response = self.make_request(action, params, path, verb)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 1115, in make_request

return self._mexe(http_request)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 943, in _mexe

response = connection.getresponse()

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 1071, in getresponse

response = self.response_class(*args, **kwds)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/boto/connection.py"", line 390, in __init__

http_client.HTTPResponse.__init__(self, *args, **kwargs)

File ""/opt/python/2.7.9/lib/python2.7/httplib.py"", line 352, in __init__

self.fp = sock.makefile('rb', 0)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/httpretty/core.py"", line 332, in makefile

self._entry.fill_filekind(self.fd)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/httpretty/core.py"", line 591, in fill_filekind

status, headers, self.body = self.callable_body(self.request, self.info.full_url(), headers)

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/moto/core/responses.py"", line 124, in dispatch

return self.call_action()

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/moto/core/responses.py"", line 140, in call_action

response = method()

File ""/home/travis/virtualenv/python2.7.9/lib/python2.7/site-packages/moto/sqs/responses.py"", line 103, in send_message

message = self.querystring.get(""MessageBody"")[0]

TypeError: 'NoneType' object has no attribute '__getitem__'

-------------------- >> begin captured logging << --------------------

sqlalchemy.engine.base.Engine: INFO: SELECT CAST('test plain returns' AS VARCHAR(60)) AS anon_1

sqlalchemy.engine.base.Engine: INFO: ()

sqlalchemy.engine.base.Engine: INFO: SELECT CAST('test unicode returns' AS VARCHAR(60)) AS anon_1

sqlalchemy.engine.base.Engine: INFO: ()

sqlalchemy.engine.base.Engine: INFO: PRAGMA table_info(""sphinx_nodes"")

sqlalchemy.engine.base.Engine: INFO: ()

sqlalchemy.engine.base.Engine: INFO: PRAGMA table_info(""sphinx_comments"")

sqlalchemy.engine.base.Engine: INFO: ()

sqlalchemy.engine.base.Engine: INFO: PRAGMA table_info(""sphinx_commentvote"")

sqlalchemy.engine.base.Engine: INFO: ()

relengapi.lib.aws: INFO: Listening to SQS queue 'my-sqs-queue' in region us-east-1

--------------------- >> end captured logging << ---------------------

----------------------------------------------------------------------

Ran 243 tests in 26.607s
```
",djmitche,28673,2015-03-26T19:20:08Z,CONTRIBUTOR,True,18,11,2,Your Interface to Release Engineering Automation -,Python,f83b8721310922465f32dabb82b9d97605fd5ac8,make sure all threads have finished before un-mocking sqs
441,https://api.github.com/repos/mozilla/build-relengapi/pulls/199,199,include an example of a token description,"@amyrrich r?
",djmitche,28673,2015-03-26T16:28:40Z,CONTRIBUTOR,True,3,2,1,Your Interface to Release Engineering Automation -,Python,27a5647a7bc6e1aa809458b804d9458ea6adbf32,include an example of a token description
442,https://api.github.com/repos/mozilla/build-relengapi/pulls/196,196,fix JS usage on chrome,"It appears that `[].slice.apply` is the normal way to do this anyway.
",djmitche,28673,2015-03-25T19:53:51Z,CONTRIBUTOR,True,2,2,2,Your Interface to Release Engineering Automation -,Python,b8896e5bbc2767ec38ec033a9ebd96f5642c3521,fix function argument handling on chrome
443,https://api.github.com/repos/mozilla/build-relengapi/pulls/196,196,fix JS usage on chrome,"It appears that `[].slice.apply` is the normal way to do this anyway.
",djmitche,28673,2015-03-25T19:53:51Z,CONTRIBUTOR,True,2,2,2,Your Interface to Release Engineering Automation -,Python,6b91122ee1025b2d5f79b8d6e9abe947a46bff7c,"don't use Array.find, which isn't standard (yet)"
444,https://api.github.com/repos/mozilla/build-relengapi/pulls/194,194,Use the 'classic' sphinx theme,"Since we present docs inline using Jinja2 templates, this doesn't
actually have much effect, but it silences a warning from sphinx.
",djmitche,28673,2015-03-24T15:26:10Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,0fed3ed6d37e7a27afbe7840b0ca51f126b6bca7,"Use the 'classic' sphinx theme

Since we present docs inline using Jinja2 templates, this doesn't
actually have much effect, but it silences a warning from sphinx."
445,https://api.github.com/repos/mozilla/build-relengapi/pulls/189,189,badpenny `cleanup_old_jobs` fails with integrity error,"```
IntegrityError: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely) (IntegrityError) (1451, 'Cannot delete or update a parent row: a foreign key constraint fails (`relengapi`.`badpenny_job_logs`, CONSTRAINT `badpenny_job_logs_ibfk_1` FOREIGN KEY (`id`) REFERENCES `badpenny_jobs` (`id`))') 'DELETE FROM badpenny_jobs WHERE badpenny_jobs.id = %s' ((1235L,), (1238L,), (1240L,), (1243L,), (1245L,), (1248L,), (1250L,), (1253L,)  ... displaying 10 of 14 total bound parameter sets ...  (1265L,), (1268L,))
[2015-03-18 11:19:27,045: ERROR/Worker-2] Job 1276 failed
```
",djmitche,28673,2015-03-23T16:17:40Z,CONTRIBUTOR,True,38,12,5,Your Interface to Release Engineering Automation -,Python,cd29346fa771237b9bd86d9f8b96a030306b0d0b,Enforce referential integrity with SQLite
446,https://api.github.com/repos/mozilla/build-relengapi/pulls/189,189,badpenny `cleanup_old_jobs` fails with integrity error,"```
IntegrityError: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely) (IntegrityError) (1451, 'Cannot delete or update a parent row: a foreign key constraint fails (`relengapi`.`badpenny_job_logs`, CONSTRAINT `badpenny_job_logs_ibfk_1` FOREIGN KEY (`id`) REFERENCES `badpenny_jobs` (`id`))') 'DELETE FROM badpenny_jobs WHERE badpenny_jobs.id = %s' ((1235L,), (1238L,), (1240L,), (1243L,), (1245L,), (1248L,), (1250L,), (1253L,)  ... displaying 10 of 14 total bound parameter sets ...  (1265L,), (1268L,))
[2015-03-18 11:19:27,045: ERROR/Worker-2] Job 1276 failed
```
",djmitche,28673,2015-03-23T16:17:40Z,CONTRIBUTOR,True,38,12,5,Your Interface to Release Engineering Automation -,Python,f59e2baafb0b3ac861f5cf00c7ca348d1063da24,only remove relengapi-docs if it exists
447,https://api.github.com/repos/mozilla/build-relengapi/pulls/189,189,badpenny `cleanup_old_jobs` fails with integrity error,"```
IntegrityError: (raised as a result of Query-invoked autoflush; consider using a session.no_autoflush block if this flush is occurring prematurely) (IntegrityError) (1451, 'Cannot delete or update a parent row: a foreign key constraint fails (`relengapi`.`badpenny_job_logs`, CONSTRAINT `badpenny_job_logs_ibfk_1` FOREIGN KEY (`id`) REFERENCES `badpenny_jobs` (`id`))') 'DELETE FROM badpenny_jobs WHERE badpenny_jobs.id = %s' ((1235L,), (1238L,), (1240L,), (1243L,), (1245L,), (1248L,), (1250L,), (1253L,)  ... displaying 10 of 14 total bound parameter sets ...  (1265L,), (1268L,))
[2015-03-18 11:19:27,045: ERROR/Worker-2] Job 1276 failed
```
",djmitche,28673,2015-03-23T16:17:40Z,CONTRIBUTOR,True,38,12,5,Your Interface to Release Engineering Automation -,Python,d882c465a5724da85610c634bb30d13dcd4aac2a,"correctly delete logs for old jobs, too"
448,https://api.github.com/repos/mozilla/build-relengapi/pulls/193,193,Reset DB sessions between celery tasks,"Sessions are currently scoped per app instance, which means that a failed transaction in one celery task will ""poison"" all of the subsequent tasks.
",djmitche,28673,2015-03-23T15:05:42Z,CONTRIBUTOR,True,26,4,2,Your Interface to Release Engineering Automation -,Python,10798a5f20c4ca4c46c8bd1d78467cd1e131bd34,Reset DB sessions after every Celery task
449,https://api.github.com/repos/mozilla/build-relengapi/pulls/193,193,Reset DB sessions between celery tasks,"Sessions are currently scoped per app instance, which means that a failed transaction in one celery task will ""poison"" all of the subsequent tasks.
",djmitche,28673,2015-03-23T15:05:42Z,CONTRIBUTOR,True,26,4,2,Your Interface to Release Engineering Automation -,Python,26ec077741cb0dceb748683a4a94e85b56547450,better celery tests
450,https://api.github.com/repos/mozilla/build-relengapi/pulls/193,193,Reset DB sessions between celery tasks,"Sessions are currently scoped per app instance, which means that a failed transaction in one celery task will ""poison"" all of the subsequent tasks.
",djmitche,28673,2015-03-23T15:05:42Z,CONTRIBUTOR,True,26,4,2,Your Interface to Release Engineering Automation -,Python,d1b09128996ed39a648e612f1d16cd99087be06a,patch the task_postrun signal once
451,https://api.github.com/repos/mozilla/build-relengapi/pulls/192,192,"HTTP header with authentication data is called ""Authorization""","..not ""Authentication"".
",djmitche,28673,2015-03-20T20:43:35Z,CONTRIBUTOR,True,33,16,4,Your Interface to Release Engineering Automation -,Python,0dde10b6b2689802249a127b9676fd7e2aaa7994,Spell the 'Authorization' header correctly
452,https://api.github.com/repos/mozilla/build-relengapi/pulls/192,192,"HTTP header with authentication data is called ""Authorization""","..not ""Authentication"".
",djmitche,28673,2015-03-20T20:43:35Z,CONTRIBUTOR,True,33,16,4,Your Interface to Release Engineering Automation -,Python,c8ea57550521f64bc83e13fe81894d4c7f4d2be3,add Authentication header support for backward compatibility
453,https://api.github.com/repos/mozilla/build-relengapi/pulls/187,187,prohibit open redirects,"I'm open to other ideas for module name beyond 'safety'.  But I figure we'll end up with a half-dozen random utility functions, similar to [Werkzeug](http://werkzeug.pocoo.org/docs/0.10/utils/)
",djmitche,28673,2015-03-12T06:31:45Z,CONTRIBUTOR,True,74,2,6,Your Interface to Release Engineering Automation -,Python,eb1e7d21f57743461e9c691c22b3299d01cf7ff4,prohibit open redirects
454,https://api.github.com/repos/mozilla/build-relengapi/pulls/187,187,prohibit open redirects,"I'm open to other ideas for module name beyond 'safety'.  But I figure we'll end up with a half-dozen random utility functions, similar to [Werkzeug](http://werkzeug.pocoo.org/docs/0.10/utils/)
",djmitche,28673,2015-03-12T06:31:45Z,CONTRIBUTOR,True,74,2,6,Your Interface to Release Engineering Automation -,Python,792c38ec313d09a02024c553d8870538a61ccae9,link docs
455,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,fbe7223214530460d589b5f3e39566569607d90d,Add app.authz.get_user_permissions
456,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,27603fe2284a9358b8e43e39fc8b88e2e541fec4,[BREAKING CHANGE] add a disabled column to the auth_tokens table
457,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,87672c456876e9403ab17d58c9e14fc4340e311e,don't load disabled users
458,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,ab87d62959223ab3f47e9cf35cbd8a621c6bc60f,don't issue disabled tokens
459,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,694747f20d4bbea52fe909a62d83441e77701410,display disabled tokens as such
460,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,27266ed374c11f80b26288c50759b944f3de250b,refactor the blueprint's __init__ to call init_app on other modules
461,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,ade2523550742d921de6b8504dbdb9a6253efa5b,disable user tokens when their permissions are no longer allowed
462,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,cc98b8f22285470c22ffaf40a7f6f84a903aea02,docs on user token disablement
463,https://api.github.com/repos/mozilla/build-relengapi/pulls/186,186,Disable user tokens,"@callek, @jvehent 

This, along with #175, should finish off the user-token work described in #163.
",djmitche,28673,2015-03-11T17:41:07Z,CONTRIBUTOR,True,400,45,18,Your Interface to Release Engineering Automation -,Python,52eb4bb56107055586f28469fa745a2347279636,be more explicit about the token row being asserted
464,https://api.github.com/repos/mozilla/build-relengapi/pulls/183,183,Add special case for connecting to S3,"The typical boto.connect_s3 method doesn't take a 'region' argument like
most of the others, so we use boto.s3.connect_to_region instead.
",djmitche,28673,2015-03-05T20:05:29Z,CONTRIBUTOR,True,33,4,2,Your Interface to Release Engineering Automation -,Python,7cf6baaf0944fa1712a27405bf12855116721846,"Add special case for connecting to S3

The typical boto.connect_s3 method doesn't take a 'region' argument like
most of the others, so we use boto.s3.connect_to_region instead."
465,https://api.github.com/repos/mozilla/build-relengapi/pulls/181,181,Describe the devel packages you need to build a virtualenv,"@jvehent - let me know if there are more than this!
",djmitche,28673,2015-03-04T17:28:41Z,CONTRIBUTOR,True,11,0,3,Your Interface to Release Engineering Automation -,Python,a3593f749ef8110456f0c95b901bf1958c5e3e21,Describe the devel packages you need to build a virtualenv
466,https://api.github.com/repos/mozilla/build-relengapi/pulls/179,179,Add setting for celery logging,"I had a desire to use debug logging for celery for relengapi, but I wanted it without the added global debugging (using `celery worker --loglevel debug` adds loads of other output)  (my current solution has been `print` which is sub-par)

Basically I just wanted relengapi.\* to log in debug mode.  I got the general idea for this approach from http://www.toforge.com/2011/06/celery-centralized-logging/

The structure of it stemmed mostly from needed to have the signal setup before celery fully instantiates (calls its signals), but after the relengapi app is setup, and in a spot that the signal can actually access the app.

This code would need docs and test(s) if it was to be merged in, but I wanted a :+1: for the general idea first.  @djmitche or @mrrrgn . What do you think?
",Callek,1415602,2015-03-03T04:44:12Z,CONTRIBUTOR,False,12,0,1,Your Interface to Release Engineering Automation -,Python,fe46c16323bd06c5fe258e939bc3879acf7d075b,Add setting for celery logging
467,https://api.github.com/repos/mozilla/build-relengapi/pulls/179,179,Add setting for celery logging,"I had a desire to use debug logging for celery for relengapi, but I wanted it without the added global debugging (using `celery worker --loglevel debug` adds loads of other output)  (my current solution has been `print` which is sub-par)

Basically I just wanted relengapi.\* to log in debug mode.  I got the general idea for this approach from http://www.toforge.com/2011/06/celery-centralized-logging/

The structure of it stemmed mostly from needed to have the signal setup before celery fully instantiates (calls its signals), but after the relengapi app is setup, and in a spot that the signal can actually access the app.

This code would need docs and test(s) if it was to be merged in, but I wanted a :+1: for the general idea first.  @djmitche or @mrrrgn . What do you think?
",Callek,1415602,2015-03-03T04:44:12Z,CONTRIBUTOR,False,12,0,1,Your Interface to Release Engineering Automation -,Python,0a567bb5d79ee9f9a06072b364655a29852b5536,Alternate signal
468,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,042a73becf715d6ead792f7f06c1c69149cee8dc,factor out token interpretation
469,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,77b878407f64b183da93827a919cede86b3a0067,factor out handling of string-to-claim conversion
470,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,3f25719f7dc85b6cf915ca1def344fe68f344aca,move token string handling to tokenstr module
471,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,9f0659de65cfd9c45507822394f407a457925577,factor more things out of __init__.py
472,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,2949715ae8d2a53289d338259d761fa8db48d564,"upgrade token format to 'ra2', keeping compatibility"
473,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,7776978bd8ba4e2d6d5bc82e24dc7351373f49d8,factor token loader to handle multiple types
474,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,2234724adc861c72f6a18a300858161634e77dfd,load temporary tokens
475,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,83fabbf51f9ad988efa7776cddbaaad0308923a8,use the token loader for get_token_by_token
476,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,d7ad1b49cfab9ac74ef90f998123eb86f78c9bbb,rename test modules with shorter names
477,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,a228f4c5a9c34beba85b431fe730a42b7805275c,add some documentation
478,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,809dff4e65b3cf44a7dbdb20e89aa77775a83321,extend the 'Token' API type in a backward-compatible fashion
479,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,40a6e34f0ca6c0bc074b954952811cb400b1e667,Add JsonObject
480,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,84db06d23e12bd479b01912c685cf634483e1cac,Issue tmp tokens
481,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,276a9c00ab74b63a0d0c117b3d99180677608a88,cover a few edge cases
482,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,e7d113f57e0f2f6338771b0cd93b65d23c34e27f,fix error message
483,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,e7add59c38a1dea988b7c772985520a12790bdda,"[BREAKING CHANGE] change token permissions

Existing users can replace `base.tokens.$verb` with `base.tokens.prm.$verb`.
They may also want to grant `base.tokens.tmp.issue` to some users."
484,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,8b06637056dbcc82a594c7abfbb5701f35aaf9da,update documentation for token types
485,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,f48ed9d2fe41e900afe311546c0091121c61ae6f,"[BREAKING CHANGE] Add `user` and `typ` columns to the `auth_tokens` table

In the absence of a DB upgrade mechanism, this change must be made
manually in existing deployments."
486,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,081ebdd65300aa1e2fb8885797a4a27313b9f87b,make `all` a private attribute of permissions
487,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,faa1bf7b873d610bd10120044d341446779de9d4,add docs for user tokens
488,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,b25a774431bec9bb428aebc1f54ca0ff2dfc6d9c,Support user tokens in the API
489,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,bf8775144e2160ae17bd1514d655c7e55bd5a136,Fix Angular UI for tokens to work and issue usr and prm tokens
490,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,3188aed69da2b065cecf89df8ee7c4cccd42135a,remove debugging console.log
491,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,d173383287b9a1ff6bd5f8c0284e7251d932d5fc,fix display of the 'issue' button
492,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,4e023cc92fdc74fdd0a31ce911e249c46d058d96,"display token type and user, and only display revoke buttons for revokable tokens"
493,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,0f4e33bf83d6e12d636aa62920ee69ba49908151,remove un-implemented token types
494,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,f52f974c67808e2834d409a4e80b3b463695a1fd,remove debugging print
495,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,b1b8bf317739055af127d8135cd47c996eb47e8f,"use a jsonObject instance, rather than JsonObject()"
496,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,5b03a3c7f38068570c4a0ed4cb5547a1e68ce679,rename test_util and add comments
497,https://api.github.com/repos/mozilla/build-relengapi/pulls/175,175,"Add token types `usr`, `prm`, and `tmp`.","This is to the end of #163, but doesn't include OAuth.

Note that this doesn't include anything to actually disable user tokens when the corresponding user disappears -- that has some other prerequisites.  So even with this patch we won't turn on `base.tokens.usr.issue` for all users.  But it's a good stopping point in work on #163 and it's a lot of code to review already.
",djmitche,28673,2015-02-18T17:23:59Z,CONTRIBUTOR,True,1623,322,22,Your Interface to Release Engineering Automation -,Python,a9a67f58e5ea6c78a2284f73a9af7dff30621e12,return None explicitly
498,https://api.github.com/repos/mozilla/build-relengapi/pulls/173,173,Patch for issue #48 Enable logging of SQL statements ,"@djmitche  another way to do this is. Let me know which would be preferred.

``` Python
import logging

logging.basicConfig()
logging.getLogger('sqlalchemy.engine').setLevel(logging.INFO)
```
",npsolve,3780511,2015-01-28T22:11:37Z,CONTRIBUTOR,False,19,4,3,Your Interface to Release Engineering Automation -,Python,0403f1c27f8beec411ad5993ead00bac61a287f9,"add SQLALCHEMY_LOG_FLAG

remove trailing spaces

new logger

add sqlalchemy flag

echo_pool for sqlalchemy logging

remove typo error

update sqlalchemy log

correct indentation

remove print statement

update sqlalchemy logging"
499,https://api.github.com/repos/mozilla/build-relengapi/pulls/172,172,relengapi_metadata is not installed,"When a dist is installed, its `setup.cfg` is no longer available.  So all of the handy `relengapi_metadata` in there is no longer available.  Apparently this is just hard!!
",djmitche,28673,2015-01-14T04:18:58Z,CONTRIBUTOR,True,32,37,6,Your Interface to Release Engineering Automation -,Python,c3e63dfad740b685ae63545f87981b49cdcbe4f9,"reference metadata with an entry_point, instead"
500,https://api.github.com/repos/mozilla/build-relengapi/pulls/169,169, Add links to source/issue tracker to clobberer footer,"To make it easier for people to file issues/contribute :-)

(from @edmorley at https://github.com/mozilla/build-relengapi-clobberer/issues/31)
",djmitche,28673,2015-01-09T23:10:21Z,CONTRIBUTOR,True,224,56,10,Your Interface to Release Engineering Automation -,Python,6d5e60f346ba0c93e029cf67e6b26bc8a7083514,Introduce and display relengapi metadata
501,https://api.github.com/repos/mozilla/build-relengapi/pulls/169,169, Add links to source/issue tracker to clobberer footer,"To make it easier for people to file issues/contribute :-)

(from @edmorley at https://github.com/mozilla/build-relengapi-clobberer/issues/31)
",djmitche,28673,2015-01-09T23:10:21Z,CONTRIBUTOR,True,224,56,10,Your Interface to Release Engineering Automation -,Python,9daa48216b6253ffc66c4160931e8696c3735aac,only look for relengapi metadata where there's a relengapi blueprint
502,https://api.github.com/repos/mozilla/build-relengapi/pulls/171,171,Get better coverage,"I was bored..

And yes. the apidoc bit is probably cheating, but I barely understand how docutils works, let alone how to test it.  Besides, the code is exercised by building the docs, and anyway it's not production code.
",djmitche,28673,2015-01-05T23:34:50Z,CONTRIBUTOR,True,85,13,6,Your Interface to Release Engineering Automation -,Python,0db2952e823294ba33aada7865fd8ddd87e7e1a4,"get better coverage

plus a little pep8"
503,https://api.github.com/repos/mozilla/build-relengapi/pulls/171,171,Get better coverage,"I was bored..

And yes. the apidoc bit is probably cheating, but I barely understand how docutils works, let alone how to test it.  Besides, the code is exercised by building the docs, and anyway it's not production code.
",djmitche,28673,2015-01-05T23:34:50Z,CONTRIBUTOR,True,85,13,6,Your Interface to Release Engineering Automation -,Python,ac11c24294695668214db12a4471b36d6c023695,Omit coverage of apidoc.py
504,https://api.github.com/repos/mozilla/build-relengapi/pulls/27,27,Implement caching,"Lots of apps need caching for efficiency and to hold down load on other services.

Relengapi should make this easy to get access to.
",djmitche,28673,2015-01-05T22:51:31Z,CONTRIBUTOR,True,397,0,7,Your Interface to Release Engineering Automation -,Python,aef0689e9b96ed2318676740ad501d42629ddca3,doc what I want to do
505,https://api.github.com/repos/mozilla/build-relengapi/pulls/27,27,Implement caching,"Lots of apps need caching for efficiency and to hold down load on other services.

Relengapi should make this easy to get access to.
",djmitche,28673,2015-01-05T22:51:31Z,CONTRIBUTOR,True,397,0,7,Your Interface to Release Engineering Automation -,Python,92b4aa4575a394a017edb5ab61759635b7db841a,implement app.memcached
506,https://api.github.com/repos/mozilla/build-relengapi/pulls/27,27,Implement caching,"Lots of apps need caching for efficiency and to hold down load on other services.

Relengapi should make this easy to get access to.
",djmitche,28673,2015-01-05T22:51:31Z,CONTRIBUTOR,True,397,0,7,Your Interface to Release Engineering Automation -,Python,8a5c93f2357365d8a8c6443ac796f6e6927f3340,Mock out auto discovery instead of running a TCP server
507,https://api.github.com/repos/mozilla/build-relengapi/pulls/170,170,use the new travis environment,"http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
",djmitche,28673,2014-12-27T19:56:51Z,CONTRIBUTOR,True,1,0,1,Your Interface to Release Engineering Automation -,Python,72bb3dc75cface6feaaee827bb5e76c64564d70d,use the new travis environment
508,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,403c18ff41a598948319f4b1d319776837e508c0,"add app.aws, with SQS capability"
509,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,a34950925ef3f913d529f9e2252dd4f36248a126,install boto and moto
510,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,408338ff0edcd7df1a5c82488577084b3c57aea0,test relengapi.lib.aws
511,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,c5f00a6c9c3bb62b25194dd9413ec93e29afe931,add deployment docs for AWS
512,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,2cf46afe4799eb6e0a04ab1db3722efd8462b8e8,document AWS
513,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,816beae29c99934cd4cae76dfa554194dde46ff6,refactor SQS support to specify region/queue directly
514,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,806da576c9d428d774fe63fef5985cf0823fbf67,add pointer for sending messages in another format
515,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,ba538560f32b3573583b591bfa0ec09a780f05c8,add SQS listening capabilities
516,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,f3a470a5c25af1d20bd58c321f71e889108e43b1,"test exception handling, too"
517,https://api.github.com/repos/mozilla/build-relengapi/pulls/18,18,Implement MQ support,"Blueprints should have easy access to reliable message production and (in other processes than the web server) consumption.
",djmitche,28673,2014-12-24T03:31:23Z,CONTRIBUTOR,True,406,0,12,Your Interface to Release Engineering Automation -,Python,1ff49867a0dfd6619c860abadbe6f9bd612d4b58,fix typo
518,https://api.github.com/repos/mozilla/build-relengapi/pulls/160,160,Error message is shown for 4xx status even if it's specified with `expected_status`,"In Badpenny, if you expand a log that doesn't exist, the badpenny code handles it nicely (""(no logs)""), but the user also gets an Alertify notice.
",djmitche,28673,2014-12-17T04:48:10Z,CONTRIBUTOR,True,5,2,3,Your Interface to Release Engineering Automation -,Python,c4d24b99c2dcc61e5de9ac52f8c63d9ae3246950,fix docs typo
519,https://api.github.com/repos/mozilla/build-relengapi/pulls/160,160,Error message is shown for 4xx status even if it's specified with `expected_status`,"In Badpenny, if you expand a log that doesn't exist, the badpenny code handles it nicely (""(no logs)""), but the user also gets an Alertify notice.
",djmitche,28673,2014-12-17T04:48:10Z,CONTRIBUTOR,True,5,2,3,Your Interface to Release Engineering Automation -,Python,55665b23c33690d75419c5e32b877d4b3777fb8a,"Fix 404's being reported for jobs without logs

This was mostly a typo, but once that was fixed, there was no logging of
expected responses to the console, so that got fixed too."
520,https://api.github.com/repos/mozilla/build-relengapi/pulls/167,167,Redirect loop on `/tokenauth/tokens`,"Steps to reproduce:
1. Start RelengAPI with default settings.
2. Open `/tokenauth/tokens` in your browser.
3. You'll be redirected to `/login_request?next=%2Ftokenauth%2Ftokens`.
4. Log in with some valid credentials.
5. Observe the redirect loop:

![screen shot 2014-12-16 at 5 31 31 pm](https://cloud.githubusercontent.com/assets/44974/5456064/791d4e0c-8549-11e4-92da-ebb51ec9c93b.png)
",djmitche,28673,2014-12-17T04:32:12Z,CONTRIBUTOR,True,20,5,2,Your Interface to Release Engineering Automation -,Python,c7b1418dfa5754876a658ea888e047184fdaead8,"Only bounce users to the login page if they're not logged in

This eliminates a redirect loop where a page the logged-in user doeesn't
have access to redirects them to the login page, which immediately
redirects them back to the page."
521,https://api.github.com/repos/mozilla/build-relengapi/pulls/167,167,Redirect loop on `/tokenauth/tokens`,"Steps to reproduce:
1. Start RelengAPI with default settings.
2. Open `/tokenauth/tokens` in your browser.
3. You'll be redirected to `/login_request?next=%2Ftokenauth%2Ftokens`.
4. Log in with some valid credentials.
5. Observe the redirect loop:

![screen shot 2014-12-16 at 5 31 31 pm](https://cloud.githubusercontent.com/assets/44974/5456064/791d4e0c-8549-11e4-92da-ebb51ec9c93b.png)
",djmitche,28673,2014-12-17T04:32:12Z,CONTRIBUTOR,True,20,5,2,Your Interface to Release Engineering Automation -,Python,5d9aa909d9986db8e3f85758f5989e436738420d,fix tests
522,https://api.github.com/repos/mozilla/build-relengapi/pulls/168,168,Ensure TokenUser.permissions is a set,"The failure to make this a set caused tokens to be unable to issue other tokens.
",djmitche,28673,2014-12-16T18:45:11Z,CONTRIBUTOR,True,5,1,3,Your Interface to Release Engineering Automation -,Python,05643864a7c19ddc3ef1b7892466e21fbdbd2508,Ensure TokenUser.permissions is a set
523,https://api.github.com/repos/mozilla/build-relengapi/pulls/168,168,Ensure TokenUser.permissions is a set,"The failure to make this a set caused tokens to be unable to issue other tokens.
",djmitche,28673,2014-12-16T18:45:11Z,CONTRIBUTOR,True,5,1,3,Your Interface to Release Engineering Automation -,Python,1a0e0c5f09c8a833c80cbc1a1d7b36d1e7f3223d,"check type of u.permissions, just to be sure"
524,https://api.github.com/repos/mozilla/build-relengapi/pulls/155,155,Document API usage generally,"The ""Usage"" section of the docs documents a number of APIs specifically, but doesn't talk about
- how to authenticate
- what the requests and success and error responses should look like
",djmitche,28673,2014-12-16T18:41:26Z,CONTRIBUTOR,True,117,0,3,Your Interface to Release Engineering Automation -,Python,28e82c7f308354bfede2da5f280abd276b8842bb,Document general API usage
525,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,e54b6522f1ff91efbc0b97609916296d9e89bf2c,add bootstrap-3.3.1
526,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,a7d25afdfbfff1a16e18b693bdcc274557a681d3,upgrade jQuery as required by bootstrap
527,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,089822248e7deedcc3641fa8c4ae2544ae5c8a49,add Moment.js and angular-moment
528,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,74764c8854c0fb314d844d721d92a426b4f3e5ee,Use Bootstrap for the page layout and the main page
529,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,4b6b64f1169d9540ce7a9ab06ca45d8f13200473,fix up styling for account view
530,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,bd6f3cf37bd7ff0b9792e345eeac18b316223ed2,Fix up styling -- sort of -- for badpenny
531,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,1d715a6411ee588d493b70328353a51af4a25198,add a <perm> directive
532,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,caa6dc290e099f1c99ee8b25eb541a362bcdf2fc,make token interface nicer
533,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,b77fc28061a0c09aa3f8d136ea945b9836d2ce1f,use a directive for status icons
534,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,a7b8008efe36590b61e4d71ee80d01071fda2cd5,do a better job with expanding and collapsing
535,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,3c5813074a0c5bfa055a160512d809fe1fe45e37,use a directive for token permission selector
536,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,edc2344dcfdc483c2e222ab0124f9a88db1764cd,fix up appearance depending on permissions
537,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,f7584c19d7ee73ed0319e09480d2cf78523260bf,handle permissions as a list of permission strings
538,https://api.github.com/repos/mozilla/build-relengapi/pulls/162,162,Use bootstrap,"This includes a bunch of beautification.  The badpenny and token UIs are now pretty nice and easy to use.  I've also done some Angular refactoring to make that a bit more natural.

@mrrrgn I'm curious what you think, since you worked with Angular for Clobberer.

Fixes #43.
",djmitche,28673,2014-12-15T22:32:52Z,CONTRIBUTOR,True,9736,324,40,Your Interface to Release Engineering Automation -,Python,bffac0ca6d0b92afa99577e4a7c2b90391306a45,include all static files
539,https://api.github.com/repos/mozilla/build-relengapi/pulls/159,159,Fix target of the username link,"Fixes #146.
",djmitche,28673,2014-12-09T23:54:00Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,bfc45771b053d967270eb3f82ea327d70ccd855f,"Fix target of the username link

Fixes #146."
540,https://api.github.com/repos/mozilla/build-relengapi/pulls/158,158,Add coveralls support,"We should export coverage reports to coveralls.io
",Callek,1415602,2014-12-09T23:44:56Z,CONTRIBUTOR,True,4,0,1,Your Interface to Release Engineering Automation -,Python,6c2b3a6e82a823d21201794b0b1fafd53d07f791,Add coveralls support
541,https://api.github.com/repos/mozilla/build-relengapi/pulls/103,103,Display UI operations,"Every UI operation should be calling documented API methods via HTTP.  Some $httpProvider interceptors should be able to log those calls and display them in the browser.  This makes it easy for a user to click around the UI until they figure out what they want to do, then quickly see how to automate it.
",djmitche,28673,2014-12-02T20:31:55Z,CONTRIBUTOR,True,29,0,1,Your Interface to Release Engineering Automation -,Python,f63671d135ba83f0d1ff0a469a94131171c65188,log all relengapi requests and responses
542,https://api.github.com/repos/mozilla/build-relengapi/pulls/156,156,Fix rename step in skeleton docs,"Plus a bunch of formatting

@laggyluke, what do you think?
",djmitche,28673,2014-11-21T14:04:14Z,CONTRIBUTOR,True,18,2,1,Your Interface to Release Engineering Automation -,Python,73d62282a63434ff5d949aef6523451687a545e8,"Fix rename step in skeleton docs

Plus a bunch of formatting"
543,https://api.github.com/repos/mozilla/build-relengapi/pulls/149,149,"Permissions should support a way to say ""all authorized humans""","This could be useful for Persona Auth and LDAP auth (token auth shouldn't use it)

Basically a way to say ""somepermission"" is good for any logged in people.

I'm thinking '`__all__`'

Part of the reasoning is so that we can give explicit perms for things to tokenauth users, rather than 'all'
",djmitche,28673,2014-11-03T20:12:03Z,CONTRIBUTOR,True,17,1,3,Your Interface to Release Engineering Automation -,Python,2ff722a3cc2154ec4209278d1a510aead71f8a12,Support granting permissions to all LDAP-authenticated users
544,https://api.github.com/repos/mozilla/build-relengapi/pulls/152,152,Adds a minified angular,"The size of angular (~750KB) causes problems for users with low bandwidth. The minified version should help with this a good deal.
Further, a minification map was added so that developers can still debug angular problems within their browser consoles.
",ghost,10137,2014-10-28T18:53:35Z,NONE,True,213,2,5,Your Interface to Release Engineering Automation -,Python,0c5f81a5971ae42e8e10f6014dc9e89ef6822846,"Adds a minified angular

The size of angular (~750KB) causes problems for users with low bandwidth. The minified version should help with this a good deal.
Further, a minification map was added so that developers can still debug angular problems within their browser consoles."
545,https://api.github.com/repos/mozilla/build-relengapi/pulls/152,152,Adds a minified angular,"The size of angular (~750KB) causes problems for users with low bandwidth. The minified version should help with this a good deal.
Further, a minification map was added so that developers can still debug angular problems within their browser consoles.
",ghost,10137,2014-10-28T18:53:35Z,NONE,True,213,2,5,Your Interface to Release Engineering Automation -,Python,8d10c89a69830ffd90a8a24f1f8f407c2a1728ec,Add minification maps to the list of packaged resource/static files.
546,https://api.github.com/repos/mozilla/build-relengapi/pulls/152,152,Adds a minified angular,"The size of angular (~750KB) causes problems for users with low bandwidth. The minified version should help with this a good deal.
Further, a minification map was added so that developers can still debug angular problems within their browser consoles.
",ghost,10137,2014-10-28T18:53:35Z,NONE,True,213,2,5,Your Interface to Release Engineering Automation -,Python,8540eee901b23770d578731918d1ffc022d41afd,Fixes source map. The path to the full angular.js file and the full angular.js file are needed for source mapping to work.
547,https://api.github.com/repos/mozilla/build-relengapi/pulls/150,150,Always log SQL statements in tests,"This will help both with debugging and with optimizing queries.
",djmitche,28673,2014-10-28T14:45:17Z,CONTRIBUTOR,True,8,6,2,Your Interface to Release Engineering Automation -,Python,19c1f364be77eef59a91d309f8099a01812b0a90,Always log SQL statements in tests
548,https://api.github.com/repos/mozilla/build-relengapi/pulls/145,145,`test_group_in_chain_json` is hanging:,"```
This test protects against an issue with nested chains and groups when encoding with json. ...
 -------------- celery@euclid.r.igoro.us v3.1.14 (Cipater)
---- **** -----
--- * ***  * -- Linux-3.10.25-aufs-2014022401-aufs-x86_64-AMD_Phenom-tm-_II_X2_555_Processor-with-gentoo-2.2
-- * - **** ---
- ** ---------- [config]
- ** ---------- .> app:         relengapi.app:0x7f8850501d90
- ** ---------- .> transport:   sqla+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- ** ---------- .> results:     db+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- *** --- * --- .> concurrency: 2 (solo)
-- ******* ----
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery


[2014-10-16 09:13:09,846: WARNING/MainProcess] celery@euclid.r.igoro.us ready.
[2014-10-16 09:13:10,164: WARNING/MainProcess] /home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py:364: RuntimeWarning: Exception raised outside body: AttributeError(""'dict' object has no attribute 'type'"",):
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'

  exc, exc_info.traceback)))
[2014-10-16 09:13:10,165: CRITICAL/MainProcess] Task relengapi.tests.test_celery.test_task_json[2485aad4-2c80-489c-a9d0-a0ca4f97693f] INTERNAL ERROR: AttributeError(""'dict' object has no attribute 'type'"",)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'
```
",djmitche,28673,2014-10-16T13:35:26Z,CONTRIBUTOR,True,50,1,2,Your Interface to Release Engineering Automation -,Python,aeca87d723eea7bd5a33650b1dc3151dfdbde447,Add simplejson to requirements and some tests to help demonstrate the need
549,https://api.github.com/repos/mozilla/build-relengapi/pulls/145,145,`test_group_in_chain_json` is hanging:,"```
This test protects against an issue with nested chains and groups when encoding with json. ...
 -------------- celery@euclid.r.igoro.us v3.1.14 (Cipater)
---- **** -----
--- * ***  * -- Linux-3.10.25-aufs-2014022401-aufs-x86_64-AMD_Phenom-tm-_II_X2_555_Processor-with-gentoo-2.2
-- * - **** ---
- ** ---------- [config]
- ** ---------- .> app:         relengapi.app:0x7f8850501d90
- ** ---------- .> transport:   sqla+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- ** ---------- .> results:     db+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- *** --- * --- .> concurrency: 2 (solo)
-- ******* ----
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery


[2014-10-16 09:13:09,846: WARNING/MainProcess] celery@euclid.r.igoro.us ready.
[2014-10-16 09:13:10,164: WARNING/MainProcess] /home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py:364: RuntimeWarning: Exception raised outside body: AttributeError(""'dict' object has no attribute 'type'"",):
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'

  exc, exc_info.traceback)))
[2014-10-16 09:13:10,165: CRITICAL/MainProcess] Task relengapi.tests.test_celery.test_task_json[2485aad4-2c80-489c-a9d0-a0ca4f97693f] INTERNAL ERROR: AttributeError(""'dict' object has no attribute 'type'"",)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'
```
",djmitche,28673,2014-10-16T13:35:26Z,CONTRIBUTOR,True,50,1,2,Your Interface to Release Engineering Automation -,Python,1c37dba1be12dc3f61ef7552123b4e5455798401,Merge callek/build-relengapi:celery-simplejson (PR #143)
550,https://api.github.com/repos/mozilla/build-relengapi/pulls/145,145,`test_group_in_chain_json` is hanging:,"```
This test protects against an issue with nested chains and groups when encoding with json. ...
 -------------- celery@euclid.r.igoro.us v3.1.14 (Cipater)
---- **** -----
--- * ***  * -- Linux-3.10.25-aufs-2014022401-aufs-x86_64-AMD_Phenom-tm-_II_X2_555_Processor-with-gentoo-2.2
-- * - **** ---
- ** ---------- [config]
- ** ---------- .> app:         relengapi.app:0x7f8850501d90
- ** ---------- .> transport:   sqla+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- ** ---------- .> results:     db+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- *** --- * --- .> concurrency: 2 (solo)
-- ******* ----
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery


[2014-10-16 09:13:09,846: WARNING/MainProcess] celery@euclid.r.igoro.us ready.
[2014-10-16 09:13:10,164: WARNING/MainProcess] /home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py:364: RuntimeWarning: Exception raised outside body: AttributeError(""'dict' object has no attribute 'type'"",):
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'

  exc, exc_info.traceback)))
[2014-10-16 09:13:10,165: CRITICAL/MainProcess] Task relengapi.tests.test_celery.test_task_json[2485aad4-2c80-489c-a9d0-a0ca4f97693f] INTERNAL ERROR: AttributeError(""'dict' object has no attribute 'type'"",)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'
```
",djmitche,28673,2014-10-16T13:35:26Z,CONTRIBUTOR,True,50,1,2,Your Interface to Release Engineering Automation -,Python,c30d23ce4fae0582375cda437a30d8a4f7cfb508,Merge djmitche/build-relengapi:issue135 (PR #135)
551,https://api.github.com/repos/mozilla/build-relengapi/pulls/145,145,`test_group_in_chain_json` is hanging:,"```
This test protects against an issue with nested chains and groups when encoding with json. ...
 -------------- celery@euclid.r.igoro.us v3.1.14 (Cipater)
---- **** -----
--- * ***  * -- Linux-3.10.25-aufs-2014022401-aufs-x86_64-AMD_Phenom-tm-_II_X2_555_Processor-with-gentoo-2.2
-- * - **** ---
- ** ---------- [config]
- ** ---------- .> app:         relengapi.app:0x7f8850501d90
- ** ---------- .> transport:   sqla+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- ** ---------- .> results:     db+sqlite:////home/dustin/code/relengapi/t/relengapi/relengapi/tests/test_temp/celery.db
- *** --- * --- .> concurrency: 2 (solo)
-- ******* ----
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery


[2014-10-16 09:13:09,846: WARNING/MainProcess] celery@euclid.r.igoro.us ready.
[2014-10-16 09:13:10,164: WARNING/MainProcess] /home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py:364: RuntimeWarning: Exception raised outside body: AttributeError(""'dict' object has no attribute 'type'"",):
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'

  exc, exc_info.traceback)))
[2014-10-16 09:13:10,165: CRITICAL/MainProcess] Task relengapi.tests.test_celery.test_task_json[2485aad4-2c80-489c-a9d0-a0ca4f97693f] INTERNAL ERROR: AttributeError(""'dict' object has no attribute 'type'"",)
Traceback (most recent call last):
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/app/trace.py"", line 280, in trace_task
    signature(callbacks[0], app=app).delay(retval)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 168, in delay
    return self.apply_async(partial_args, partial_kwargs)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 487, in apply_async
    type = self.type
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/celery/canvas.py"", line 550, in type
    app = self._app if self._app else self.tasks[0].type.app
AttributeError: 'dict' object has no attribute 'type'
```
",djmitche,28673,2014-10-16T13:35:26Z,CONTRIBUTOR,True,50,1,2,Your Interface to Release Engineering Automation -,Python,63c05ff211f471b4dfa5bf158fcf1ec6944a2e19,Require Celery >= 3.1.16 to avoid bug
552,https://api.github.com/repos/mozilla/build-relengapi/pulls/144,144,Fix tests to use proper timezone conversions,"Removes old pytz requirement. fixes issue #144 
",Callek,1415602,2014-10-16T05:20:01Z,CONTRIBUTOR,True,6,8,2,Your Interface to Release Engineering Automation -,Python,a337b037541d3c92deb01681c5935e63828f10cc,"Fix tests to use proper timezone conversions, and remove old-ver restriction on pytz"
553,https://api.github.com/repos/mozilla/build-relengapi/pulls/135,135,Alertify utility to log $http errors,"Every time we use `$http` to make an API request from the frontend, we need to alert if it fails.  That's actually a little messy: `alertify.error(""Failed getting job logs: "" + data.data.error.name);`

Instead, something like this would be great:

```
$http.get(..)
.then(function (data, status, headers, config) {
}, alertify.http_error_handler(""Failed to get job logs""))
```

Whether to embed this in `alertify`, make it an Angular provider, or what needs a bit of thought -- I don't mean to imply an answer to that question here.
",djmitche,28673,2014-10-15T20:14:40Z,CONTRIBUTOR,True,130,29,7,Your Interface to Release Engineering Automation -,Python,aa669349d45f33f6c0589fcb1394c77793559a21,Return a non-HTML description for errors
554,https://api.github.com/repos/mozilla/build-relengapi/pulls/135,135,Alertify utility to log $http errors,"Every time we use `$http` to make an API request from the frontend, we need to alert if it fails.  That's actually a little messy: `alertify.error(""Failed getting job logs: "" + data.data.error.name);`

Instead, something like this would be great:

```
$http.get(..)
.then(function (data, status, headers, config) {
}, alertify.http_error_handler(""Failed to get job logs""))
```

Whether to embed this in `alertify`, make it an Angular provider, or what needs a bit of thought -- I don't mean to imply an answer to that question here.
",djmitche,28673,2014-10-15T20:14:40Z,CONTRIBUTOR,True,130,29,7,Your Interface to Release Engineering Automation -,Python,ca6aee3494d9b6a8accf33df3bc4fa5246f64f72,"Introduce a 'relengapi' module and 'restapi' service

This service handles display of error messages automatically, avoiding
the situation where a button just does nothing, with the error hidden in
the developer console."
555,https://api.github.com/repos/mozilla/build-relengapi/pulls/143,143,Add simplejson to requirements to fix celery json encoder,"So in writing stuff for slaveloan I hit https://github.com/celery/celery/issues/2033, which indicates there is no workaround for the builtin json encoder at the moment. However it also indicates its fixable by adding in simplejson.

I chose to add additional tests at the same time as testing this, verifying various states of chain and group, and the same exact test with and without json this so that issues with the json encoder will be apparently an issue with json. (Also allows us to try and back this piece out later, with confidence, if we suspect its fixed)
",Callek,1415602,2014-10-14T22:40:07Z,CONTRIBUTOR,True,49,0,2,Your Interface to Release Engineering Automation -,Python,aeca87d723eea7bd5a33650b1dc3151dfdbde447,Add simplejson to requirements and some tests to help demonstrate the need
556,https://api.github.com/repos/mozilla/build-relengapi/pulls/136,136,`raise self.error(..)` is not how to handle errors in a Docutils Domain,"```
Traceback (most recent call last):lengapi/badpenny                                                                                                                                                                                                                       
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/bin/relengapi"", line 9, in <module>
    load_entry_point('relengapi==0.3', 'console_scripts', 'relengapi')()
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/lib/subcommands.py"", line 62, in main
    args._subcommand.run(parser, args)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/blueprints/docs/__init__.py"", line 134, in run
    support.build()
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/websupport/__init__.py"", line 127, in build
    app.build()
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/application.py"", line 220, in build
    self.builder.build_update()
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 214, in build_update
    'out of date' % len(to_build))
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 276, in build
    self.write(docnames, list(updated_docnames), method)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 320, in write
    self._write_serial(sorted(docnames), warnings)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/builders/__init__.py"", line 331, in _write_serial
    doctree = self.env.get_and_resolve_doctree(docname, self)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/environment.py"", line 1117, in get_and_resolve_doctree
    self.resolve_references(doctree, docname, builder)
  File ""/home/dustin/code/relengapi/t/relengapi/sandbox/lib/python2.7/site-packages/sphinx/environment.py"", line 1348, in resolve_references
    typ, target, node, contnode)
  File ""/home/dustin/code/relengapi/t/relengapi/relengapi/lib/apidoc.py"", line 331, in resolve_xref
    raise self.error(""MISSING REFERENCE: api:%s:%s"" % (typ, target))
AttributeError: 'ApiDomain' object has no attribute 'error'
```

And no, I don't know what the right way is!
",djmitche,28673,2014-10-14T20:55:19Z,CONTRIBUTOR,True,5,5,1,Your Interface to Release Engineering Automation -,Python,dbaeeaf4f9f266d98328b6c32bb9390c6d07b604,"Raise RuntimeError instead of using the nonexistent self.error

Fixes #136."
557,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,61cc279e8d890ffe11e99bbdbdbaf2c25b395bf5,Updated docs pointing to the relengapi skeleton
558,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,35e2ecbb032c33412f6df61ccebaf1415abd6d3f,"move fiximports.py out of the root dir, just like in relengapi-skeleton"
559,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,f0c0b60d3303dcbcf550cb21cc42f7cfbb93d7c4,exclude namespace packages from coverage
560,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,5dd22a8138029da120f5f2cc2ba3aece75cd04f2,suggest running validate.sh
561,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,f2de4d7ba482d5864d7e923bff4c1f55ad50499b,remove unused variable
562,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,716f6f4a7118e73be7dba85f1f20bb60ebfc5ea3,"suggest wiping out README.md, add more tips"
563,https://api.github.com/repos/mozilla/build-relengapi/pulls/140,140,Reference `build-relengapi-skeleton` in docs,"This fills out the creating-a-blueprint process in quite a bit more detail.

The skeleton is up to date with these instructions (in fact, it duplicates them in its own tests).
",djmitche,28673,2014-10-13T20:55:33Z,CONTRIBUTOR,True,75,48,8,Your Interface to Release Engineering Automation -,Python,86fa5ae13cf00805f12c7461b7c430f414ad6f04,add note about forking the skeleton on Github
564,https://api.github.com/repos/mozilla/build-relengapi/pulls/139,139,Use better defaults for DB URIs when no config is present,"This puts each relengapi database in its own sqlite database, but _only_
if `SQLALCHEMY_DATABASE_URIS` is not present at all.  Otherwise, an
unknown database is considered an error.

This is one way to address #138
",djmitche,28673,2014-10-13T16:05:20Z,CONTRIBUTOR,True,72,32,5,Your Interface to Release Engineering Automation -,Python,3b393f2c726815f53e9a6715805b4dc224261b45,"Use better defaults for DB URIs when no config is present

This puts each relengapi database in its own sqlite database, but *only*
if `SQLALCHEMY_DATABASE_URIS` is not present at all.  Otherwise, an
unknown database is considered an error."
565,https://api.github.com/repos/mozilla/build-relengapi/pulls/131,131,Badpenny: remove `result` from jobs,"Jobs have a `result` column that badpenny clients can use to store results from a job that are more detailed than ""succeeded"" or ""failed"".

@Callek pointed out that the column is a generic JSON blob, and that using such things in a DB has gotten us into trouble before.

I don't have any practical use for this column.  Most jobs either won't need any results (cleanups, query-and-send-email, etc.) or will need to store results in a more complex fashion (slaveloan).

So let's deep-six it.
",djmitche,28673,2014-10-13T14:15:06Z,CONTRIBUTOR,True,14,28,4,Your Interface to Release Engineering Automation -,Python,929e6557feb6c3f184d3defd09bc2a4a4fc68009,remove 'result' from badpenny jobs
566,https://api.github.com/repos/mozilla/build-relengapi/pulls/137,137,Move Badpenny logs to their own DB table,"Per issue #130.  This also adds `app.db.flush_sessions()` to improve the tests, which were otherwise incorrectly passing.
",djmitche,28673,2014-10-10T19:57:01Z,CONTRIBUTOR,True,147,24,10,Your Interface to Release Engineering Automation -,Python,5e96d5921bb1751e9638c1f0e2eb550cee30e1a5,Add a BadpennyJobLog table
567,https://api.github.com/repos/mozilla/build-relengapi/pulls/137,137,Move Badpenny logs to their own DB table,"Per issue #130.  This also adds `app.db.flush_sessions()` to improve the tests, which were otherwise incorrectly passing.
",djmitche,28673,2014-10-10T19:57:01Z,CONTRIBUTOR,True,147,24,10,Your Interface to Release Engineering Automation -,Python,c1c0fe515fcb5b175c3580f09ce3a7fe6fbd1ad6,Add 'app.db.flush_sessions' for testing
568,https://api.github.com/repos/mozilla/build-relengapi/pulls/137,137,Move Badpenny logs to their own DB table,"Per issue #130.  This also adds `app.db.flush_sessions()` to improve the tests, which were otherwise incorrectly passing.
",djmitche,28673,2014-10-10T19:57:01Z,CONTRIBUTOR,True,147,24,10,Your Interface to Release Engineering Automation -,Python,5ad82cdb274fffa7fe299e62d99c69bd01a0954a,add as-yet failing tests
569,https://api.github.com/repos/mozilla/build-relengapi/pulls/137,137,Move Badpenny logs to their own DB table,"Per issue #130.  This also adds `app.db.flush_sessions()` to improve the tests, which were otherwise incorrectly passing.
",djmitche,28673,2014-10-10T19:57:01Z,CONTRIBUTOR,True,147,24,10,Your Interface to Release Engineering Automation -,Python,f6751a99f7ad1580803093353ee48c38214dcad2,Read from and write to the badpenny logs table
570,https://api.github.com/repos/mozilla/build-relengapi/pulls/137,137,Move Badpenny logs to their own DB table,"Per issue #130.  This also adds `app.db.flush_sessions()` to improve the tests, which were otherwise incorrectly passing.
",djmitche,28673,2014-10-10T19:57:01Z,CONTRIBUTOR,True,147,24,10,Your Interface to Release Engineering Automation -,Python,f09b804e9ba544ddbdd17a88b681790d3855cf55,load logs in the frontend
571,https://api.github.com/repos/mozilla/build-relengapi/pulls/134,134,add a bit of docs about creating databases,"@mrrrgn r?
",djmitche,28673,2014-10-10T15:27:09Z,CONTRIBUTOR,True,5,0,1,Your Interface to Release Engineering Automation -,Python,db2bf7846cccc07decfa364e9c59a0f269a20a3c,add a bit of docs about creating databases
572,https://api.github.com/repos/mozilla/build-relengapi/pulls/134,134,add a bit of docs about creating databases,"@mrrrgn r?
",djmitche,28673,2014-10-10T15:27:09Z,CONTRIBUTOR,True,5,0,1,Your Interface to Release Engineering Automation -,Python,1a1737040d3d1306d0cd6dbe224db88f6d536429,"clarify that db's need to be configured in settings.py, too"
573,https://api.github.com/repos/mozilla/build-relengapi/pulls/127,127,Make settings_example.py Usable for Local Development,"Ideally developers should require as little setup as possible
to get starting working on relengapi. This change will default
the settings to create a sqlite database in the current directory.
",ghost,10137,2014-10-07T18:40:46Z,NONE,True,11,3,2,Your Interface to Release Engineering Automation -,Python,4fceecb8dcda1f7dd8a8d4598cd0b5a266b3138d,"Make settings_example.py Usable for Local Development

Ideally developers should require as little setup as possible
to get starting working on relengapi. This change will default
the settings to create a sqlite database in the current directory."
574,https://api.github.com/repos/mozilla/build-relengapi/pulls/127,127,Make settings_example.py Usable for Local Development,"Ideally developers should require as little setup as possible
to get starting working on relengapi. This change will default
the settings to create a sqlite database in the current directory.
",ghost,10137,2014-10-07T18:40:46Z,NONE,True,11,3,2,Your Interface to Release Engineering Automation -,Python,87022da16cda3d21e728e9ae244ea1b5da3a57fb,Adds default sqlite databases to default settings and example settings.
575,https://api.github.com/repos/mozilla/build-relengapi/pulls/126,126,Update README.md to reflect most current setup steps,,ghost,10137,2014-10-07T18:40:34Z,NONE,False,10,5,1,Your Interface to Release Engineering Automation -,Python,90479a376bf2aa0bc43a60aa19409b0789ad6d03,Update README.md to reflect most current setup steps
576,https://api.github.com/repos/mozilla/build-relengapi/pulls/126,126,Update README.md to reflect most current setup steps,,ghost,10137,2014-10-07T18:40:34Z,NONE,False,10,5,1,Your Interface to Release Engineering Automation -,Python,0315a2606ebdb170362f1594ff57a8c73f1efa8f,Make optional setup steps explicit
577,https://api.github.com/repos/mozilla/build-relengapi/pulls/123,123,Update docs now that relengapi is not in base/,"I should have fixed this up in #67.
",djmitche,28673,2014-09-30T18:04:36Z,CONTRIBUTOR,True,1,2,1,Your Interface to Release Engineering Automation -,Python,a29572380a0e4a30c27d7df304a91e704108533a,Update docs now that relengapi is not in base/
578,https://api.github.com/repos/mozilla/build-relengapi/pulls/121,121,/badpenny/tasks doesn't have an 'active' argument,,djmitche,28673,2014-09-30T16:46:12Z,CONTRIBUTOR,True,1,1,1,Your Interface to Release Engineering Automation -,Python,c61ee78044a08557d4183709b600997785eef2c9,/badpenny/tasks doesn't have an 'active' argument
579,https://api.github.com/repos/mozilla/build-relengapi/pulls/67,67,"Move relengapi package to root of repository, kick out others","This is currently in `base/` to allow other projects -- slaveloan in particular -- to exist in the same repo.

However, once we're at relengapi-1.0.0, the API will be stable enough (per semantic versioning) that it's no longer necessary to co-develop projects with relengapi.
",djmitche,28673,2014-09-29T20:40:19Z,CONTRIBUTOR,True,15,16,137,Your Interface to Release Engineering Automation -,Python,2cb3a62bd6c3ecb183fab32b8cafed2dd2859948,move base/ to the root directory
580,https://api.github.com/repos/mozilla/build-relengapi/pulls/67,67,"Move relengapi package to root of repository, kick out others","This is currently in `base/` to allow other projects -- slaveloan in particular -- to exist in the same repo.

However, once we're at relengapi-1.0.0, the API will be stable enough (per semantic versioning) that it's no longer necessary to co-develop projects with relengapi.
",djmitche,28673,2014-09-29T20:40:19Z,CONTRIBUTOR,True,15,16,137,Your Interface to Release Engineering Automation -,Python,85ff8606bba755f98dd3659302cc8c28f8afc7f1,don't use a subshell
581,https://api.github.com/repos/mozilla/build-relengapi/pulls/67,67,"Move relengapi package to root of repository, kick out others","This is currently in `base/` to allow other projects -- slaveloan in particular -- to exist in the same repo.

However, once we're at relengapi-1.0.0, the API will be stable enough (per semantic versioning) that it's no longer necessary to co-develop projects with relengapi.
",djmitche,28673,2014-09-29T20:40:19Z,CONTRIBUTOR,True,15,16,137,Your Interface to Release Engineering Automation -,Python,b9ca50b95a896f33d89def56f3703f0db396ddf6,update travis too
582,https://api.github.com/repos/mozilla/build-relengapi/pulls/92,92,Don't require any configuration,"By default, FLASK fails if the env var passed to `app.config.from_envvar` isn't set.  But relengapi should run reasonably well with no explicit configuration.

While I'm at it, validate.sh should also unset `RELENGAPI_SETTINGS` when running relengapi.
",djmitche,28673,2014-09-09T00:05:57Z,CONTRIBUTOR,True,12,1,1,Your Interface to Release Engineering Automation -,Python,0b1eebf1bf6fbb09491027f1518bd9df16c54685,don't require RELENGAPI_SETTINGS
583,https://api.github.com/repos/mozilla/build-relengapi/pulls/92,92,Don't require any configuration,"By default, FLASK fails if the env var passed to `app.config.from_envvar` isn't set.  But relengapi should run reasonably well with no explicit configuration.

While I'm at it, validate.sh should also unset `RELENGAPI_SETTINGS` when running relengapi.
",djmitche,28673,2014-09-09T00:05:57Z,CONTRIBUTOR,True,12,1,1,Your Interface to Release Engineering Automation -,Python,ca54368ddba75aae1b2a7c3bd80680c21012547d,shift messages around
584,https://api.github.com/repos/mozilla/build-relengapi/pulls/78,78,Rename entry point `relengapi.blueprints`,"It's `relengapi_blueprints` right now, which is a bit non-standard.  We can keep the old name for compatibility.
",djmitche,28673,2014-09-08T23:43:08Z,CONTRIBUTOR,True,31,15,5,Your Interface to Release Engineering Automation -,Python,d6bc0430ac7b8851de2dbe0a2e3edac18cf5f71c,"Rename `relengapi_blueprints` to `relengapi.blueprints`

..but keep compatibility with the old name"
585,https://api.github.com/repos/mozilla/build-relengapi/pulls/78,78,Rename entry point `relengapi.blueprints`,"It's `relengapi_blueprints` right now, which is a bit non-standard.  We can keep the old name for compatibility.
",djmitche,28673,2014-09-08T23:43:08Z,CONTRIBUTOR,True,31,15,5,Your Interface to Release Engineering Automation -,Python,57c1e0cb897fcd497dd217366dfc3cbc3186750c,remove some redundant code calling iter_entry_points
586,https://api.github.com/repos/mozilla/build-relengapi/pulls/86,86,Rename modules in 'relengapi' to be in 'relengapi.lib',"Just for consistency, and to leave the 'relengapi' namespace clean
- [x] `relengapi.celery`
- [x] `relengapi.db`
- [x] `relengapi.proxy`
- [x] `relengapi.subcommands`
- [x] `relengapi.testing`
",djmitche,28673,2014-09-08T22:53:07Z,CONTRIBUTOR,True,14,14,15,Your Interface to Release Engineering Automation -,Python,eff6acca6d6d1421c44fef533c99f70d6f5b9a49,move `relengapi.proxy` to `relengapi.lib.proxy`
587,https://api.github.com/repos/mozilla/build-relengapi/pulls/86,86,Rename modules in 'relengapi' to be in 'relengapi.lib',"Just for consistency, and to leave the 'relengapi' namespace clean
- [x] `relengapi.celery`
- [x] `relengapi.db`
- [x] `relengapi.proxy`
- [x] `relengapi.subcommands`
- [x] `relengapi.testing`
",djmitche,28673,2014-09-08T22:53:07Z,CONTRIBUTOR,True,14,14,15,Your Interface to Release Engineering Automation -,Python,d75e4fb5ef4a0f7fe9c4e7084c7569979caee380,move `relengapi.subcommands` to `relengapi.lib.subcommands`
588,https://api.github.com/repos/mozilla/build-relengapi/pulls/86,86,Rename modules in 'relengapi' to be in 'relengapi.lib',"Just for consistency, and to leave the 'relengapi' namespace clean
- [x] `relengapi.celery`
- [x] `relengapi.db`
- [x] `relengapi.proxy`
- [x] `relengapi.subcommands`
- [x] `relengapi.testing`
",djmitche,28673,2014-09-08T22:53:07Z,CONTRIBUTOR,True,14,14,15,Your Interface to Release Engineering Automation -,Python,8f1b399fec87ff302829426e5232f668356f19cc,move `relengapi.db` to `relengapi.lib.db`
589,https://api.github.com/repos/mozilla/build-relengapi/pulls/116,116,borrowed code from buildbot fiximports.py to validate and fix import issues in #112,"borrowed code from https://github.com/buildbot/buildbot/blob/master/common/fiximports.py to validate and fix import issues in #112 
",amyrrich,517785,2014-09-08T22:27:18Z,CONTRIBUTOR,True,355,121,46,Your Interface to Release Engineering Automation -,Python,99cb84f81c0743c2990645a59d30b2cfa6f6f1bc,borrowed code from https://github.com/buildbot/buildbot/blob/master/common/fiximports.py to fix import issues in #112
590,https://api.github.com/repos/mozilla/build-relengapi/pulls/116,116,borrowed code from buildbot fiximports.py to validate and fix import issues in #112,"borrowed code from https://github.com/buildbot/buildbot/blob/master/common/fiximports.py to validate and fix import issues in #112 
",amyrrich,517785,2014-09-08T22:27:18Z,CONTRIBUTOR,True,355,121,46,Your Interface to Release Engineering Automation -,Python,846253c70697d413f3ab85b3d8ab00ff7e2b8f33,added fiximports.py
591,https://api.github.com/repos/mozilla/build-relengapi/pulls/115,115,Flake8,"Added flake8 support to validate pyflake+pep8 syntax.
",amyrrich,517785,2014-09-08T21:48:41Z,CONTRIBUTOR,False,18,1,3,Your Interface to Release Engineering Automation -,Python,881fc7a753a5b933c6f94edfbdece6834460b10d,added flake8 wrapper support (including hacking module) to add pep8+pyflake validation checks
592,https://api.github.com/repos/mozilla/build-relengapi/pulls/114,114,Simplify validate,"This just folds in the `validate-common.sh` which was only common to `validate.sh`.  And adds a test that I wrote while on final descent into Denver.
",djmitche,28673,2014-09-08T16:57:15Z,CONTRIBUTOR,True,74,55,4,Your Interface to Release Engineering Automation -,Python,1cb6c7ee562ce81faf7740646f39bd2bcfbc8be2,collapse validate-common.sh into validate.sh
593,https://api.github.com/repos/mozilla/build-relengapi/pulls/114,114,Simplify validate,"This just folds in the `validate-common.sh` which was only common to `validate.sh`.  And adds a test that I wrote while on final descent into Denver.
",djmitche,28673,2014-09-08T16:57:15Z,CONTRIBUTOR,True,74,55,4,Your Interface to Release Engineering Automation -,Python,b58a9847b37448c5f7939b5f2b7162b96d81a4e6,test _user_loader
594,https://api.github.com/repos/mozilla/build-relengapi/pulls/113,113,Testing utils,"This adds a bunch of testing utilities, and moves testing utliites to `relengapi.lib.testing` (c.f. #86)
",djmitche,28673,2014-09-08T16:34:09Z,CONTRIBUTOR,True,123,37,24,Your Interface to Release Engineering Automation -,Python,79db8a285bfc2d1a531e8cab13aa47bff9d4a4e7,move relengapi.testing to relengapi.tests.context
595,https://api.github.com/repos/mozilla/build-relengapi/pulls/113,113,Testing utils,"This adds a bunch of testing utilities, and moves testing utliites to `relengapi.lib.testing` (c.f. #86)
",djmitche,28673,2014-09-08T16:34:09Z,CONTRIBUTOR,True,123,37,24,Your Interface to Release Engineering Automation -,Python,271511e5c5ae21fd067efc3a96d7c4bd3c31b605,Add general support for testing subcommands
596,https://api.github.com/repos/mozilla/build-relengapi/pulls/113,113,Testing utils,"This adds a bunch of testing utilities, and moves testing utliites to `relengapi.lib.testing` (c.f. #86)
",djmitche,28673,2014-09-08T16:34:09Z,CONTRIBUTOR,True,123,37,24,Your Interface to Release Engineering Automation -,Python,f2b276ff59b481a0a4cbd6a6ff757fd7a067130c,"move subcommands to relengapi.lib.testing, since it's a part of the API"
597,https://api.github.com/repos/mozilla/build-relengapi/pulls/113,113,Testing utils,"This adds a bunch of testing utilities, and moves testing utliites to `relengapi.lib.testing` (c.f. #86)
",djmitche,28673,2014-09-08T16:34:09Z,CONTRIBUTOR,True,123,37,24,Your Interface to Release Engineering Automation -,Python,551415f6b828c566f96f55f81e47a553ab009007,"move TestContext to relengapi.lib.testing.context, since it's part of the blueprint API"
598,https://api.github.com/repos/mozilla/build-relengapi/pulls/113,113,Testing utils,"This adds a bunch of testing utilities, and moves testing utliites to `relengapi.lib.testing` (c.f. #86)
",djmitche,28673,2014-09-08T16:34:09Z,CONTRIBUTOR,True,123,37,24,Your Interface to Release Engineering Automation -,Python,cdafb9514ef007169a9cdde5ecc0f362c3a0ffc6,bump up required coverage
599,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,f08a60818097376b2ba0e81533aa8fd6ff6e6021,add a global --quiet commandline option
600,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,83cec01e1f6cdf91c5fe0ab3a8e529f01ec68abe,Don't use the runtime app context for tests
601,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,6697f676bc66dc927ca3b58d2f92afd3aed3766b,refactor badpenny blueprint into several modules
602,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,6c15cb321d8d22b40be585d07a9b08126cc285e1,"Create 'relengapi badpenny-cron'

This command synchronizes tasks in the code with tasks in the DB, and
then runs any tasks that are due.  It doesn't actually *run* them yet."
603,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,bcd04c43f0ba55c54b9e17191bd31593f7e1a8d9,Actually run tasks
604,https://api.github.com/repos/mozilla/build-relengapi/pulls/111,111,Badpenny Part III,"This adds the ability to register and run periodic tasks, as well as a cleanup task that serves (if nothing else) as an example.
",djmitche,28673,2014-09-05T18:43:42Z,CONTRIBUTOR,True,693,205,15,Your Interface to Release Engineering Automation -,Python,c1bbd26622f0f022f9b778657cac5a83d8ecbded,Periodically clean up old jobs
605,https://api.github.com/repos/mozilla/build-relengapi/pulls/110,110,add a global --quiet commandline option,"This is useful for the `relengapi badpenny-cron` command, which shouldn't have debugging output by default.
",djmitche,28673,2014-09-05T17:29:19Z,CONTRIBUTOR,True,26,5,2,Your Interface to Release Engineering Automation -,Python,ae80c018a5f7f36e4b00c2d0d0ef8e5467ee0026,add a global --quiet commandline option
606,https://api.github.com/repos/mozilla/build-relengapi/pulls/110,110,add a global --quiet commandline option,"This is useful for the `relengapi badpenny-cron` command, which shouldn't have debugging output by default.
",djmitche,28673,2014-09-05T17:29:19Z,CONTRIBUTOR,True,26,5,2,Your Interface to Release Engineering Automation -,Python,10700c5ea2cb2ab5127a982e5c3d1052b1b949ad,use better messages in the test
607,https://api.github.com/repos/mozilla/build-relengapi/pulls/109,109,Don't use the runtime app context for tests,"I noticed test data was leaking into my dev DB because I'd forgotten `@test_context`.  This makes tests fail under that condition, instead.
",djmitche,28673,2014-09-05T17:28:57Z,CONTRIBUTOR,True,5,1,1,Your Interface to Release Engineering Automation -,Python,7874b035861f8a920f4f95e8bf9bf95a391bfee4,Don't use the runtime app context for tests
608,https://api.github.com/repos/mozilla/build-relengapi/pulls/108,108,Move relengapi.celery to relengapi.lib.celery,"..and clean up some docs.  Part of #86.
",djmitche,28673,2014-09-04T19:13:05Z,CONTRIBUTOR,True,62,63,6,Your Interface to Release Engineering Automation -,Python,88ad7112122ce6c50999497babeee4dee6e0fe66,"Move relengapi.celery to relengapi.lib.celery

..and clean up some docs.  Part of #86."
609,https://api.github.com/repos/mozilla/build-relengapi/pulls/107,107,Introduce `relengapi.time` module with a `now` method,"I suspect at some point I'll also want a ""format time interval"" method, for example for pretty-printing badpenny task times.
",djmitche,28673,2014-09-04T19:11:16Z,CONTRIBUTOR,True,22,0,2,Your Interface to Release Engineering Automation -,Python,2aaf7fe739082eff0645d0e31182773feefcd10f,Introduce `relengapi.time` module with a `now` method
610,https://api.github.com/repos/mozilla/build-relengapi/pulls/106,106,Always store naive datetimes in the DB,"MySQL, at least, does not support storing a timezone.  As long as we
assume UTC, this doesn't hurt.
",djmitche,28673,2014-09-04T19:09:08Z,CONTRIBUTOR,True,6,0,1,Your Interface to Release Engineering Automation -,Python,5293a20505b49b0408e83ab538fd9779511992b1,"Strip timezone information from datetimes on MySQL

MySQL does not support storing a timezone, and will give a warning if
given any timezone information (even 0000).  So don't give it timezone
information."
611,https://api.github.com/repos/mozilla/build-relengapi/pulls/105,105,Fix support for nullable UTCDateTime instances,,djmitche,28673,2014-09-04T15:04:03Z,CONTRIBUTOR,True,13,6,2,Your Interface to Release Engineering Automation -,Python,45dda82a61113132b05a89cc921b086402bf24cd,Fix support for nullable UTCDateTime instances
612,https://api.github.com/repos/mozilla/build-relengapi/pulls/79,79,switch from pylint to pyflakes,"Pylint has given us far far more false positives than have been useful, to the point where I feel pylint is starting to be more of a problem than a help.

Lets disable it and/or switch to pyflakes.
",djmitche,28673,2014-08-12T20:49:48Z,CONTRIBUTOR,True,7,292,5,Your Interface to Release Engineering Automation -,Python,ff649c20d4d1510f35b197e205f91ff2b9c7f5fc,replace pylint with pyflakes
613,https://api.github.com/repos/mozilla/build-relengapi/pulls/97,97,Define and register badpenny tasks,"This still doesn't _run_ the tasks (see #26 for the schedule), but defines and displays them.
",djmitche,28673,2014-08-12T20:18:51Z,CONTRIBUTOR,True,262,21,11,Your Interface to Release Engineering Automation -,Python,a366b571f1084d217312a85a3692ef1fd70c5c31,Define and register badpenny tasks
614,https://api.github.com/repos/mozilla/build-relengapi/pulls/97,97,Define and register badpenny tasks,"This still doesn't _run_ the tasks (see #26 for the schedule), but defines and displays them.
",djmitche,28673,2014-08-12T20:18:51Z,CONTRIBUTOR,True,262,21,11,Your Interface to Release Engineering Automation -,Python,1353b9d83b8230337dc5b5867d5c98c827070014,remove unnecessary pylint directive
615,https://api.github.com/repos/mozilla/build-relengapi/pulls/95,95,Badpenny Part 1,"This adds a blueprint with a UI and an API, but leaves a lot for subsequent ""parts"", including configuring tasks and executing jobs.
",djmitche,28673,2014-08-04T17:03:49Z,CONTRIBUTOR,True,644,7,11,Your Interface to Release Engineering Automation -,Python,3d85ef9bedc4ef826330d6de6a0a46a458d0dd92,Badpenny: add a basic blueprint with some UI for seeing tasks and jobs
616,https://api.github.com/repos/mozilla/build-relengapi/pulls/95,95,Badpenny Part 1,"This adds a blueprint with a UI and an API, but leaves a lot for subsequent ""parts"", including configuring tasks and executing jobs.
",djmitche,28673,2014-08-04T17:03:49Z,CONTRIBUTOR,True,644,7,11,Your Interface to Release Engineering Automation -,Python,99693f7f9165fbd9c7d49700580cc103f1a18585,add badpenny docs
617,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,622d6efb14c16bdc0cae4665af1d896a66672ff5,fix docs typos
618,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,1292327e90ea30b8622c47c7ce30328741b318c1,"Use AngularJS

This also shifts the external JS libraries around, and holds jQuery
locally to avoid the possibility of code injection via DNS hijacking.

Angular templates don't mix with Jinja2 templates -- Angular templates
are static files.  This avoids any conflict over interpolation markers
({{ .. }}).

The auth and tokenauth blueprints use Angular, while the
authentication button stays with simple jQuery, leaving it outside any
Anglar app on the page."
619,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,093d1476e4d4d2bf1eeb38d93e9ab1afd6e26260,"Use subrequests to get initial_data

This properly adheres to permissions"
620,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,335d90639c5d3db42470521bb925d44659275048,rewrite issueToken to use $http
621,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,1386c8f732e65f7023004614ec7002947a4a0192,handle permission errors in subrequests appropriately
622,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,de2641d678cf99c117ab68ab4be925496ff414d1,remove dead code
623,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,bb94cac2868ba9408894942e5cfd833eab4dd01c,ignore bogus super-on-old-class warning
624,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,0ff023d5a79f462cc3eae61a7a6b2ec5f9627deb,test api.get_data
625,https://api.github.com/repos/mozilla/build-relengapi/pulls/93,93,Use Angular,"This replaces the ugly jQuery-based UIs for tokens, etc. with much cleaner Angular apps.

It also provides some nice equipment to make it easy to include an Angular app in a view function.  Basically, a page can be _either_ a Jinja2 template (rare, except core stuff) or an Angular template (more common for UIs).

I learned the hard way, by trying and failing twice, that you can't really mix the two, and that you can't mix source from more than one blueprint in a single page -- in particular, implementing the root widgets using AngularJS is not practical (see https://github.com/djmitche/build-relengapi/tree/angular-root-widgets).

I hope that the docs are actually _more_ understandable than before.  I realize that Angular's not a common tool among releng, but I think it can become one.
",djmitche,28673,2014-07-29T22:24:12Z,CONTRIBUTOR,True,21232,191,32,Your Interface to Release Engineering Automation -,Python,12738ea158b1d82d1a56d8f495b290cea9a4393b,add tests for angular
626,https://api.github.com/repos/mozilla/build-relengapi/pulls/91,91,JSON-encode WSME types properly,"Ordinarily, WSME handles calling its `tojson` method, which converts type instances into dictionaries.  However, this means that just calling `json.dumps` on such an object fails, which is inconvenient in tests and in passing JSON-ified data around through other means.

This patch adds the capability to encode such objects to Flask's JSON support, meaning that `flask.jsonify` and `flask.json.dumps` will both correctly interpret type instances.
",djmitche,28673,2014-07-18T20:39:56Z,CONTRIBUTOR,True,40,2,3,Your Interface to Release Engineering Automation -,Python,005652a9f7ded891467728645131cd776cfa553b,Allow flask.json to encode WSME types
627,https://api.github.com/repos/mozilla/build-relengapi/pulls/91,91,JSON-encode WSME types properly,"Ordinarily, WSME handles calling its `tojson` method, which converts type instances into dictionaries.  However, this means that just calling `json.dumps` on such an object fails, which is inconvenient in tests and in passing JSON-ified data around through other means.

This patch adds the capability to encode such objects to Flask's JSON support, meaning that `flask.jsonify` and `flask.json.dumps` will both correctly interpret type instances.
",djmitche,28673,2014-07-18T20:39:56Z,CONTRIBUTOR,True,40,2,3,Your Interface to Release Engineering Automation -,Python,d2bbe21a848355e717b69fca51946bba3fc1ee2e,don't expect documentation of types used in test modules
628,https://api.github.com/repos/mozilla/build-relengapi/pulls/89,89,Docs on documenting non-REST API endpoints,"@petemoore it looks like this would apply to mapper, specifically.  What do you think?
",djmitche,28673,2014-07-07T16:47:01Z,CONTRIBUTOR,True,38,0,2,Your Interface to Release Engineering Automation -,Python,d8df3defff82f4e9c900cf39f4a28bb8b1a51bdc,Docs on documenting non-REST API endpoints
629,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,237de3536134d08f14356558e13049959a114329,Merge djmitche/build-relengapi:redir-browsers-only (PR #87)
630,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,bc9bc2c1ca35865159f72bebcfb292d1f294bd67,"Improve @apimethod with types and docs.

This uses the working bits of WSME to handle data types for request and
response values.  And it introduces a new Sphinx extension to handle
documenting API endpoints."
631,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,169b8f4e9f9bb8f4631153a7f4c4c0eac012a0cf,Document REST API types
632,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,77adc464131652f0ff1a069ae4034178ffeb7e8d,Add support for cross-referencing types and endpoints
633,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,d2dbea9f26caab55ca26ba86dc2463b1585fbc71,"refactor type display, and link all types to their definitions"
634,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,19eb76e7e1eec6c4d83f8af0be8f1a85745c1a30,verify that everything is documented
635,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,2c8ace7edcee6d205be95d434ff71939a51ec34b,remove TODO item
636,https://api.github.com/repos/mozilla/build-relengapi/pulls/29,29,Automatically document API endpoints,"This should be similar to the Sphinx Autodoc extension, so users add something like `.. apidoc: mapper.*` to the docs at an appropriate location, and every matching API method is automatically documented.

This will also need to support some kind of documentation of REST resource types and their keys, where such things exist.
- [x] Render docstrings to HTML
- [x] Render docstrings via an API call
- [x] handle param descriptions, :returns:
- [x] Filter API calls by blueprint
- [x] Index API calls, with a way to refer to them from elsewhere
- [x] Resource type documentation in the source code
- [x] Index resource types, refer to them from elsewhere
",djmitche,28673,2014-06-27T20:36:19Z,CONTRIBUTOR,True,684,85,14,Your Interface to Release Engineering Automation -,Python,b8f2defc46e18168d20002649134226f6bb775fd,document how to document api stuff
637,https://api.github.com/repos/mozilla/build-relengapi/pulls/87,87,Differentiate browsers from REST clients,"And use this information to determine the response to access without a
login.

@IanConnolly - what do you think?  I was getting 302 responses for unauthenticated requests from curl, which didn't seem right.
",djmitche,28673,2014-06-25T22:54:54Z,CONTRIBUTOR,True,108,45,7,Your Interface to Release Engineering Automation -,Python,69b7b3c47a4e2f333a220d536bce95206d83e65b,"Differentiate browsers from REST clients

And use this information to determine the response to access without a
login."
638,https://api.github.com/repos/mozilla/build-relengapi/pulls/85,85,Don't always 403 on permission fail if logged out.,"Right now we're just doing an `abort(403)` on a permission check fail, even if the user is logged out. We should really prompt the user to log in before deciding they don't have permission. 
",IanConnolly,1179074,2014-06-18T00:30:08Z,CONTRIBUTOR,True,2,1,1,Your Interface to Release Engineering Automation -,Python,ab55f09514d09eead15fc2558147348ad3c5489d,Don't always 403 on permission fail if logged out.
639,https://api.github.com/repos/mozilla/build-relengapi/pulls/83,83,Docs are duplicated,"e.g.,

```
Usage
    Permissions
    Token Authentication
        Managing Tokens
    Permissions
    Token Authentication
        Managing Tokens
```

The links for the first are from `@relengapi`, and for the second are from `relengapi-mapper`.  I think this is because of the namespace packages, with `relengapi/docs` translating to the same path for every dist.  I tested this out locally when I wrote the docs-merging code, but either I didn't replicate the situation correctly, or I'm using different versions of something that work better.
",djmitche,28673,2014-06-11T15:35:07Z,CONTRIBUTOR,True,101,109,33,Your Interface to Release Engineering Automation -,Python,87ed2119f0c3f64d6d85975b1cad497238736fc7,"Set up relengapi docs to build from data_files, rather than package_data

This works great for *installed* code, but fails completely for `python
setup.py develop` installs, which go looking for the docs at `sys.prefix
/ 'relengapi-docs'`, but it's not there."
640,https://api.github.com/repos/mozilla/build-relengapi/pulls/83,83,Docs are duplicated,"e.g.,

```
Usage
    Permissions
    Token Authentication
        Managing Tokens
    Permissions
    Token Authentication
        Managing Tokens
```

The links for the first are from `@relengapi`, and for the second are from `relengapi-mapper`.  I think this is because of the namespace packages, with `relengapi/docs` translating to the same path for every dist.  I tested this out locally when I wrote the docs-merging code, but either I didn't replicate the situation correctly, or I'm using different versions of something that work better.
",djmitche,28673,2014-06-11T15:35:07Z,CONTRIBUTOR,True,101,109,33,Your Interface to Release Engineering Automation -,Python,97f4676c00c6a4f077de839ad3cee180bdacc41e,"Handle development builds of the docs, too"
641,https://api.github.com/repos/mozilla/build-relengapi/pulls/83,83,Docs are duplicated,"e.g.,

```
Usage
    Permissions
    Token Authentication
        Managing Tokens
    Permissions
    Token Authentication
        Managing Tokens
```

The links for the first are from `@relengapi`, and for the second are from `relengapi-mapper`.  I think this is because of the namespace packages, with `relengapi/docs` translating to the same path for every dist.  I tested this out locally when I wrote the docs-merging code, but either I didn't replicate the situation correctly, or I'm using different versions of something that work better.
",djmitche,28673,2014-06-11T15:35:07Z,CONTRIBUTOR,True,101,109,33,Your Interface to Release Engineering Automation -,Python,ac18c64e3ac2fd0bcd8a1a4df2268d122313cbc5,update docs
642,https://api.github.com/repos/mozilla/build-relengapi/pulls/83,83,Docs are duplicated,"e.g.,

```
Usage
    Permissions
    Token Authentication
        Managing Tokens
    Permissions
    Token Authentication
        Managing Tokens
```

The links for the first are from `@relengapi`, and for the second are from `relengapi-mapper`.  I think this is because of the namespace packages, with `relengapi/docs` translating to the same path for every dist.  I tested this out locally when I wrote the docs-merging code, but either I didn't replicate the situation correctly, or I'm using different versions of something that work better.
",djmitche,28673,2014-06-11T15:35:07Z,CONTRIBUTOR,True,101,109,33,Your Interface to Release Engineering Automation -,Python,e0040413ceedf4be0e2ce530541fd3ed7f9fb0d9,update validate to handle docs
643,https://api.github.com/repos/mozilla/build-relengapi/pulls/83,83,Docs are duplicated,"e.g.,

```
Usage
    Permissions
    Token Authentication
        Managing Tokens
    Permissions
    Token Authentication
        Managing Tokens
```

The links for the first are from `@relengapi`, and for the second are from `relengapi-mapper`.  I think this is because of the namespace packages, with `relengapi/docs` translating to the same path for every dist.  I tested this out locally when I wrote the docs-merging code, but either I didn't replicate the situation correctly, or I'm using different versions of something that work better.
",djmitche,28673,2014-06-11T15:35:07Z,CONTRIBUTOR,True,101,109,33,Your Interface to Release Engineering Automation -,Python,b496c0c23ec5d190021850625d46082d9063ef58,validate with build-docs --develop
644,https://api.github.com/repos/mozilla/build-relengapi/pulls/23,23,Allow blueprints to add a chapter to the docs,"Blueprints should be able to include their own .rst documentation and have that
incorporated into the displayed documentation.
",djmitche,28673,2014-05-30T23:42:24Z,CONTRIBUTOR,True,177,30,35,Your Interface to Release Engineering Automation -,Python,ade09e396a032e5031b05ad6a45576a63e836da2,Allow other relengapi projects to document themselves
645,https://api.github.com/repos/mozilla/build-relengapi/pulls/23,23,Allow blueprints to add a chapter to the docs,"Blueprints should be able to include their own .rst documentation and have that
incorporated into the displayed documentation.
",djmitche,28673,2014-05-30T23:42:24Z,CONTRIBUTOR,True,177,30,35,Your Interface to Release Engineering Automation -,Python,14d26f63ab7dd81eec33e54db49592a9f2656ad2,"fix typo and pep8, include the proper files in sdist and installs"
646,https://api.github.com/repos/mozilla/build-relengapi/pulls/23,23,Allow blueprints to add a chapter to the docs,"Blueprints should be able to include their own .rst documentation and have that
incorporated into the displayed documentation.
",djmitche,28673,2014-05-30T23:42:24Z,CONTRIBUTOR,True,177,30,35,Your Interface to Release Engineering Automation -,Python,8d50db40f1a1c098f08b32c182fb4b8048a40406,remove unused variable docs_patterns
647,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,016b054f9df6f57fcd6fdc1b9fdb09a3753481c6,test relengapi.subcommands
648,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,dcd8cd30bee0de150baeb1aa04d0837ea0be948c,Merge branch 'master' into issue2
649,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,a1f885d327868ba955d85ff571b3a75309bebaaf,add coverage to guide testing
650,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,26408a3f3e1c399c5d0ce4533e5a8af532d19c97,test docs methods
651,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,513e0a681cf708e35abfc65be340589de46d6431,test app
652,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,1fc3936db2b98998f4d6c94a9d5024f8b99a9cc8,remove dead code
653,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,4652ac23fb1333fdb381f7fd6a3ec0fa0488adb6,finish testing db
654,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,51a2b05b0295e61851c587fb0d44a3c535ce823e,remove useless exclude_lines copied from Buildbot
655,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,dd64ddaec1aba8ec3e99b7e8f3d7b577b04e5deb,Merge branch 'master' into issue2
656,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,1452e0b2a7b8f6b1fa4cb89b328b3dd46fbb5185,update docs tests after merge from master
657,https://api.github.com/repos/mozilla/build-relengapi/pulls/2,2,More complete testing,"The following need testing:
- [x] relengapi.db
- [x] relengapi.celery
- [x] relengapi.subcommands
- [x] relengapi.util
- [ ] auth blueprint
",djmitche,28673,2014-05-30T02:43:37Z,CONTRIBUTOR,True,378,126,16,Your Interface to Release Engineering Automation -,Python,7840caa4f7f9141b529f7b5edac0646883c38388,Add tests for relengapi.celery
658,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,8bbe6d7d07f03b561e6b6d84ea774a23ca5e6f39,"Refactor authentication into part of relengapi proper.

This removes the dependency on Flask-Principal, and focuses all auth
info on `current_user`.

Token auth is temporarily broken."
659,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,7849c6758cf1a08a3c569f3c9ffe6e0bbda0c02a,Set permissions on HumanUser
660,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,003098dc21caa556a852185403dcc22d9a3afb4f,"Move authorization stuff into plugins, too"
661,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,3af574140f42d7d201baeb6bcfcf6125144e43e7,fix up tokenauth
662,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,a1158cd484ce01e736d9844b111421bd29d2ebd4,update account template
663,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,68de1dd01c8644e07de71b2f646da2858678d83e,require blinker too
664,https://api.github.com/repos/mozilla/build-relengapi/pulls/40,40,Clean up user/permission contexts,"There's currently a weird mix of `flask.ext.login.current_user` and `g.identity`, where each purports to identify the current user, but both may not be set depending on the authentication mechanism.

This should get sorted out and the expectations documented in the developer section.  This will let developers reliably determine the current user, how that user was authenticated, and what actions are permitted.
",djmitche,28673,2014-05-29T15:48:11Z,CONTRIBUTOR,True,1221,897,53,Your Interface to Release Engineering Automation -,Python,1f7d7368a8af1ef4152b1f140b20e1e31d6e1c8e,remove unused 'make_support_class' method
665,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,845d8d5d5ea4bec562f296c4ec463e7f5a4bdcf9,Add db.UniqueMixin and adjust pylint as necessary with new ignores
666,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,343c20ebe09b95497cef1a1fe416ff2c4ce3804d,Add test for session cache clearing on new requests
667,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,2d2093f6c150a29191237410f63509ad616ee046,Fix session cache state expiry
668,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,710e552a830d115a39453ecbd7c2202eccbfc8be,Add support and tests for rollback of UniqueMixin
669,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,433a15cbd4032fe91f848691cbcc6b2b95484965,Support auto-retry of _unique due to race conditions between query and add; Adds redo req
670,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,fe828eb6a0550b08972a70bd1ff449d42c5c6c58,"Give up on solving race, revert redo use"
671,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,905d6cfe21df89ff5c6aa94ccf1bcd99381b7b3b,Fix unsaved file up
672,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,32468d0236a8d759fefd83ba2508d8c6895c1474,Add docs while sleepy... forgive typos
673,https://api.github.com/repos/mozilla/build-relengapi/pulls/77,77,Add db.UniqueMixin and adjust pylint as necessary with new ignores,"Adds a helper method to get existing rows, which also adds if not already existing.

The caching was needed to get 'same object' support (otherwise row1 == row2 would even fail)

I suspect this will be ok, given session lengths, but I'm open to arguments against that. (or arguments about purging the cache based on length/time in some way)  I'd rather not block on those improvements though unless this proves to be a real issue.
",Callek,1415602,2014-05-29T00:18:03Z,CONTRIBUTOR,True,202,2,5,Your Interface to Release Engineering Automation -,Python,75064fe8806fda332ca6354318965edcaed33aa9,Copyedits
674,https://api.github.com/repos/mozilla/build-relengapi/pulls/76,76,Disable maybe-no-member pylint test (see https://bugzilla.mozilla.org/sh...,"Disable maybe-no-member pylint test (see https://bugzilla.mozilla.org/show_bug.cgi?id=847640#c23)
",petemoore,190790,2014-05-28T21:44:16Z,MEMBER,True,2,1,1,Your Interface to Release Engineering Automation -,Python,5865208012d08765a6344bddbb23140f8f91d423,Disable maybe-no-member pylint test (see https://bugzilla.mozilla.org/show_bug.cgi?id=847640#c23)
675,https://api.github.com/repos/mozilla/build-relengapi/pulls/74,74,Issue73,"Fixed up these three files to be pep8 compliant.
",petemoore,190790,2014-05-28T20:39:56Z,MEMBER,True,50,51,3,Your Interface to Release Engineering Automation -,Python,62c1731afee73de3528f2d29e9f9481e2fdfc9be,Fixed pep8 failures of base/setup.py and settings_example.py
676,https://api.github.com/repos/mozilla/build-relengapi/pulls/74,74,Issue73,"Fixed up these three files to be pep8 compliant.
",petemoore,190790,2014-05-28T20:39:56Z,MEMBER,True,50,51,3,Your Interface to Release Engineering Automation -,Python,b22efa4ab0a6f511f62c599a4ed2ffe7c93f2fa7,Got base/relengapi/blueprints/docs/src/conf.py passing pep8 checks
677,https://api.github.com/repos/mozilla/build-relengapi/pulls/72,72,Add tests. Fixes Issue #65,,Callek,1415602,2014-05-27T22:52:59Z,CONTRIBUTOR,True,105,1,2,Your Interface to Release Engineering Automation -,Python,a2326ac1ee38bf52e24f75d9008d21adf2756605,Add tests. Fixes Issue #65
678,https://api.github.com/repos/mozilla/build-relengapi/pulls/72,72,Add tests. Fixes Issue #65,,Callek,1415602,2014-05-27T22:52:59Z,CONTRIBUTOR,True,105,1,2,Your Interface to Release Engineering Automation -,Python,dfa95545ff8565d5766240096420bec140a75c50,Lock to pytz 2014.1 per discussion
679,https://api.github.com/repos/mozilla/build-relengapi/pulls/72,72,Add tests. Fixes Issue #65,,Callek,1415602,2014-05-27T22:52:59Z,CONTRIBUTOR,True,105,1,2,Your Interface to Release Engineering Automation -,Python,f6a5db06fca83eaffd9d6e0ff1ff6da296e5640d,Fix bad rebase
680,https://api.github.com/repos/mozilla/build-relengapi/pulls/71,71,Ldap group authz,"The first commit here is from #70, but is required for these tests to pass.
",djmitche,28673,2014-05-27T22:13:01Z,CONTRIBUTOR,True,301,25,7,Your Interface to Release Engineering Automation -,Python,bc395ddae95aab3ac361352e9883e4ebe6cedfef,use wrapt for the TestContext decorator
681,https://api.github.com/repos/mozilla/build-relengapi/pulls/71,71,Ldap group authz,"The first commit here is from #70, but is required for these tests to pass.
",djmitche,28673,2014-05-27T22:13:01Z,CONTRIBUTOR,True,301,25,7,Your Interface to Release Engineering Automation -,Python,fd007ca8d844915ab774c1aeaa89f5d70d89905b,Add an ldap-groups authz mechanism
682,https://api.github.com/repos/mozilla/build-relengapi/pulls/71,71,Ldap group authz,"The first commit here is from #70, but is required for these tests to pass.
",djmitche,28673,2014-05-27T22:13:01Z,CONTRIBUTOR,True,301,25,7,Your Interface to Release Engineering Automation -,Python,14c62ce7a5e8b42f67f219343189797ab0ff3469,disable stupid pylint message
683,https://api.github.com/repos/mozilla/build-relengapi/pulls/71,71,Ldap group authz,"The first commit here is from #70, but is required for these tests to pass.
",djmitche,28673,2014-05-27T22:13:01Z,CONTRIBUTOR,True,301,25,7,Your Interface to Release Engineering Automation -,Python,ef1a32b864d82e0ee7d15c8f9a3ac9d978a3f14c,silence a pylint error that only shows up sometimes.. yay pylint
684,https://api.github.com/repos/mozilla/build-relengapi/pulls/70,70,use wrapt for the TestContext decorator,"I think this got missed in #36.
",djmitche,28673,2014-05-27T21:02:32Z,CONTRIBUTOR,True,21,23,1,Your Interface to Release Engineering Automation -,Python,bc395ddae95aab3ac361352e9883e4ebe6cedfef,use wrapt for the TestContext decorator
685,https://api.github.com/repos/mozilla/build-relengapi/pulls/44,44,List RoR with packages for display in /versions,"https://api.pub.build.mozilla.org/versions should list RoR [repository of record] of all (relengapi) packages included.

This should allow us to easily find code for deployed pieces, especially if not part of the relengapi base repo.
",djmitche,28673,2014-05-23T19:58:51Z,CONTRIBUTOR,False,154,49,7,Your Interface to Release Engineering Automation -,Python,d3e2f253ac81b8ab43df7067b9b9f86e43b7ce4b,"Support relengapi-specific metadata, including RoR

This information is returned by the /versions API method, and is helpful
to figure out where each project is hosted.  Fixes #44."
686,https://api.github.com/repos/mozilla/build-relengapi/pulls/44,44,List RoR with packages for display in /versions,"https://api.pub.build.mozilla.org/versions should list RoR [repository of record] of all (relengapi) packages included.

This should allow us to easily find code for deployed pieces, especially if not part of the relengapi base repo.
",djmitche,28673,2014-05-23T19:58:51Z,CONTRIBUTOR,False,154,49,7,Your Interface to Release Engineering Automation -,Python,0e038d3e48f59713706ee308c9c7e1e7f79922d0,"Re-jigger to make Travis happy

See https://github.com/travis-ci/travis-ci/issues/2355."
687,https://api.github.com/repos/mozilla/build-relengapi/pulls/66,66,Missed pieces after changes from PR #54,"I missed these pieces with my work in issue #54
",Callek,1415602,2014-05-23T04:31:45Z,CONTRIBUTOR,True,4,4,1,Your Interface to Release Engineering Automation -,Python,1869b31b991a42e6e99f2ebfcc196c705a2e6955,Missed pieces after changes from PR #54
688,https://api.github.com/repos/mozilla/build-relengapi/pulls/62,62,Add a root widget for tokens,"Users who have permissions to manage tokens should see a widget taking them to the token UI.
",djmitche,28673,2014-05-22T21:52:14Z,CONTRIBUTOR,True,45,4,8,Your Interface to Release Engineering Automation -,Python,cb677455fbd01c00c37789619ec176f9b26c9299,support a 'condition' callable for root widgets
689,https://api.github.com/repos/mozilla/build-relengapi/pulls/62,62,Add a root widget for tokens,"Users who have permissions to manage tokens should see a widget taking them to the token UI.
",djmitche,28673,2014-05-22T21:52:14Z,CONTRIBUTOR,True,45,4,8,Your Interface to Release Engineering Automation -,Python,8050dfffb4e1f94e12f85292a3df0d5c246c4b03,add a 'can' method to actions
690,https://api.github.com/repos/mozilla/build-relengapi/pulls/62,62,Add a root widget for tokens,"Users who have permissions to manage tokens should see a widget taking them to the token UI.
",djmitche,28673,2014-05-22T21:52:14Z,CONTRIBUTOR,True,45,4,8,Your Interface to Release Engineering Automation -,Python,cfca31491142be0ce700d729ec47b83c84cd6e47,"add a root widget for token auth

This only appears for users who have some permission to edit tokens.
Fixes #62."
691,https://api.github.com/repos/mozilla/build-relengapi/pulls/64,64,Refactor into a single python distribution,"There's no sense distributing relengapi-docs separately from relengapi.

Most of this just moves ./base/\* and ./docs/\* to .  The rest fixes up
the lint options and tests so that validation still passes.

Fixes #59.
",djmitche,28673,2014-05-22T16:35:03Z,CONTRIBUTOR,True,38,57,39,Your Interface to Release Engineering Automation -,Python,c36a4ee3c42edc29e3c972f0a80e013bb48963d7,"Refactor into a single python distribution

There's no sense distributing relengapi-docs separately from relengapi.

Most of this just moves ./docs/* to ./base/*.  The rest fixes up
the lint options and tests so that validation still passes.

We'll keep the base/ subdirectory for a while, to allow other relengapi
tools to ""incubate"" in this repository while it's still in flux.
Eventually all of this will move to the top level.

Fixes #59."
692,https://api.github.com/repos/mozilla/build-relengapi/pulls/63,63,"Document building UIs, including the available JS libraries","This does a little rearranging to try to concentrate the HTML/JS stuff in one file, with the API stuff in the other.
",djmitche,28673,2014-05-22T13:57:47Z,CONTRIBUTOR,True,113,74,3,Your Interface to Release Engineering Automation -,Python,58e0419f34f56a3d5078c3350e87758846a16045,"Document building UIs, including the available JS libraries

Fixes #38."
693,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,28fd64e30001cd09480b0166ae85cfd441bc76da,"Re-align MANIFEST.in and setup.py, and update docs

This doesn't completely fix the problem.  Refs #56."
694,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,6255ccce34eb9725b5de9c80be34eab66157425e,Validate tarball and installed files
695,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,f0e586399c47169c35bc7fa6d3ea008191a66a4e,"add validate-lint.sh

and factor some common stuff into validate-common.sh, plus don't ship
these validation scripts in sdist tarballs."
696,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,508e37af0bbc62b6b961cb2a851a7fe5c7397ee5,update travis to run validation
697,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,9bf01914b09c636d7d1c3fadd3b9ea451aa82580,fix W391
698,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,4e5d7531ac48cb38ade68935c3dbbc6e13d772da,fix E302
699,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,3c33242ac33fee47f3a396c0aa3a4970c9d9b315,fix E301
700,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,3912263020db4a4f0af5243762030d8c6cbe5471,fix E261
701,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,2d6416b8480e1d93e91a2f026169565a93807ebe,fix E225
702,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,7cb8f373c39170bf2dc6f6cfa79482c9a77e632f,Fix E711
703,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,ffc16529b991dba43da97990a4da72709525a869,"E712, E721, E122, E123, E211 weren't a problem"
704,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,c8332723103ab8a8208f2930a8b7674e2cc61773,fix E126
705,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,9508b151ab8f6e54ccafc8a1d3483b49b6ea4412,E128 wasn't a problem
706,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,d182d2a6f23b4f24b0b5045faa49337f277bf5f4,fix E501
707,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,83b025f42fa633a963956fb4442547e54f22be05,require pep8 for tests
708,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,9f9dc05e1b9316be1138aa83cbc261140b4b8912,add pylint
709,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,4a032530c2654a3b68ecdd596d477d20798c64c9,coalesce validation into a single script
710,https://api.github.com/repos/mozilla/build-relengapi/pulls/61,61,Add Validation,"This adds validation support, including pylint, pep8, sdist and installed files.  It runs those from travis (successfully, I hope).
",djmitche,28673,2014-05-21T22:41:07Z,CONTRIBUTOR,False,473,41,28,Your Interface to Release Engineering Automation -,Python,697b6fbb1a64087276aca0f924d24c10e63e39df,run in bash
711,https://api.github.com/repos/mozilla/build-relengapi/pulls/60,60,"Re-align MANIFEST.in and setup.py, and update docs","This doesn't completely fix the problem.  I'd like to add a validation script that can be run by hand, and can also run from Travis.  I'll work on that now.

@petemoore
",djmitche,28673,2014-05-21T21:00:27Z,CONTRIBUTOR,False,8,3,3,Your Interface to Release Engineering Automation -,Python,28fd64e30001cd09480b0166ae85cfd441bc76da,"Re-align MANIFEST.in and setup.py, and update docs

This doesn't completely fix the problem.  Refs #56."
712,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,40467958c4da69ca5aa5f4dd1a5f72735b576c8a,"Add datetime helper that sets utc timezone info, and fix utils docs while I'm here"
713,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,fd7faedad70335303c3ad32be15b6d2ff8050264,"refactor util to its own module, and add timezone helpers as its own file rather than a fake-datetime module"
714,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,e3d4d21c05e6bf18f84bcc580e8d7380b569daf9,Update docs
715,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,77563f18dada043118e9ae0c3bbf044e49c7a288,"add better docs, fix minor issue"
716,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,8820a49622aa57e4b34c4ffea811bbaa1943e499,Correct python comment syntax for docs
717,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,72cffcd29dc79ff856733c143b34e807d021f56e,Add copyright header and tests
718,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,0cac9a653140c9d903137e6299fa2e156e4f2267,This had passed in local testing on cruncher --- somehow. Also fix a .rst issue
719,https://api.github.com/repos/mozilla/build-relengapi/pulls/55,55,"Add datetime helper that sets utc timezone info, ","and fixes the utils docs while I'm here.

This is a reference to issue #52 (which was a wontfix)
",Callek,1415602,2014-05-15T07:37:28Z,CONTRIBUTOR,True,141,3,4,Your Interface to Release Engineering Automation -,Python,735c3e103ab2ef890e9cef2cc6343e1a521d56a6,pep8
720,https://api.github.com/repos/mozilla/build-relengapi/pulls/54,54,Support custom SQL Column Types,"This is explicitly to support custom python objects for SQLAlchemy ORM. In this issue we'll add a UTCDateTime object
",Callek,1415602,2014-05-15T03:25:48Z,CONTRIBUTOR,True,57,1,4,Your Interface to Release Engineering Automation -,Python,138edd37dcb86d7f824459b2a7d9d19aa25b2b02,"Add UTCDateTime column class, for PR #54"
721,https://api.github.com/repos/mozilla/build-relengapi/pulls/54,54,Support custom SQL Column Types,"This is explicitly to support custom python objects for SQLAlchemy ORM. In this issue we'll add a UTCDateTime object
",Callek,1415602,2014-05-15T03:25:48Z,CONTRIBUTOR,True,57,1,4,Your Interface to Release Engineering Automation -,Python,9721e09ac86ef477cc261acc4c7a2440cf870e11,"Fix pylint issues and pep8, plus review comments"
722,https://api.github.com/repos/mozilla/build-relengapi/pulls/54,54,Support custom SQL Column Types,"This is explicitly to support custom python objects for SQLAlchemy ORM. In this issue we'll add a UTCDateTime object
",Callek,1415602,2014-05-15T03:25:48Z,CONTRIBUTOR,True,57,1,4,Your Interface to Release Engineering Automation -,Python,e8cc903048c960c0f7b97042539bae0b5cfa271a,Add missed pytz to requirements.
723,https://api.github.com/repos/mozilla/build-relengapi/pulls/53,53,"Use a static secret key for tokens, when none is given","When the user doesn't specify SECRET_KEY, `app.secret_key` is None, not
a per-session value as one might hope.  In this case, tokens are
generated using a non-secret secret.  This is good for development, but
not for production, so the code issues a warning, too.

@petemoore, what do you think?
",djmitche,28673,2014-05-12T17:17:04Z,CONTRIBUTOR,True,4,1,1,Your Interface to Release Engineering Automation -,Python,db1d9f9553ab2fd85ddba57a4f487eda8b0d9dc7,"Use a static secret key for tokens, when none is given

When the user doesn't specify SECRET_KEY, `app.secret_key` is None, not
a per-session value as one might hope.  In this case, tokens are
generated using a non-secret secret.  This is good for development, but
not for production, so the code issues a warning, too."
724,https://api.github.com/repos/mozilla/build-relengapi/pulls/51,51,Issue #45: Set up travis,,petemoore,190790,2014-05-01T22:25:33Z,MEMBER,True,9,0,1,Your Interface to Release Engineering Automation -,Python,e63d6e00e7f1eeda4bdc003e3d5ddce1694a69f0,Issue #45: Set up travis
725,https://api.github.com/repos/mozilla/build-relengapi/pulls/50,50,Document many-to-many relationships,"Fixes #24.
",djmitche,28673,2014-05-01T22:18:43Z,CONTRIBUTOR,True,16,0,1,Your Interface to Release Engineering Automation -,Python,6c6255c7919aebbad5ec043c3410452f462d497f,"Document many-to-many machines

Fixes #24."
726,https://api.github.com/repos/mozilla/build-relengapi/pulls/47,47,Add wrapt support,,Callek,1415602,2014-05-01T20:27:59Z,CONTRIBUTOR,True,14,17,3,Your Interface to Release Engineering Automation -,Python,1e63205d77520a33d4c2d79b278f917e655e1c8d,Add wrapt support
727,https://api.github.com/repos/mozilla/build-relengapi/pulls/46,46,Log instead of printing,"Set up Python logging early in the startup sequence (before the app is
created), and log instead of printing.  Fixes #19.
",djmitche,28673,2014-05-01T20:20:26Z,CONTRIBUTOR,True,23,4,3,Your Interface to Release Engineering Automation -,Python,339be6312f54157a872eb5a5a2f216cc8dc043bb,"Log instead of printing

Set up Python logging early in the startup sequence (before the app is
created), and log instead of printing.  Fixes #19."
728,https://api.github.com/repos/mozilla/build-relengapi/pulls/34,34,Support roles better,"Add some nice syntax, along with tests and docs, for specifying roles
and permissions with Flask-Principal

My concern with this is whether ""roles"" are the thing we want to organize around.  The other option is ""permissions"".  Some examples might distinguish:

Roles:
- `userauth.admin`, `mapper.reporter`, `clobberer.developer`

Permissions:
- `userauth.perms.edit`, `mapper.mapping.insert`, `clobberer.clobber.branch`

I lean toward roles since we'll be mapping LDAP groups, which tend to be role-based.  But permissions seem to be more explicit (""you can do this thing"").  Also, when we get into API-based access, we'll want users to be able to grant limited permissions to other applications, which doesn't map well to roles.

This could be pretty easily reconfigured to support permissions with little more than `s/role/permission/g`, so there aren't a lot of technical reasons to prefer one over the other.
",djmitche,28673,2014-04-14T19:18:47Z,CONTRIBUTOR,True,183,38,9,Your Interface to Release Engineering Automation -,Python,4b3dd3683b9cf064123773e9394d529974f9689d,"Support roles better

Add some nice syntax, along with tests and docs, for specifying roles
and permissions with Flask-Principal"
729,https://api.github.com/repos/mozilla/build-relengapi/pulls/34,34,Support roles better,"Add some nice syntax, along with tests and docs, for specifying roles
and permissions with Flask-Principal

My concern with this is whether ""roles"" are the thing we want to organize around.  The other option is ""permissions"".  Some examples might distinguish:

Roles:
- `userauth.admin`, `mapper.reporter`, `clobberer.developer`

Permissions:
- `userauth.perms.edit`, `mapper.mapping.insert`, `clobberer.clobber.branch`

I lean toward roles since we'll be mapping LDAP groups, which tend to be role-based.  But permissions seem to be more explicit (""you can do this thing"").  Also, when we get into API-based access, we'll want users to be able to grant limited permissions to other applications, which doesn't map well to roles.

This could be pretty easily reconfigured to support permissions with little more than `s/role/permission/g`, so there aren't a lot of technical reasons to prefer one over the other.
",djmitche,28673,2014-04-14T19:18:47Z,CONTRIBUTOR,True,183,38,9,Your Interface to Release Engineering Automation -,Python,05243b779d10b61c3e95a85b60e0ed3d75d38891,add a 'get' method
730,https://api.github.com/repos/mozilla/build-relengapi/pulls/34,34,Support roles better,"Add some nice syntax, along with tests and docs, for specifying roles
and permissions with Flask-Principal

My concern with this is whether ""roles"" are the thing we want to organize around.  The other option is ""permissions"".  Some examples might distinguish:

Roles:
- `userauth.admin`, `mapper.reporter`, `clobberer.developer`

Permissions:
- `userauth.perms.edit`, `mapper.mapping.insert`, `clobberer.clobber.branch`

I lean toward roles since we'll be mapping LDAP groups, which tend to be role-based.  But permissions seem to be more explicit (""you can do this thing"").  Also, when we get into API-based access, we'll want users to be able to grant limited permissions to other applications, which doesn't map well to roles.

This could be pretty easily reconfigured to support permissions with little more than `s/role/permission/g`, so there aren't a lot of technical reasons to prefer one over the other.
",djmitche,28673,2014-04-14T19:18:47Z,CONTRIBUTOR,True,183,38,9,Your Interface to Release Engineering Automation -,Python,c1b1fa57c29a600905175f381e76f4ec88ee5d23,"rename roles to actions

This gives a more granular permissions model and maps better to what
users are and are not allowed to do."
731,https://api.github.com/repos/mozilla/build-relengapi/pulls/30,30,Pessimistically reconnect to MySQL,"http://docs.sqlalchemy.org/en/rel_0_9/core/pooling.html#disconnect-handling-pessimistic
",djmitche,28673,2014-04-07T15:49:56Z,CONTRIBUTOR,False,268,11,9,Your Interface to Release Engineering Automation -,Python,90e6d20ebb47d4a3b75b53c4be21245125ae044b,"Support flashing messages

This uses Alertify for some nice bouncy overlaid alerts.

There's some parsing of the message to display those beginning with
""error:"" as error messages; this can be improved as necessary.

Fixes #4."
732,https://api.github.com/repos/mozilla/build-relengapi/pulls/30,30,Pessimistically reconnect to MySQL,"http://docs.sqlalchemy.org/en/rel_0_9/core/pooling.html#disconnect-handling-pessimistic
",djmitche,28673,2014-04-07T15:49:56Z,CONTRIBUTOR,False,268,11,9,Your Interface to Release Engineering Automation -,Python,f32b017261ae37efd38754254b32633ee7fa3e9a,"Automatically test db connections for disconnect

For remote database connections, this prevents runtime exceptions from
the server going away.  This fixes #30."
