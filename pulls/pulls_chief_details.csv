,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/chief/pulls/18,18,Add Mozilla Code of Conduct,"Fixes #17

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T04:13:37Z,NONE,False,15,0,1,chief is an app to deploy code with commander ,Python,5f42f3d3ed1e2cc27f2c6ed5eb1dec7bfa54c4a9,"Add Mozilla Code of Conduct file

Fixes #17.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/chief/pulls/15,15,"PEP3333 compatibility, needed for gunicorn-0.17.2+","gunicorn-0.17.2 and above requires strings sent to the browser to be bytes rather than ""strings"". Simple conversion. This isn't an issue with plain strings that use no variables (or only locally-defined ones), but becomes a problem when using variables either passed in or from the environment. This occurs only once, but for future-proofing and uniformity I'm just wrapping it all the time.

This also changes the layout of calls to prefix_notify() slightly, again for uniformity... and to make sure it gets wrapped in ""bytes()"" properly also.
",superawesome,1141442,2015-05-21T02:27:58Z,CONTRIBUTOR,True,11,12,1,chief is an app to deploy code with commander ,Python,d3ff7dcdf2e8cd1f5edb6c5c8ccd2364057b7c3a,"one more yield/notify to consolidate

also changing it to prefix_notify for consistency"
2,https://api.github.com/repos/mozilla/chief/pulls/15,15,"PEP3333 compatibility, needed for gunicorn-0.17.2+","gunicorn-0.17.2 and above requires strings sent to the browser to be bytes rather than ""strings"". Simple conversion. This isn't an issue with plain strings that use no variables (or only locally-defined ones), but becomes a problem when using variables either passed in or from the environment. This occurs only once, but for future-proofing and uniformity I'm just wrapping it all the time.

This also changes the layout of calls to prefix_notify() slightly, again for uniformity... and to make sure it gets wrapped in ""bytes()"" properly also.
",superawesome,1141442,2015-05-21T02:27:58Z,CONTRIBUTOR,True,11,12,1,chief is an app to deploy code with commander ,Python,f42492bfeb344f3bff70bae9463329cccd6907a6,"move newline characters into prefix_notify() calls

simplifies the next commit..."
3,https://api.github.com/repos/mozilla/chief/pulls/15,15,"PEP3333 compatibility, needed for gunicorn-0.17.2+","gunicorn-0.17.2 and above requires strings sent to the browser to be bytes rather than ""strings"". Simple conversion. This isn't an issue with plain strings that use no variables (or only locally-defined ones), but becomes a problem when using variables either passed in or from the environment. This occurs only once, but for future-proofing and uniformity I'm just wrapping it all the time.

This also changes the layout of calls to prefix_notify() slightly, again for uniformity... and to make sure it gets wrapped in ""bytes()"" properly also.
",superawesome,1141442,2015-05-21T02:27:58Z,CONTRIBUTOR,True,11,12,1,chief is an app to deploy code with commander ,Python,dc4fece60907510d0414814af4aec5ef946d9cdf,"wrap string returns to browser with bytes()

This is needed for PEP3333 support, which is required for
gunicorn-0.17.2 and above. Note that in reality, only strings using
external variables (namely '(who, app_name, webapp_ref)') need this. For
bare strings with no (or only local) variables seem to work fine. For
consistency, though, we just do everything."
4,https://api.github.com/repos/mozilla/chief/pulls/15,15,"PEP3333 compatibility, needed for gunicorn-0.17.2+","gunicorn-0.17.2 and above requires strings sent to the browser to be bytes rather than ""strings"". Simple conversion. This isn't an issue with plain strings that use no variables (or only locally-defined ones), but becomes a problem when using variables either passed in or from the environment. This occurs only once, but for future-proofing and uniformity I'm just wrapping it all the time.

This also changes the layout of calls to prefix_notify() slightly, again for uniformity... and to make sure it gets wrapped in ""bytes()"" properly also.
",superawesome,1141442,2015-05-21T02:27:58Z,CONTRIBUTOR,True,11,12,1,chief is an app to deploy code with commander ,Python,03e65f570a95aae870d889e85c707d02a42aada1,Merge remote-tracking branch 'upstream/master'
5,https://api.github.com/repos/mozilla/chief/pulls/15,15,"PEP3333 compatibility, needed for gunicorn-0.17.2+","gunicorn-0.17.2 and above requires strings sent to the browser to be bytes rather than ""strings"". Simple conversion. This isn't an issue with plain strings that use no variables (or only locally-defined ones), but becomes a problem when using variables either passed in or from the environment. This occurs only once, but for future-proofing and uniformity I'm just wrapping it all the time.

This also changes the layout of calls to prefix_notify() slightly, again for uniformity... and to make sure it gets wrapped in ""bytes()"" properly also.
",superawesome,1141442,2015-05-21T02:27:58Z,CONTRIBUTOR,True,11,12,1,chief is an app to deploy code with commander ,Python,5a5a0e09560be405a00a22cf569e0e88fbdd715c,indentation fix
6,https://api.github.com/repos/mozilla/chief/pulls/14,14,using yield to report status as the deploy progresses,"Some output is better than no output. Without do_update() returning or
yielding _something_, after clicking the button, the browser just hangs
at ""waiting for response from..."". Yield is better than return because
it returns some status in real time.

Better would be to actually be printing the log file as we go, but
offhand I don't know how to do that. :)
",superawesome,1141442,2015-05-20T01:27:57Z,CONTRIBUTOR,True,11,8,1,chief is an app to deploy code with commander ,Python,2de879ae63f3d301651a0fa78daa2172d2d6fb27,"using yield to report status as the deploy progresses

Some output is better than no output. Without do_update() returning or
yielding *something*, after clicking the button, the browser just hangs
at ""waiting for response from..."". Yield is better than return because
it returns some status in real time.

Better would be to actually be printing the log file as we go, but
offhand I don't know how to do that. :)"
7,https://api.github.com/repos/mozilla/chief/pulls/14,14,using yield to report status as the deploy progresses,"Some output is better than no output. Without do_update() returning or
yielding _something_, after clicking the button, the browser just hangs
at ""waiting for response from..."". Yield is better than return because
it returns some status in real time.

Better would be to actually be printing the log file as we go, but
offhand I don't know how to do that. :)
",superawesome,1141442,2015-05-20T01:27:57Z,CONTRIBUTOR,True,11,8,1,chief is an app to deploy code with commander ,Python,b645d4620c9539889c37d694b0931482d79c0636,better yield design- have notify/prefix_notify return their messages
8,https://api.github.com/repos/mozilla/chief/pulls/11,11,Fix paging half-heartedly,"This adds paging to the history/ section so we're not displaying _all_
the results.

The paging kind of sucks though since we have to pull back all the results
from redis since they're stored by keys and not by timestamp and we want
to sort them by timestamp before paging.

Two things to note:
1. If someone knows a good way of _not_ pulling everything back from redis, that'd be great.
2. I wasn't able to figure out how to test this--it seems like it requires a lot of setup that I can't easily do. I'll write up an issue for that.

r?
",willkg,820826,2013-04-14T20:16:48Z,MEMBER,True,26,0,2,chief is an app to deploy code with commander ,Python,718127921c2a679c02db92e34a8fef29b7d61c15,"Fix paging half-heartedly

This adds paging to the history/ section so we're not displaying *all*
the results.

The paging kind of sucks though since we have to pull back all the results
from redis since they're stored by keys and not by timestamp and we want
to sort them by timestamp before paging."
9,https://api.github.com/repos/mozilla/chief/pulls/7,7,Add license/copyright notice,"Adds license and copyright notice.
",willkg,820826,2013-03-20T21:48:41Z,MEMBER,True,13,0,1,chief is an app to deploy code with commander ,Python,b487b10fece427bc4e3a4bf5332bdca34eda58f2,Add license/copyright notice
