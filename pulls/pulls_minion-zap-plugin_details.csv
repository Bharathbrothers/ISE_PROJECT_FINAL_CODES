,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/52,52,Add Mozilla Code of Conduct,"Fixes #51

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T04:11:35Z,NONE,False,15,0,1,Minion ZAP Plugin,Python,372f4f80693eb496da65c8b842725b5edbf59b1d,"Add Mozilla Code of Conduct file

Fixes #51.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/49,49,Update link to reference.py,,mortonfox,495892,2016-08-04T04:16:41Z,CONTRIBUTOR,True,2,2,1,Minion ZAP Plugin,Python,fba1448ddf6a143e34a0c6dcc79dc420ec26a275,Update link to reference.py
2,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/42,42,Fixed #39. Reorganize zap plugin structure.,"See https://github.com/mozilla/minion-backend/issues/256
",yeukhon,943001,2013-09-06T22:53:20Z,CONTRIBUTOR,True,5,0,4,Minion ZAP Plugin,Python,515b56cfea4793523f07bce62e882a58fcb7faa7,"Fixed #39. Reorganize zap plugin structure.

See https://github.com/mozilla/minion-backend/issues/256"
3,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/41,41,Fixed #39. Reorganize plugin structure.,"See https;//github.com/mozilla/minion-backend/issues/256
",yeukhon,943001,2013-09-06T20:06:52Z,CONTRIBUTOR,False,8,2,5,Minion ZAP Plugin,Python,7748c49a5ecf15db38e7c4a84b3dd452648366b1,"Fixed #39. Reorganize plugin structure.

See https;//github.com/mozilla/minion-backend/issues/256"
4,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/41,41,Fixed #39. Reorganize plugin structure.,"See https;//github.com/mozilla/minion-backend/issues/256
",yeukhon,943001,2013-09-06T20:06:52Z,CONTRIBUTOR,False,8,2,5,Minion ZAP Plugin,Python,f304eeef6496188a96526f50e708a454baf525e0,"Fixed #39. Reorganize plugin structure.

See https://github.com/mozilla/minion-backend/issues/256"
5,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/32,32,Updated README to include full documentation and options. Fixed #28.,,yeukhon,943001,2013-08-05T17:13:32Z,CONTRIBUTOR,True,177,0,2,Minion ZAP Plugin,Python,de96945a661dd74e1ed843e3f56fa02375543b70,Updated README to include full documentation and options. Fixed #28.
6,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/31,31,Fixed #29. We can specify which one scan policy to disable.,"The syntax would be like this:

'policies': {'id1': '0', 'id2': '1', 'id2': '0', ....}
",yeukhon,943001,2013-08-02T21:29:23Z,CONTRIBUTOR,True,65,65,3,Minion ZAP Plugin,Python,76497f625fa5fdbc1fff718cf610dc65d9294338,"Fixed #29. We can specify which one scan policy to disable.

The syntax would be like this:

'policies': {'id1': '0', 'id2': '1', 'id2': '0', ....}"
7,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/30,30,Added exclusion support. Fixed #26.,"There are two issues: proxy exclusion should extend to spider and scanner but it doesn't. This is reported in code.google.com/p/zaproxy/issues/detail?id=748.

Second issue is when recurse is True, we must excluse the `pathX` in both spider ans canner if we want to skip `pathX`. This is documented in code.google.com/p/zaproxy/issues/detail?id=749.
",yeukhon,943001,2013-08-02T13:59:20Z,CONTRIBUTOR,True,17,1,1,Minion ZAP Plugin,Python,eebe7fd12e2e25aa7ed322a8327f9c35bcf87e2d,"Added exclusion support. Fixed #26.

There are two issues: proxy exclusion should extend to spider and scanner but it doesn't. This is reported in code.google.com/p/zaproxy/issues/detail?id=748.

Second issue is when recurse is True, we must excluse the ``pathX`` in both spider ans canner if we want to skip ``pathX``. This is documented in code.google.com/p/zaproxy/issues/detail?id=749."
8,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/25,25,"Fixed #24, backout #22. Remove inscope=True.",,yeukhon,943001,2013-07-31T04:10:07Z,CONTRIBUTOR,True,1,9,1,Minion ZAP Plugin,Python,862644336edad1710f088448bc0038b2fa282a01,"Fixed #24, backout #22. Remove inscope=True."
9,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/21,21,"Expose CWE, WASC ids. Expose attack info. Fixed active scan to start.","While we group issue with the same title (e.g. SQL Injection) into a single issue, attack infos are different. The eaisest way is to associate them with the url.

**UPDATE**

I have also fixed active scan by adding the target site into a context.
",yeukhon,943001,2013-07-26T21:26:58Z,CONTRIBUTOR,True,90,5,2,Minion ZAP Plugin,Python,46080647158dcf2eef5890fc6cf78cf9af6c3e23,Fixed #18. Make CWE and WASC reference in the output.
10,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/21,21,"Expose CWE, WASC ids. Expose attack info. Fixed active scan to start.","While we group issue with the same title (e.g. SQL Injection) into a single issue, attack infos are different. The eaisest way is to associate them with the url.

**UPDATE**

I have also fixed active scan by adding the target site into a context.
",yeukhon,943001,2013-07-26T21:26:58Z,CONTRIBUTOR,True,90,5,2,Minion ZAP Plugin,Python,3ec8b61a062da68a35ae49f042da083e7890dd8f,"Fixed #19 exposed attack info. Fixed #20 set cwe, wasc id to None if ""0""."
11,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/21,21,"Expose CWE, WASC ids. Expose attack info. Fixed active scan to start.","While we group issue with the same title (e.g. SQL Injection) into a single issue, attack infos are different. The eaisest way is to associate them with the url.

**UPDATE**

I have also fixed active scan by adding the target site into a context.
",yeukhon,943001,2013-07-26T21:26:58Z,CONTRIBUTOR,True,90,5,2,Minion ZAP Plugin,Python,63eacdecc27b76267b2d1df12bf3ba53b2297c2c,"Fixed #22. Add site to context so active scan can be used.

Without adding to a context, active scan will not be triggered successfully."
12,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/12,12,"Added basic auth, session-based auth. See #10 and see #13.","If user wants to use basic auth, the user must supply the following information
as part of configuration.

``` python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up.

The session-based auth should work sites like wordpress, which rely on session tokens to determine whether a use ris logged in or not.

**Update 1**

This method is thought to be useful for many plugins and thus we have moved
`get_site_info` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164

**Update 2**

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of `get_site_info`
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively.

**Update 3**

We have to create an empty session, then we also need to ensure the session created for the site is named `hostname:port` rather than `hostname`.
",yeukhon,943001,2013-07-17T18:18:29Z,CONTRIBUTOR,True,688,7,4,Minion ZAP Plugin,Python,3106469965b8662e40be64bfff8b9301b4ddc17d,"Added basic auth support. See #10.

If user wants to use basic auth, the user must supply the following information
as part of configuration.

```python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up."
13,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/12,12,"Added basic auth, session-based auth. See #10 and see #13.","If user wants to use basic auth, the user must supply the following information
as part of configuration.

``` python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up.

The session-based auth should work sites like wordpress, which rely on session tokens to determine whether a use ris logged in or not.

**Update 1**

This method is thought to be useful for many plugins and thus we have moved
`get_site_info` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164

**Update 2**

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of `get_site_info`
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively.

**Update 3**

We have to create an empty session, then we also need to ensure the session created for the site is named `hostname:port` rather than `hostname`.
",yeukhon,943001,2013-07-17T18:18:29Z,CONTRIBUTOR,True,688,7,4,Minion ZAP Plugin,Python,5e94b99559b977c01c08b34a265b2cdccdaffc5d,"Added support for session-based auth. See #13.

This commit adds very basic session-based auth to this ZAP plugin.
This should work with wordpress sites (or any sites that rely on session
for authentication.)"
14,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/12,12,"Added basic auth, session-based auth. See #10 and see #13.","If user wants to use basic auth, the user must supply the following information
as part of configuration.

``` python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up.

The session-based auth should work sites like wordpress, which rely on session tokens to determine whether a use ris logged in or not.

**Update 1**

This method is thought to be useful for many plugins and thus we have moved
`get_site_info` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164

**Update 2**

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of `get_site_info`
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively.

**Update 3**

We have to create an empty session, then we also need to ensure the session created for the site is named `hostname:port` rather than `hostname`.
",yeukhon,943001,2013-07-17T18:18:29Z,CONTRIBUTOR,True,688,7,4,Minion ZAP Plugin,Python,da4416d42fac948c42d9b4c7f8deb994fc6d953e,"Fixed #14. ``get_site_info`` is now implemented in AbstractPlugin base class.

This method is thought to be useful for many plugins and thus we have moved
``get_site_info`` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164"
15,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/12,12,"Added basic auth, session-based auth. See #10 and see #13.","If user wants to use basic auth, the user must supply the following information
as part of configuration.

``` python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up.

The session-based auth should work sites like wordpress, which rely on session tokens to determine whether a use ris logged in or not.

**Update 1**

This method is thought to be useful for many plugins and thus we have moved
`get_site_info` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164

**Update 2**

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of `get_site_info`
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively.

**Update 3**

We have to create an empty session, then we also need to ensure the session created for the site is named `hostname:port` rather than `hostname`.
",yeukhon,943001,2013-07-17T18:18:29Z,CONTRIBUTOR,True,688,7,4,Minion ZAP Plugin,Python,ed9ec4527b1d3abe844a2c9e38b9416ba23f1258,"Fixed #15. basic auth will get values from ``get_site_info`` instead.

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of ``get_site_info``
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively."
16,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/12,12,"Added basic auth, session-based auth. See #10 and see #13.","If user wants to use basic auth, the user must supply the following information
as part of configuration.

``` python

      ""auth"": {
        ""username"": ""username"",
        ""password"": ""password"",
        ""realm"": ""Restricted Area"",
        ""hostname"": ""example.org"",
        ""port"": ""https""
      },
```

We need to write config.xml before the start of the zap server
because we do not have API to configure authentication in ZAP
after it is started up.

The session-based auth should work sites like wordpress, which rely on session tokens to determine whether a use ris logged in or not.

**Update 1**

This method is thought to be useful for many plugins and thus we have moved
`get_site_info` method to the base class.

See https://github.com/mozilla/minion-backend/pull/164

**Update 2**

We will parse the target url to get the hostname and the port. However,
we will continue to honor user's decision should they give the plugin
the hostname and port explicilty. This is useful IF the plugin is incapable of
getting the right port or hostname. Some sites are known to have non-standard ports.
Currently this zap plugin uses the default base class implementation of `get_site_info`
 so we don't recongize non-standard ports other than 80 and 443 for http and https,
respectively.

**Update 3**

We have to create an empty session, then we also need to ensure the session created for the site is named `hostname:port` rather than `hostname`.
",yeukhon,943001,2013-07-17T18:18:29Z,CONTRIBUTOR,True,688,7,4,Minion ZAP Plugin,Python,c812ef87fe31dcd34f6e4a48e0b30418383f35a7,"Fixed #16 and fixed #17. Session-based scan is okay on wordpress site.

We have to create an empty session, then we also need to ensure the session created for the site is named ``hostname:port`` rather than ``hostname``."
17,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/9,9,Upgrade api to 0.0.6. Fixed #8. Fixed #7. Fixed #6. Fixed #5.,"This plugin was based on ZAP 2.1 which was released in Dec 2012. ZAP api
has changed significantly. Both zap and zap's python api are not compatible
with the older client. Furthermore, in order to perform basic form-authentication,
only python-owasp-zap-v2==0.0.6 will work. Older releases will raise 'not implementor'
error.

A quick build I did tonight can be found here: https://dl.dropboxusercontent.com/u/14655573/mozilla/zap-2013-07-16-yeukhon.tar
",yeukhon,943001,2013-07-17T04:29:19Z,CONTRIBUTOR,True,6,6,2,Minion ZAP Plugin,Python,1401b1b57157fabb8c0b4142dff946be6ea42bd2,"Upgrade api to 0.0.6. Fixed #8. Fixed #7. Fixed #6. Fixed #5.

This plugin was based on ZAP 2.1 which was released in Dec 2012. ZAP api
has changed significantly. Both zap and zap's python api are not compatible
with the older client. Furthermore, in order to perform basic form-authentication,
only python-owasp-zap-v2==0.0.6 will work. Older releases will raise 'not implementor'
error.

A quick build I did tonight can be found here: https://dl.dropboxusercontent.com/u/14655573/mozilla/zap-2013-07-16-yeukhon.tar"
18,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/9,9,Upgrade api to 0.0.6. Fixed #8. Fixed #7. Fixed #6. Fixed #5.,"This plugin was based on ZAP 2.1 which was released in Dec 2012. ZAP api
has changed significantly. Both zap and zap's python api are not compatible
with the older client. Furthermore, in order to perform basic form-authentication,
only python-owasp-zap-v2==0.0.6 will work. Older releases will raise 'not implementor'
error.

A quick build I did tonight can be found here: https://dl.dropboxusercontent.com/u/14655573/mozilla/zap-2013-07-16-yeukhon.tar
",yeukhon,943001,2013-07-17T04:29:19Z,CONTRIBUTOR,True,6,6,2,Minion ZAP Plugin,Python,59bcee1f3dafe46d2fcac65800a84e4713304d49,Bump plugin version.
19,https://api.github.com/repos/mozilla/minion-zap-plugin/pulls/1,1,Update github url,,pbkracker,2868025,2013-04-21T21:56:46Z,CONTRIBUTOR,True,1,1,1,Minion ZAP Plugin,Python,a417954f6136e2b139c7bfc78bf3e779b8ea4225,Update github url
