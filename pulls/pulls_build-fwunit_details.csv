,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/build-fwunit/pulls/48,48,Add Mozilla Code of Conduct,"Fixes #47


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T16:50:02Z,CONTRIBUTOR,True,15,0,1,Unit Tests for your Network -,CSS,7a06c310ac9abb6d67f7fe9dd54ce97ecd2e5542,"Add Mozilla Code of Conduct file

Fixes #47.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/build-fwunit/pulls/45,45,Add missing output option to example configuration,"Hi,
the example for the combine configuration misses the `output` parameter. That's very confusion for beginners.
Cheers",tolleiv,221870,2017-06-07T09:23:11Z,CONTRIBUTOR,True,1,0,1,Unit Tests for your Network -,CSS,c2a74edeaa4bc49d727aebd7fcad68dd9213e23b,"Add missing output option to example configuration

Hi,
the example for the combine configuration misses the `output` parameter. That's very confusion for beginners.
Cheers"
2,https://api.github.com/repos/mozilla/build-fwunit/pulls/44,44,Adjust the example call for fwunit-query,"Hi,
the example doesn't match the actual implementation. The permitted command has to come first and takes ""source"" as it's first argument.
Cheers",tolleiv,221870,2017-06-07T09:20:15Z,CONTRIBUTOR,True,1,1,1,Unit Tests for your Network -,CSS,3f01399a360fbd92af0e4f419b02b124800b3684,"Adjust the example call for fwunit-query

Hi,
the example doesn't match the actual implementation. The permitted command has to come first and takes ""source"" as it's first argument.
Cheers"
3,https://api.github.com/repos/mozilla/build-fwunit/pulls/43,43,additional functionality for diffing,"I built on top of the srx folder. My diffing function now takes in json files as inputs and outputs diffs in both json and pickle format. I also used python's multiprocessing library to parallelize generation of allow rules and diffing of allow rules.  
My output diff contains additional information on which old rule and new rule in the two policies induced the change.  
",Chonghao,10647110,2016-07-29T18:45:54Z,NONE,False,2083,1,33,Unit Tests for your Network -,CSS,34d8d6be5cea2c2625c9953a166625829effcedf,add all changes
4,https://api.github.com/repos/mozilla/build-fwunit/pulls/43,43,additional functionality for diffing,"I built on top of the srx folder. My diffing function now takes in json files as inputs and outputs diffs in both json and pickle format. I also used python's multiprocessing library to parallelize generation of allow rules and diffing of allow rules.  
My output diff contains additional information on which old rule and new rule in the two policies induced the change.  
",Chonghao,10647110,2016-07-29T18:45:54Z,NONE,False,2083,1,33,Unit Tests for your Network -,CSS,3ebfbe97d3a43cd54dc7828184f2b8ab33e00989,try to let github resolve path
5,https://api.github.com/repos/mozilla/build-fwunit/pulls/43,43,additional functionality for diffing,"I built on top of the srx folder. My diffing function now takes in json files as inputs and outputs diffs in both json and pickle format. I also used python's multiprocessing library to parallelize generation of allow rules and diffing of allow rules.  
My output diff contains additional information on which old rule and new rule in the two policies induced the change.  
",Chonghao,10647110,2016-07-29T18:45:54Z,NONE,False,2083,1,33,Unit Tests for your Network -,CSS,287e9e3138a1d8ec356651cb30cc69f95b3d27df,fix test_json_gen_allow path
6,https://api.github.com/repos/mozilla/build-fwunit/pulls/43,43,additional functionality for diffing,"I built on top of the srx folder. My diffing function now takes in json files as inputs and outputs diffs in both json and pickle format. I also used python's multiprocessing library to parallelize generation of allow rules and diffing of allow rules.  
My output diff contains additional information on which old rule and new rule in the two policies induced the change.  
",Chonghao,10647110,2016-07-29T18:45:54Z,NONE,False,2083,1,33,Unit Tests for your Network -,CSS,d6aec17d261932727e1406bda14bb618a18e1537,guessing the pools were closed when test_json_gen_allow.py finished running
7,https://api.github.com/repos/mozilla/build-fwunit/pulls/43,43,additional functionality for diffing,"I built on top of the srx folder. My diffing function now takes in json files as inputs and outputs diffs in both json and pickle format. I also used python's multiprocessing library to parallelize generation of allow rules and diffing of allow rules.  
My output diff contains additional information on which old rule and new rule in the two policies induced the change.  
",Chonghao,10647110,2016-07-29T18:45:54Z,NONE,False,2083,1,33,Unit Tests for your Network -,CSS,b461e5c14afe151fae613abe0481f348d575f74f,all tests should pass
8,https://api.github.com/repos/mozilla/build-fwunit/pulls/41,41,sequence of global policies not considered in fwunit/srx/process.py,"On line 191 of process.py, the zpolicies(zone policies) were sorted by their sequence number. However, on line 189 of process.py, the global_policies(global policies) were not sorted. I think the policies should be sorted after the zone policies and global policies are combined.
",djmitche,28673,2016-06-26T17:45:22Z,CONTRIBUTOR,True,35,4,3,Unit Tests for your Network -,CSS,95930e892de77aca3ebcf9b0681f6aa5ea181dff,"Sort global policies and always interpret them after local policies

Fixes #41."
9,https://api.github.com/repos/mozilla/build-fwunit/pulls/40,40,Updated srx.rst,"Fixed typo
",plaguna,1691868,2015-11-16T14:48:25Z,CONTRIBUTOR,True,1,1,1,Unit Tests for your Network -,CSS,c0a211f166729483928ddd305c3d345a466f41b6,"Updated srx.rst

Fixed typo"
10,https://api.github.com/repos/mozilla/build-fwunit/pulls/39,39,Almost final version of the slides.,,mpurzynski,2521190,2015-11-09T15:29:08Z,CONTRIBUTOR,True,51,9,3,Unit Tests for your Network -,CSS,f8593b3e1ea73e846f5585f54430cc6d17de5f70,Almost final version of the slides.
11,https://api.github.com/repos/mozilla/build-fwunit/pulls/38,38,Bug 1189936: allow combining rules from arbitrary sources,"We will need this to model the flows to/from our AWS VPCs.
",djmitche,28673,2015-08-21T20:44:21Z,CONTRIBUTOR,True,422,142,6,Unit Tests for your Network -,CSS,817a6dc142c1bfd3b05dddf4b5d6d44148e44c31,"[breaking change] Support combining rules from arbitrary sources

This uses a flexible specification of ""routes"", sets of firewalls
through which particular flows pass.  Sets of rules can then be attached
to each route."
12,https://api.github.com/repos/mozilla/build-fwunit/pulls/38,38,Bug 1189936: allow combining rules from arbitrary sources,"We will need this to model the flows to/from our AWS VPCs.
",djmitche,28673,2015-08-21T20:44:21Z,CONTRIBUTOR,True,422,142,6,Unit Tests for your Network -,CSS,cc7aa9dd05b77ecd040148132ca6cdb798ffb2f1,allow routes to be described without a list
13,https://api.github.com/repos/mozilla/build-fwunit/pulls/38,38,Bug 1189936: allow combining rules from arbitrary sources,"We will need this to model the flows to/from our AWS VPCs.
",djmitche,28673,2015-08-21T20:44:21Z,CONTRIBUTOR,True,422,142,6,Unit Tests for your Network -,CSS,26bff82daba67eb03fb6907a9f860bd58d9efbef,support bidirectional notation
14,https://api.github.com/repos/mozilla/build-fwunit/pulls/38,38,Bug 1189936: allow combining rules from arbitrary sources,"We will need this to model the flows to/from our AWS VPCs.
",djmitche,28673,2015-08-21T20:44:21Z,CONTRIBUTOR,True,422,142,6,Unit Tests for your Network -,CSS,f5fd0c9eef6cde85a731ef484827a625b065f6cc,Validate that address spaces exist
15,https://api.github.com/repos/mozilla/build-fwunit/pulls/36,36,fwunit should respect blackholed routes,"When a given subnet is not defined on the firewall in question fwunit thinks it is part of the 0.0.0.0/0 even when the subnet is blackholed.

Example
10.249.0.0/16 is a subnet for the BER1 site.

10.249.8.0/21 is not defined on the fw1.ber1 yet (but reserved for the future).

dustin@fw1.ops.ber1.mozilla.net> show route 10.249.8.0  
inet.0: 57 destinations, 81 routes (56 active, 0 holddown, 1 hidden)
- = Active Route, - = Last Active, \* = Both
  10.249.0.0/16      *[Aggregate/130] 53w6d 04:20:33
                    Reject
  {primary:node0}

This is caused by

```
aggregate {
    route 10.249.0.0/16;
}
```

I.e. firewall declares ""all of 10.249.0.0/16 belongs to me"". This configuration saves us from routing loops, otherwise packets for not yet defined subnets would follow the default route, be forwarded to POPs and POPs would send them back to fw1.ber which would send them back, etc.

fwunit should check if the subnet is blackholed and if it is, take that as ""traffic is denied"".
",djmitche,28673,2015-05-12T22:18:17Z,CONTRIBUTOR,True,97,7,5,Unit Tests for your Network -,CSS,d1d2c3b212045f1db29f2bf9b012ad124c371bad,parse Reject routes properly
16,https://api.github.com/repos/mozilla/build-fwunit/pulls/36,36,fwunit should respect blackholed routes,"When a given subnet is not defined on the firewall in question fwunit thinks it is part of the 0.0.0.0/0 even when the subnet is blackholed.

Example
10.249.0.0/16 is a subnet for the BER1 site.

10.249.8.0/21 is not defined on the fw1.ber1 yet (but reserved for the future).

dustin@fw1.ops.ber1.mozilla.net> show route 10.249.8.0  
inet.0: 57 destinations, 81 routes (56 active, 0 holddown, 1 hidden)
- = Active Route, - = Last Active, \* = Both
  10.249.0.0/16      *[Aggregate/130] 53w6d 04:20:33
                    Reject
  {primary:node0}

This is caused by

```
aggregate {
    route 10.249.0.0/16;
}
```

I.e. firewall declares ""all of 10.249.0.0/16 belongs to me"". This configuration saves us from routing loops, otherwise packets for not yet defined subnets would follow the default route, be forwarded to POPs and POPs would send them back to fw1.ber which would send them back, etc.

fwunit should check if the subnet is blackholed and if it is, take that as ""traffic is denied"".
",djmitche,28673,2015-05-12T22:18:17Z,CONTRIBUTOR,True,97,7,5,Unit Tests for your Network -,CSS,7cd5f68906ea746506ad6fabdab8ef3fb33214f9,process Reject routes
17,https://api.github.com/repos/mozilla/build-fwunit/pulls/35,35,Support global policies and zones,"The JunOS-SRX line 12.x supports a notion of a global policies and global zones. When they are used on a device that fwunit fetches configuration from, it makes fwunit exit with an error condition. Instead, fwunit should be able to parse what is there and use the information for flow calculations.

In the branch
security {
address-book {
global {

one can have multiple entries that are valid for all zones.

```
        address corp-ww_5 10.246.24.0/21;
```

address-set corp-ww {
                address corp-ww_0;

Sometimes there can be also a global zone. For flow to be permitted from zone A to zone B if no policies exist (or they do, but they don't match) between this pair of zones, the global zone is consulted.

Note - this zone is implicit i.e. does not have to be defined anywhere to be used. Should be autodetected like ""are there any rules on the global zone?"".

security {
policies{

global {

policy dhcp-helpers { content of policy goes here }
",djmitche,28673,2015-04-28T16:24:56Z,CONTRIBUTOR,True,598,158,5,Unit Tests for your Network -,CSS,6a5d8492353e9655e78b1e51bcdca3f26428568c,refactor XML stuff to be more flexible
18,https://api.github.com/repos/mozilla/build-fwunit/pulls/35,35,Support global policies and zones,"The JunOS-SRX line 12.x supports a notion of a global policies and global zones. When they are used on a device that fwunit fetches configuration from, it makes fwunit exit with an error condition. Instead, fwunit should be able to parse what is there and use the information for flow calculations.

In the branch
security {
address-book {
global {

one can have multiple entries that are valid for all zones.

```
        address corp-ww_5 10.246.24.0/21;
```

address-set corp-ww {
                address corp-ww_0;

Sometimes there can be also a global zone. For flow to be permitted from zone A to zone B if no policies exist (or they do, but they don't match) between this pair of zones, the global zone is consulted.

Note - this zone is implicit i.e. does not have to be defined anywhere to be used. Should be autodetected like ""are there any rules on the global zone?"".

security {
policies{

global {

policy dhcp-helpers { content of policy goes here }
",djmitche,28673,2015-04-28T16:24:56Z,CONTRIBUTOR,True,598,158,5,Unit Tests for your Network -,CSS,d13c51b879641227dbc71cfbf409e656a0839a72,"Parse SRX global policies and global and named address books

Fixes #35."
19,https://api.github.com/repos/mozilla/build-fwunit/pulls/34,34,Return the config even when it's cached,,djmitche,28673,2015-04-15T20:59:04Z,CONTRIBUTOR,True,1,1,1,Unit Tests for your Network -,CSS,920a56c917dde3077a44d2eb63fe113996086dcb,Return the config even when it's cached
20,https://api.github.com/repos/mozilla/build-fwunit/pulls/32,32,minor docs cleanup,,djmitche,28673,2015-03-15T18:50:42Z,CONTRIBUTOR,True,19,10,1,Unit Tests for your Network -,CSS,8b8098ad5684b11be629e05a0cd365e506fc1a58,minor docs cleanup
21,https://api.github.com/repos/mozilla/build-fwunit/pulls/30,30,"Move IPSet, IP, etc. to the `fwunit` package","So users can write

```
from fwunit import IP, IPSet
```
",djmitche,28673,2015-03-15T18:42:25Z,CONTRIBUTOR,True,94,5,5,Unit Tests for your Network -,CSS,7d854657ed7a702e488c842930f3c11e782279c4,add comprehensive integraiton tests
22,https://api.github.com/repos/mozilla/build-fwunit/pulls/30,30,"Move IPSet, IP, etc. to the `fwunit` package","So users can write

```
from fwunit import IP, IPSet
```
",djmitche,28673,2015-03-15T18:42:25Z,CONTRIBUTOR,True,94,5,5,Unit Tests for your Network -,CSS,95f7b2d67bb8ca705bc5db122ade2a75bae92ac8,"expose IP, IPSet, IPPairs from the fwunit package"
23,https://api.github.com/repos/mozilla/build-fwunit/pulls/31,31,Bug 1118451: implement fwunit-diff,,djmitche,28673,2015-03-15T18:39:23Z,CONTRIBUTOR,True,270,12,12,Unit Tests for your Network -,CSS,7f6ad7ddfd5fc051f37265e167d1b58f115e442a,fix bugs in IPPairs subtraction
24,https://api.github.com/repos/mozilla/build-fwunit/pulls/31,31,Bug 1118451: implement fwunit-diff,,djmitche,28673,2015-03-15T18:39:23Z,CONTRIBUTOR,True,270,12,12,Unit Tests for your Network -,CSS,c8a2f195a13ef4dda71b580abad524b9edc7c1e3,expand example to include two sources
25,https://api.github.com/repos/mozilla/build-fwunit/pulls/31,31,Bug 1118451: implement fwunit-diff,,djmitche,28673,2015-03-15T18:39:23Z,CONTRIBUTOR,True,270,12,12,Unit Tests for your Network -,CSS,bde527da4d5b08020cc35f309d16fa7246f998f7,rename rules_for_app to rulesForApp and doc it
26,https://api.github.com/repos/mozilla/build-fwunit/pulls/31,31,Bug 1118451: implement fwunit-diff,,djmitche,28673,2015-03-15T18:39:23Z,CONTRIBUTOR,True,270,12,12,Unit Tests for your Network -,CSS,9aaef7fe98c5fb7355de221167aca11604e0c321,Bug 1118451: add fwunit-diff
27,https://api.github.com/repos/mozilla/build-fwunit/pulls/31,31,Bug 1118451: implement fwunit-diff,,djmitche,28673,2015-03-15T18:39:23Z,CONTRIBUTOR,True,270,12,12,Unit Tests for your Network -,CSS,ebfae1540c5f65c425abebd7e264dea8d5d5709f,allow loading sources by filename
28,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,7295ad0d006735915a665d41ade1fe952c403eea,fix up docs
29,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,204ed566e5937cebaf8f4c09d23a34834c40517d,"refactor config and source loading, and cache sources"
30,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,f9989c53b828ae2a3f7f9b757c9546ead77306b6,factor out assertions from rule analysis
31,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,e00529f92cf8016837a4402ba48c19558209681b,refactor queries to use the Source object
32,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,5ed8902a7e6f2819250e998cd2a3d7c429323c20,document updates
33,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,a029de6c99a91b6fd82e4499a8fa5e2a78863922,add comprehensive integration tests
34,https://api.github.com/repos/mozilla/build-fwunit/pulls/20,20,Make rule loading more efficient,"Parsing the JSON in a rules file, even for the full set of releng rules, is pretty quick. However, the `fwunit.types.from_jsonable` process takes several seconds.  Some profiling can probably help make either that code or IPy more efficient in time or space.

For example: consider caching `IP` instances if there are enough duplicates.
",djmitche,28673,2015-03-12T06:33:52Z,CONTRIBUTOR,True,359,142,11,Unit Tests for your Network -,CSS,5814cf183f44c5bed76cc1ca3d25423b130594f7,clear caches in tests
35,https://api.github.com/repos/mozilla/build-fwunit/pulls/24,24,Replace 'Rules' with another class name,"""Rules"" suggests that the class encapsulates some flow rules -- which it does, but only indirectly.  Its real purpose is to implement assertion methods.
",djmitche,28673,2014-12-16T19:52:24Z,CONTRIBUTOR,True,24,12,6,Unit Tests for your Network -,CSS,63186e976db7a0b0ce596bebf063df5481c0e7c8,rename Rules -> TestContext with a fallback
36,https://api.github.com/repos/mozilla/build-fwunit/pulls/29,29,Allow assertPermits and assertDenies to take multiple apps,"Fixes #21
",djmitche,28673,2014-12-08T14:58:01Z,CONTRIBUTOR,True,45,31,3,Unit Tests for your Network -,CSS,2d2d5c36bf1d7df72756d5ded3288d2c5bce45e8,Allow assertPermits and assertDenies to take multiple apps
37,https://api.github.com/repos/mozilla/build-fwunit/pulls/23,23,Add a '--quiet' option to fwunit,"The fwunit crontask emits a _massive_ amount of info-level logging, all of which is basically progress data.  `--quiet` should limit to WARNING and above.
",djmitche,28673,2014-11-03T20:38:20Z,CONTRIBUTOR,True,1,1,1,Unit Tests for your Network -,CSS,e5e390b258286cd2692e5904f5efee54a0a9710a,Only output WARNING and above unless --verbose
38,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,04173ee159ead49a61c7d98f271f94d314ef879b,add integration test for combine
39,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,718318016f15a0927ab9f40506402a2ab1d8b7b9,factor out 'ipset' helper for tests
40,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,8f9b31ae03202f0584b876d42afa4c76bd99290b,fix 'combine' to handle @@other app
41,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,c4f424682509105bfd4052e1806cd7febc407561,doc @@other
42,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,0702899a4b1283bd0ec2214ad0b43a8ddf6a2576,Add a unit test for srx process_rules
43,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,fa0b5daa7d3f0b3db035b7146c2dee0e69b2a7da,fix srx to produce @@other app
44,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,e47a4694128a5b94730614bc5927205df8140c08,fix aws to produce @@other app
45,https://api.github.com/repos/mozilla/build-fwunit/pulls/28,28,"Handle ""any"" application better","Fixes #18
",djmitche,28673,2014-10-27T23:20:13Z,CONTRIBUTOR,True,309,50,12,Unit Tests for your Network -,CSS,7c87d859e77a393103786cb2fd2b194432818aa7,update tests to handle @@other
46,https://api.github.com/repos/mozilla/build-fwunit/pulls/26,26,Handle `any-ipv4` address as `any`,"```
ERROR OUTPUT:
Traceback (most recent call last):
  File ""/opt/fwunit/releng/bin/fwunit"", line 9, in <module>
    load_entry_point('fwunit==0.1.0', 'console_scripts', 'fwunit')()
  File ""/opt/fwunit/releng/src/fwunit/fwunit/scripts.py"", line 87, in main
    rules = ep(src_cfg, cfg)
  File ""/opt/fwunit/releng/src/fwunit/fwunit/srx/scripts.py"", line 16, in run
    return policies_to_rules(app_map, firewall)
  File ""/opt/fwunit/releng/src/fwunit/fwunit/srx/process.py"", line 24, in policies_to_rules
    firewall.zones, policies_by_zone_pair)
  File ""/opt/fwunit/releng/src/fwunit/fwunit/srx/process.py"", line 127, in process_address_sets_per_policy
    (get_from(a) for a in pol.source_addresses), IPSet())
  File ""/opt/fwunit/releng/src/fwunit/fwunit/srx/process.py"", line 127, in <genexpr>
    (get_from(a) for a in pol.source_addresses), IPSet())
  File ""/opt/fwunit/releng/src/fwunit/fwunit/srx/process.py"", line 122, in <lambda>
    get_from = lambda a: a if isinstance(a, IPSet) else from_addrbook[a]
KeyError: 'any-ipv4'
```
",djmitche,28673,2014-10-24T20:49:51Z,CONTRIBUTOR,True,9,4,3,Unit Tests for your Network -,CSS,e78b59d797506f14e51410da5f5400c122b0d11c,handle 'any-ipv4' built-in addressbook entry
47,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,04b502325f2b15a71e2a06c2702372682b0cf566,Merge djmitche/build-fwunit:issue10 (PR #25)
48,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,dbd713600d1cdce6b1f5f8308a70a2ed316b2860,move tests to fwunit.test
49,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,d535d7090711318269db9fe88dd39405f0e8f809,add a validate.sh script
50,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,c83a8dbca4614f1652b909c2729ea6a61561f92a,facter XML blobs out into a util module
51,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,0800bf4915599320c71017ff9b4e76452b7c545f,add an integration test for SRX
52,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,18e0617fef4731590851fc016cd7eca6a8c01110,add integration test for AWS
53,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,b45eb4c59b6d96626d3ac79b3e84ef0dc0aa3afc,"convert to using coverage directly, rather than via nosetests"
54,https://api.github.com/repos/mozilla/build-fwunit/pulls/27,27,"Add unit and integration tests, along with validation and coverage","This brings coverage up to 72% which isn't great, but is better than before, and helps #9 along.
",djmitche,28673,2014-10-24T15:42:38Z,CONTRIBUTOR,True,461,136,24,Unit Tests for your Network -,CSS,5b7b450c9e11ccdb351f2e19f04ebe4119a242fa,test tests
55,https://api.github.com/repos/mozilla/build-fwunit/pulls/25,25,Always handle rules as dicts keyed by app,"In most cases, this is the useful form.  And in particular for tests
that address only one app (the most common kind), this allows much
quicker access to the relevant rules.
",djmitche,28673,2014-10-21T19:53:16Z,CONTRIBUTOR,True,130,74,8,Unit Tests for your Network -,CSS,70cbddbf5bb81744bf20a23b6148796cfcd3bd57,"Always handle rules as dicts keyed by app

In most cases, this is the useful form.  And in particular for tests
that address only one app (the most common kind), this allows much
quicker access to the relevant rules."
56,https://api.github.com/repos/mozilla/build-fwunit/pulls/1,1,Use JSON instead of Pickle,"This just requires writing conversions for IP objects when writing out, and then converting back on reading in.  But it will make it a lot easier for other consumers in other languages to deal with the data
",djmitche,28673,2014-09-11T00:19:35Z,CONTRIBUTOR,True,45,21,6,Unit Tests for your Network -,CSS,c04125ac2a4832c464889d9a5715d41d6ab1029f,"dump and load JSON instead of pickles

Fixes #1."
