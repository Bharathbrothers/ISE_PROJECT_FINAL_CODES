,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/badgekit-api/pulls/162,162,Add Mozilla Code of Conduct,"Fixes #161

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T04:21:59Z,CONTRIBUTOR,True,15,0,1,NO LONGER MAINTAINED,JavaScript,16d1e4b2727d4b184379ffe9f0d07949cbc14114,"Add Mozilla Code of Conduct file

Fixes #161.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/badgekit-api/pulls/143,143,Update package.json,"The mysql npm module that came with git repo wasn't the latest, thus causing errors when the badgekitapi NodeJS app tried to connect to the local MySQL instance. To solve this, modified package.json to use the latest mysql module version (2.16.0) and then ran 'npm install'. Also, updated restify to 4.3.0, bring up REST API without errors.

Tested by bringing up REST endpoint.",darpr,102387,2018-10-02T00:28:01Z,NONE,False,2,2,1,NO LONGER MAINTAINED,JavaScript,ea4f369832ed130667293f9844cd8ada757ac0a0,"Update package.json

The mysql npm module that came with git repo wasn't the latest, thus causing errors when the badgekitapi NodeJS app tried to connect to the local MySQL instance. To solve this, modified package.json to use the latest mysql module version (2.16.0) and then ran 'npm install'. Also, updated restify to 4.3.0, bring up REST API without errors."
2,https://api.github.com/repos/mozilla/badgekit-api/pulls/141,141,This software has not been supported for many years. Please sunset or…,… accept this PR. Thank you,kayaelle,206059,2018-02-14T19:49:32Z,NONE,False,2,0,1,NO LONGER MAINTAINED,JavaScript,9a5972f5941def856d4a441ad84e8164aa60071c,This software has not been supported for many years. Please sunset or accept this PR. Thank you
3,https://api.github.com/repos/mozilla/badgekit-api/pulls/140,140,expose programs related to issuers in systems route.,"According to the [docs](https://github.com/mozilla/badgekit-api/blob/master/docs/systems.md), the systems resource should embed include issuers and also programs within issuers, but the current response only contains issuers and an empty array for programs.

This PR expands the `relationshipsDepth` of the query that produces the systems response.
",bangpound,6731,2016-05-13T16:06:56Z,NONE,False,1,1,1,NO LONGER MAINTAINED,JavaScript,099e518586d1804ca34b38d010330b90991b4e90,expose programs related to issuers in systems route.
4,https://api.github.com/repos/mozilla/badgekit-api/pulls/138,138,badge class: added tags,,ghost,10137,2016-03-10T19:46:50Z,NONE,False,1,1,1,NO LONGER MAINTAINED,JavaScript,d5e74b5012b6329306408f95ca1c4d285190f0f5,badge class: added tags
5,https://api.github.com/repos/mozilla/badgekit-api/pulls/137,137,Use valid SPDX license identifier,"`npm install` complains about invalid license identifier.

This PR replaces the identifier with this one:
https://spdx.org/licenses/MPL-2.0.html
",friedger,1449049,2015-08-25T16:31:59Z,CONTRIBUTOR,True,1,1,1,NO LONGER MAINTAINED,JavaScript,f0809896f282565b4771d33ab9d1c60da9adaae3,Update package.json
6,https://api.github.com/repos/mozilla/badgekit-api/pulls/135,135,Adding support for config-store,"Same code as openbadges-badgekit
config.json now supported as documented in Badgekit Self Hosting Guide
",BrunoWinck,4559776,2015-05-26T09:00:52Z,NONE,False,23,9,6,NO LONGER MAINTAINED,JavaScript,d729b7cdd88acefa7c4d90a65dd4000b43443316,"Adding support for config-store

Same code as openbadges-badgekit
config.json now supported as documented in Badgekit Self Hosting Guide"
7,https://api.github.com/repos/mozilla/badgekit-api/pulls/133,133,added env_local to .gitignore,"Given that the  instructions in https://github.com/mozilla/openbadges-badgekit/wiki/BadgeKit-Self-Hosting-Guide#badgekit-api-configuration suggests storing db authentication configuration in badgekit-api/env_local as one of two possibilities, I think env_local should be the .gitignore, unless I misunderstood the instructions.
",cyclingzealot,1383238,2015-05-12T19:49:36Z,CONTRIBUTOR,True,2,0,1,NO LONGER MAINTAINED,JavaScript,03e37c819ad69a360c61539c2d54590f14c8d474,added env_local to .gitignore
8,https://api.github.com/repos/mozilla/badgekit-api/pulls/129,129,allow slug to be created but not updatable and add habitat to make env u...,"...sage easier.
",ScottDowne,197334,2015-02-25T02:35:05Z,NONE,True,5,1,3,NO LONGER MAINTAINED,JavaScript,a169cfb3ef2ba3e828bf63c67eafe89b3f65dc8d,allow slug to be created but not updatable and add habitat to make env usage easier.
9,https://api.github.com/repos/mozilla/badgekit-api/pulls/128,128,Doc updates to include bulk issuing,"Added bulk issuing to docs - hope it looks right..
",SueSmith,6666370,2014-09-24T16:50:28Z,MEMBER,False,95,6,4,NO LONGER MAINTAINED,JavaScript,4919c48f44a432dcda0f232976acdff72c428651,Update api-endpoints.md
10,https://api.github.com/repos/mozilla/badgekit-api/pulls/128,128,Doc updates to include bulk issuing,"Added bulk issuing to docs - hope it looks right..
",SueSmith,6666370,2014-09-24T16:50:28Z,MEMBER,False,95,6,4,NO LONGER MAINTAINED,JavaScript,3f329507ec8affe3cb0d423d6b74e80a9bd74194,Update issuing.md
11,https://api.github.com/repos/mozilla/badgekit-api/pulls/128,128,Doc updates to include bulk issuing,"Added bulk issuing to docs - hope it looks right..
",SueSmith,6666370,2014-09-24T16:50:28Z,MEMBER,False,95,6,4,NO LONGER MAINTAINED,JavaScript,87d702bbe108d771b6239c0cc0a97dd782c91385,Update assessment.md
12,https://api.github.com/repos/mozilla/badgekit-api/pulls/128,128,Doc updates to include bulk issuing,"Added bulk issuing to docs - hope it looks right..
",SueSmith,6666370,2014-09-24T16:50:28Z,MEMBER,False,95,6,4,NO LONGER MAINTAINED,JavaScript,c73020b4a7970aaa4924c4bf5ef740fec8120166,Update authorization.md
13,https://api.github.com/repos/mozilla/badgekit-api/pulls/127,127,Add bulk issuing route,"This adds a POST route at (for example) `/systems/{system}/badges/{badge}/instances/bulk` that allows API users to issue a given badge to a number of users at once, without having to make a POST for each email.

I opted to use a different route (with the `/bulk` suffix) rather than allowing the original POST route to simply allow for ""email"" to be an array rather than a single email.  There are enough differences with the way the bulk issuing behaves that I thought it was odd for them to share the same route.  Namely:
- Bulk issuing does not allow for claim code usage
- Bulk issuing does not throw an error if a user already has a badge.  When finished, it returns an array of instances created.  If one of the emails provided already had a badge, that email will therefore be absent from the list of instances created (or, if the email was entered twice, as is very, very frequently the case, only one corresponding instance will be created and returned).
",ghost,10137,2014-09-18T18:18:18Z,NONE,True,131,14,2,NO LONGER MAINTAINED,JavaScript,6a5abc19eb073c8903924c1f3037fbf1ef32073a,Add bulk issuing route
14,https://api.github.com/repos/mozilla/badgekit-api/pulls/127,127,Add bulk issuing route,"This adds a POST route at (for example) `/systems/{system}/badges/{badge}/instances/bulk` that allows API users to issue a given badge to a number of users at once, without having to make a POST for each email.

I opted to use a different route (with the `/bulk` suffix) rather than allowing the original POST route to simply allow for ""email"" to be an array rather than a single email.  There are enough differences with the way the bulk issuing behaves that I thought it was odd for them to share the same route.  Namely:
- Bulk issuing does not allow for claim code usage
- Bulk issuing does not throw an error if a user already has a badge.  When finished, it returns an array of instances created.  If one of the emails provided already had a badge, that email will therefore be absent from the list of instances created (or, if the email was entered twice, as is very, very frequently the case, only one corresponding instance will be created and returned).
",ghost,10137,2014-09-18T18:18:18Z,NONE,True,131,14,2,NO LONGER MAINTAINED,JavaScript,269e24a995bfea2ed0a545b7f6676072b99d9cd5,Applications by user filter
15,https://api.github.com/repos/mozilla/badgekit-api/pulls/126,126,Fixing public badge listing,,ghost,10137,2014-09-05T21:50:44Z,NONE,True,60,60,1,NO LONGER MAINTAINED,JavaScript,34fbb3bfb8e3e853bc81ef58099e404733cc4ad4,Fixing thinguses
16,https://api.github.com/repos/mozilla/badgekit-api/pulls/125,125,fixed based on @stenington's feedback.,,cmcavoy,64711,2014-09-05T16:07:36Z,CONTRIBUTOR,True,2,2,1,NO LONGER MAINTAINED,JavaScript,090f8169237a3394162a74eb7d03d5e9e115dd46,fixed based on @stenington's feedback.
17,https://api.github.com/repos/mozilla/badgekit-api/pulls/123,123,Updating restify version,"This updates restify to version 2.8.2.
",ghost,10137,2014-08-08T14:02:43Z,NONE,True,1,1,1,NO LONGER MAINTAINED,JavaScript,bb1254b11f117bb78e4ad82eb60f5d90f09e5167,Updating restify version
18,https://api.github.com/repos/mozilla/badgekit-api/pulls/122,122,"Revert ""Adds public cross-system BadgeClass listing""","Reverts mozilla/badgekit-api#120 looks like this introduced a bug where no published badges were being shown.
",cmcavoy,64711,2014-07-31T23:27:02Z,CONTRIBUTOR,True,24,42,3,NO LONGER MAINTAINED,JavaScript,e845f226b7846b227ed7d117e584f270641a2161,"Revert ""Adds public cross-system BadgeClass listing"""
19,https://api.github.com/repos/mozilla/badgekit-api/pulls/121,121,Fix comment passthrough when issuing badges,"This is a very small fix that fixes a bug causing badge issuing comments to not be passed through to the webhook.
",ghost,10137,2014-07-22T14:34:20Z,NONE,True,1,1,1,NO LONGER MAINTAINED,JavaScript,73fae9ed64dc60d13825d068392b4a89f21b4794,Fix comment passthrough when issuing badges
20,https://api.github.com/repos/mozilla/badgekit-api/pulls/120,120,Adds public cross-system BadgeClass listing,"For #119.

Example of the output is here: https://gist.github.com/cmcavoy/7ad769d76c91c8832bdd

@kayelle @jpcameron can you take a look at the gist and let me know if that output is ok? 
",cmcavoy,64711,2014-07-15T18:10:13Z,CONTRIBUTOR,True,42,24,3,NO LONGER MAINTAINED,JavaScript,620ea1ed53b87244ee4fc4d26abea61b9f787839,"simplist possible solution to #119. Doesn't fit the exact format of the
example, but it's possible that it will work. Need confirmation."
21,https://api.github.com/repos/mozilla/badgekit-api/pulls/120,120,Adds public cross-system BadgeClass listing,"For #119.

Example of the output is here: https://gist.github.com/cmcavoy/7ad769d76c91c8832bdd

@kayelle @jpcameron can you take a look at the gist and let me know if that output is ok? 
",cmcavoy,64711,2014-07-15T18:10:13Z,CONTRIBUTOR,True,42,24,3,NO LONGER MAINTAINED,JavaScript,5f0f3571e3d60550ac02e582c389720f4caa35bb,update the public badge listing to match the directory specification
22,https://api.github.com/repos/mozilla/badgekit-api/pulls/118,118,Adding evidence to badge instances,"This adds the ability to specify an evidenceUrl when awarding a badge.  This will appear in the instance's assertion under the new field ""evidence"", as described by the specification.
",ghost,10137,2014-06-30T13:32:27Z,NONE,False,21,1,3,NO LONGER MAINTAINED,JavaScript,7272cd589d1fedefc11dda10ccd75b270a6270b0,Adding evidenceUrl to badge instances
23,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,e6b4dc9a3025c5510d3a4dac723fd51fc181c432,"Update api-endpoints.md

Removing commented out endpoints following confirmation that they're not required."
24,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,c4c5f6235431460618f7f6a846ca56a50d9c6e95,"Update assessment.md

Updates `assignedTo` and `assignedExpiration` information."
25,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,4072ab71b89a78e4385d6286c5f89efd3d3b62d3,"Update assessment.md

Adds that retrieved applications are sorted on created date."
26,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,72b022393353542ad5960ce3ff03703f18bd76db,"Update README.md

Updates with migration info and link to new docs."
27,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,14a9ec6982bb2a25ed320dacb041f178ffda8f70,"Update README.md

Adds revoke webhook."
28,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,802399921879aff9ca771969ce72fa89a4c237bf,Merge branch 'master' into doc-tidy
29,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,f2eece1b6c1ac92588455ef2cd56f54eed0e9d1b,Update webhooks.md
30,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,f56d0c1305ecbb5ea41b18bca2027f695e164e99,"Update assessment.md

Adds pagination info."
31,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,d86484422a63a2126e91629367d08544c72c1275,"Update badges.md

Adds pagination info."
32,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,92a1b8259a20e9ecc620100f3c5e9f0cf6d165e4,"Update claim-codes.md

Adds pagination info."
33,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,ad982c505c0e19b007ac5c623443768ba892ff52,"Update issuers.md

Adds pagination info."
34,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,244ddb5edb09e8d4540277afc8edd77bb51373a3,"Update issuing.md

Adds pagination info."
35,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,6e9364a2d2839f0945d24f8366e26e67b8352f40,"Update milestones.md

Adds pagination info."
36,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,5dd096d2385622200797263abacbce26052d247d,"Update programs.md

Adds pagination info."
37,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,0724eb1ac357dd62a6acf16f6cf8977aeb7a7329,"Update systems.md

Adds pagination info."
38,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,aaab5c1876be90ee4bacb529350e17edf3400b94,"Update milestones.md

Updates milestones auto-awarding info."
39,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,af2eaba011ed791c298cf7d3b98ba55a73f459ea,"Update milestones.md

Adds routes for adding and removing badges from milestones."
40,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,cdf29ac80f50094b758ad02f127f5647e9271e99,Update milestones.md
41,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,e17f6f117e012578d0e892b8b7c5c9866fbfedac,"Update assessment.md

Expands pagination info."
42,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,7b878d856f2d9f08076c6f17c22f20f6acc6f520,"Update badges.md

Expands pagination info."
43,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,9d763419f68b01e8e4c3015358cabe4589cecbd6,Update badges.md
44,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,3cf8fd4240e2555eee4ce30e9d356c2a8c234a61,Update badges.md
45,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,25c51b58f1637f691801c029df90f4443931f6ea,Update assessment.md
46,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,149486886e1aa258681bc35f573fccc10f586a11,"Update claim-codes.md

Expands pagination info."
47,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,998870bd55dfc7e33699f093fa8e569e3f9977f0,"Update issuers.md

Expands pagination info."
48,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,a6ce79482f81b71f1ef03ffa5b8fd413bf4ffada,"Update issuing.md

Expands pagination info."
49,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,1852be55b13c2b42ea35c563a103447dfda78880,"Update milestones.md

Expands pagination info."
50,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,5327a5af7da61845a9477727fd9a83118092e734,"Update programs.md

Expands pagination info."
51,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,7e07e57d3b517f0f76a9ad8a23156672e1581d6e,"Update systems.md

Expands pagination info."
52,https://api.github.com/repos/mozilla/badgekit-api/pulls/117,117,Doc updates/ tidying,"Includes some of the updates from #107 and #91 - some are still outstanding, can do them here or on another branch (this one has the updated readme with `db-migrate` instead of `schema.sql` which may be causing confusion e.g. https://github.com/mozilla/openbadges-badgekit/issues/454).
",SueSmith,6666370,2014-06-27T10:38:52Z,MEMBER,True,650,118,12,NO LONGER MAINTAINED,JavaScript,ff602e2c3201c2ccc6a85f2e12f8fe7f23e5c92a,Update milestones.md
53,https://api.github.com/repos/mozilla/badgekit-api/pulls/114,114,Allow GET applications route to optionally return only processed/unprocessed applications,"Similar to to the way the GET route for badges allows you to query for only archived or non-archived badges, this allows the GET applications route to optionally return only processed or non-processed applications.

I opted to keep the default such that all applications (even already processed ones) are returned in order to keep things working as they are for people that choose not to use this functionality, though I suspect that in the vast majority of cases, people will want only the non-processed badges returned.
",ghost,10137,2014-06-13T15:47:46Z,NONE,True,42,1,3,NO LONGER MAINTAINED,JavaScript,412db8096042140bde45f7102ce6bddcee0bc4ce,Allow filtering by pending/processed in GET applications route
54,https://api.github.com/repos/mozilla/badgekit-api/pulls/113,113,Pagination,"This adds pagination support for all non-singleton GET routes.  

This is very basic pagination that simply allows the API consumer to specify a page and count in the querystring in order to limit the results.  There is no snapshotting of data, so if deletions or additions occur between calls, the pages may have redundant or insufficient data.  Each call to a paginated function also returns a _pageData object in the body, which contains the current page, count per page, and the total number of objects available.

Note that there is no pagination going on yet at a deeper level than simply filtering the results returned (the database is still being queried for the full result set).
",ghost,10137,2014-06-12T14:23:27Z,NONE,True,266,39,22,NO LONGER MAINTAINED,JavaScript,37af1a5f6023f40854b2ac6919b73fc8c77cd0ca,First pass at pagination
55,https://api.github.com/repos/mozilla/badgekit-api/pulls/113,113,Pagination,"This adds pagination support for all non-singleton GET routes.  

This is very basic pagination that simply allows the API consumer to specify a page and count in the querystring in order to limit the results.  There is no snapshotting of data, so if deletions or additions occur between calls, the pages may have redundant or insufficient data.  Each call to a paginated function also returns a _pageData object in the body, which contains the current page, count per page, and the total number of objects available.

Note that there is no pagination going on yet at a deeper level than simply filtering the results returned (the database is still being queried for the full result set).
",ghost,10137,2014-06-12T14:23:27Z,NONE,True,266,39,22,NO LONGER MAINTAINED,JavaScript,a7b57c0dd44b8295bc5c8382a2074c908224065e,"Paginating streamsql queries, adding tests"
56,https://api.github.com/repos/mozilla/badgekit-api/pulls/113,113,Pagination,"This adds pagination support for all non-singleton GET routes.  

This is very basic pagination that simply allows the API consumer to specify a page and count in the querystring in order to limit the results.  There is no snapshotting of data, so if deletions or additions occur between calls, the pages may have redundant or insufficient data.  Each call to a paginated function also returns a _pageData object in the body, which contains the current page, count per page, and the total number of objects available.

Note that there is no pagination going on yet at a deeper level than simply filtering the results returned (the database is still being queried for the full result set).
",ghost,10137,2014-06-12T14:23:27Z,NONE,True,266,39,22,NO LONGER MAINTAINED,JavaScript,451baad3c6c5bcda404d881e752c99640acc11f0,updating streamsql version
57,https://api.github.com/repos/mozilla/badgekit-api/pulls/113,113,Pagination,"This adds pagination support for all non-singleton GET routes.  

This is very basic pagination that simply allows the API consumer to specify a page and count in the querystring in order to limit the results.  There is no snapshotting of data, so if deletions or additions occur between calls, the pages may have redundant or insufficient data.  Each call to a paginated function also returns a _pageData object in the body, which contains the current page, count per page, and the total number of objects available.

Note that there is no pagination going on yet at a deeper level than simply filtering the results returned (the database is still being queried for the full result set).
",ghost,10137,2014-06-12T14:23:27Z,NONE,True,266,39,22,NO LONGER MAINTAINED,JavaScript,937cce73a668a3cdad72863f9581196c2bf329f4,Renaming _pageData
58,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,eae89ff716b41995db01535b9d1718df2fa0f562,"Readability & whitespace

* Mostly whitespace changes
* Move one long message into a variable before putting it into an object"
59,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,c08f66e258bc20dc563afd898b828eff960e4a38,More whitespace cleanup.
60,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,6f912b68147c9a1bdef1b65c68ece3f7ec2c7e93,Better badge instance deletion test.
61,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,f12b94b3d3d77b7b6b49d6ab5588c4b11dbdf23e,Fix milestoneBadges->milestones table relationship
62,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,eaa75320fba59ebcc1085b77e976b9126817c283,Implement Milestones.findAndAward()
63,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,3fb727c800736ef41fcc6d6d7b29187530487e78,Whitespace
64,https://api.github.com/repos/mozilla/badgekit-api/pulls/112,112,Milestone auto awarding [closes #95],"Implements milestone badge auto-awarding.

Right after a badge is issued, a call is made to `Milestones.findAndAward()` with the email address and reference to the badge that was just issued. `findAndAward` will find all eligible milestones by getting milestones associated with the most recently issued badge and filtering out the ones that A) are already awarded and B) don't yet have the minimum number of required badges earned by the user.

`findAndAward` creates badge instances in the database and returns the list of new badge instances (or in the case of no awarded milestones badges, an empty list). We then use this in the award route to create ""award"" webhook calls for each of those instances.
",brianloveswords,166258,2014-06-12T13:46:13Z,CONTRIBUTOR,True,278,97,9,NO LONGER MAINTAINED,JavaScript,da7e382f1e590ef227510b23bbe4cd28204a3d1c,Milestone badges triggered from badge issuing.
65,https://api.github.com/repos/mozilla/badgekit-api/pulls/111,111,Adding webhook call when badge is deleted,"This adds a webhook call when a badge instance is deleted (previously, a call was made when an instance was awarded, but not when it was deleted).  The new call has the action 'revoke'.
",ghost,10137,2014-06-11T15:14:45Z,NONE,True,87,4,4,NO LONGER MAINTAINED,JavaScript,d0fbb131a94cd9d5691b756630de28206c5dc5d2,Adding webhook call when badge is deleted
66,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,8e26e526c3539d4d3c9a2805e51a4672da0f7181,Auto-generate badge slugs.
67,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,a0f73c6fd1c6c1d214a6bd08b641438b0992906a,Change badge uniqueness requirements in schema.
68,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,849c80831a85941000948d8e3a77f25cd1979d7f,updating from master
69,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,f20b5e4008da4b60f0e5da2d6acc36189cdd73d1,update from master
70,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,aa91364a7ef16923f134a45088c4a47bfbebfad4,return badge after badge creation
71,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,847455df78aecf6ad71b26eaae73924311e93081,Merge remote-tracking branch 'origin/45-badge-uniqueness'
72,https://api.github.com/repos/mozilla/badgekit-api/pulls/110,110,Fix migrations,"The initial migration wasn't right...had to make some fixes. This also includes the badge uniqueness PR.
",cmcavoy,64711,2014-06-09T21:51:03Z,CONTRIBUTOR,True,107,337,9,NO LONGER MAINTAINED,JavaScript,62c5821f01ae938293c9146ca09507d54884bc5e,updates to migrations to work in prod and locally.
73,https://api.github.com/repos/mozilla/badgekit-api/pulls/109,109,Fix public link from badge class to issuer,"In the case that a badge had a system and an issuer, but not a program, the public APIs were generating an incorrect URL for the issuer: `/public/systems/badgekit/issuers%20k-rad` instead of `/public/systems/badgekit/issuers/k-rad`.  The problem was just a missing piece of the format string.
",tgs,229502,2014-06-09T17:51:52Z,CONTRIBUTOR,True,1,1,1,NO LONGER MAINTAINED,JavaScript,0fba4dcb361c6cbaea211df860a7aca73413d863,Fix link from badge class to issuer
74,https://api.github.com/repos/mozilla/badgekit-api/pulls/108,108,standards alignment,"Adds an array of ""standards alignments"" to badges.  Each alignment must have a `name` and `URL`, and can have an optional `description`.  This array of standards alignments appears in the hosted assertion in the `alignment` field.
",ghost,10137,2014-06-09T17:18:57Z,NONE,True,116,0,5,NO LONGER MAINTAINED,JavaScript,011b942c61a9899b54e4905c1298e50c338a60a6,standards alignment
75,https://api.github.com/repos/mozilla/badgekit-api/pulls/106,106,Adding evidence type,"This adds an optional ""evidence type"" field to a badge, specifying the type of evidence expected in applications for the badge.
",ghost,10137,2014-06-09T14:31:12Z,NONE,True,149,101,8,NO LONGER MAINTAINED,JavaScript,3a1982eb98e3269270857af907712e6e12e4adbc,Adding evidence type
76,https://api.github.com/repos/mozilla/badgekit-api/pulls/105,105,Fix application sorting,"The GET route for applications within systems/issuers/programs is using an ambiguous reference to the ""created"" field.  This adds disambiguation so that it sorts on the applications.created field.  This was not observed until now because streamsql only recently added support for the field ""sort"" as opposed to ""order.""  
",ghost,10137,2014-06-06T18:52:29Z,NONE,True,1,1,1,NO LONGER MAINTAINED,JavaScript,998962844829913e86780bb1df92f9700bc75173,Fix application sorting
77,https://api.github.com/repos/mozilla/badgekit-api/pulls/104,104,Adding unique keys to a couple tables,"This adds some missing UNIQUE KEYS to the badges and issuers table (this was causing a few tests to fail, but would also be a Bad Thing in general.)
",ghost,10137,2014-06-06T18:04:21Z,NONE,True,30,0,1,NO LONGER MAINTAINED,JavaScript,d5be74308aa2140231b0c57c5d8ca0fe58e62bcb,Adding unique keys to a couple tables
78,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,7132c592a04472929e00eca7b36481e389f62331,Add DB Migration Logic
79,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,5d3fe64cfac2bbe3bfd7e64a45cc93bd8857f4ad,Add DB Migration Logic
80,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,25c63830ddb2b12e540d9363572be0cab4cc9302,Merge in other commits for DB
81,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,3f9e85b508daa80a269b34def1ba68a7db73be14,Fix NPM Dependencies
82,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,531855760066aecc0f1765a0480263918eb2c069,Fix NPM Dependencies
83,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,7b5b485ded5ad5af70e2f07538f56f1b280ca788,adding local config to ignore
84,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,8d3cffc15fbeb95888801bda289a7c1c4242cc45,Merge branch 'master' of https://github.com/mozilla/badgekit-api
85,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,f2ed3bb26e680cb23e785dc28acfbeeb1fb05017,Merge remote-tracking branch 'rayhooker/master'
86,https://api.github.com/repos/mozilla/badgekit-api/pulls/97,97,"DB Migrations, merged from #94 and #87","Combines #87 and #94

Took #87's framework and #94's migrations.
",cmcavoy,64711,2014-06-05T22:08:56Z,CONTRIBUTOR,True,442,22,7,NO LONGER MAINTAINED,JavaScript,69ab5412962850d9a53aceac55c21b8ebc910311,Merging PR's #94 and #87. Took #87's framework and #94's migrations.
87,https://api.github.com/repos/mozilla/badgekit-api/pulls/96,96,"Add a Vagrantfile, README for it, and a note in the main readme.  Also, ...","...a sample env which will work
",jdotpz,1373628,2014-06-05T20:42:23Z,NONE,False,177,1,4,NO LONGER MAINTAINED,JavaScript,97fd7ff6b9579fac61e34c49e76202727c6251ec,"Add a Vagrantfile, README for it, and a note in the main readme.  Also, a sample env which will work"
88,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,7132c592a04472929e00eca7b36481e389f62331,Add DB Migration Logic
89,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,5d3fe64cfac2bbe3bfd7e64a45cc93bd8857f4ad,Add DB Migration Logic
90,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,25c63830ddb2b12e540d9363572be0cab4cc9302,Merge in other commits for DB
91,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,3f9e85b508daa80a269b34def1ba68a7db73be14,Fix NPM Dependencies
92,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,531855760066aecc0f1765a0480263918eb2c069,Fix NPM Dependencies
93,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,defedb6c01c00caaf6f6bf602074e9ea889d7dd4,Fix NPM Dependencies
94,https://api.github.com/repos/mozilla/badgekit-api/pulls/94,94,Create DB Migration for Badgekit-api,"In order to make easy maintenance of the badgeit-api project, it is important to be able to do database migration.  This pull request clones the db migration approach from openbadges for badgekit-api.  It had to be adapted to utilize environment variables for configuration rather than the config.json approach used with the other project.
",rayhooker,1971756,2014-06-04T17:39:01Z,CONTRIBUTOR,False,411,2,5,NO LONGER MAINTAINED,JavaScript,becb81119057119d74a377db0d9f5314dfd95581,Merge branch 'master' of https://github.com/rayhooker/badgekit-api
95,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,811182957ea02c9d4476311108e6d4426cd20b5d,Initial pass through endpoints.
96,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,ec55a4f98ab0b0e286ca593d171f942365e5a2c8,"Alters endpoint category names to reflect routes.

Adds explanatory info to category names."
97,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,2d132ba2374273382e2ccc7cfbb0b5f2fd2b3871,"Create claim-codes.md

Initial commit listing endpoints - to be fleshed out."
98,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,57bdf3015fb7e558f2ca712b93e415d333441970,"Create issuing.md

Initial commit lists endpoints - more info to come."
99,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,84a27504fc57d62a0c87503cceac1966521546e8,"Create assessment.md

Initial commit lists endpoints - more info coming."
100,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,a0eb042301f1a12e52b7b625a75bd11ec457b0a1,"Update systems.md

Starts updating (GET endpoints)."
101,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,a8790793a0f59fed5d12c5ba27235cc559417463,"Update systems.md

Still to do GET `public`."
102,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,4cdf37938f5db659fc301255f032a2cea64f5e69,"Update systems.md

Adds TOC-type shortcuts at top."
103,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,00efb1ea517365c5847b0aca92a08b206d51d030,"Update api-endpoints.md

Links to other docs, adds intro."
104,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,d10683d611c093c2ad14518417a309028bfea365,Update api-endpoints.md
105,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,9ec91fc98c110da154eeee83efe0e29681fbe467,"Create README.md

Initial readme for docs directory."
106,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,531464b4ccc39e0b7b42df2216c2ca8c6c438aaa,Update README.md
107,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,671aca7a6692bc86aa93630effae85b7bbd01e5e,"Update issuers.md

First pass through issuer endpoints."
108,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,252cfb6fc2647a0520999c6e5acd3eab325a91b5,Update issuers.md
109,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,5d65e1458531453a8a9d8ed049ffcc5215e7717a,Update systems.md
110,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,4d65af1a6a323502b02774c240b6ff886c6096c3,"Update programs.md

First pass through programs endpoints."
111,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,8c813fe8e7c30e66253478ba76be2218d4e083fe,"Update badges.md

Starting to work through badges endpoints."
112,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,f7e20f05ca12727d9141928a12c06d80313c5d3c,Update issuers.md
113,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,27e3a475ed60e6d8f3f5fbb1a65e89e4164f82da,Update badges.md
114,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,ddada8b5fb39f2a666ac24b9778a7fb27f84b282,Update programs.md
115,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,557ab38895de88330ae2f0ae1075bfe03f9de60f,Update badges.md
116,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,c1edf7c0a25459a5dacdaa4ca31403de035118e9,Create milestones.md
117,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,7dd7adf35bc6e2a16a91ca5359c2113b7fbb95d6,Update api-endpoints.md
118,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,4d1a6fd7b18260fbd3cb3bf1b2635a960e0c73a4,Update README.md
119,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,2972f5a7af41969d6e412a80bc35666cf208ff9b,Update badges.md
120,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,5c2813a21c80ffbac4ef66d61d25d9e40004f8c8,Update badges.md
121,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,949fe8860eed39229c66a86505d2e83ab3da2079,"Update claim-codes.md

First pass through claim codes."
122,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,2df0ac3e93276723497f7e35bdf4c08cf8cdf4c2,Update claim-codes.md
123,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,8db20c58c5292de67f24a7acb19a67b2aa42869c,Update claim-codes.md
124,https://api.github.com/repos/mozilla/badgekit-api/pulls/91,91,Doc updates,"I've gone through the endpoints and updated the docs (with a bit of guesswork in some cases..). Added a few pages, linked them to one another and put a README in the docs directory.

A few things I wanted to check:
- Should these endpoints be in there?
  - `GET /public/systems/:slug` 
  - `GET /public/systems/:slug/issuers/:slug`
  - `GET /public/systems/:slug/issuers/:slug/programs/:slug`
  - `GET /public/assertions/:slug`
  - `GET /public/images/:imageId`
- I've removed the `evidence` endpoints - am I right in thinking it's just handled via the `applications` endpoints?
- I found that the `systems` endpoints didn't include the `description` field..? The `programs` array seems to be empty on the same endpoints. (I've included these in the docs so they'll need removed if that's wrong.)
- I've listed `type` as required for badges, is this correct? (See issue #90).
- I wasn't sure what the purpose of the `email` field is with claim codes..?
- When I attempted to create a duplicate claim code I didn't receive an error message - is this right? (I've included a duplicate entry error message so will need to change it if it shouldn't be returned..)
- When deleting a badge instance, the response I got didn't include a `status` field..? Unlike other delete endpoints where `deleted` status is returned.. (Haven't included in docs so will need to add if it should be there.)
- When I tried to create a badge instance including an invalid claim code I didn't get an error returned but the API did seem to crash..? (If this should have a particular error message I'll need to add it to the docs.)
- When creating a badge instance, I'm getting a response with a null `badge` in it - does the badge get returned depending on the parameters you include when creating the instance?
- I'm a bit unclear on these `applications` fields (could do with fleshing out their explanations):
  - `assignedTo` - is this the email address of the reviewer?
  - `assignedExpiration` - is this a date by which the application should be reviewed or a date for the badge to expire?

Hope all that makes sense...!

P.S. You can ignore all the commit comments, I just included them to remind me to ask the above questions...

Closes #89 
",SueSmith,6666370,2014-05-30T12:33:33Z,MEMBER,True,3422,438,11,NO LONGER MAINTAINED,JavaScript,64945525ed59317513f5c516e8893a16cb632144,Update issuing.md
125,https://api.github.com/repos/mozilla/badgekit-api/pulls/88,88,"Routes for adding single badges to milestone, removing single badges.","This PR implements `/system/:systemSlug/milestones/:milestoneId/add-badge` and `.../remove-badge` to be able to add and remove single badges from a milestone without affecting the rest of the support badges.

This also implements a milestone finder middleware, which handles `ResourceNotFound` errors more gracefully.

@cmcavoy, @christensenep to review.
",brianloveswords,166258,2014-05-20T17:50:18Z,CONTRIBUTOR,True,165,25,3,NO LONGER MAINTAINED,JavaScript,8649e00304e83be8d6f122430f8ca8ae94e6cea5,Route for adding single badge to a milestone.
126,https://api.github.com/repos/mozilla/badgekit-api/pulls/88,88,"Routes for adding single badges to milestone, removing single badges.","This PR implements `/system/:systemSlug/milestones/:milestoneId/add-badge` and `.../remove-badge` to be able to add and remove single badges from a milestone without affecting the rest of the support badges.

This also implements a milestone finder middleware, which handles `ResourceNotFound` errors more gracefully.

@cmcavoy, @christensenep to review.
",brianloveswords,166258,2014-05-20T17:50:18Z,CONTRIBUTOR,True,165,25,3,NO LONGER MAINTAINED,JavaScript,9ff5142729433bc17a665e699395792a1df73fda,Route for removing a badge from a milestone.
127,https://api.github.com/repos/mozilla/badgekit-api/pulls/87,87,Implement migrations.,"This pull request implements DB migrations and makes ""schema.sql"" the initial migration.

I also modify the test harness, which previously relied on running the statements in ""schema.sql"" directly, so it runs the migrations _only if they aren't up to date_ to keep things fast.
",brianloveswords,166258,2014-05-20T14:33:16Z,CONTRIBUTOR,False,224,22,7,NO LONGER MAINTAINED,JavaScript,358931002757a9ce8a4aca5c4abe7475f3709466,Implement migrations.
128,https://api.github.com/repos/mozilla/badgekit-api/pulls/86,86,Get and delete instances,"This adds routes to GET all instances of a particular badge, get a single instance of a particular badge by email, and delete an instance of a badge.
",ghost,10137,2014-05-14T15:26:37Z,NONE,True,114,6,4,NO LONGER MAINTAINED,JavaScript,4bc9755a167238be167b7c4917b703f9c2de8571,Adding get and delete routes for badge instances
129,https://api.github.com/repos/mozilla/badgekit-api/pulls/86,86,Get and delete instances,"This adds routes to GET all instances of a particular badge, get a single instance of a particular badge by email, and delete an instance of a badge.
",ghost,10137,2014-05-14T15:26:37Z,NONE,True,114,6,4,NO LONGER MAINTAINED,JavaScript,085726b2dbc494fe3616155b1abbf792e6c56031,Adding get single instance route
130,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,cea3e0fc279bf91c08fe214987cd5b106bc72ba9,Add schema.
131,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,b5c3f085fd825edfd8ecac62635b6ba7eae6ecef,Fix some schema issues.
132,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,fe5577b75e869e681445b1d1e2190d8825a3da30,Change column name.
133,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,2689862d74df9dbd7a8a293e967e7c9c51965a1f,Implement models.
134,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,33036f229b600b518256f7685b726a208208d9e1,Trailing comma consistency.
135,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,11845a00b8b4310d969d77b6660edd18c67500aa,Starting milestone routes.
136,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,542e54b1898f8926f947eea5dc3ab96002585da3,Can GET a single milestone.
137,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,958197374cc64d9410fb1a019b7dbd7cdb0070b7,Test harness: Use JSON unless multipart is necessary
138,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,2404a42571f98a8962334c0532f8869382b503d4,Can create new milestones.
139,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,bcffa497313ecb1d9e40d58e4f0d70ee4c474326,Can delete milestones.
140,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,bab388f7e222b8b99bd56d4210b3374dee7ea4a0,Get milestones for a badge in the showOneBadge route
141,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,10a21dfea9b59f4c9c7652540ab5f9cdd52c2e0a,Can update milestones.
142,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,dd32a442ae654a6d839e88380e6fcb876886862f,Whitespace
143,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,78c0d462e359572e08b572c94af14a77234b0e78,"Allow `null` for milestone action

So cities are currently do not want any action to happen automatically
with milestones. I suppose the best way to represent this is with NULL,
though perhaps we might also consider another enum, like ""nothing"" or
something."
144,https://api.github.com/repos/mozilla/badgekit-api/pulls/85,85,Milestone badges,,brianloveswords,166258,2014-05-14T14:33:16Z,CONTRIBUTOR,True,490,31,12,NO LONGER MAINTAINED,JavaScript,ae4b31512a8acc57916c41b431dd76255587f2c3,ToResponsing badge data from getBadge route
145,https://api.github.com/repos/mozilla/badgekit-api/pulls/84,84,Fix error when requesting badge instances of a user with no badges,"This fixes an error caused by a request for the badgeInstances of a user that has no badges.
",ghost,10137,2014-05-13T17:15:04Z,NONE,True,6,1,1,NO LONGER MAINTAINED,JavaScript,b3fc26ff2a619d77f9d698799e8f6f5a26bcacb5,Fix error when requesting badge instances of a user with no badges
146,https://api.github.com/repos/mozilla/badgekit-api/pulls/83,83,[WIP] Add db migrations & evidence URL,"Made a pass at adding migrations so I could add an evidenceUrl to the badgeinstance model. Migrations work, but adapting the spawn piece of the test suite to migrations isn't working.
",cmcavoy,64711,2014-05-10T18:58:27Z,CONTRIBUTOR,False,284,29,13,NO LONGER MAINTAINED,JavaScript,243fa421acf515b3e7d254bb23823182c13f8535,"copying database access method from openbadges-badgekit, precursor to
copying the db-migration work from that project."
147,https://api.github.com/repos/mozilla/badgekit-api/pulls/83,83,[WIP] Add db migrations & evidence URL,"Made a pass at adding migrations so I could add an evidenceUrl to the badgeinstance model. Migrations work, but adapting the spawn piece of the test suite to migrations isn't working.
",cmcavoy,64711,2014-05-10T18:58:27Z,CONTRIBUTOR,False,284,29,13,NO LONGER MAINTAINED,JavaScript,e46a3b589b2aa957ba2b0d5087ce42130f43d668,"added migrations, modeled after openbadges-badgekit. initial migration
is a bit of a hack, parsing the schema.sql file and executing each
statement."
148,https://api.github.com/repos/mozilla/badgekit-api/pulls/83,83,[WIP] Add db migrations & evidence URL,"Made a pass at adding migrations so I could add an evidenceUrl to the badgeinstance model. Migrations work, but adapting the spawn piece of the test suite to migrations isn't working.
",cmcavoy,64711,2014-05-10T18:58:27Z,CONTRIBUTOR,False,284,29,13,NO LONGER MAINTAINED,JavaScript,573a2f48452503609b0aa3fde87f28db01852fea,"moved to migrations and added an evidenceUrl migration. tests are
failing because I don't fully understand how the spawn module is
working."
149,https://api.github.com/repos/mozilla/badgekit-api/pulls/83,83,[WIP] Add db migrations & evidence URL,"Made a pass at adding migrations so I could add an evidenceUrl to the badgeinstance model. Migrations work, but adapting the spawn piece of the test suite to migrations isn't working.
",cmcavoy,64711,2014-05-10T18:58:27Z,CONTRIBUTOR,False,284,29,13,NO LONGER MAINTAINED,JavaScript,de2714e15cd63b77e493c136b5aa83c34e36b8c1,"checkpoint, still not working"
150,https://api.github.com/repos/mozilla/badgekit-api/pulls/82,82,Better issuers and programs arrays in System.toResponse and Issuer.toResponse,"Issuer responses didn't include a programs array at all, and System responses weren't toResponse-ifying their issuer array.  This changes that.
",ghost,10137,2014-05-08T16:51:14Z,NONE,True,12,3,3,NO LONGER MAINTAINED,JavaScript,abf7643e75a337c9304eb7985758a1e69087c5fe,Better issuers and programs arrays in system and issuer responses
151,https://api.github.com/repos/mozilla/badgekit-api/pulls/82,82,Better issuers and programs arrays in System.toResponse and Issuer.toResponse,"Issuer responses didn't include a programs array at all, and System responses weren't toResponse-ifying their issuer array.  This changes that.
",ghost,10137,2014-05-08T16:51:14Z,NONE,True,12,3,3,NO LONGER MAINTAINED,JavaScript,362c6659e019e2a5e0ace4952e478b1f5130c6f7,0.2.9
152,https://api.github.com/repos/mozilla/badgekit-api/pulls/80,80,Badge tags,"This adds support for badge tags.
",ghost,10137,2014-05-05T20:47:52Z,NONE,True,122,23,8,NO LONGER MAINTAINED,JavaScript,3754144d042422d3fcf9789ce6718f6f6b17531a,Added badge tags
153,https://api.github.com/repos/mozilla/badgekit-api/pulls/80,80,Badge tags,"This adds support for badge tags.
",ghost,10137,2014-05-05T20:47:52Z,NONE,True,122,23,8,NO LONGER MAINTAINED,JavaScript,af96a1d93572603b5cd730a73d1236118fa30c4e,Fixing tags when archiving
154,https://api.github.com/repos/mozilla/badgekit-api/pulls/80,80,Badge tags,"This adds support for badge tags.
",ghost,10137,2014-05-05T20:47:52Z,NONE,True,122,23,8,NO LONGER MAINTAINED,JavaScript,4f920427546fea8e35bd4dc8869f669aab2ec2bc,Fixing test
155,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,633fccbbb1bd2d46a602ab21a4ea9494268dd1f8,Fixes for applications
156,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,23d582f50d3560300f88785fcf476fd0493e8f78,Changes to support applications
157,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,352b841aa73d87b2c917fb4772d4a093bb2ba64b,Updating api endpoint docs for assessment
158,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,dd6206f993cab4cf2475c19060485609d542c0f6,Additional fixes
159,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,3b727dd127b1b9242a242b8864df6abf80609834,"Adding badge lookup by claim code, other fixes"
160,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,b602ae4ebfe556ce9eb5bf807cfb705d0918138c,0.2.1
161,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,28ffe75585d92b0c4dbb584a470e970a93e1c71c,Adding newrelic
162,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,52755f011d575d5ffea6bf5e09d31d37ef13bc2e,0.2.2
163,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,0ba19ff218f20f4eebd456b26c396238e49b158f,Fixing bug with submitted applications stupidly determining what issuer and program they belong to
164,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,4711ed4133212e3a1780358978472af92c29ec0f,0.2.3
165,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,93e875856977656dc3ee33260c8390748f9752ec,"Merge branch 'master' into application-updates

Conflicts:
	app/models/badge.js"
166,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,48b857de326e5e5439e9ff9efea3808f18339241,Merge remote-tracking branch 'upstream/master' into application-updates
167,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,3dea72e206af1ccd7d7286b0432fa7ab9ecc6157,Badge categories
168,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,0e36296b69fca2ce196872cc193ea5851391449e,Adding optional comment passed to webhook when issuing badge
169,https://api.github.com/repos/mozilla/badgekit-api/pulls/79,79,[WIP] Badge issuing comments,"THIS SHOULD BE MERGED AFTER #65 

This just adds the option for a badge issue request to send a comment that is passed along to the webhook (if one exists).  The [WIP] flag is only due to this PR containing all the changes from #65.
",ghost,10137,2014-04-29T19:39:06Z,NONE,False,180,53,13,NO LONGER MAINTAINED,JavaScript,7ffe812b3a248a10875e8fa07e6e9ad234b74f54,0.2.5
170,https://api.github.com/repos/mozilla/badgekit-api/pulls/78,78,HTTP connection hangs when trying to create a duplicate badge instance,"I'm able to issue badge instances by using `POST /systems/:slug/badges/:slug/instances`.  However, if I try to issue a second badge to the same e-mail address, the server does not behave properly.  It should give me back an HTTP `409 Conflict`, as in the ""Duplicate entry"" error message in [this other endpoint](https://github.com/mozilla/badgekit-api/blob/master/docs/badges.md).  Instead, it either closes the connection or leaves it hanging, I can't tell.

The pull request here is obviously not a solution, it just points out where the error-handling logic could go.  It does cause the HTTP connection to terminate correctly, so my client library doesn't hang forever waiting for a response.
",tgs,229502,2014-04-29T19:14:46Z,CONTRIBUTOR,False,3,0,1,NO LONGER MAINTAINED,JavaScript,57b4fcb74b833516a455745d607e7eaa6a3aec21,Laughable attempt to handle the error
171,https://api.github.com/repos/mozilla/badgekit-api/pulls/77,77,Capitalize JWT algorithm used for webhook,"While the JWT standard doesn't explicitly say that algorithm names must
be capitalized, all of its examples are capitalized (e.g. 'HS256'
instead of 'hs256').  The lower-case name caused a spurious signature
failure for me.
",tgs,229502,2014-04-29T16:46:05Z,CONTRIBUTOR,True,1,1,1,NO LONGER MAINTAINED,JavaScript,018c8f53104fdd8532904bfe279b1cffde110ad6,"Capitalize JWT algorithm used for webhook

While the JWT standard doesn't explicitly say that algorithm names must
be capitalized, all of its examples are capitalized (e.g. 'HS256'
instead of 'hs256').  The lower-case name caused a spurious signature
failure for me."
172,https://api.github.com/repos/mozilla/badgekit-api/pulls/76,76,Fix imageHelper bug,"This fixes a nefarious little bug that occurs when two badges with the same slug in two different contexts (such as different systems) can receive bad data back from imageHelper.putModel.  This was manifesting as vanishing criteria for a published badge (actually the criteria wasn't vanishing... it was being put on the other badge!)
",ghost,10137,2014-04-24T19:35:17Z,NONE,True,1,1,1,NO LONGER MAINTAINED,JavaScript,82f21e0c6d6eaaed8718782d60fdf2b798f34ffb,Fix situations where two objects with the same slug (in different contexts) could receive bad data from imageHelper.putModel
173,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,aa13f2facf271e5dbe176277163c2abf97abc63d,Defining new badge category model
174,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,bbb49008bdf66f31786e050628576d4fa5f9133b,Adding `type` and `categories` to `badge` model
175,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,ec1d504a61d133a4dc8a757eb3bb5013c12cdf9d,Adding `type` to badges schema
176,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,f90b94313edbe5ac9571cad84b29e079ed9f0cf2,Adding type and category to badge test
177,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,904b08f389a786cd9d642378aeb4a8fc45c5efef,Error fixes
178,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,3b64fd032c20709e0cf88187b3659e169f0390f5,Schema fix
179,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,2ff955e4e777ee12e79894b85a6e0de8c765bfd3,Including categories
180,https://api.github.com/repos/mozilla/badgekit-api/pulls/75,75,Badge categories & types,"Updating BadgeKit API to be aware of badge categories and types.
",andrewhayward,159848,2014-04-24T14:37:29Z,MEMBER,True,103,6,5,NO LONGER MAINTAINED,JavaScript,3027e65ea4cb2ba7040a0397f9908db8859464b0,Changes to make types work
181,https://api.github.com/repos/mozilla/badgekit-api/pulls/73,73,punctuation nit pick,"""
:cake:
",tgs,229502,2014-04-17T20:52:49Z,CONTRIBUTOR,True,1,1,1,NO LONGER MAINTAINED,JavaScript,5b0dde20464abd9d65b3fd6379fbd72ca63c27c2,"punctuation nit pick

""
:cake:"
182,https://api.github.com/repos/mozilla/badgekit-api/pulls/73,73,punctuation nit pick,"""
:cake:
",tgs,229502,2014-04-17T20:52:49Z,CONTRIBUTOR,True,1,1,1,NO LONGER MAINTAINED,JavaScript,49e5910577df68bdb12abafd386ee947e8930cc8,"Actually, the field name is wrong too"
183,https://api.github.com/repos/mozilla/badgekit-api/pulls/71,71,Fix verification middleware,"This fixes a subtle issue that could cause verification to fail when
trying to handle bodies that contain multibyte characters. This is best
illustrated with an example from the REPL:

```
> crypto.createHash('sha256').update(' ').digest('hex')
'9652595f37edd08c51dfa26567e6cd76e6fa2709c3e578478ca398d316837a7a'

> crypto.createHash('sha256').update(Buffer(' ', binary')).digest('hex')
'9652595f37edd08c51dfa26567e6cd76e6fa2709c3e578478ca398d316837a7a'

> crypto.createHash('sha256').update(Buffer(' ')).digest('hex')
'78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f'

```

By default, `Hash#update()` treats `data` as being binary encoded if a
string is passed and there is no optional `input_encoding`
parameter. This messes up any multibyte characters in the string and
the created hash will not match one where the encoding was set
correctly (either by passing the optional `input_encoding` parameter to
`update` or by using a Buffer directly with `update`).

This is a user error for sure, but one that is easily made and I think
we might want to be a little lax about what we accept here   especially
because I don't know how other languages handle this situation.

COUNTER-POINT:
The Big 3 handle this situation pretty much correctly:

Python:

```
  $ python
  >>> import hashlib
  >>> hashlib.sha256(' ').hexdigest()
  '78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f'
```

PHP:

```
  $ php -r 'echo hash(""sha256"", "" "");'
  78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f%
```

Ruby:

```
  $ ruby -r Digest -e 'puts Digest::SHA256.new.update("" "").hexdigest'
  78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f
```

So instead of actually making the hash checking more lax, we might just
want to add a line to the docs saying that if you're using node, make
sure to pass a Buffer to `Hash#update` or explicitly set the
`input_encoding` parameter to ""utf8"".

@cmcavoy, @andrewhayward to review/advise.
",brianloveswords,166258,2014-04-17T06:49:37Z,CONTRIBUTOR,False,49,5,2,NO LONGER MAINTAINED,JavaScript,8dd9f787ca24c358b448399f6a0a610362086103,"Fix verification middleware

This fixes a subtle issue that could cause verification to fail when
trying to handle bodies that contain multibyte characters. This is best
illustrated with an example from the REPL:

```
> crypto.createHash('sha256').update(' ').digest('hex')
'9652595f37edd08c51dfa26567e6cd76e6fa2709c3e578478ca398d316837a7a'

> crypto.createHash('sha256').update(Buffer(' ', binary')).digest('hex')
'9652595f37edd08c51dfa26567e6cd76e6fa2709c3e578478ca398d316837a7a'

> crypto.createHash('sha256').update(Buffer(' ')).digest('hex')
'78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f'

```

By default, `Hash#update()` treats `data` as being binary encoded if a
string is passed and there is no optional `input_encoding`
parameter. This messes up any multibyte characters in the string and
the created hash will not match one where the encoding was set
correctly (either by passing the optional `input_encoding` parameter to
`update` or by using a Buffer directly with `update`).

This is a user error for sure, but one that is easily made and I think
we might want to be a little lax about what we accept here   especially
because I don't know how other languages handle this situation.

COUNTER-POINT:
The Big 3 handle this situation pretty much correctly:

Python:
  $ python
  >>> import hashlib
  >>> hashlib.sha256(' ').hexdigest()
  '78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f'

PHP:
  $ php -r 'echo hash(""sha256"", "" "");'
  78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f%

Ruby:
  $ ruby -r Digest -e 'puts Digest::SHA256.new.update("" "").hexdigest'
  78d9ce976067aaa5aa9024c17a726c9b121d14abb73ac7644c62c70a6e1a9a5f

So instead of actually making the hash checking more lax, we might just
want to add a line to the docs saying that if you're using node, make
sure to pass a Buffer to `Hash#update` or explicitly set the
`input_encoding` parameter to ""utf8""."
184,https://api.github.com/repos/mozilla/badgekit-api/pulls/69,69,Update docs,"Fixes #63 #68750792
",cmcavoy,64711,2014-04-14T22:52:19Z,CONTRIBUTOR,True,84,46,5,NO LONGER MAINTAINED,JavaScript,574372d45c6c8e0db248fb1a9d231814d9355cb4,"updated docs for badges, added docs for webhooks"
185,https://api.github.com/repos/mozilla/badgekit-api/pulls/69,69,Update docs,"Fixes #63 #68750792
",cmcavoy,64711,2014-04-14T22:52:19Z,CONTRIBUTOR,True,84,46,5,NO LONGER MAINTAINED,JavaScript,729a4c9e57650def663e42ec59f07ef2b74478f6,"more badges.md changes - added put and delete, fixed the image upload section."
186,https://api.github.com/repos/mozilla/badgekit-api/pulls/69,69,Update docs,"Fixes #63 #68750792
",cmcavoy,64711,2014-04-14T22:52:19Z,CONTRIBUTOR,True,84,46,5,NO LONGER MAINTAINED,JavaScript,b7cdbf0090ba69f79b1e54cef3a78f0d4611155c,updated issuer docs to include new url schema
187,https://api.github.com/repos/mozilla/badgekit-api/pulls/69,69,Update docs,"Fixes #63 #68750792
",cmcavoy,64711,2014-04-14T22:52:19Z,CONTRIBUTOR,True,84,46,5,NO LONGER MAINTAINED,JavaScript,dd103a529fb654eaed9bd0807492a45d6acb4093,updated programs to use new url schema
188,https://api.github.com/repos/mozilla/badgekit-api/pulls/68,68,[WIP] Swag,"Swaggifying the app with swag. swag swag swag.

![swag](http://media.giphy.com/media/6RVl4uoQS1os0/giphy.gif)

swag. seriously. what a world.
",cmcavoy,64711,2014-04-11T21:25:31Z,CONTRIBUTOR,False,39,12,5,NO LONGER MAINTAINED,JavaScript,c8b19dc41b1ffbb7d21a870bbe74de837bb3eb54,adding local.config to git ignore
189,https://api.github.com/repos/mozilla/badgekit-api/pulls/68,68,[WIP] Swag,"Swaggifying the app with swag. swag swag swag.

![swag](http://media.giphy.com/media/6RVl4uoQS1os0/giphy.gif)

swag. seriously. what a world.
",cmcavoy,64711,2014-04-11T21:25:31Z,CONTRIBUTOR,False,39,12,5,NO LONGER MAINTAINED,JavaScript,b18173825c54201e66ecc5b81db10e4d65d4aa4b,typo
190,https://api.github.com/repos/mozilla/badgekit-api/pulls/68,68,[WIP] Swag,"Swaggifying the app with swag. swag swag swag.

![swag](http://media.giphy.com/media/6RVl4uoQS1os0/giphy.gif)

swag. seriously. what a world.
",cmcavoy,64711,2014-04-11T21:25:31Z,CONTRIBUTOR,False,39,12,5,NO LONGER MAINTAINED,JavaScript,b8dc8f4314a5f664bbf31836215eb22d6dd08420,a single endpoint swagged
191,https://api.github.com/repos/mozilla/badgekit-api/pulls/67,67,Readme additions.,"I've kept this fairly short, just added a couple of paragraphs and pretty much left the config section alone. I've included more info in the wiki homepage so it's there if people want it.. If anyone has any thoughts on how I've described this please let me know as I'm not 100% sure I've got the language right..!

Closes #66 
And closes #69252410 
",SueSmith,6666370,2014-04-11T16:10:37Z,MEMBER,True,48,7,1,NO LONGER MAINTAINED,JavaScript,ffb1ce740f998d215f4dd1d1c16bad2afe58a6db,Readme additions.
192,https://api.github.com/repos/mozilla/badgekit-api/pulls/67,67,Readme additions.,"I've kept this fairly short, just added a couple of paragraphs and pretty much left the config section alone. I've included more info in the wiki homepage so it's there if people want it.. If anyone has any thoughts on how I've described this please let me know as I'm not 100% sure I've got the language right..!

Closes #66 
And closes #69252410 
",SueSmith,6666370,2014-04-11T16:10:37Z,MEMBER,True,48,7,1,NO LONGER MAINTAINED,JavaScript,6599f27414069b0feb0c1af3784eb0624a2073d0,Update README.md
193,https://api.github.com/repos/mozilla/badgekit-api/pulls/67,67,Readme additions.,"I've kept this fairly short, just added a couple of paragraphs and pretty much left the config section alone. I've included more info in the wiki homepage so it's there if people want it.. If anyone has any thoughts on how I've described this please let me know as I'm not 100% sure I've got the language right..!

Closes #66 
And closes #69252410 
",SueSmith,6666370,2014-04-11T16:10:37Z,MEMBER,True,48,7,1,NO LONGER MAINTAINED,JavaScript,eb881d8e45a3e831a35c611c5cbad3cc2a5d5064,Update README.md
194,https://api.github.com/repos/mozilla/badgekit-api/pulls/67,67,Readme additions.,"I've kept this fairly short, just added a couple of paragraphs and pretty much left the config section alone. I've included more info in the wiki homepage so it's there if people want it.. If anyone has any thoughts on how I've described this please let me know as I'm not 100% sure I've got the language right..!

Closes #66 
And closes #69252410 
",SueSmith,6666370,2014-04-11T16:10:37Z,MEMBER,True,48,7,1,NO LONGER MAINTAINED,JavaScript,79b9fb42f98ccef3a0751be01065f2f251c2dc46,Update README.md
195,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,633fccbbb1bd2d46a602ab21a4ea9494268dd1f8,Fixes for applications
196,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,23d582f50d3560300f88785fcf476fd0493e8f78,Changes to support applications
197,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,352b841aa73d87b2c917fb4772d4a093bb2ba64b,Updating api endpoint docs for assessment
198,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,dd6206f993cab4cf2475c19060485609d542c0f6,Additional fixes
199,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,3b727dd127b1b9242a242b8864df6abf80609834,"Adding badge lookup by claim code, other fixes"
200,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,b602ae4ebfe556ce9eb5bf807cfb705d0918138c,0.2.1
201,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,28ffe75585d92b0c4dbb584a470e970a93e1c71c,Adding newrelic
202,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,52755f011d575d5ffea6bf5e09d31d37ef13bc2e,0.2.2
203,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,0ba19ff218f20f4eebd456b26c396238e49b158f,Fixing bug with submitted applications stupidly determining what issuer and program they belong to
204,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,4711ed4133212e3a1780358978472af92c29ec0f,0.2.3
205,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,93e875856977656dc3ee33260c8390748f9752ec,"Merge branch 'master' into application-updates

Conflicts:
	app/models/badge.js"
206,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,48b857de326e5e5439e9ff9efea3808f18339241,Merge remote-tracking branch 'upstream/master' into application-updates
207,https://api.github.com/repos/mozilla/badgekit-api/pulls/65,65,Fixes for applications,"Mostly just passing `req` through for usefulness purposes.
",andrewhayward,159848,2014-04-08T20:48:29Z,MEMBER,True,178,53,13,NO LONGER MAINTAINED,JavaScript,3dea72e206af1ccd7d7286b0432fa7ab9ecc6157,Badge categories
208,https://api.github.com/repos/mozilla/badgekit-api/pulls/64,64,Badge types,"WIP getting some errors testing that I'm not sure how to address. Also cleaned up some semi-colons (I'm a lint guy).
",daytonn,35955,2014-04-08T15:30:00Z,MEMBER,False,145,19,10,NO LONGER MAINTAINED,JavaScript,f04ec422f6ca374b326bc2d2431b52a8218a454b,Create some handy scripts to manage repetitive tasks
209,https://api.github.com/repos/mozilla/badgekit-api/pulls/64,64,Badge types,"WIP getting some errors testing that I'm not sure how to address. Also cleaned up some semi-colons (I'm a lint guy).
",daytonn,35955,2014-04-08T15:30:00Z,MEMBER,False,145,19,10,NO LONGER MAINTAINED,JavaScript,c4233eff1e752d8c2c0ff5b97350ef65c9179aff,Add ability to test individual file
210,https://api.github.com/repos/mozilla/badgekit-api/pulls/64,64,Badge types,"WIP getting some errors testing that I'm not sure how to address. Also cleaned up some semi-colons (I'm a lint guy).
",daytonn,35955,2014-04-08T15:30:00Z,MEMBER,False,145,19,10,NO LONGER MAINTAINED,JavaScript,8f44b77dbf2053e54a51ecc95a32da8960571899,WIP add badge type model and relationship
211,https://api.github.com/repos/mozilla/badgekit-api/pulls/64,64,Badge types,"WIP getting some errors testing that I'm not sure how to address. Also cleaned up some semi-colons (I'm a lint guy).
",daytonn,35955,2014-04-08T15:30:00Z,MEMBER,False,145,19,10,NO LONGER MAINTAINED,JavaScript,01c60458fffd2cf31b0899d08ba672c58fe94ff1,Actually require the badge type
212,https://api.github.com/repos/mozilla/badgekit-api/pulls/62,62,Removing duplicate `random` code generator,"This somehow ended up here twice. I have an ominous feeling it was my fault.
",andrewhayward,159848,2014-04-01T20:15:26Z,MEMBER,True,2,20,1,NO LONGER MAINTAINED,JavaScript,e46e6baf267cc115c6a5543548cb2b218c625178,Removing duplicate `random` code generator
213,https://api.github.com/repos/mozilla/badgekit-api/pulls/58,58,[WIP] Refactor: promisfy,,brianloveswords,166258,2014-03-20T17:13:08Z,CONTRIBUTOR,False,54,18,3,NO LONGER MAINTAINED,JavaScript,da4450221fd57b2525849986e87fd1a3082bc438,"Promisify image route, add tests."
214,https://api.github.com/repos/mozilla/badgekit-api/pulls/55,55,Tightening claim codes,"- Adding claim code validation
- Making responses a little more consistent
",andrewhayward,159848,2014-03-19T17:49:00Z,MEMBER,True,84,33,3,NO LONGER MAINTAINED,JavaScript,cf4b823bd30ab335df91fa50126c65e49d324476,Tightening claim codes
215,https://api.github.com/repos/mozilla/badgekit-api/pulls/55,55,Tightening claim codes,"- Adding claim code validation
- Making responses a little more consistent
",andrewhayward,159848,2014-03-19T17:49:00Z,MEMBER,True,84,33,3,NO LONGER MAINTAINED,JavaScript,84f28f0d5defad4b07e04acf026f0caf22578abe,Removing redundant anonymous functions
216,https://api.github.com/repos/mozilla/badgekit-api/pulls/54,54,Add healthcheck endpoint. [closes #47],"@jdotpz, @cmcavoy to review.

(JP – does the healthcheck need to be found at a specific endpoint? I put it at `/healthcheck`, but I can put it somewhere else if necessary)
",brianloveswords,166258,2014-03-18T14:26:29Z,CONTRIBUTOR,True,37,12,4,NO LONGER MAINTAINED,JavaScript,b2a94e3ecb5fe5ec450bd12f508bdfce13426b05,Add healthcheck endpoint.
217,https://api.github.com/repos/mozilla/badgekit-api/pulls/54,54,Add healthcheck endpoint. [closes #47],"@jdotpz, @cmcavoy to review.

(JP – does the healthcheck need to be found at a specific endpoint? I put it at `/healthcheck`, but I can put it somewhere else if necessary)
",brianloveswords,166258,2014-03-18T14:26:29Z,CONTRIBUTOR,True,37,12,4,NO LONGER MAINTAINED,JavaScript,c312cd8ba3de2d05ede15b952abae62ad1a70a49,Send back the version number in the healthcheck endpoint.
218,https://api.github.com/repos/mozilla/badgekit-api/pulls/54,54,Add healthcheck endpoint. [closes #47],"@jdotpz, @cmcavoy to review.

(JP – does the healthcheck need to be found at a specific endpoint? I put it at `/healthcheck`, but I can put it somewhere else if necessary)
",brianloveswords,166258,2014-03-18T14:26:29Z,CONTRIBUTOR,True,37,12,4,NO LONGER MAINTAINED,JavaScript,efb885e5f4a006b19dafd53c3fac79452c114a95,Remove useless condition.
219,https://api.github.com/repos/mozilla/badgekit-api/pulls/54,54,Add healthcheck endpoint. [closes #47],"@jdotpz, @cmcavoy to review.

(JP – does the healthcheck need to be found at a specific endpoint? I put it at `/healthcheck`, but I can put it somewhere else if necessary)
",brianloveswords,166258,2014-03-18T14:26:29Z,CONTRIBUTOR,True,37,12,4,NO LONGER MAINTAINED,JavaScript,13736da41e2c75d275e8f752926c11dbb81249a8,Use `package.name` in the app definition.
220,https://api.github.com/repos/mozilla/badgekit-api/pulls/53,53,Badge uniqueness [closes #45],,brianloveswords,166258,2014-03-18T14:11:06Z,CONTRIBUTOR,True,72,275,7,NO LONGER MAINTAINED,JavaScript,8e26e526c3539d4d3c9a2805e51a4672da0f7181,Auto-generate badge slugs.
221,https://api.github.com/repos/mozilla/badgekit-api/pulls/53,53,Badge uniqueness [closes #45],,brianloveswords,166258,2014-03-18T14:11:06Z,CONTRIBUTOR,True,72,275,7,NO LONGER MAINTAINED,JavaScript,a0f73c6fd1c6c1d214a6bd08b641438b0992906a,Change badge uniqueness requirements in schema.
222,https://api.github.com/repos/mozilla/badgekit-api/pulls/53,53,Badge uniqueness [closes #45],,brianloveswords,166258,2014-03-18T14:11:06Z,CONTRIBUTOR,True,72,275,7,NO LONGER MAINTAINED,JavaScript,849c80831a85941000948d8e3a77f25cd1979d7f,updating from master
223,https://api.github.com/repos/mozilla/badgekit-api/pulls/53,53,Badge uniqueness [closes #45],,brianloveswords,166258,2014-03-18T14:11:06Z,CONTRIBUTOR,True,72,275,7,NO LONGER MAINTAINED,JavaScript,f20b5e4008da4b60f0e5da2d6acc36189cdd73d1,update from master
224,https://api.github.com/repos/mozilla/badgekit-api/pulls/53,53,Badge uniqueness [closes #45],,brianloveswords,166258,2014-03-18T14:11:06Z,CONTRIBUTOR,True,72,275,7,NO LONGER MAINTAINED,JavaScript,aa91364a7ef16923f134a45088c4a47bfbebfad4,return badge after badge creation
225,https://api.github.com/repos/mozilla/badgekit-api/pulls/51,51,Assessment,"This adds applications and reviews.  Huzzah.

Still needs a few things:
- Tests do not cover applications with evidence or reviews with reviewItems.  This is due to FormData not working with arrays.  There may well be an easy solution to this, but I haven't really looked into this yet (I have tested manually and adding and updating these arrays does work)
- Deletion of applications and reviews (and badges, in fact) does not handle deleting the accompanying evidence, reviewItems, and criteria.  Oops.  Going to add delete methods to the Application, Badge and Review models to handle this.
- Doc updates
- The webhooks used by applications may not be the right implementation (at the very least, they are totally unsecure right now).  Need to discuss how these will actually work, and if they will be on an application-by-application basic (as with aestimia), or if they should just use system-level webhooks.
",ghost,10137,2014-03-17T05:53:54Z,NONE,True,1510,37,22,NO LONGER MAINTAINED,JavaScript,cbfb5e4c852b6479040ce12276393df621ac0a10,Checkpoint commit
226,https://api.github.com/repos/mozilla/badgekit-api/pulls/51,51,Assessment,"This adds applications and reviews.  Huzzah.

Still needs a few things:
- Tests do not cover applications with evidence or reviews with reviewItems.  This is due to FormData not working with arrays.  There may well be an easy solution to this, but I haven't really looked into this yet (I have tested manually and adding and updating these arrays does work)
- Deletion of applications and reviews (and badges, in fact) does not handle deleting the accompanying evidence, reviewItems, and criteria.  Oops.  Going to add delete methods to the Application, Badge and Review models to handle this.
- Doc updates
- The webhooks used by applications may not be the right implementation (at the very least, they are totally unsecure right now).  Need to discuss how these will actually work, and if they will be on an application-by-application basic (as with aestimia), or if they should just use system-level webhooks.
",ghost,10137,2014-03-17T05:53:54Z,NONE,True,1510,37,22,NO LONGER MAINTAINED,JavaScript,86eebee76998097a87c16ae94e066ca5b3e29126,First pass at assessment API
227,https://api.github.com/repos/mozilla/badgekit-api/pulls/51,51,Assessment,"This adds applications and reviews.  Huzzah.

Still needs a few things:
- Tests do not cover applications with evidence or reviews with reviewItems.  This is due to FormData not working with arrays.  There may well be an easy solution to this, but I haven't really looked into this yet (I have tested manually and adding and updating these arrays does work)
- Deletion of applications and reviews (and badges, in fact) does not handle deleting the accompanying evidence, reviewItems, and criteria.  Oops.  Going to add delete methods to the Application, Badge and Review models to handle this.
- Doc updates
- The webhooks used by applications may not be the right implementation (at the very least, they are totally unsecure right now).  Need to discuss how these will actually work, and if they will be on an application-by-application basic (as with aestimia), or if they should just use system-level webhooks.
",ghost,10137,2014-03-17T05:53:54Z,NONE,True,1510,37,22,NO LONGER MAINTAINED,JavaScript,791f2fc49b1360c756659467c82ae906e3e23f0e,Changes based on feedback
228,https://api.github.com/repos/mozilla/badgekit-api/pulls/51,51,Assessment,"This adds applications and reviews.  Huzzah.

Still needs a few things:
- Tests do not cover applications with evidence or reviews with reviewItems.  This is due to FormData not working with arrays.  There may well be an easy solution to this, but I haven't really looked into this yet (I have tested manually and adding and updating these arrays does work)
- Deletion of applications and reviews (and badges, in fact) does not handle deleting the accompanying evidence, reviewItems, and criteria.  Oops.  Going to add delete methods to the Application, Badge and Review models to handle this.
- Doc updates
- The webhooks used by applications may not be the right implementation (at the very least, they are totally unsecure right now).  Need to discuss how these will actually work, and if they will be on an application-by-application basic (as with aestimia), or if they should just use system-level webhooks.
",ghost,10137,2014-03-17T05:53:54Z,NONE,True,1510,37,22,NO LONGER MAINTAINED,JavaScript,089677e6a3349ec8daccc5549d8c7fdc8aa143cd,Removing embarassing unused code
229,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,4c53c582788960c3883e0cfa0dfbde2e97f4635f,Factor out system normalization.
230,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,94ac464902cc0018a792c3efeb08424e452bd1e6,"Fix `toResponse` call, use method on object."
231,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,dc75d780a41384c53e4a0e68341acb4eb42155f7,Move response normalization for `issuer`.
232,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,100b9a19683a5106cb21cacd04b3c38f8a22f4d1,Move response normalization for `programs`.
233,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,ec98525cfd2729479faba5a5b4849c798c884f52,Better job of normalizing badge data.
234,https://api.github.com/repos/mozilla/badgekit-api/pulls/49,49,Normalize linked data [closes #46],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-03-13T20:01:59Z,CONTRIBUTOR,True,91,109,9,NO LONGER MAINTAINED,JavaScript,5fb9f795e926b6f12ee5d0d5ac1838f9207b6dc5,"Fix bad response, add test."
235,https://api.github.com/repos/mozilla/badgekit-api/pulls/44,44,Minor fixes,"Fixing various minor issues thrown up during client testing. Can be merged at any point, but I'll carry on adding to this branch as things come up.
",andrewhayward,159848,2014-03-07T12:21:22Z,MEMBER,True,2,2,1,NO LONGER MAINTAINED,JavaScript,445254b048a33a3d7ca4bcd6113fd7e28d6946d7,'All Programs' not being filtered by issuer
236,https://api.github.com/repos/mozilla/badgekit-api/pulls/43,43,Making validation a little more consistent,"The various inconsistencies were becoming apparent, particularly when creating a model would validate where updating it wouldn't.
",andrewhayward,159848,2014-03-07T02:26:48Z,MEMBER,True,143,179,8,NO LONGER MAINTAINED,JavaScript,d77c0f91233d54ff10fb03ad3292e3791f2b3d74,Making validation a little more consistent
237,https://api.github.com/repos/mozilla/badgekit-api/pulls/43,43,Making validation a little more consistent,"The various inconsistencies were becoming apparent, particularly when creating a model would validate where updating it wouldn't.
",andrewhayward,159848,2014-03-07T02:26:48Z,MEMBER,True,143,179,8,NO LONGER MAINTAINED,JavaScript,a8d54c3acbaa602b35925b96c120e4091036dc71,"Merge branch 'master' into validation

Conflicts:
	app/models/badge.js
	app/models/image.js
	app/models/issuer.js
	app/models/program.js
	app/models/system.js"
238,https://api.github.com/repos/mozilla/badgekit-api/pulls/43,43,Making validation a little more consistent,"The various inconsistencies were becoming apparent, particularly when creating a model would validate where updating it wouldn't.
",andrewhayward,159848,2014-03-07T02:26:48Z,MEMBER,True,143,179,8,NO LONGER MAINTAINED,JavaScript,0c59bdefc10bc684044d463d5b3a328cfff483ed,Merge branch 'master' into validation
239,https://api.github.com/repos/mozilla/badgekit-api/pulls/43,43,Making validation a little more consistent,"The various inconsistencies were becoming apparent, particularly when creating a model would validate where updating it wouldn't.
",andrewhayward,159848,2014-03-07T02:26:48Z,MEMBER,True,143,179,8,NO LONGER MAINTAINED,JavaScript,2d914ed15db4cb62ef35ef962ef032d14ab321c1,Removing formal parameters
240,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,ae3285123214443cda427abf085d043e8f2a3be5,Add schema for claim codes.
241,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,b61b3a33d7dac06a46fab4206c954c92f8301684,Add model for claim codes.
242,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,679070902bcacb8262b4daef43f408915f24f426,Create and list claim codes.
243,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,010036628e056bee91f8c7176c9bd9a49ef43faa,Can claim a claim code.
244,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,3c4d11d4b6f69a691637d663260de244cd012c39,Take into account multiuse claim codes.
245,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,2f7552d1e5eca47817a6481927b73035ca752ea8,Can make a new random claim code.
246,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,a83241ade82a292b19348a21a73f6bd5bf021342,Minor test refactoring.
247,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,cb35561929957d08d709ceb40206a202dee541dd,Fix typo'd route.
248,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,876954bfc6b48662af500b8c08fa66cff3bf8b57,Can delete claim codes.
249,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,06e2a3da90f2080b595162aaf24e503b04c01ed8,Can use claim codes when awarding badges.
250,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,f054542a7c19c2400777ab641fc44042ae9d2d78,Update package.json
251,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,b4b2609ea667f1d509d0358e14a8315ed17983cc,Flip conditional for early return.
252,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,68819616d67fc781165d694776b6cd9df6f80331,Fix claim codes test.
253,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,0dc83e7d205dda7a4137fb28fe1514848b812eb2,Switch from Q to bluebird
254,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,331befeebdb1161515d6b6d0fd2164b84e4f5825,Use some promises in badgekit-instance.js
255,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,cf679da42a4a25d058c9ced158ddeba4e14c01ce,Remove unnecessary event emitter from test-webhook-server.js
256,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,491423d3ded7631626739e094301ccb47611830a,More promising.
257,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,4eee9a240a2412a36d833f59960925127a414f72,Remove unnecessary `concats`
258,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,1bc94f4739ab5174f101b20c024b36d5a71bbd80,"Remove unused function, rename variable."
259,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,c5c9baeed5a91341340bd63c1174e16363c2f98d,Also don't need hash.
260,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,831f79668948a10b338e07a0e3fc89fc5746de3c,"Promises, promises (for claim codes)"
261,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,9504fc026b49332410469e6a9f27b4e1c24daacb,Whitespace
262,https://api.github.com/repos/mozilla/badgekit-api/pulls/42,42,Claim codes [closes #19],"Depends on #34 

@cmcavoy can you review the changes below and make sure I didn't miss anything?
## Changes
- New Models
  - ClaimCodes
- Modified Models
  - BadgeInstances – add an optional `claimCode` field, used to store what claim code was used to award the badge, if applicable.
- New Routes
  - Adding a specific claim code (either single-use or multi-use).
  - Generating a single, random claim code.
  - Listing all claim codes for a specific badge
  - Claiming a claim code
  - Deleting a claim code
- Modified Routes
  - Awarding a badge: can now take a claim code. If the code is already claimed (and it's not multi-use), HTTP 400 is returned and the badge instance is not created. Otherwise, the code gets claimed before the badge is awarded.
",brianloveswords,166258,2014-03-05T15:35:10Z,CONTRIBUTOR,True,532,57,15,NO LONGER MAINTAINED,JavaScript,f95ba4eb14fe3d3d852e77fe65699083f54ac2ff,Abstract some error handling.
263,https://api.github.com/repos/mozilla/badgekit-api/pulls/41,41,Add criteria field to badge model,"This adds a required criteriaUrl field to the badge model, which should refer to an external site (such as BadgeKit) capable of displaying badge criteria information for the badge in question.
",ghost,10137,2014-03-04T17:51:20Z,NONE,True,31,6,7,NO LONGER MAINTAINED,JavaScript,d2066e591353750ec64f7789315e60f0f620fe7c,Add criteria field to badge model
264,https://api.github.com/repos/mozilla/badgekit-api/pulls/40,40,Add newrelic pieces,,jdotpz,1373628,2014-03-04T16:08:30Z,NONE,True,6,0,2,NO LONGER MAINTAINED,JavaScript,b617378fbd119266e72d124de6cc17585553cf3b,Add newrelic pieces
265,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,5a96b2a5a8f355a62dfbee363f0adb4e7d59fc40,Add authorization documents
266,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,34618cd7a44696bf0cd8c8f16e75ce9791654c73,"Wording, ""from the"" -> ""for each"""
267,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,def0ba950160acc64a2497209120beb2b8395381,Remove unnecessary quotation marks.
268,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,ebb705f6459f65ea98aa50d0ef3acb53893b1a17,"Formatting, wording."
269,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,7646d5f23f070acb658296648c153caef9c4145d,Case consistency
270,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,3a4444f3731585a59c56dfbc90d3384e808b7408,Rearrange code sample.
271,https://api.github.com/repos/mozilla/badgekit-api/pulls/39,39,Add authorization documents [closes #38],"Rough first pass for authorization scheme document.
",brianloveswords,166258,2014-03-03T23:27:12Z,CONTRIBUTOR,True,66,0,1,NO LONGER MAINTAINED,JavaScript,e16666431a4349aeb4aba500e5f948e5462f26b6,Wording
272,https://api.github.com/repos/mozilla/badgekit-api/pulls/37,37,Two fixes to get things working,"Two fixes here:
- Changed the expected authorization header name to ""authorization"" (I assume this is correct, but if not, badgekit-issue-client will have to be changed instead, as they currently disagree on the name)
- The validator for the Badge field ""unique"" has been changed to accept either 0/1 or ""true""/""false"".
",ghost,10137,2014-03-03T20:37:01Z,NONE,True,3,3,3,NO LONGER MAINTAINED,JavaScript,07929e8ec83d9c049a5dc4353c16fafa24eb883a,Two fixes to get things working
273,https://api.github.com/repos/mozilla/badgekit-api/pulls/37,37,Two fixes to get things working,"Two fixes here:
- Changed the expected authorization header name to ""authorization"" (I assume this is correct, but if not, badgekit-issue-client will have to be changed instead, as they currently disagree on the name)
- The validator for the Badge field ""unique"" has been changed to accept either 0/1 or ""true""/""false"".
",ghost,10137,2014-03-03T20:37:01Z,NONE,True,3,3,3,NO LONGER MAINTAINED,JavaScript,9d724ba2d757abc194165ce24e12e0d2dcdd8287,Fixing authorization test
274,https://api.github.com/repos/mozilla/badgekit-api/pulls/36,36,Changes to work with heroku,"This adds a Procfile, as well as a hacky fix to streamsql to handle ClearDB's constant disconnects in heroku.
",ghost,10137,2014-03-03T18:21:58Z,NONE,True,29,0,2,NO LONGER MAINTAINED,JavaScript,2eb921052d99a2b16b267fa2a4c2e236ed0535eb,Changes to work with heroku
275,https://api.github.com/repos/mozilla/badgekit-api/pulls/35,35,Full badge model,"This adds the badge fields required by badgekit to store ""full"" information about a badge.  The most notably addition is criteria, which required a new database table, as criteria have a many-to-one relationship with badges.
",ghost,10137,2014-03-03T15:41:09Z,NONE,True,343,63,9,NO LONGER MAINTAINED,JavaScript,1bbe557543f65661bca8439d49db013aab5e0450,WIP full publish
276,https://api.github.com/repos/mozilla/badgekit-api/pulls/35,35,Full badge model,"This adds the badge fields required by badgekit to store ""full"" information about a badge.  The most notably addition is criteria, which required a new database table, as criteria have a many-to-one relationship with badges.
",ghost,10137,2014-03-03T15:41:09Z,NONE,True,343,63,9,NO LONGER MAINTAINED,JavaScript,db640a909c3d74b58acda5f40e7ee4c924038a3f,Small tweaks to support new badgekit-issue-client
277,https://api.github.com/repos/mozilla/badgekit-api/pulls/35,35,Full badge model,"This adds the badge fields required by badgekit to store ""full"" information about a badge.  The most notably addition is criteria, which required a new database table, as criteria have a many-to-one relationship with badges.
",ghost,10137,2014-03-03T15:41:09Z,NONE,True,343,63,9,NO LONGER MAINTAINED,JavaScript,4d7bfec5a53d0d279573a96fe057a43458b8febc,Changes based on review
278,https://api.github.com/repos/mozilla/badgekit-api/pulls/35,35,Full badge model,"This adds the badge fields required by badgekit to store ""full"" information about a badge.  The most notably addition is criteria, which required a new database table, as criteria have a many-to-one relationship with badges.
",ghost,10137,2014-03-03T15:41:09Z,NONE,True,343,63,9,NO LONGER MAINTAINED,JavaScript,27365aca91958695f260d4402dd871f56f1b7cbf,Fix badge test data.
279,https://api.github.com/repos/mozilla/badgekit-api/pulls/35,35,Full badge model,"This adds the badge fields required by badgekit to store ""full"" information about a badge.  The most notably addition is criteria, which required a new database table, as criteria have a many-to-one relationship with badges.
",ghost,10137,2014-03-03T15:41:09Z,NONE,True,343,63,9,NO LONGER MAINTAINED,JavaScript,11decba060964cef1a578dca9a6aa73f585be2e8,Fixing tests
280,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,5caaf279d654850e493fc838fe09b8e35547f1cd,Badge instances schema.
281,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,e554e0045bf1b4ce843fb87c90525b436efdb379,Whitespace
282,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,c38c79ad384b5b836c66b0d16d92e0329fe89a61,"Move webhooks into own schema/model, add webhook secret.

We want to be able to sign our webhook requests so the other end can
verify the request is coming from a trusted source. Our plan is to
generate a unique shared secret for each registered webhook. This secret
will be used *only* for signing outgoing webhook requests."
283,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,5f8020b7dd9b1a8fe9d63350e1b0e49a94932188,Can create badge instances and get the assertions.
284,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,4ce25ea22abe18b6bb0f342cbf842083b9a186c5,Rearrange sql clauses.
285,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,20fe93c9f32d341e59a02954e68905b144bc3732,Fix test data.
286,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,9f8ab5abcac0241b25e9032134025ee6ee1c1c66,Can create a valid badge assertion.
287,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,3e81a2fcfd791ce50e1b916bdd1dce1a759a6502,Fix broken program test
288,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,a60b6a546df2eefc9ac0dd46a84663d17be0fe12,Make images public
289,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,38e13f7eda85d50b3499a371d60f173d721a7488,Exempt /public/* urls from auth
290,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,cf7aff4c27a81a4c3d1ef4e5318305701db19605,Test for criteria.
291,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,0be7908817d99eea99c2e6143bd925182ec26aee,Call system webhook when a badge is awarded.
292,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,0d73d27deb6b4f1a6249669555de3d2b6712bebf,Remove stubbed out routes.
293,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,a41a881d563472eb50af7c084a6ad984fc1f0e3a,Factor out `dateFromUnixtime`
294,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,ca4bd7db729b1e7b93b929af67a8605aac21a518,"Make `hash` lib, put `sha256` and `sha1` in there."
295,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,9c0d50209a7bacb015bf8d4722d18b10b7f1be55,Trailing comma consistency in badge-instances.js
296,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,30f9af45865751a3b24202d6b50e4a678d4bbf62,Factor our route suffix for creating new instances
297,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,da7e776e5420802e668642827d08123c1d970f4e,Add TODO about fully qualifying assertion URLs.
298,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,873a2dfebe97754435811a43a6835e0b2efab4ed,Remove `crypto` dependency.
299,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,e811cb1ef171e2ddc8c080b4ef1b069906fa7459,No need to `.concat`!
300,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,2887e011b6eaba87087dae00f17bbef72cf5eb9e,Update `slug` verification to match schema.
301,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,e56cdac3ca6184cddd6655f71d06492ae3e8ac24,Add `unixtimeFromDate` lib
302,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,46d17ed3ba44653fc0f10ac48d0da0ee50220833,Add `fallback` param to `dateFromUnixtime`
303,https://api.github.com/repos/mozilla/badgekit-api/pulls/34,34,Implement badge issuing [closes #12],"This implements badge awarding routes, as well as the public routes necessary for serving the badge assertion, badge class and issuer organization objects. This also implements a new data model, `webhooks`, which keeps track of webhook related information – currently `url` & `secret`. These are one-to-one with `systems`.

When a new badge is awarded, the `badgekit-api` will respond to the original requester, _then_ try to make any webhook requests. This ensures the success or failure of the webhook does not affect the original award request as they are not necessarily related.

Webhooks are sent with a JWT token in the `Authorization` header in the format `JWT token=""<jwt-token>""`. There is one claim, `body`, which has two fields, `hash` and `alg`. Right now alg is set to ""sha256"", and `hash` is the `sha256` hash of the body of the outgoing request. A webhook consumer can use the `Authorization` header to ensure the hook came from an authorized provider.

@andrewhayward to review
",brianloveswords,166258,2014-03-03T14:22:43Z,CONTRIBUTOR,True,643,42,23,NO LONGER MAINTAINED,JavaScript,cb5065b00f28fc6d6230f256cbe038605e60cacc,"Add `req.resolvePath`, use to create fully-qualified paths."
304,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,469b2473c199203836351322e1089cf9b400afda,Schema for API consumers table.
305,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,31c74ffdb4f80cc350cf7b8d1c7d9cf8491f48dd,Consumer model.
306,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,ba3948dba05a322fc7a357f8cc47da7f40f7639d,Start implementing request verification.
307,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,59bca196e634a88f0c45ba14c89de1c788261562,Implement POST/PUT verification.
308,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,5fc69d482e71b3dc00158f9abe8a774bbe50edef,Better error messaging when given an unsupported algorithm
309,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,3f54929c9033adbabe3e2cdb21bd88bfe85b1ab0,Make sure tokens are tied to systems properly.
310,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,62193b14b853d0fc77371e454fa2e48c108669a2,Remove repetitive redundancy.
311,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,8b5d89bc13c0f114cdd1423c0e75492669a966d8,Anchor auth header regexp.
312,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,a1718d04b2a202a1f2419d0e6543afe6ef3db149,Make method regex case-insensitive.
313,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,fcd55833383935265026076885748d3e7cddf29c,NO `HEADLESS HORSEMEN` ALLOWED (enforce verb boundaries)
314,https://api.github.com/repos/mozilla/badgekit-api/pulls/33,33,Implement access control,"This gist fairly well explains the idea: https://gist.github.com/brianloveswords/598ae13da64718c6a605

Oh man this is so much more reasonable with #25 merged in. @andrewhayward care to take a look at this when you get a chance?
",brianloveswords,166258,2014-02-27T15:19:23Z,CONTRIBUTOR,True,386,7,9,NO LONGER MAINTAINED,JavaScript,9e8d1adc00784e0d35b67a8b78fbf3eda5aca6c5,Ensure existence of JWT claim `key`
315,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,7d497d5d767fc8066d1bcb3df33ea0087a965d98,Represent relationships in the models.
316,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,556b1eeff6141f55d9e25301d5ff14aeefc2ffc9,"Allow system, issuer, or program ID on badges."
317,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,495023cf54efc414139405a281aaa47926d71519,Better validation.
318,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,b4fe280ae6c190deef5d1a4532b745e18a2213c6,Add `webhook` to system model.
319,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,e0dc2d3a5a468dbdfe9daf8403f8f3d98bba3177,Implement parent relationships.
320,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,a5a1e1002006a39a9a498b7e3816d85674bb3ba9,Implement /system/<slug>/issuers
321,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,764344e332337be6fe1cd33ad9804de604207e7d,Implement issuer-specific program listing.
322,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,2146873cdc6924a72f50aefa2cc86f4d4cb9c51b,Get all badges for specific programs.
323,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,2615172ee8ca7b6860cb048d7ac6a3c9599221e5,"Get all badges for issuers, including sub programs"
324,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,006002b14000e339eabb90d3f0d42607869a433c,Remove unused assertion
325,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,3cab7ce3a1524530ecd40ceaaad6a0810324584b,Whitespace cleanup
326,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,1854657956b200fa067a426acbf554ce990bed85,Factor out map function `value`.
327,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,a46aef35964b4c0963e891bcb84e8df3dce918f0,Show parent data in relationship'd badges.
328,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,40e2a70cdf5a352d910b301c9c71c993ed42971f,"Fix badge routes test

* Test for conflicts on POST
* Update active badges list."
329,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,d7d19928b089a3acd88a5ebdcc72426fce564b2a,Add logger.
330,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,304893716fa2abcb18710328f2fb9adf86613ec6,Begin using `system` middleware.
331,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,dbced0169dd9bc5ca59aa2140a8961934b9192c8,Use middleware in all system routes.
332,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,7cf5e1958859c7e8357fff31f84b9323c7976535,Flip default for relationships in findSystem middleware
333,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,428a3b2eeba3a5317a9716145c8d1b50c646843e,Reorganize
334,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,2d742b8caa8751fc606bd2554edca7b1768d86bf,Abstract finder creation.
335,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,61d5c18c2d7d528b19a7f492e01bec782d1f3761,Use middleware in issuer deletion.
336,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,59c364e99a3b77188dcbb29d486c94bf1ef697e9,Use middleware in updating issuers.
337,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,a2fb1893e93aef347a34e9241de7e3f81e4b8966,Remove unnecessary delete statements.
338,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,5d81b02e450b5d055adc128c484df27cd7a3c23d,Update API endpoints doc
339,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,c12aff36ee25f30569b4a7e7c8ff0cce5554a287,Doc formatting
340,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,2567e2f79957a4ebbc3dbfc534db612e3f7bb4ee,More document formatting.
341,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,3f2b6caf47726c5887b416be06a022543c343cef,Trying out a new format
342,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,72c080d121bd0324812c5e937294dc379e4773c3,New formatting.
343,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,a68bfd593802a43264d95240d6d8c2bc13cef533,Trying another formatting.
344,https://api.github.com/repos/mozilla/badgekit-api/pulls/25,25,Implement relationships [closes #24],"Ready for review @andrewhayward 
",brianloveswords,166258,2014-02-12T15:10:34Z,CONTRIBUTOR,True,726,381,22,NO LONGER MAINTAINED,JavaScript,3e55e54f57b8481cd05b15454fe18b75ada8a795,ANOTHER FORMATTING.
345,https://api.github.com/repos/mozilla/badgekit-api/pulls/22,22,Enabling data URI image uploads,"Not sure where's best to include tests for this.
",andrewhayward,159848,2014-02-07T15:48:53Z,MEMBER,False,43,2,1,NO LONGER MAINTAINED,JavaScript,5c39055704ba2ac5736f0f41ee13021ab54a15be,Enabling data URI image uploads
346,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,e3346c0d2a061e88d3d658003df7efd8c01111f9,System schema.
347,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,a7f3633078c824c2287fd440a70b87bc985afdfb,"Standardize issuer, program models.

Issuers, programs and systems are exactly the structures in the
database, as far as I can tell. This commit standardizes the code that
represents those models."
348,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,ad8276041d92c096c5f3831432019a6b5e211841,"Add program model test.

It's exactly the same as the issuer model test."
349,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,6df370eddd83f15229ac5dd617469f0705ba6101,"Implement system model.

It's exactly the same as the issuer & program models."
350,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,b0a48d86c2756d0ee290cec76f8afe0f1af5bd57,Field sanitizer function.
351,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,b2337a4cf5dcc8b17db49c674e53d13e2efb1042,Add systemId and programId to badge schema.
352,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,586c8023d19bf13d2c345b42b895e440cd1a25d9,Remove old table.
353,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,9d3434201e0f15205edfa6b4897b3cf453d5d861,Implement system routes.
354,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,a4d6878c4211f7b6eda981418a05eaa641f6dab2,Fix test data.
355,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,cafc9c66057c481f09d55911284bf013d079ed80,Return ID when getting badge data.
356,https://api.github.com/repos/mozilla/badgekit-api/pulls/21,21,Systems model & API.,"Implements the systems model & API with some groundwork for hierarchy between issuers, programs and badges.
",brianloveswords,166258,2014-02-03T15:28:31Z,CONTRIBUTOR,True,469,60,17,NO LONGER MAINTAINED,JavaScript,e5fef169e50c33ccc49316f064152a25ec078a66,Make sure descriptions get saved.
357,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,04e0f76b9dce1dcf78a8ae0ab9d683395ea22bb5,Programs documentation
358,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,8ea80b212ad40851b6e4d26725a64dfea791defa,Issuer documentation
359,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,7296c8a2ef48fbfd7a5f052ac150f237be20d432,System documentation
360,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,adb5b900953c248850af93e620d1d9b24d318333,Badge documentation
361,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,1bc09c9bcc58a062b3f907ed899a1384ebf55eb5,Fixing `put` docs
362,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,c72d9e725c19badbe0667d64ae8f9d5ebb6dccd5,Adding content-types and alternative request types
363,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,07f5fb759abcbaaf63066c3844dba0164649bac8,Noting unsupported image upload formats
364,https://api.github.com/repos/mozilla/badgekit-api/pulls/20,20,Data Hierarchy and Template Docs,"Definition of the object model, the relationship between objects and some notes on the potential implementation of templates.
",cmcavoy,64711,2014-01-28T22:38:18Z,CONTRIBUTOR,False,1291,0,5,NO LONGER MAINTAINED,JavaScript,c630d8af31f7957c8dbe7038612f1064e13282d5,"Adding documentation on the data model, along with some editorial
content on how the model will be used."
365,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,27817ceeaec01d30b3d04ad01ae8f8bc9862f2ed,Start testing badges API.
366,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,14fdcc5cf179dd4c94343a3b64e12b2a7ee6ebe0,Fix badge updating.
367,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,a0ed35c90103a011dcfb8f8424498becfa2688d7,Remove debugging from badge deletion.
368,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,7462ddd04ecb292328e54a7762cb0767676a6b26,Test GET /issuers
369,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,5b8fc70d58126d2456a714602d24d0438dd8f3ed,Test the rest of issuers API
370,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,a4eb8a257d34cd552b2214dc92507bbe04236462,Catch failures in badges API testing.
371,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,690ad2b7f8ce7172c6d32133e84754b215f90a79,Fix badge model tests.
372,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,295423d55eff36ca9937171e91a49b5fb26e76ac,Extract image handling from routes.
373,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,729a280898b41660c75a553835aba42e691a4378,Add tests for `archived` param.
374,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,aabb44841270dc013b64cd97950dc9eab5cb8ce5,Better error messaging.
375,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,70a4f3ed921b077e625296c3b29c14d64def9532,Test error condition for GET /badges
376,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,e373839939722235b7a65cf383504d5e5a9e2fd2,Add statusCodes to test harness response; fix 404
377,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,661a676885a8334801a0443a28aae6ebf901a13c,Factor out validation logic.
378,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,f0ae474bbcb4a7c8f979be8edb455c4fa1c30498,"Add safe extend function.

`safeExtend` takes a target and a source and only copies fields from the
source that exist in the target."
379,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,80dcbbe1031a0d5cc9897c604d061eecfa5dd01b,Send better validation error response.
380,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,9855a8b2ce2bf35da56c057250ca8fc9e7add86f,Better validation error for PUT as well.
381,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,6a871883cddcec7400c5d3fc9c30292af29c6286,"Don't allow updating with garbage fields.

Use `safeExtend` to ensure the fields that are submitted actually exist
in the badge so we don't get a database error when we try to update."
382,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,451967c987956d8d7928a57cb066fb566a0fe2b9,"Remove `name` from errors.

Reduces a lot of redundancy."
383,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,c671dc696c5c64fdfba1a70e419b5cd6f06c761f,Use `makeValidator` helper in the image model.
384,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,6d4a241e82752850669542b1c468f43ea9c975d4,Update tests.
385,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,bae73ac09c782ff72770c002edcec2b457a7e186,Re-activate all badge API tests.
386,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,234ac3d7f0ed06efe53205c95030d5ad93e49e3e,Fix issuers API tests.
387,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,c987cee09d32eb93b81e07191eaad7322a1490e1,Fix programs API tests.
388,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,81009d067059dfaeb37497ee236dba887d5d97b3,Use `makeValidator` helper.
389,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,d0e475ed29b6aaa9bb6bf394c11b13fdb056f29b,Don't 500 on garbage PUT.
390,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,89511341c187545b359cf88c8e37dfddcd1e4f1f,"Respond with row data on PUT, POST, DELETE."
391,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,02acebc5f55cb1895caa16a9934d9a927a9750b5,"Send back row on PUT, POST, DELETE for badges"
392,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,cf4979dbb4cfd71bccf1ca6cc4e959bbd3256ba4,Better issuer 404
393,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,1f5fc1c013b7ea5269817241c32c31d3dc227743,Test for better issuer 404
394,https://api.github.com/repos/mozilla/badgekit-api/pulls/18,18,Refactor & Test,"**Ready for review**

This is about as far as I want to take this before I start a new PR.
",brianloveswords,166258,2014-01-22T16:48:52Z,CONTRIBUTOR,True,640,461,19,NO LONGER MAINTAINED,JavaScript,7931befbfee5237a5be14a1d8b21ea95810f6a41,Better program error handling.
395,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,d1fa22168c13232f2df49d45cd3f212036c1e25b,Programs documentation
396,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,fb3c55e69371b4bd2a65cf98e843b302d4eb6d16,Issuer documentation
397,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,40a0a45bb2512d13e6d3ebb7022ac12633922f2c,System documentation
398,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,bc5a674b07dd270a58bfca72687e27655af6fa2c,Badge documentation
399,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,00924a3b37403130cce13f3b2b4a2165baa4c53a,Fixing `put` docs
400,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,57027c1277c0827932428aae0013595db6876980,Adding content-types and alternative request types
401,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,fb02da841c273c3a3973acc859e4efde86001037,Noting unsupported image upload formats
402,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,799f894f058063dda660f3b96e07d4fa3f72700e,Update badge docs with changes from #21
403,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,079367518523b747ecb77a3f3ed7269e4252d5f0,"Updating program docs, incomplete."
404,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,2bafad9ac26810edf7e00d17ed490e8f9f6cbcb7,Testing formatting.
405,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,d09e327dff42b047503ee02efbff73bfdc250a13,More formatting.
406,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,f7baadf4a490238209ecb23aef5932d29b713b73,Formatting.
407,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,eb022c16856f98a9aeacec3b06c69b9f3fe8d8f4,Update programs API doc.
408,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,ffa13f3721046bb4ce21ffb18c8da6e850a511ed,Update issuers API doc
409,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,b4e58f4fc271c0ccfd20751be6c811b07404af44,Update systems API doc.
410,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,58952bd01c00ecd39e1a9712b48a9ab29452c24a,Fix formatting.
411,https://api.github.com/repos/mozilla/badgekit-api/pulls/16,16,[WIP] Docs,"Getting started on documenting API endpoints.
",andrewhayward,159848,2014-01-21T13:06:37Z,MEMBER,True,1185,0,4,NO LONGER MAINTAINED,JavaScript,a23d4d74c51fbca3ac36710650d6a7d7ca8faf4a,More formatting fixes.
412,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,90794d5ab82ac3817bfd15e40b85bf9cb73a4b52,Add program model.
413,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,1a7746571427ab0020a2ab7e715bb720a4e39c2a,Add URL and email to program model.
414,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,2ead510109a448c5cdac3040ebe36239fc2ba8d4,"Add test data, routes and schema update."
415,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,741b026ec04b263efd2bd3820be35a617f9e1361,First pass at image handling.
416,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,d6c0d86e95d9b3d0504e5d91aca83e7998415ab4,Testing harness!
417,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,739818b8f13caa4111aae8e3dda79db64b46fc51,Fix multipart/form-data submissions.
418,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,154b4405aad3cd34ed7c3c278ed38beaff67200d,"Remove potential vulnerability.

I added multiple statement capability based on the NODE_ENV=test flag,
but even behind the flag I felt a little nervous about it. It wasn't too
much more work to make the harness handle loading the DB without
requiring multiple statement support, so I implemented it there."
419,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,b6689520c1d5c07a8a5aa2c1ea92e93b441dc7ad,"Fix deletion of programs.

We can't use the row directly because we add some extra data to it. So
when we try to delete the row using that as a query, things go
haywire. Since slug and ID are both unique, we delete just based on
those columns."
420,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,5116d4fdef0f70ba9de8bda723c728484ccc64b4,Add tests for creating and deleting programs
421,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,db2b0d9140bd0f8d05435a8b9807248d17f8a6e2,Fulfill relationships when getting programs
422,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,6c03bcb114758919cb6ffbf4bdff384bd28d8650,"Fix updating programs.

Same problem as deleting programs, we need to remove the extra data that
we added before trying to update the row."
423,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,995bf20a0bd1c90d3ef845761426b173428949f0,Remove test routes.
424,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,e16089dd534a88a7258d09d1aeb73569b8b99946,Move some things to devDependencies.
425,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,740beb436316be730dccbff9df00f30f802ca10c,Remove unnecessary function binding.
426,https://api.github.com/repos/mozilla/badgekit-api/pulls/15,15,Programs API,"- [x] Model
- [x] Basic CRUD API
- [x] Support images

Everything's done and ready for review by @andrewhayward 
",brianloveswords,166258,2014-01-10T16:37:40Z,CONTRIBUTOR,True,495,7,13,NO LONGER MAINTAINED,JavaScript,ce7b7b514da9689c88caf87c91d189974c5f7b9c,Ignore .test-env
427,https://api.github.com/repos/mozilla/badgekit-api/pulls/10,10,Generating proper image URLs,"URLs currently being returned as binary arrays.
",andrewhayward,159848,2014-01-10T14:09:44Z,MEMBER,True,2,2,1,NO LONGER MAINTAINED,JavaScript,846a423fecccdc7568188b5852d3055f0155981c,Generating proper URLs
428,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,37fb0161e4dc5275edad2bee49aaf01d3ae92626,Badge model first pass
429,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,ab0e17f9151bd72e5437a180b678d72bef25b612,Testing badge model
430,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,3cf119253a4fca4da475c2589553281b9be1cdd7,Fixing badge schema
431,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,19551efad3c8d52afab1855523353c0f586d84ae,Badge routing first pass
432,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,b0899f14d46aa22b48a905cb7661258c2026c62c,Adding `slug` to image schema
433,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,655e7da86d0145b7deb330f20034615bdbab06d3,Image model
434,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,88d866eec165edba8f302f3fc3c0ce3fcf034c42,Handling image uploads
435,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,450d57a6701106bc8e3c5c586a1b4053fa5a014b,Image model tests
436,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,86692625bf5e252e63ac4336a4b8bc1bd05394a8,Restructuring to allow for updates
437,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,0e2d6437854b9870df9bfa57bc8e748a72ff247f,Adding badge/image relationship
438,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,e2df88a82f4e926f6c0c12df94e26882175af240,Image routes
439,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,2e5be2bab36d77f448acfa02ba841108b4dee3cb,Adding link to image in badge data result
440,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,8799f9fb168e2eac039ce73a18b0ee936552f643,"Requiring description, not requiring strapline"
441,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,7baeb131db7f4ba3cb57227d6c3f34342c61b32b,Fixing badge deletion
442,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,a2eed925940b148bc79a4016748322a3f461d5ad,Removing debugging
443,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,7876d9d032510d12804260aa0feba61188ce0419,Adding `toUrl` method to image model
444,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,e1f0c3ecd85722aac8f2dd85e3aa9b755f8e99a9,Using `toUrl` method on image model
445,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,cb650512353c1118e75b0d12a19d1678a4541696,Not failing where no image present
446,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,50fb7d5863fac17f9da3faf8e4229f2dcbd97106,Pico-optimisation! `toString('ascii')`
447,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,d5953e253fbe906ed888f7a1a90f2b0188362f65,Including relationships in 'all' query
448,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,9b76260290415d71681693984cc819e2b48c3ca4,Fixing badge instances that don't have images
449,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,3653cb1d8590af2ee8d908439555620f9773d80b,Handling image URL lookups 'tidierly'
450,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,fc2907dfe0df2c8ab472cdc254f5dd7f581ba953,Adding `archived` flag to badge model
451,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,2742b241bbd7e49cd0f084a75e2455a1eb4899e7,Making `archived` state visible
452,https://api.github.com/repos/mozilla/badgekit-api/pulls/9,9,Badges API,"Essentially a clone of the issuers API. Ready for review and merge.
",andrewhayward,159848,2013-12-19T22:55:15Z,MEMBER,True,493,12,9,NO LONGER MAINTAINED,JavaScript,10944fdf11daf70688ae787c9659d1777795927b,Basic badge 'archived' filtering
453,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,5eca7eb25b2911914acc502e98a64bd0b5afeb31,"Initialize issuer model, route & schema"
454,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,745b65e9c24a3e2b51c851d7d1bd9e8f9153bb49,Make server requireable
455,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,43b73794d7f532573707ba2981bda8e90cd6d80c,Adjust issuer model
456,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,cbcdb7372e7ce735f5bb2fec199fdb3347dbd3d4,Apply issuer routes correctly.
457,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,259c9824967fb6222cf00165af82016d42a99ede,Get issuers.
458,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,6c1a89e98f2a852bbafbb46028b5a5a023e35c2e,Include `url`
459,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,84ac960d26a2513bdc13b55c6a8ddc5492b37ceb,Model validation
460,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,7c68cc107e2fffc0de472b298a9c4b880aaa7c53,Issuer `name` validation
461,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,5ba70ccdd51e390e7f0b04c759a4575d7fbcb40e,Better error handling
462,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,43491fc6c993791f7af5787e4bfd4c2fdc672892,Can delete issuers.
463,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,179e7670fcfa354e1894a23549af914a1368fddd,Name callbacks.
464,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,193f0e3ec8e0cd949aeffb521d904c6e1751e47b,"Can create, read, update and delete issuers."
465,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,1360eae0c8ff1d8926a5097198a97ae61621489d,Rename some function expressions
466,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,edd35c0f79996fadd40a33bd6e7b45e2e2619a10,"Rename issuer.sql -> schema.sql, add test-data.sql"
467,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,11761b024cdd1d33c3aee4d33269a8f525e6c3df,Use a reduce instead of forEach
468,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,47ef0b3db131a2a41682a6515bc347255e3db8b5,Sanitize paths to avoid duplication
469,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,d29c3024a944d9c320a8ca09cd2489a8f83cdd96,Remove some dead code.
470,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,c4fb35e9ee2884de75637c33e654ab5bf84cb752,Fix function name!
471,https://api.github.com/repos/mozilla/badgekit-api/pulls/8,8,Issuer API & model,"[closes #6]

This is ready for review – which has been ongoing anyway!
",brianloveswords,166258,2013-12-18T15:30:26Z,CONTRIBUTOR,True,275,10,10,NO LONGER MAINTAINED,JavaScript,e1fbca54ba47e902505eeb348eae4b012f1c963f,"Rearrange code, fix route names to use all plural."
472,https://api.github.com/repos/mozilla/badgekit-api/pulls/7,7,Using `config-store` for configuration,"Standardising configuration.
",andrewhayward,159848,2013-12-18T15:06:54Z,MEMBER,False,15,9,5,NO LONGER MAINTAINED,JavaScript,0f664b023bf781d9e1a375ea604ea4ea04623436,Using `config-store` for configuration
473,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,48a82674269941e06672e390cd7ca926b2702624,Initial commit
474,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,a5b30b0202e15724906339325ce9434ce804709f,Fixing TODO.md
475,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,ce3e3311a81aa09c84361a184bcd557ab659b67b,Fixing `streamsql` requirement
476,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,e2ce7823f4ad17928c6eceb2a1fc638d236e01a2,Consistent table naming for issuer model
477,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,503c6edba26b1e1069c53ce3fae8e98872a08a17,Removing references to `issuers`
478,https://api.github.com/repos/mozilla/badgekit-api/pulls/4,4,Initial commit,"Somewhat simpler than last time. Potentially resolves #1.
",andrewhayward,159848,2013-12-17T15:30:46Z,MEMBER,True,99,0,7,NO LONGER MAINTAINED,JavaScript,1be9a9b548b1554e2a8fd9b3117ea9a989f8e8c2,Not mapping to `params`
479,https://api.github.com/repos/mozilla/badgekit-api/pulls/3,3,Getting started,"Opening this so that things can be discussed, rather than because it necessarily needs to get merged.
",andrewhayward,159848,2013-12-06T19:31:29Z,MEMBER,False,556,0,13,NO LONGER MAINTAINED,JavaScript,fd1cd8009ef489b6521dbb687d30b5d4c31dbc81,Initial commit
