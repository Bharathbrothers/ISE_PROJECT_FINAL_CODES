,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/minion-backend/pulls/363,363,Add Mozilla Code of Conduct,"Fixes #362

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T04:15:39Z,NONE,False,15,0,1,Minion Backend,Python,c24b212ab7ee05756f4d02a6fc3b955763a11599,"Add Mozilla Code of Conduct file

Fixes #362.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/minion-backend/pulls/360,360,2017 requirements updates,"Updating  setup.py to pass requirements checks â€¦ on Ubuntu 16.04

Modifying crontab handler to add a specific entry required by MongoEngine",DamienBolus,31916682,2017-12-19T22:56:16Z,NONE,False,10,1,3,Minion Backend,Python,16450801e76964fc327414cee99bfb3b487a53b3,"Updating  setup.py to enable the backend to pass requirements checks on Ubuntu 16.04
Modifying crontab handler to add a specific entry required by MongoEngine"
2,https://api.github.com/repos/mozilla/minion-backend/pulls/359,359,Make scanning work again,"Hey there!

Since Celery ~4.0.0 runtime warnings about [retrieving task result inside another task](https://github.com/mozilla/minion-backend/blob/master/minion/backend/tasks.py#L425) became errors.
This PR downgrades celery version and is not the best option of course, but I hope somebody will find it useful.

Cheers",ilyaglow,1165242,2017-03-28T14:14:53Z,NONE,False,2,2,1,Minion Backend,Python,f996a5901fe804eb002b3cd134e3d64fa76074c4,Downgrade celery and celerybeat versions
3,https://api.github.com/repos/mozilla/minion-backend/pulls/359,359,Make scanning work again,"Hey there!

Since Celery ~4.0.0 runtime warnings about [retrieving task result inside another task](https://github.com/mozilla/minion-backend/blob/master/minion/backend/tasks.py#L425) became errors.
This PR downgrades celery version and is not the best option of course, but I hope somebody will find it useful.

Cheers",ilyaglow,1165242,2017-03-28T14:14:53Z,NONE,False,2,2,1,Minion Backend,Python,c13f5bcbbea6a3b401006ba5cc2e938106baf77d,Set celery to version 3.1.25
4,https://api.github.com/repos/mozilla/minion-backend/pulls/358,358,Update Minion to require API keys,"Update Minion to require API keys, via a requests wrapper.
",april,230528,2015-10-06T19:49:49Z,CONTRIBUTOR,False,214,109,11,Minion Backend,Python,d003ebdf93a51b59d5a7dcf23c9a4b84e3211bfd,Update Minion to require API keys
5,https://api.github.com/repos/mozilla/minion-backend/pulls/356,356,Add the JSON files to data_file," Prevents crashes on 'python setup.py install'
",april,230528,2015-09-11T22:05:06Z,CONTRIBUTOR,True,1,0,1,Minion Backend,Python,55c229c38c54402156f6cf35722be36e0deaca88,"Add the JSON files to data_file, preventing crashes on 'python setup.py install'"
6,https://api.github.com/repos/mozilla/minion-backend/pulls/355,355,fix typo in log name for the scanscheduler,,april,230528,2015-09-11T21:41:48Z,CONTRIBUTOR,True,2,2,1,Minion Backend,Python,6eeca6d7c4e1071634bea6835d49cb0dc9fb1f62,fix typo in log name for the scanscheduler
7,https://api.github.com/repos/mozilla/minion-backend/pulls/354,354,Fix bug with unicode hostnames in JSON with scannable(),,april,230528,2015-09-11T21:40:01Z,CONTRIBUTOR,True,18,9,3,Minion Backend,Python,47c6b298b58a812dbf2ca3c04e2294afa78a697f,Fix bug with unicode hostnames in JSON
8,https://api.github.com/repos/mozilla/minion-backend/pulls/353,353,Fix typo,,april,230528,2015-09-09T19:30:17Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,b62892a3f1d855d9fdfbbd08fb515921b8f8496f,Fix typo
9,https://api.github.com/repos/mozilla/minion-backend/pulls/352,352,Clean out duplicate instruction,,april,230528,2015-09-08T17:26:14Z,CONTRIBUTOR,True,0,2,1,Minion Backend,Python,f8f12e069c53b70e00925d57a992ad5df143d13e,Easier way to add debugging and automatic reloading
10,https://api.github.com/repos/mozilla/minion-backend/pulls/351,351,Easier way to add debugging and automatic reloading,,april,230528,2015-09-08T17:25:00Z,CONTRIBUTOR,True,4,3,1,Minion Backend,Python,9a989bcd1a34b05a2051a6d413195592cf50abee,Easier way to add debugging and automatic reloading
11,https://api.github.com/repos/mozilla/minion-backend/pulls/350,350,Added link to VMs,,april,230528,2015-09-04T21:38:11Z,CONTRIBUTOR,True,6,3,1,Minion Backend,Python,e3c7628ed8a7742190fe45b4f0972bbda2b2a030,Added link to VMs
12,https://api.github.com/repos/mozilla/minion-backend/pulls/349,349,Improvements to description,,april,230528,2015-09-04T17:14:38Z,CONTRIBUTOR,True,2,1,1,Minion Backend,Python,37c505ddbbbe40eabb9c0aedc75251250efa5fde,Improvements to description
13,https://api.github.com/repos/mozilla/minion-backend/pulls/348,348,"Documentation about debugging and reloading, revert api json change",,april,230528,2015-09-04T17:10:39Z,CONTRIBUTOR,True,13,4,3,Minion Backend,Python,c34baf48fe9a43642e9f56201dc9b801abd3ec1c,"revert api to 127.0.0.1, update supervisor conf for extra security"
14,https://api.github.com/repos/mozilla/minion-backend/pulls/348,348,"Documentation about debugging and reloading, revert api json change",,april,230528,2015-09-04T17:10:39Z,CONTRIBUTOR,True,13,4,3,Minion Backend,Python,3b10aa30f43822336d24ea66b69021a4d938ed10,Documentation about debugging and reloading
15,https://api.github.com/repos/mozilla/minion-backend/pulls/347,347,"Minor typo fixing, readability improvements",,april,230528,2015-09-03T22:07:22Z,CONTRIBUTOR,True,5,4,1,Minion Backend,Python,fcf214e757f104d882fdbd6db8115f63afebdd00,"Minor typo fixing, readability improvements"
16,https://api.github.com/repos/mozilla/minion-backend/pulls/346,346,Remove the broken build status link,,april,230528,2015-09-03T22:05:01Z,CONTRIBUTOR,True,2,3,1,Minion Backend,Python,a7b3f925d336731444f63c26c7554e64e8442635,Remove the broken build status link
17,https://api.github.com/repos/mozilla/minion-backend/pulls/345,345,Initial stab at redoing the incredibly outdated documentation,,april,230528,2015-09-03T22:03:56Z,CONTRIBUTOR,True,82,72,1,Minion Backend,Python,9fdb76a1bba012aac71901caa3d9d9b756744023,Initial stab at redoing the incredibly outdated documentation
18,https://api.github.com/repos/mozilla/minion-backend/pulls/344,344,Change minion-backend to listen on *:8383 by default,,april,230528,2015-09-03T21:37:00Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,3b5aa6f0937322da2f4dea6b1d871605f830fe7e,Change minion-backend to listen on *:8383 by default
19,https://api.github.com/repos/mozilla/minion-backend/pulls/343,343,"Add init scripts for minion-backend, to work with supervisor",,april,230528,2015-09-02T20:24:51Z,CONTRIBUTOR,True,263,16,8,Minion Backend,Python,7bd640f43219716bb38a9da8a72111cf8f2eecb9,"Add init scripts for minion-backend, to work with supervisor"
20,https://api.github.com/repos/mozilla/minion-backend/pulls/342,342,"Alphabetize, add env",,april,230528,2015-09-02T20:24:02Z,CONTRIBUTOR,True,15,14,1,Minion Backend,Python,f6f05d12f8c749d766289744807036107940925b,"Alphabetize, add env"
21,https://api.github.com/repos/mozilla/minion-backend/pulls/341,341,Added script to get the json results of a scan,,april,230528,2015-08-26T20:07:17Z,CONTRIBUTOR,True,20,0,1,Minion Backend,Python,91bdf8bfe371e9f16fcadc8915fb17b41f52e00b,Added script to get the json results of a scan
22,https://api.github.com/repos/mozilla/minion-backend/pulls/340,340,add in a docker file,"To go along with the pull request on minion-frontend, not ready to go yet will need docker-compose. Also this changes minion to not listen on an internal interface so that the two docker containers will talk to each other.

If this is of interest and lands, i'd improve by splitting out mongodb and rabbitmq into seperate services, running everything in one is kinda icky.

Anyway lets see if I can get all this running first.
",andymckay,74699,2015-08-14T23:21:39Z,NONE,False,51,2,3,Minion Backend,Python,e81b67d250fe2bac1b314ce82f388f3b6c7fd7de,add in a docker file
23,https://api.github.com/repos/mozilla/minion-backend/pulls/337,337,Adds a 'critical' security level for issues,,april,230528,2015-08-05T18:58:22Z,CONTRIBUTOR,True,3,2,1,Minion Backend,Python,b09ff6a47945dac92199f28839e067dfed89fb4c,Adds a 'critical' security level for issues
24,https://api.github.com/repos/mozilla/minion-backend/pulls/336,336,Moving all default JSON configuration pieces to external files,,april,230528,2015-08-04T19:19:38Z,CONTRIBUTOR,True,54,56,4,Minion Backend,Python,13a8b95a9fd6c5ed549f4fd817eba3f78e4a859c,Moving all default JSON configuration pieces to external files
25,https://api.github.com/repos/mozilla/minion-backend/pulls/335,335,One last stab at fixing the mess that mock caused,,april,230528,2015-08-03T21:27:51Z,CONTRIBUTOR,True,30,25,2,Minion Backend,Python,5b4006b1c4f8185d40cd4b88ae55645c2f40fb65,One last stab at fixing the mess that mock caused
26,https://api.github.com/repos/mozilla/minion-backend/pulls/334,334,Mainlining upgrade of setuptools and six into setup.py,,april,230528,2015-08-03T20:20:25Z,CONTRIBUTOR,True,3,2,2,Minion Backend,Python,7c4a2205956833cafeea43fe29561aeb9a8983ac,Mainlining upgrade of setuptools and six into setup.py
27,https://api.github.com/repos/mozilla/minion-backend/pulls/333,333,Updated docs to reflect proper Ubuntu version and setuptools,,april,230528,2015-08-03T20:07:19Z,CONTRIBUTOR,True,4,3,1,Minion Backend,Python,352fe31b572826b474d5f1471b989acacea8032a,Updated docs to reflect proper Ubuntu version and requirement for setuptools > 17.0.1
28,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,5bcebb688f33236f207fc7eef60586ac643175ca,Allow Minion to take CIDR network as target
29,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,decb3544f4258abd8d4e34f3bab074c7afab384e," Correction of a mistake when the user enter a IP address, he can only enter CIDR networks and not IP addresses like 127.0.0.1"
30,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,2203047d140486966b2c2a641e3941f3b2b13bc0,Added function tests for this branch
31,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,da59f49dae7fe3b45bf3d503915db674a1e5d01a,add compatibility to IPv6
32,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,c2440aa0a295cfa738c7b5ade8b1188e020ba30c,"Update setup.py

Update the setup.py for netaddr to not have dependence on version"
33,https://api.github.com/repos/mozilla/minion-backend/pulls/332,332,Consideration of CIDR Network in Minion #2,"Considerable update to @Wawki's issue #321 pull request.
",april,230528,2015-06-30T21:14:56Z,CONTRIBUTOR,True,208,66,5,Minion Backend,Python,d18e3a7010075d61c9565edf1e1293134cdab20d,"Redo the entire IPv6/CIDR stack, and tests for it

Also fix minor JSON bug"
34,https://api.github.com/repos/mozilla/minion-backend/pulls/330,330,JSON-ize the DEFAULT_CONFIGs,"This allows it to be easily copied to /etc/minion/\* and edited.
",april,230528,2015-06-18T21:08:33Z,CONTRIBUTOR,True,25,19,1,Minion Backend,Python,5dbc8dcaf85a66030ce42dad5c0e0aea2f9c0270,"JSON-ize the DEFAULT_CONFIGs

This allows it to be easily copied to /etc/minion/* and edited."
35,https://api.github.com/repos/mozilla/minion-backend/pulls/329,329,Add cascade deletion when removing a plan,"We add cascade deletion when the user remove a plan.

When a plan is removed, it will also remove all the scans (results) link to this plan & remove the plan of all the sites containing it

This change may not be necessary in view of the next migration of the database
",Wawki,3777850,2015-06-16T12:56:13Z,CONTRIBUTOR,False,112,1,1,Minion Backend,Python,28faf8ce51799af3064aad6a773271128750ac11,add cascade deletion when removing a plan
36,https://api.github.com/repos/mozilla/minion-backend/pulls/329,329,Add cascade deletion when removing a plan,"We add cascade deletion when the user remove a plan.

When a plan is removed, it will also remove all the scans (results) link to this plan & remove the plan of all the sites containing it

This change may not be necessary in view of the next migration of the database
",Wawki,3777850,2015-06-16T12:56:13Z,CONTRIBUTOR,False,112,1,1,Minion Backend,Python,134e94e068cc996d7ab62324db893ccc0dc88eb3,"Update plans.py

Remove change from another commit"
37,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,258b06c4de74a10fcaa436ab1104da8e9f842df9,Change the Id of the issues to an unique Id based on the informations given
38,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,00e9bd9cd4a58621bd7cde42b209198ba0c1cd98,"Separate issues in a collection. Now scan have references to issues. So if two scans have a same issue, then they reference to an unique issue.
Added the consideration of false positives. Now with the API you can tag an issue as a false positive."
39,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,d868ab50603d99106e8be7b1bfbdcc0ebe1ab9ba,Added ignored issues (Issues that are not false positives but we don't to see as issues)
40,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,8def49c4a15bb010cc4d61b60ba185bc44627ba3,Added function tests for this branch
41,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,afc5647e30c9d4402c6c6a22fc3e859cd61ff82a,Update of the tag False positive / Ignored. Now we keep the status between two scans to determine which vulnerabilites has been fixed.
42,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,bdac6d5bad5495a9cd50e4dc4cd4a5a628528813,"Remove the tag ""New"" for the status. It's not necessary since it'll be overwritten if a new scan is done (for example with a cron)"
43,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,a08485d91005b137db00085e0d192c0681a2ef1d,Remove debug line & correct a bug
44,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,dd560e4d736702a83b0338191f9935a9c04da06d,Keep previous issues when scan is aborted
45,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,896ca3c686446a3075db130975b2262687a9c0ca,change in the generation of id for web issue. Warning previous issues will have a new id
46,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,7da63792868796fe93458b55bf710129b831a5eb,severity of the issue can now be updated
47,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,d6a825f56d7906853824a65af8db3dd155b4cfd5,fix issue fixing
48,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,41c955984fde2dc6d153bbc5ece8967084afa948,update the description of the issue
49,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,b0d243c8fc18b1f9e40b629aac96c4ca10fcd838,"Update base.py

Deleting a change from another commit"
50,https://api.github.com/repos/mozilla/minion-backend/pulls/328,328,"Many modifications on issues (merge, false positive, fixed...)","Big changes about issues :
1. Merge of the issues : 

We needed to identify the issue with a unique ID for several reasons : if two scans produce the same vulnerabilities then it has to be the same vulnerability. Similarly when sending the defect to issue trackers, it should not have 3 tickets for 3 scans that produced the same issue.
So to this, we made an unique ID with the Summary, CWE_ID, URL attacker and parameter where the payload is injected for a web issue or the Summary, CWE_ID, URL ( + port if exists ) for another type of issue

After that, we moved the issues in a separate collection. In order to obtain our unique issues, indeed now scans have references to the issues; implying that two scans with the same issue will have the same reference
1. Tag of issues (False positive, fixed ... )

We also add some tags to the issues. To do that, we add some functions to tag the issues as False Positive or Ignored. 

Moreover, when a scan is finished it will check if the issues are fixed or not. If an issue come back, it will keep is previous tag.
1. Keep issues when scan is aborted

When a scan was aborted, it was impossible to access to the previous issues. Now we keep the issues even if the scan is aborted.
1. Update characteristics of an issue

Each scan a check is made to see if the issue doesn't already exist (as said earlier), if the issue exists then we update the fields of the issue (severity, description)

These are many changes, so if you want to talk about this with us so that we improve this part, don't hesitate.
",Wawki,3777850,2015-06-16T12:21:17Z,CONTRIBUTOR,False,182,14,9,Minion Backend,Python,7cd5fb0cf6fd4073cf7b1b65e8019c366cef007f,Fixed an initialization bug
51,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,6299ce0444a65d0fcc1b266c9ae30a98ef6edc52,"Removed all the hard-coded dependencies in minion-backend, except
pyMongo, pending a new release from them."
52,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,0bf0b190186a85ef2bdc764780ece41fcb7ec438,Remove Vagrantfile and update README.md docs
53,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,26590c8e163c09bd7ad2c91d9f8eb68a3a17d129,start to document plugin requirements
54,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,68670c458b8660bee4adbf7fc3cd6bbbbc696c4f,add pickle method
55,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,134f337f965cb4e76b550f52934c389981f2516b,"Create log files for all workers

All workers will now create log files in /var/log/minion."
56,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,e0db66ec2f071919dd10ddea500089a9a56af4c8,Tone down log level in scanscheduler
57,https://api.github.com/repos/mozilla/minion-backend/pulls/327,327,Revamp the dependency requirements for minion-backend,,april,230528,2015-06-15T20:52:05Z,CONTRIBUTOR,True,59,41,9,Minion Backend,Python,1aa5e4d7c00a5eb1293aca1a42a1098925c19785,"Clean up commands

And add note about /run/minion."
58,https://api.github.com/repos/mozilla/minion-backend/pulls/326,326,Add ignore file for IntelliJ / pyCharm,,april,230528,2015-06-15T18:10:15Z,CONTRIBUTOR,True,1,0,1,Minion Backend,Python,2f913f78484b64933fccce0e854edda2887a1e72,Add ignore file for IntelliJ / pyCharm
59,https://api.github.com/repos/mozilla/minion-backend/pulls/325,325,Added the failures from plugins," If a plugin fail, then the failure is pull up to the frontend and the scan is marked as failed
",Wawki,3777850,2015-06-15T15:38:30Z,CONTRIBUTOR,True,29,9,3,Minion Backend,Python,af53e7c589a88a01cdcac3a48dc4f537c542b501,"Added the failures from plugins. If a plugin fail, then the failure is pull up to the frontend and the scan is marked as failed"
60,https://api.github.com/repos/mozilla/minion-backend/pulls/324,324,Better handling errors,"When a plugin encountered a problem, the exception was not rising to the frontend
",Wawki,3777850,2015-06-15T15:37:04Z,CONTRIBUTOR,False,33,5,2,Minion Backend,Python,8cf60bc0c088ea27992873b4b1123a08fede33e5,"catching more plugin exceptions

Conflicts:
	minion/plugins/base.py"
61,https://api.github.com/repos/mozilla/minion-backend/pulls/324,324,Better handling errors,"When a plugin encountered a problem, the exception was not rising to the frontend
",Wawki,3777850,2015-06-15T15:37:04Z,CONTRIBUTOR,False,33,5,2,Minion Backend,Python,ed5b927f0e482c0d0ea7cb52dd97617e0a7e1046,"better handling of unreachable target

Conflicts:
	minion/backend/utils.py"
62,https://api.github.com/repos/mozilla/minion-backend/pulls/323,323,Ability to save reports,"The function existed but was not implemented. Now when a scan is run, it's possible to save the reports as artifacts.

For an example on how to use it, look at : https://github.com/Wawki/minion-sslyze-plugin
",Wawki,3777850,2015-06-12T15:40:56Z,CONTRIBUTOR,False,59,4,4,Minion Backend,Python,f067f7520a00d93c41eff8e5d967b82fa0c65e1e,Added backup and recovery of artifacts
63,https://api.github.com/repos/mozilla/minion-backend/pulls/323,323,Ability to save reports,"The function existed but was not implemented. Now when a scan is run, it's possible to save the reports as artifacts.

For an example on how to use it, look at : https://github.com/Wawki/minion-sslyze-plugin
",Wawki,3777850,2015-06-12T15:40:56Z,CONTRIBUTOR,False,59,4,4,Minion Backend,Python,ba6161fb4f7486cf912b2736e6b19b4a3835edc6,Missing enumerate for artifact list
64,https://api.github.com/repos/mozilla/minion-backend/pulls/323,323,Ability to save reports,"The function existed but was not implemented. Now when a scan is run, it's possible to save the reports as artifacts.

For an example on how to use it, look at : https://github.com/Wawki/minion-sslyze-plugin
",Wawki,3777850,2015-06-12T15:40:56Z,CONTRIBUTOR,False,59,4,4,Minion Backend,Python,f2c20c4414a5435e502c6de519f5c3bbac7b8ccf,Correction of a bug
65,https://api.github.com/repos/mozilla/minion-backend/pulls/323,323,Ability to save reports,"The function existed but was not implemented. Now when a scan is run, it's possible to save the reports as artifacts.

For an example on how to use it, look at : https://github.com/Wawki/minion-sslyze-plugin
",Wawki,3777850,2015-06-12T15:40:56Z,CONTRIBUTOR,False,59,4,4,Minion Backend,Python,5f14e8de41d3584f8b3b4e9801a74fee7a67486f,Creating report folder for plugin if specified in configuration
66,https://api.github.com/repos/mozilla/minion-backend/pulls/323,323,Ability to save reports,"The function existed but was not implemented. Now when a scan is run, it's possible to save the reports as artifacts.

For an example on how to use it, look at : https://github.com/Wawki/minion-sslyze-plugin
",Wawki,3777850,2015-06-12T15:40:56Z,CONTRIBUTOR,False,59,4,4,Minion Backend,Python,2daa54a9078c8fe6d063eb8976a4dec891173c9e,catch more error when cannot create report directory
67,https://api.github.com/repos/mozilla/minion-backend/pulls/322,322,Added consideration of environment variables for external process,"Minion was not taking consideration of environment variables when we call an external process with a plugin so we had the option
",Wawki,3777850,2015-06-12T15:23:44Z,CONTRIBUTOR,False,1,1,1,Minion Backend,Python,4f134c41e25e24c249fb9758ae96b80a3e0a86ab,Added consideration of environnment variables for external process
68,https://api.github.com/repos/mozilla/minion-backend/pulls/321,321,Consideration of CIDR Network in Minion,"It was not possible to add CIDR Network in Minion. It was missing, for example, for the NMAP plugin.
",Wawki,3777850,2015-06-12T15:14:12Z,CONTRIBUTOR,True,66,8,4,Minion Backend,Python,5bcebb688f33236f207fc7eef60586ac643175ca,Allow Minion to take CIDR network as target
69,https://api.github.com/repos/mozilla/minion-backend/pulls/321,321,Consideration of CIDR Network in Minion,"It was not possible to add CIDR Network in Minion. It was missing, for example, for the NMAP plugin.
",Wawki,3777850,2015-06-12T15:14:12Z,CONTRIBUTOR,True,66,8,4,Minion Backend,Python,decb3544f4258abd8d4e34f3bab074c7afab384e," Correction of a mistake when the user enter a IP address, he can only enter CIDR networks and not IP addresses like 127.0.0.1"
70,https://api.github.com/repos/mozilla/minion-backend/pulls/321,321,Consideration of CIDR Network in Minion,"It was not possible to add CIDR Network in Minion. It was missing, for example, for the NMAP plugin.
",Wawki,3777850,2015-06-12T15:14:12Z,CONTRIBUTOR,True,66,8,4,Minion Backend,Python,2203047d140486966b2c2a641e3941f3b2b13bc0,Added function tests for this branch
71,https://api.github.com/repos/mozilla/minion-backend/pulls/321,321,Consideration of CIDR Network in Minion,"It was not possible to add CIDR Network in Minion. It was missing, for example, for the NMAP plugin.
",Wawki,3777850,2015-06-12T15:14:12Z,CONTRIBUTOR,True,66,8,4,Minion Backend,Python,da59f49dae7fe3b45bf3d503915db674a1e5d01a,add compatibility to IPv6
72,https://api.github.com/repos/mozilla/minion-backend/pulls/321,321,Consideration of CIDR Network in Minion,"It was not possible to add CIDR Network in Minion. It was missing, for example, for the NMAP plugin.
",Wawki,3777850,2015-06-12T15:14:12Z,CONTRIBUTOR,True,66,8,4,Minion Backend,Python,c2440aa0a295cfa738c7b5ade8b1188e020ba30c,"Update setup.py

Update the setup.py for netaddr to not have dependence on version"
73,https://api.github.com/repos/mozilla/minion-backend/pulls/320,320,Ignore OS X filesystem spam,,april,230528,2015-06-12T15:02:52Z,CONTRIBUTOR,True,1,0,1,Minion Backend,Python,788af263d378f02753fdabcc21a6a8d7e3f7fbc8,Ignore OS X filesystem spam
74,https://api.github.com/repos/mozilla/minion-backend/pulls/319,319,"Allow for more autonomous installations, extra user scripts","- Allow for easy automatic installs with minion-db-init
- Add user view/delete scripts
- Change the pid location so it doesn't drop into the minion-backend directory
",april,230528,2015-06-11T20:10:51Z,CONTRIBUTOR,True,69,9,7,Minion Backend,Python,ea76e4d5e69b95e9e7e65eff8598c85a96dd6625,Allow minion-db-init to be run without prompting
75,https://api.github.com/repos/mozilla/minion-backend/pulls/319,319,"Allow for more autonomous installations, extra user scripts","- Allow for easy automatic installs with minion-db-init
- Add user view/delete scripts
- Change the pid location so it doesn't drop into the minion-backend directory
",april,230528,2015-06-11T20:10:51Z,CONTRIBUTOR,True,69,9,7,Minion Backend,Python,53555ae1a9c30601ad4b3b95f715365e7abf72ba,"User management and initialization script update

- minion-db-init allows you to create a user and import without
prompting, now calls minion-create-user properly
- minion-create-user has output on success now
- added minion-get-users and minion-delete-user scripts"
76,https://api.github.com/repos/mozilla/minion-backend/pulls/319,319,"Allow for more autonomous installations, extra user scripts","- Allow for easy automatic installs with minion-db-init
- Add user view/delete scripts
- Change the pid location so it doesn't drop into the minion-backend directory
",april,230528,2015-06-11T20:10:51Z,CONTRIBUTOR,True,69,9,7,Minion Backend,Python,d9c412b193ccd3f0f69905f9defa478e191347fd,"Update pid file location

Update the scan scheduler so that it doesnâ€™t automatically create a pid
file in your current directory."
77,https://api.github.com/repos/mozilla/minion-backend/pulls/319,319,"Allow for more autonomous installations, extra user scripts","- Allow for easy automatic installs with minion-db-init
- Add user view/delete scripts
- Change the pid location so it doesn't drop into the minion-backend directory
",april,230528,2015-06-11T20:10:51Z,CONTRIBUTOR,True,69,9,7,Minion Backend,Python,37c403b207816123e2174279afcd3f7a044fd87e,"Change pid location

So that we donâ€™t have to create the /var/run/celery directory by
default."
78,https://api.github.com/repos/mozilla/minion-backend/pulls/319,319,"Allow for more autonomous installations, extra user scripts","- Allow for easy automatic installs with minion-db-init
- Add user view/delete scripts
- Change the pid location so it doesn't drop into the minion-backend directory
",april,230528,2015-06-11T20:10:51Z,CONTRIBUTOR,True,69,9,7,Minion Backend,Python,06a36c42529ea1624b3599a0cd494baaec85dad8,Ignore errant pid files and the vagrant directories.
79,https://api.github.com/repos/mozilla/minion-backend/pulls/318,318,Allow minion-db-init to be run without prompting,,april,230528,2015-06-03T18:28:13Z,CONTRIBUTOR,False,11,4,1,Minion Backend,Python,ea76e4d5e69b95e9e7e65eff8598c85a96dd6625,Allow minion-db-init to be run without prompting
80,https://api.github.com/repos/mozilla/minion-backend/pulls/317,317,Update setup.py,"Remove version number. This version fails during setup. Solution:

install pycurl as a prereq. Modified minion/readme.md to reflect this step.
",amuntner,4481467,2015-05-28T22:06:05Z,COLLABORATOR,False,1,1,1,Minion Backend,Python,e144027a973088a5d13346ba1ce8e33d86e35d9d,"Update setup.py

Remove version number. This version fails during setup. Solution:

install pycurl as a prereq. Modified minion/readme.md to reflect this step."
81,https://api.github.com/repos/mozilla/minion-backend/pulls/316,316,Update README.md,"Install the freshest Pycurl with pip.
",amuntner,4481467,2015-05-28T22:03:44Z,COLLABORATOR,False,1,0,1,Minion Backend,Python,075d47ce0cf287e8b3cbfa2f91e548e31e89bb66,"Update README.md

Install the freshest Pycurl with pip."
82,https://api.github.com/repos/mozilla/minion-backend/pulls/315,315,Update pyMongo to use 2.8,"pyMongo 2.5.1 doesn't appear to work on Ubuntu 14.04 LTS.
",april,230528,2015-04-16T01:10:28Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,d14d9b8936a4bebf80e9f11ad66d574387be9d54,Update pyMongo to use 2.8
83,https://api.github.com/repos/mozilla/minion-backend/pulls/311,311,Store/delete/modify credentials,"Supporting feature for front-end issue: https://github.com/pi5/minion-frontend/issues/26
",pi5,5467038,2014-09-05T17:47:50Z,CONTRIBUTOR,True,79,1,2,Minion Backend,Python,fc5d14655d8c1bc4e9aac57cdb7a4df8479fb81e,Adding support to store site credentials for authenticated scans. Fixes #12
84,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,843849c63181f4dc983c6d73772df3334fcf0b47,Basic scheduling works now. Using crontab like format. Caution: No error checking/validation
85,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,2d6b03bca4f8e570657f28592f08718266d35cbb,Update exisiting schedule instead of inserting every time. Fixes issue #3
86,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,edf06a2c1ebc8b4a34af9b6eec725f057175fb5d,Returning crontab information along with scan information
87,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,fb81313ff935ded77c0a4564abd8f35a7284ebc9,Fixes #7
88,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,27e578186ef5c5c331b283de580bbeadf2ddd752,Fixes #6
89,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,05909ab1c64dcb123282634d1017fe7efd00f5de,Adding dependencies and new scripts to setup.py
90,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,cd0707951acc6e3705733a9d49cecda690827ac2,Disable scan schedule instead of removing from database. Fixes issue #8
91,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,892c83ab567ba62c0068fba82cec650dedf21ddc,Changing permissions decorator to allow scans from cronuser. Initiating celerybeat with cronuser. Fixes #2
92,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,1876bcbdea6347878936cf998ede37795e78a574,Using 'cron' user directly. Related to issue #2
93,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,14d4e9b26d7a70cb31fd551832565d5520dfbdce,Fixes #10
94,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,bfe90fa6396a6d9aa17d505fe333a7e3cc51b84a,Providing backend validation for crontab schedule. Fixes issue #11
95,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,79214f0949db6277fe4aa6cac87c3767cc8b2f1a,Renamed db collection from schedules to scanschedules to avoid confusion with celery.schedules. Related to issue #11
96,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,2491371756d27aaf629af162f48133be63a863e6,Documentation update: Adding instructions to start schedule worker and scan scheduler
97,https://api.github.com/repos/mozilla/minion-backend/pulls/310,310,Scan scheduling support for minion,"Providing an ability to trigger scans using a crontab-like schedule. 
Using celerybeat-mongo for scheduling scans.
",pi5,5467038,2014-08-20T23:50:01Z,CONTRIBUTOR,True,187,11,11,Minion Backend,Python,52fa021be5edb249cf62f91543de74f890d0ed8f,Documentation update: Adding instructions to start schedule worker and scan scheduler
98,https://api.github.com/repos/mozilla/minion-backend/pulls/308,308,Fixed #307. Run test_scan requires whitelisting localhost.,"This is merely a documentation fix. If anyone intersted in
running the full test suite, or at least test_scan.py, the
runner must ensure localhost is whitelisted. This is achieved
by creating scan.json and whitelist 127.0.0.1.
",yeukhon,943001,2014-02-17T12:04:07Z,CONTRIBUTOR,True,7,0,1,Minion Backend,Python,257ff8167f00e2ce7849cefdb18eeb259b1f62b4,"Fixed #307. Run test_scan requires whitelisting localhost.

This is merely a documentation fix. If anyone intersted in
running the full test suite, or at least test_scan.py, the
runner must ensure localhost is whitelisted. This is achieved
by creating scan.json and whitelist 127.0.0.1."
99,https://api.github.com/repos/mozilla/minion-backend/pulls/306,306,Fixed #295. Fixed running plugin tests as group.,"The regression happens because in the old revision each plugin test
had a different endpoint. Since now they (almost all of the tests)
still share the same Flask object and use the same endpoint `/tests`,
when nosetests scans for all the test_app object, only one of the endpoint
is chosen. Sometimes if we are lucky on tearDown some are updated. But
in general, only one test file's actual endpoint is in the memory.

The solution is to pull all the Flask-related code into a separate python
file according to test. They now organized under servers/ directory.
",yeukhon,943001,2014-02-17T11:20:34Z,CONTRIBUTOR,True,221,160,25,Minion Backend,Python,c5f07e497414d4dd2b518806af36721ad4c5c5da,"Fixed #295. Fixed running plugin tests as group.

The regression happens because in the old revision each plugin test
had a different endpoint. Since now they (almost all of the tests)
still share the same Flask object and use the same endpoint ``/tests``,
when nosetests scans for all the test_app object, only one of the endpoint
is chosen. Sometimes if we are lucky on tearDown some are updated. But
in general, only one test file's actual endpoint is in the memory.

The solution is to pull all the Flask-related code into a separate python
file according to test. They now organized under servers/ directory."
100,https://api.github.com/repos/mozilla/minion-backend/pulls/305,305,Fixed #297. Allow to filter plans by passing email to the filter.,"The issue occurs that we didn't pass the second argument the plan name
into _check_plan_by_email().

Though the code is not very efficient. See #304.
",yeukhon,943001,2014-02-07T10:59:46Z,CONTRIBUTOR,True,7,9,3,Minion Backend,Python,e39fe6370b9266fb09cae0b266dbdabb0d3f90db,"Fixed #297. Allow to filter plans by passing email to the filter.

The issue occurs that we didn't pass the second argument the plan name
into _check_plan_by_email().

Though the code is not very efficient. See #304."
101,https://api.github.com/repos/mozilla/minion-backend/pulls/303,303,Fixed #299. Added HelloWorldPlugin for testing purpose.,"This is almost like DelayedPlugin except it does not wait.
We can turn this into a better testing plugin (the configuration
takes parameters, like configuring how many issues to return,
what strings to return, etc). But for now, this is enough for
testing.
",yeukhon,943001,2014-02-07T10:40:51Z,CONTRIBUTOR,True,13,10,2,Minion Backend,Python,09fc9708deda3355966badaf9dadab8488814fee,"Fixed #299. Added HelloWorldPlugin for testing purpose.

This is almost like DelayedPlugin except it does not wait.
We can turn this into a better testing plugin (the configuration
takes parameters, like configuring how many issues to return,
what strings to return, etc). But for now, this is enough for
testing."
102,https://api.github.com/repos/mozilla/minion-backend/pulls/302,302,Fixed #298. Handle non-existent plan in GET /plans/<plan_name>,"If the plan does not exist, we should return False.
We should probably handle with a 404 in the future.
",yeukhon,943001,2014-02-07T10:30:13Z,CONTRIBUTOR,True,12,8,2,Minion Backend,Python,24f45377332babbca41ef683a413080b26c54d10,"Fixed #298. Handle non-existent plan in GET /plans/<plan_name>

If the plan does not exist, we should return False.
We should probably handle with a 404 in the future."
103,https://api.github.com/repos/mozilla/minion-backend/pulls/301,301,"Fixed #296. In group creation, query site ""url"" not site ""name"".","We mistakenly query the wrong (and non-existient) attribute
in the sites collection. The correct name is ""url"", not ""name"".
",yeukhon,943001,2014-02-07T10:22:01Z,CONTRIBUTOR,True,3,9,3,Minion Backend,Python,216cd963c9bb003bcfbf8f49b40f60e2a083f894,"Fixed #296. In group creation, query site ""url"" not site ""name"".

We mistakenly query the wrong (and non-existient) attribute
in the sites collection. The correct name is ""url"", not ""name""."
104,https://api.github.com/repos/mozilla/minion-backend/pulls/300,300,Fixed #184. Refactor and re-implement all views functional tests.,"This is a major patch.

First, there is a base class called Resource which is used to
create ""shortcut"" class to each of the backend's resource endpoint.
While it may be silly to create such class, as a test writer I find
this approach cleaner, more readable and easier to maintain than
the previous function-style.

Compare:

user = User(""bob@example.org"")
res = user.create()

to

res = self.create_user(""bob@eample.org"")

The class actually keeps certain ""states"" (at the attribute level).
Most of the classes have the same number of methods to access:

```
create, get, update, delete
```

Secondly, when we actually test scan, we no longer run basics plugin,
which would require a mini Flask server to be running. Instead,
I am making use of DelayPlugin from tests plugin. However, this test
is turned off due to bug #296 (and #300). Until we fix those two,
that test will be commented out.

Third, test_key method is gone. When we want to check whether
the response contains keys we are expecting to have, we fall back
to the native self.assertEqual. We basically do this:

```
self.assertEqual(set(key1),  set(key2))
```

where key1 and key2 are the set of keys we want to compare. While
doing this, I discovered that the original self._test_key method
contains a bug. We have added new keys to many responses but _test_key
did not catch the changes. With this new, more native approach,
I am able to detect the missing keys and this improve the realibitly of
our tests.

There are other changes, but in general this patch makes the tests
more robuts and easier to maintain.
",yeukhon,943001,2014-02-07T10:14:03Z,CONTRIBUTOR,True,1348,1478,12,Minion Backend,Python,fdaed1e8078b99b4aa25ac1e4dd35f16f6e96493,"Fixed #184. Refactor and re-implement all views functional tests.

This is a major patch.

First, there is a base class called Resource which is used to
create ""shortcut"" class to each of the backend's resource endpoint.
While it may be silly to create such class, as a test writer I find
this approach cleaner, more readable and easier to maintain than
the previous function-style.

Compare:

user = User(""bob@example.org"")
res = user.create()

to

res = self.create_user(""bob@eample.org"")

The class actually keeps certain ""states"" (at the attribute level).
Most of the classes have the same number of methods to access:

    create, get, update, delete

Secondly, when we actually test scan, we no longer run basics plugin,
which would require a mini Flask server to be running. Instead,
I am making use of DelayPlugin from tests plugin. However, this test
is turned off due to bug #296 (and #300). Until we fix those two,
that test will be commented out.

Third, test_key method is gone. When we want to check whether
the response contains keys we are expecting to have, we fall back
to the native self.assertEqual. We basically do this:

    self.assertEqual(set(key1),  set(key2))

where key1 and key2 are the set of keys we want to compare. While
doing this, I discovered that the original self._test_key method
contains a bug. We have added new keys to many responses but _test_key
did not catch the changes. With this new, more native approach,
I am able to detect the missing keys and this improve the realibitly of
our tests.

There are other changes, but in general this patch makes the tests
more robuts and easier to maintain."
105,https://api.github.com/repos/mozilla/minion-backend/pulls/294,294,Fixed #291. Added solution to various plugins.,"Some issues in some plugins can benefit from having explicit solution/remdiation in the report output.
",yeukhon,943001,2014-01-25T03:21:14Z,CONTRIBUTOR,True,48,7,1,Minion Backend,Python,364b7d2b13873487e3a80406ed144789b7900583,"Fixed #291. Added solution to various plugins.

Some issues in some plugins can benefit from having explicit solution/remdiation in the report output."
106,https://api.github.com/repos/mozilla/minion-backend/pulls/293,293,Fixed #292. Update ServerDetailsPlugin to use the correct format_report.,"I was still using the old non-class format_report I orginally wrote
for the CSPPlugin. This should have been part of #286, but I somehow
let it passed.
",yeukhon,943001,2014-01-23T05:45:12Z,CONTRIBUTOR,True,7,18,1,Minion Backend,Python,e857492bde8881abbb250e32f35c11889a2b7557,"Fixed #292. Update ServerDetailsPlugin to use the correct format_report.

I was still using the old non-class format_report I orginally wrote
for the CSPPlugin. This should have been part of #286, but I somehow
let it passed."
107,https://api.github.com/repos/mozilla/minion-backend/pulls/290,290,Fixed #286. Convert existing _format_report to the new format_report method,"The rationael behind is that the old one would require new signatures to be added.
The new one might be a bit ugly in terms of all the braces and brackets, but
usage wise it's pretty consistent and simple.
",yeukhon,943001,2014-01-23T05:25:55Z,CONTRIBUTOR,True,125,133,2,Minion Backend,Python,75eaa349934b429aa7f17e44da45935009075cab,"Fixed #286. Convert existing _format_report to the new format_report method.

The rationael behind is that the old one would require new signatures to be added.
The new one might be a bit ugly in terms of all the braces and brackets, but
usage wise it's pretty consistent and simple."
108,https://api.github.com/repos/mozilla/minion-backend/pulls/289,289,Fixed #265. Give an explicit description for each issue in ServerDetails...,"... plugin.

Each ""problematic"" header has a short description about its purpose and a quote
from RFC 2068.
",yeukhon,943001,2014-01-23T04:22:45Z,CONTRIBUTOR,True,29,6,1,Minion Backend,Python,cec3af95317e11682ccf4d13fd682d83fa0b7694,"Fixed #265. Give an explicit description for each issue in ServerDetails plugin.

Each ""problematic"" header has a short description about its purpose and a quote
from RFC 2068."
109,https://api.github.com/repos/mozilla/minion-backend/pulls/287,287,Fix typo in setup.py that prevents develop command,,ashleyblackmore,1227589,2014-01-22T07:14:04Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,a2f32ac615d59b0fa341909ad259323a30d223de,Fix typo in setup.py that prevents develop command
110,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,c02d594a2ca5fc9436d0911cd46fa4d394140750,"Working on #284. Updated test_alive.py

+ Update test_alive.py with the new test driver.

We will add the new driver to the base test class once all tests have been converted.

+ timeout is commented out

This is because minion.curly does not handle code 28 (operation timeout error).
This will be a separate issue to handle."
111,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,0311f8cf6166d3336588f5b465a85f0459acd756,"Working on #284. Updated test_xframe.py

+ Update test_xframe.py with the new test driver.

We will add the new driver to the base test class once all tests have been converted."
112,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,28fc9001c287c92625c2b530d95ac8b5cb7eda18,"Working on #284. Update test_hsts.py to use new driver.

+ Replace stunnel with Flask SSL invokcation.

This snippet (http://flask.pocoo.org/snippets/111/)
can be used to start Flask with TLS. A new directory called https_data
has been added to replace stunnel-data. The new direcorty contains
a testing certificate and a testing private key. There is a REAMDE
with instruction to generate the cert and key.

Unfortunately, because we self-signed the cert, we need to disable SSL/TLS
cert verification in pycurl. But I don't want to enable that until I have
spoken to Stefan about this. For now, we know the code works because the plugin
hasn't changed a bit. We will leave it commented out. I really hope we don't
need to assert mozillalabs.com or google.com to test the plugin."
113,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,eb84ed3807750a91a08d87926a1e974cdb227d7d,Working on #284. Updated test_xcontent.py
114,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,493a9ed59aeef6f104ba95698cdec60974801266,Working on #284. Updated test_xxssprotection.py
115,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,dd3d306db01947ef1d34737fdbbff7634806cd5d,Working on #284. Updated test_server_details.py
116,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,8c6e014f316fe852998d3d0010f49daf1c8895b8,Working #284. Updated test_robot.py
117,https://api.github.com/repos/mozilla/minion-backend/pulls/285,285,Pull request for #284 to rewrite all plugin tests,"Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.
- test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.
- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine.
",yeukhon,943001,2014-01-21T05:14:24Z,CONTRIBUTOR,True,462,607,15,Minion Backend,Python,123a2ac9f13f1450bbc8dd72c0327e480596113a,"Fixed #284. Rewrite all plugin tests using the new test driver.

Sumamary:

This final patch abstract common codes into base.py. The code should be
much cleaner to read.

+test_robots.py

test_robots.py is one that doesn't use the /test endpoint. It launches three
instances of Flask servers because to test the plugin we need a server that runs
with valid robots.txt, one with invalid robots.txt and one without robots.txt.

+ test_hsts.py

test_hsts.py test still rely on external sites (mozillalabs.com and google.com) to
test the existence and absence of HSTS header. We can't launch a local HTTPS server
because minion.curly.get will do certificate check. I need to speak with stefan about
allowing curly to receive an option to enable or disable verification on each call.

- cold boot

If we try to run multiple test files together there will be failure. This seems to be
race condition, the fact that some servers have not been terminated. This is a regression.
One way to solve this is to provide a test runner script that invoke individual test file.
I will file another bug to look at this issue but for now I know each file runs perfectly
fine."
118,https://api.github.com/repos/mozilla/minion-backend/pulls/282,282,Fixed #279. Rewrite CSPPlugin.,"What has changed?
- tests are completly rewritten.
- CSPPlugin is completely rewritten to support 1.0 syntax.
- Compare to the previous CSSPlugin, CSP and XCSP presence check is always required.

The orginal rewrite expected more issues to raise, but I have given up that idea, Instead,
only relevant and basic syntax checks are done. Issues/summaries like how many directives
inherit from default-src are not available (although they were implemented I backed out those
codes during squash). Also, this plugin currently only checks the syntax of the CSP header; so
XCSP, CSP-RO and XCSP-RO are not verified. An experimental CSPPlugin (but separate) should
be developed. Until then this plugin can remain simple like this.
",yeukhon,943001,2014-01-20T07:06:48Z,CONTRIBUTOR,True,504,296,2,Minion Backend,Python,55b73776b4530ff0e860d0123b958a3fa06ef21d,"Fixed #279. Rewrite CSPPlugin.

What has changed?

+ tests are completly rewritten.
+ CSPPlugin is completely rewritten to support 1.0 syntax.
+ Compare to the previous CSSPlugin, CSP and XCSP presence check is always required.

The orginal rewrite expected more issues to raise, but I have given up that idea, Instead,
only relevant and basic syntax checks are done. Issues/summaries like how many directives
inherit from default-src are not available (although they were implemented I backed out those
codes during squash). Also, this plugin currently only checks the syntax of the CSP header; so
XCSP, CSP-RO and XCSP-RO are not verified. An experimental CSPPlugin (but separate) should
be developed. Until then this plugin can remain simple like this."
119,https://api.github.com/repos/mozilla/minion-backend/pulls/281,281,Fixed test_malformed_csp to test 'self' typo. Fixed #280.,"After #254 is fixed, the regex for source expression has been updated
and improved to accept valid hostnames like localhost. This means
even img-src is considered valid if they are not directive (if they
fall under source list).
",yeukhon,943001,2014-01-13T05:33:36Z,CONTRIBUTOR,True,4,4,1,Minion Backend,Python,8078bd0cbc5a50e75693a0bb331b709995e11c6f,"Fixed test_malformed_csp to test 'self' typo. Fixed #280.

After #254 is fixed, the regex for source expression has been updated
and improved to accept valid hostnames like localhost. This means
even img-src is considered valid if they are not directive (if they
fall under source list)."
120,https://api.github.com/repos/mozilla/minion-backend/pulls/278,278,CSP plugin should accept blob and data. Fixed #254.,,yeukhon,943001,2014-01-13T05:07:54Z,CONTRIBUTOR,True,26,12,2,Minion Backend,Python,72173c85d53fc10803a9097ea37fbb798d03123d,CSP plugin should accept blob and data. Fixed #254.
121,https://api.github.com/repos/mozilla/minion-backend/pulls/277,277,db-init should only import basic.plan. Fixed #276.,,yeukhon,943001,2014-01-06T16:30:02Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,16d0b53b94f75525d86a1ca956be34e0d51a00f1,db-init should only import basic.plan. Fixed #276.
122,https://api.github.com/repos/mozilla/minion-backend/pulls/263,263,Refactor invite,"Finally got a few hours tonight to finish this! Refactoring went pretty smoothly. Manual testing is time consuming.
- refactored the invites/control into resend, decline and accept apis
- refactored common code into load_user_and_invite and invite_has_expird
- extend invite lifetime when resend instead of issuing a new id

This requires https://github.com/mozilla/minion-frontend/pull/140 to be pulled in.
",yeukhon,943001,2013-09-12T07:25:05Z,CONTRIBUTOR,False,192,102,3,Minion Backend,Python,245f125e5b07da54c7ad1352decdc5026ecf18a5,"Fixed #259. Allows accepting invite with an existing account.

When a user logs in with an existing account in Minion we remove
the account that was created for the invited user. We update all
the group associations to the login from the original invite
account."
123,https://api.github.com/repos/mozilla/minion-backend/pulls/263,263,Refactor invite,"Finally got a few hours tonight to finish this! Refactoring went pretty smoothly. Manual testing is time consuming.
- refactored the invites/control into resend, decline and accept apis
- refactored common code into load_user_and_invite and invite_has_expird
- extend invite lifetime when resend instead of issuing a new id

This requires https://github.com/mozilla/minion-frontend/pull/140 to be pulled in.
",yeukhon,943001,2013-09-12T07:25:05Z,CONTRIBUTOR,False,192,102,3,Minion Backend,Python,65344ab9a411aad596b578df2db0e65cf069fe6d,Refactor resent invite into its own endpoint. See #258.
124,https://api.github.com/repos/mozilla/minion-backend/pulls/263,263,Refactor invite,"Finally got a few hours tonight to finish this! Refactoring went pretty smoothly. Manual testing is time consuming.
- refactored the invites/control into resend, decline and accept apis
- refactored common code into load_user_and_invite and invite_has_expird
- extend invite lifetime when resend instead of issuing a new id

This requires https://github.com/mozilla/minion-frontend/pull/140 to be pulled in.
",yeukhon,943001,2013-09-12T07:25:05Z,CONTRIBUTOR,False,192,102,3,Minion Backend,Python,435478d8a3b4f473f1dec31b901c1a819d910c76,Refactor decline invite into its own api endpoint. See #258.
125,https://api.github.com/repos/mozilla/minion-backend/pulls/263,263,Refactor invite,"Finally got a few hours tonight to finish this! Refactoring went pretty smoothly. Manual testing is time consuming.
- refactored the invites/control into resend, decline and accept apis
- refactored common code into load_user_and_invite and invite_has_expird
- extend invite lifetime when resend instead of issuing a new id

This requires https://github.com/mozilla/minion-frontend/pull/140 to be pulled in.
",yeukhon,943001,2013-09-12T07:25:05Z,CONTRIBUTOR,False,192,102,3,Minion Backend,Python,5303640f5d488835ae9735167aa5348208df6ada,Refactor accept invite into its own api. See #258.
126,https://api.github.com/repos/mozilla/minion-backend/pulls/263,263,Refactor invite,"Finally got a few hours tonight to finish this! Refactoring went pretty smoothly. Manual testing is time consuming.
- refactored the invites/control into resend, decline and accept apis
- refactored common code into load_user_and_invite and invite_has_expird
- extend invite lifetime when resend instead of issuing a new id

This requires https://github.com/mozilla/minion-frontend/pull/140 to be pulled in.
",yeukhon,943001,2013-09-12T07:25:05Z,CONTRIBUTOR,False,192,102,3,Minion Backend,Python,b34b5ef6c93422e1436113fc0461b3a7e2f02605,Fixed #258 refactored invites. Fixed #264 extend lifetime of invite instead of sending a new id.
127,https://api.github.com/repos/mozilla/minion-backend/pulls/257,257,Fixed #256. Reorganize plugin structure: plugin class now lives in init....,"...py

Some plugins have multiple modules and assets and to make a common structure
we decided to put all plugins under its own package name. The plugin class
itself will be under **init**.py and other helper assets (modules, xml files, etc)
should also be under the plugin folder.

See https://github.com/mozilla/minion-zap-plugin/issues/39
",yeukhon,943001,2013-09-06T19:56:41Z,CONTRIBUTOR,True,18,27,1,Minion Backend,Python,36687e2acec809ca06102c5dc6359684db0d632c,Fixed #256. Update plugin discovery.
128,https://api.github.com/repos/mozilla/minion-backend/pulls/234,234,Fixed #233. get_report_issues takes group_name instead of group as kwarg...,"...s.
",yeukhon,943001,2013-08-28T16:24:16Z,CONTRIBUTOR,False,13,7,1,Minion Backend,Python,77963e7b8b0a8af81a984f85b0ac163cca711c15,Fixed #233. get_report_issues takes group_name instead of group as kwargs.
129,https://api.github.com/repos/mozilla/minion-backend/pulls/232,232,Fixed #228. Remove kill_ports from functional tests.,"Since #226 is fixed, we can actually tearDown and stop running
flask instance during test, we don't need this kill port hack.
https://github.com/mozilla/minion-backend/commit/bb94e17ae778db3f7d168e0a8f6b3835340dd1bb
",yeukhon,943001,2013-08-28T16:21:39Z,CONTRIBUTOR,False,4,25,4,Minion Backend,Python,ce9377ef8224bc158be3c8fe38e816e9c9aa0530,"Fixed #228. Remove kill_ports from functional tests.

Since #226 is fixed, we can actually tearDown and stop running
flask instance during test, we don't need this kill port hack.
https://github.com/mozilla/minion-backend/commit/bb94e17ae778db3f7d168e0a8f6b3835340dd1bb"
130,https://api.github.com/repos/mozilla/minion-backend/pulls/231,231,Fixed #227. There was a raw_input debug code left inside the test.,,yeukhon,943001,2013-08-28T16:21:21Z,CONTRIBUTOR,True,0,1,1,Minion Backend,Python,b222b4e34ec69cf15a9f864f67924b670e8e0522,Fixed #227. There was a raw_input debug code left inside the test.
131,https://api.github.com/repos/mozilla/minion-backend/pulls/222,222,Allow to specify a whitelist and a blacklist of net access. See #217.,"This is my last pull request as an intern on the Mozilla Security
Assurance team.

What hasn't been implemented is the abililty to resolve the target
to the IP addres within the scan.

This is due to time constraint; I need more time
to develop a test case (maybe I overthink, maybe just localhost
is a fine test case, maybe). It is relatively very easy to add that
check anyway. I already have the resolver function implemented
in utils.py

The changes are to allow a ""scna.json"". We will extend the network
access before saving the target url to database in the future
commits.

The test includes two sample JSON. One with both blacklist and whitelist
empted and one with a blacklist. We are using ipaddress to determine
whether or not an ip is part of a whitelist (remind: anything
not in blacklist is automatically consider whitelisted).

I also want to be able to specify ports in the future (whitelist
a particular port on 192.168.1.1)).

We can do this once this implemented is accepted.

Anyway. I have had a great time at Mozilla. See you on #websectools.

_rawr_
",yeukhon,943001,2013-08-23T23:21:45Z,CONTRIBUTOR,True,189,9,8,Minion Backend,Python,ea5b04653796f905bcf7029fe1930c8cbbd2e643,"Allow to specify a whitelist and a blacklist of net access. See #217.

This is my last pull request as an intern on the Mozilla Security
Assurance team.

What hasn't been implemented is the abililty to resolve the target
to the IP addres within the scan.

This is due to time constraint; I need more time
to develop a test case (maybe I overthink, maybe just localhost
is a fine test case, maybe). It is relatively very easy to add that
check anyway. I already have the resolver function implemented
in utils.py

The changes are to allow a ""scna.json"". We will extend the network
access before saving the target url to database in the future
commits.

The test includes two sample JSON. One with both blacklist and whitelist
empted and one with a blacklist. We are using ipaddress to determine
whether or not an ip is part of a whitelist (remind: anything
not in blacklist is automatically consider whitelisted).

I also want to be able to specify ports in the future (whitelist
a particular port on 192.168.1.1)).

We can do this once this implemented is accepted.

Anyway. I have had a great time at Mozilla. See you on #websectools.

*rawr*"
132,https://api.github.com/repos/mozilla/minion-backend/pulls/221,221,Are we slim yet? Cleaning up task.py. See #214.,,yeukhon,943001,2013-08-22T03:44:44Z,CONTRIBUTOR,False,106,270,1,Minion Backend,Python,7801bfe08726710a5e4125fe01699823ab0abe62,Are we slim yet? Cleaning up task.py. See #214.
133,https://api.github.com/repos/mozilla/minion-backend/pulls/220,220,Fixed #219. Allow url to be editable via the backend.,,yeukhon,943001,2013-08-22T03:14:25Z,CONTRIBUTOR,False,42,15,2,Minion Backend,Python,0594696cd8c22f78868dc49bfb70da19a4c30cd5,Fixed #219. Allow url to be editable via the backend.
134,https://api.github.com/repos/mozilla/minion-backend/pulls/218,218,Fixed #215. Allow to query report status and issue by group_name.,"To query the group, we right now restrict the query must have
a user query appended as well..
",yeukhon,943001,2013-08-22T00:20:45Z,CONTRIBUTOR,True,100,14,7,Minion Backend,Python,23390c9f6232a2af85af1d18e2c6df13fa4c4eac,"Fixed #215. Allow to query report status and issue by group_name.

To query the group, we right now restrict the query must have
a user query appended as well.."
135,https://api.github.com/repos/mozilla/minion-backend/pulls/216,216,support for 1 character domains,"Ticket for 1 character domain support. 
Corresponding ticket in frontend is:
https://github.com/mozilla/minion-frontend/pull/110
",ZaiLynch,1188696,2013-08-20T19:25:33Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,700132da5abbb92244e04c803aec7a0b352b824a,support for 1 character domains
136,https://api.github.com/repos/mozilla/minion-backend/pulls/216,216,support for 1 character domains,"Ticket for 1 character domain support. 
Corresponding ticket in frontend is:
https://github.com/mozilla/minion-frontend/pull/110
",ZaiLynch,1188696,2013-08-20T19:25:33Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,89c8477af6983d3a87f09d0d971a38c456bd7109,Support for subdomains of 1 character domains
137,https://api.github.com/repos/mozilla/minion-backend/pulls/211,211,Update git clone path in README,"Was incorrect, pointed to @st3fan's old repo before moved to Mozilla
",bartek,5839,2013-08-13T14:00:21Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,f2ccf217e2144e6bb65eecfe024940d0870a5f3a,Update git clone path in README
138,https://api.github.com/repos/mozilla/minion-backend/pulls/210,210,[in-progress] Started implementing site ownership verification. See #209.,"I don't want to use dnspython because the library is really big.
Unless we do more complex query, I think by checking
`unique_code in response` is good enough. 

This commit includes a unit test to the new ownership module.

**update**: also, dig is supported on windows so we are fine with cross-platform issue.
",yeukhon,943001,2013-08-13T01:31:27Z,CONTRIBUTOR,True,267,31,12,Minion Backend,Python,09ca4d05d6e74f35f5cdf915487d0a80f55ca6c1,"Started implementing site ownership verification. See #209.

I don't want to use dnspython because the library is really big.
Unless we do more complex query, I think by checking
``unique_code in response`` is good enough.

This commit includes a unit test to the new ownership module."
139,https://api.github.com/repos/mozilla/minion-backend/pulls/210,210,[in-progress] Started implementing site ownership verification. See #209.,"I don't want to use dnspython because the library is really big.
Unless we do more complex query, I think by checking
`unique_code in response` is good enough. 

This commit includes a unit test to the new ownership module.

**update**: also, dig is supported on windows so we are fine with cross-platform issue.
",yeukhon,943001,2013-08-13T01:31:27Z,CONTRIBUTOR,True,267,31,12,Minion Backend,Python,91668b9b3459ab8f92b88d2931e6e84a30d8d30d,Add ownership check before we run the plugin. See #209 an see #212.
140,https://api.github.com/repos/mozilla/minion-backend/pulls/210,210,[in-progress] Started implementing site ownership verification. See #209.,"I don't want to use dnspython because the library is really big.
Unless we do more complex query, I think by checking
`unique_code in response` is good enough. 

This commit includes a unit test to the new ownership module.

**update**: also, dig is supported on windows so we are fine with cross-platform issue.
",yeukhon,943001,2013-08-13T01:31:27Z,CONTRIBUTOR,True,267,31,12,Minion Backend,Python,dd80818b8a04ff9a2ae4c0088fcc7e21cb3c89e6,Add the code generation when site is checked to have site ownership verification.
141,https://api.github.com/repos/mozilla/minion-backend/pulls/210,210,[in-progress] Started implementing site ownership verification. See #209.,"I don't want to use dnspython because the library is really big.
Unless we do more complex query, I think by checking
`unique_code in response` is good enough. 

This commit includes a unit test to the new ownership module.

**update**: also, dig is supported on windows so we are fine with cross-platform issue.
",yeukhon,943001,2013-08-13T01:31:27Z,CONTRIBUTOR,True,267,31,12,Minion Backend,Python,60b90419e1d8bc1890330c8c4bcf7ad05f4306a2,Fixed #213. GET /sites?url=<site_url> now includes groups in the output.
142,https://api.github.com/repos/mozilla/minion-backend/pulls/208,208,Fixed #207. Load plugins into registry via discovery.,,yeukhon,943001,2013-08-12T21:28:22Z,CONTRIBUTOR,True,29,52,5,Minion Backend,Python,48f371a113b82dda52aaa53fd19df261fdd54c66,Fixed #207. Load plugins into registry via discovery.
143,https://api.github.com/repos/mozilla/minion-backend/pulls/205,205,"Fixed #204. When building sdist, we must include static files.","We are including yaml, json and Jinja2 files because these are
usually the most popular data/template file extensions.
",yeukhon,943001,2013-08-09T19:08:12Z,CONTRIBUTOR,True,1,0,1,Minion Backend,Python,83cf33e316ee1a53c254c0f1dc0a8fb0c07224be,"Fixed #204. When building sdist, we must include static files.

We are including yaml, json and Jinja2 files because these are
usually the most popular data/template file extensions."
144,https://api.github.com/repos/mozilla/minion-backend/pulls/203,203,Fixed #202. Test the name of the built-in plugins instead of counting.,,yeukhon,943001,2013-08-08T19:11:17Z,CONTRIBUTOR,True,11,22,3,Minion Backend,Python,42f4aad461d202c449c5bbbd37e023a251ba4460,Fixed #202. Test the name of the built-in plugins instead of counting.
145,https://api.github.com/repos/mozilla/minion-backend/pulls/200,200,Fixed #198. 'notify_when' does not need to be present.,,yeukhon,943001,2013-08-08T18:03:15Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,a76ab4f37d55aa1107579d6ac18912e5d70a7cf5,Fixed #198. 'notify_when' does not need to be present.
146,https://api.github.com/repos/mozilla/minion-backend/pulls/199,199,Fixed #198. 'notify_when' does not need to be present.,,yeukhon,943001,2013-08-08T16:44:41Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,a76ab4f37d55aa1107579d6ac18912e5d70a7cf5,Fixed #198. 'notify_when' does not need to be present.
147,https://api.github.com/repos/mozilla/minion-backend/pulls/197,197,Fixed #195. Refactored into send_email.,,yeukhon,943001,2013-08-08T16:29:01Z,CONTRIBUTOR,True,39,21,2,Minion Backend,Python,563a46242bcb84f98e7aa636a11c8e50c8bc247d,Fixed #195. Refactored into send_email.
148,https://api.github.com/repos/mozilla/minion-backend/pulls/196,196,Fixed #195. Use email module and sanitize email data.,,yeukhon,943001,2013-08-08T14:55:39Z,CONTRIBUTOR,True,45,20,5,Minion Backend,Python,59e9353000e3d5c4f9aa196af93ab72fc4162073,Fixed #195. Use email module and sanitize email data.
149,https://api.github.com/repos/mozilla/minion-backend/pulls/194,194,Fixed #180. Give verbose description and solution when cURL encounters S...,"...SL error.
",yeukhon,943001,2013-08-07T23:27:25Z,CONTRIBUTOR,True,34,3,2,Minion Backend,Python,c00c3b495a3fb7679c182eb6d2f7724035c88522,Fixed #180. Give verbose description and solution when cURL encounters SSL error.
150,https://api.github.com/repos/mozilla/minion-backend/pulls/193,193,Fixed #141. Set a permission on GETing plan resources,,yeukhon,943001,2013-08-07T22:47:40Z,CONTRIBUTOR,True,125,83,3,Minion Backend,Python,08b5173ab3f3f9e0b01863ed221c88e4ee98ed9f,Fixed #141. Set a permission on GETing plan resources
151,https://api.github.com/repos/mozilla/minion-backend/pulls/190,190,enable administrator's name with whitespace.,"I found a small problem.

At the time create administrative user with `minion-db-init` ,
if username include whitespace,
user did not create and `minion-db-init` end silently.

so that change command usage just same as README
",netmarkjp,87943,2013-08-03T00:38:22Z,CONTRIBUTOR,True,2,2,2,Minion Backend,Python,8ad8c04a4dd6bfdd4c870a6d4df36a1e0dafacd6,enable administrator's name with whitespace.
152,https://api.github.com/repos/mozilla/minion-backend/pulls/190,190,enable administrator's name with whitespace.,"I found a small problem.

At the time create administrative user with `minion-db-init` ,
if username include whitespace,
user did not create and `minion-db-init` end silently.

so that change command usage just same as README
",netmarkjp,87943,2013-08-03T00:38:22Z,CONTRIBUTOR,True,2,2,2,Minion Backend,Python,c34f7ffa9b30d47664ad45cb822cbb49b91c2053,"change argument quotation "" to ' when using scripts/minion-create-user"
153,https://api.github.com/repos/mozilla/minion-backend/pulls/189,189,Add notification support for user who wish to receive on invite action,"This actually rewrote the entire email function. We are using Jinja2, but we still need to do sanitiation (we have to and we don't have that at the moment).
",yeukhon,943001,2013-08-02T13:52:19Z,CONTRIBUTOR,True,93,49,5,Minion Backend,Python,e9b7be87e45cd287e1ba425bd53941e12a1a2bff,Fixed #188. utils have an email function that abstracts the smtp implementation.
154,https://api.github.com/repos/mozilla/minion-backend/pulls/189,189,Add notification support for user who wish to receive on invite action,"This actually rewrote the entire email function. We are using Jinja2, but we still need to do sanitiation (we have to and we don't have that at the moment).
",yeukhon,943001,2013-08-02T13:52:19Z,CONTRIBUTOR,True,93,49,5,Minion Backend,Python,298e4c44de9fb2216f6d7f120a977c33f7f60bf7,Fixed #187. On accpetance / rejection we can optionally send notification to sender.
155,https://api.github.com/repos/mozilla/minion-backend/pulls/186,186,Fixed #185. Added security sample sites to db-init script.,"We can provide options to users to import test sites.
",yeukhon,943001,2013-07-30T17:16:41Z,CONTRIBUTOR,True,29,8,2,Minion Backend,Python,c412d0065310b8c09c6ea23748b3601a6074ea64,"Fixed #185. Added security sample sites to db-init script.

We can provide options to users to import test sites."
156,https://api.github.com/repos/mozilla/minion-backend/pulls/186,186,Fixed #185. Added security sample sites to db-init script.,"We can provide options to users to import test sites.
",yeukhon,943001,2013-07-30T17:16:41Z,CONTRIBUTOR,True,29,8,2,Minion Backend,Python,3487abe306d24d0197e14972983b02da5d89b35e,Updated README explaining import site option is added.
157,https://api.github.com/repos/mozilla/minion-backend/pulls/183,183,Fixed #182. Kill and stop all queue workers and server workers as group.,,yeukhon,943001,2013-07-27T22:01:07Z,CONTRIBUTOR,True,8,0,4,Minion Backend,Python,77e10d9217a20b79913d07e4b440a72423f09c0e,Fixed #182. Kill and stop all queue workers and server workers as group.
158,https://api.github.com/repos/mozilla/minion-backend/pulls/178,178,Small refactoring on invite,,yeukhon,943001,2013-07-22T23:25:02Z,CONTRIBUTOR,True,27,29,2,Minion Backend,Python,db589a00c9239990274e7fdc0d6c81a89bb323ff,"Moved update-/remove-group-association to users.

They can be used in multiple places, hence the refactoring."
159,https://api.github.com/repos/mozilla/minion-backend/pulls/178,178,Small refactoring on invite,,yeukhon,943001,2013-07-22T23:25:02Z,CONTRIBUTOR,True,27,29,2,Minion Backend,Python,ba53f7335f21e3a30fad522d1412162cb4b8b922,"We don't need to update sites when we delete user in invite.

User doesn't seem to be part of any site configuration, so the extra
call can be removed. This code was added since #133 was resolved."
160,https://api.github.com/repos/mozilla/minion-backend/pulls/177,177,Fixed #175 and fixed #176; remove user from group and remove user if user declined to invite,,yeukhon,943001,2013-07-22T22:50:06Z,CONTRIBUTOR,True,40,8,3,Minion Backend,Python,166a3b22eeee5411619cb4f7d0dfb09e7535b731,Fixed #175; remove user association with groups after declining invite.
161,https://api.github.com/repos/mozilla/minion-backend/pulls/177,177,Fixed #175 and fixed #176; remove user from group and remove user if user declined to invite,,yeukhon,943001,2013-07-22T22:50:06Z,CONTRIBUTOR,True,40,8,3,Minion Backend,Python,34d5978e36927d39d2815f30ff248b8ae3a897c4,Use remove_group_association(..) in the DELETE /invite/<invite_id>
162,https://api.github.com/repos/mozilla/minion-backend/pulls/177,177,Fixed #175 and fixed #176; remove user from group and remove user if user declined to invite,,yeukhon,943001,2013-07-22T22:50:06Z,CONTRIBUTOR,True,40,8,3,Minion Backend,Python,1dd2528c4cb66b5e470514d14fc05cfc7306a7f9,Fixed #176. Delete user if user declined to the invitation.
163,https://api.github.com/repos/mozilla/minion-backend/pulls/174,174,"Fixed #170. When a user accept an invite, group associations removed.",,yeukhon,943001,2013-07-22T21:48:11Z,CONTRIBUTOR,True,39,11,2,Minion Backend,Python,0fd23896d747b227dad31ded34b08dd56016c19a,"Fixed #170. When a user accept an invite, group associations removed."
164,https://api.github.com/repos/mozilla/minion-backend/pulls/173,173,Fixed #171 and fixed #172,,yeukhon,943001,2013-07-22T18:41:07Z,CONTRIBUTOR,True,4,2,2,Minion Backend,Python,9b807838ccbc5a6e90926c06ea4be25b14b2bb86,Fixed #171. Declined invite will be mark as ``declined`` in db.
165,https://api.github.com/repos/mozilla/minion-backend/pulls/173,173,Fixed #171 and fixed #172,,yeukhon,943001,2013-07-22T18:41:07Z,CONTRIBUTOR,True,4,2,2,Minion Backend,Python,c9ec8c5e4f13367dc05ba461f2902d8a08bb10a2,"Fixed #172, pending should be the status post creating invite."
166,https://api.github.com/repos/mozilla/minion-backend/pulls/168,168,Fixed #167. Use tests_require instead of tests_requires in setup.py,,yeukhon,943001,2013-07-22T01:30:20Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,980f8445ae4b6ec079d910e3278942edaea40f16,Fixed #167. Use tests_require instead of tests_requires in setup.py
167,https://api.github.com/repos/mozilla/minion-backend/pulls/166,166,Issue#165,,yeukhon,943001,2013-07-18T19:52:56Z,CONTRIBUTOR,True,59,4,3,Minion Backend,Python,58fabec45095185d687e4be5d83f4dd156d09e08,"Fixed #163. Extended AbstractPlugin with ``get_site_info`` method.

This method was originally implemented in minion-zap-plugin. But we have
found this method is useful in many plugins and thus we have refactored
this method out of the zap plugin and is now part of the base class,
which is the base class that ExternalProcessPlugin and BlockingPlugin
are based on.

In additional to the original implementation, we now allow
developer to supply ``std_port`` dictionary, if the developer
needs to determine more ports. Note using ``urlparse`` can only
read standard url strings. We currently only help determine
the port by http and https as either 80 or 443, respectively.
Some sites still use ``8080`` as the port for http and some
chooses different port for https."
168,https://api.github.com/repos/mozilla/minion-backend/pulls/166,166,Issue#165,,yeukhon,943001,2013-07-18T19:52:56Z,CONTRIBUTOR,True,59,4,3,Minion Backend,Python,0d041d8a6716bd9c6e742e5de6ddf8257c8c4ee5,Fixed #165. Make csp report a list before passing to self.report_issuess.
169,https://api.github.com/repos/mozilla/minion-backend/pulls/164,164,Fixed #163. Extended AbstractPlugin with ``get_site_info`` method.,"This method was originally implemented in minion-zap-plugin. But we have
found this method is useful in many plugins and thus we have refactored
this method out of the zap plugin and is now part of the base class,
which is the base class that ExternalProcessPlugin and BlockingPlugin
are based on.

In additional to the original implementation, we now allow
developer to supply `std_port` dictionary, if the developer
needs to determine more ports. Note using `urlparse` can only
read standard url strings. We currently only help determine
the port by http and https as either 80 or 443, respectively.
Some sites still use `8080` as the port for http and some
chooses different port for https.
",yeukhon,943001,2013-07-18T16:19:40Z,CONTRIBUTOR,True,34,1,1,Minion Backend,Python,58fabec45095185d687e4be5d83f4dd156d09e08,"Fixed #163. Extended AbstractPlugin with ``get_site_info`` method.

This method was originally implemented in minion-zap-plugin. But we have
found this method is useful in many plugins and thus we have refactored
this method out of the zap plugin and is now part of the base class,
which is the base class that ExternalProcessPlugin and BlockingPlugin
are based on.

In additional to the original implementation, we now allow
developer to supply ``std_port`` dictionary, if the developer
needs to determine more ports. Note using ``urlparse`` can only
read standard url strings. We currently only help determine
the port by http and https as either 80 or 443, respectively.
Some sites still use ``8080`` as the port for http and some
chooses different port for https."
170,https://api.github.com/repos/mozilla/minion-backend/pulls/161,161,Show the usage of minion-db-init in README.md; fixed #160.,,yeukhon,943001,2013-07-10T18:29:45Z,CONTRIBUTOR,True,16,1,1,Minion Backend,Python,3758b70a5f1372aed86fbe0f39b0fe3002425969,Show the usage of minion-db-init in README.md; fixed #160.
171,https://api.github.com/repos/mozilla/minion-backend/pulls/159,159,Fixed 158. Update minion-create-plan and remove minion-start-scan.,,yeukhon,943001,2013-07-10T17:56:20Z,CONTRIBUTOR,True,17,91,3,Minion Backend,Python,0bb416a68ad787a7d27974a2b2506d7f33a34ef5,Fixed 158. Update minion-create-plan and remove minion-start-scan.
172,https://api.github.com/repos/mozilla/minion-backend/pulls/157,157,Fixed invite test failure and added a test for #155.,,yeukhon,943001,2013-07-10T16:42:49Z,CONTRIBUTOR,True,36,3,2,Minion Backend,Python,8d20645a625277d439c745fbb7cbb2a6d1202117,Fixed invite test failure and added a test for #155.
173,https://api.github.com/repos/mozilla/minion-backend/pulls/156,156,Fixed #155. Update invited user's primary user to match with his/her Persona login.,,yeukhon,943001,2013-07-10T00:25:02Z,CONTRIBUTOR,True,4,1,1,Minion Backend,Python,44560ddbd3fd421e813afd64a1aa504030b0e008,Fixed #155. Update invited user's primary user to match with his/her Persona login.
174,https://api.github.com/repos/mozilla/minion-backend/pulls/154,154,Fixed #153. Update minion-db-init and minion-create-user to take user real name.,"I merged in the other commit in order to avoid merge conflict later. Just a side note.
",yeukhon,943001,2013-07-09T18:44:09Z,CONTRIBUTOR,True,25,13,4,Minion Backend,Python,035add0788052a4eb6bfbea156dfa6d7cb70ccec,"Fixed #149, fixed #150 and fixed #151. Updated minion-scan script and README."
175,https://api.github.com/repos/mozilla/minion-backend/pulls/154,154,Fixed #153. Update minion-db-init and minion-create-user to take user real name.,"I merged in the other commit in order to avoid merge conflict later. Just a side note.
",yeukhon,943001,2013-07-09T18:44:09Z,CONTRIBUTOR,True,25,13,4,Minion Backend,Python,0e05b133cd31a186f5fb8a918997ca713337f71e,"Fixed #153. Update minion-db-init and minion-create-user to take user real name.

This is built on top of issue #149 and #150."
176,https://api.github.com/repos/mozilla/minion-backend/pulls/154,154,Fixed #153. Update minion-db-init and minion-create-user to take user real name.,"I merged in the other commit in order to avoid merge conflict later. Just a side note.
",yeukhon,943001,2013-07-09T18:44:09Z,CONTRIBUTOR,True,25,13,4,Minion Backend,Python,48f5efe743ed49b0d1597fc389dae3c3ea7afc1e,"Place quote around name to group full name together.

If the name supplied has a space (say full name), then the sys.argv will treat the word after space as the role parameter."
177,https://api.github.com/repos/mozilla/minion-backend/pulls/152,152,"Fixed #149, fixed #150 and fixed #151. Updated minion-scan script and README","Mark pointed out we have a bug in minion-scan. We have stopped testing README instruction since we started writing tests. 

The fix led to two additional tickets #150 and #151.
",yeukhon,943001,2013-07-09T18:31:21Z,CONTRIBUTOR,True,20,9,2,Minion Backend,Python,035add0788052a4eb6bfbea156dfa6d7cb70ccec,"Fixed #149, fixed #150 and fixed #151. Updated minion-scan script and README."
178,https://api.github.com/repos/mozilla/minion-backend/pulls/148,148,Add user authorization checks to /scans*,,yeukhon,943001,2013-07-09T15:28:01Z,CONTRIBUTOR,True,114,44,3,Minion Backend,Python,e23024dc94841b5e9a4e8ef81022826a27e414f4,"Fixed #140. Fixed #142. See #146. Added basic permission check to scans.

In order to allow the backend to verify permission, a user query string is appended. This query string is '?email=<email-address>'. The check is performed by finding {'user': email, 'site': url} in the groups collections. Currently, issue #147 is reported but given our model, #147 is not a security issue. Therefore, by knowing a user (his/her Persona account) belongs to at least one group that contains the target url is sufficent enough to say the user has permission to view the scan or do work on the scan."
179,https://api.github.com/repos/mozilla/minion-backend/pulls/148,148,Add user authorization checks to /scans*,,yeukhon,943001,2013-07-09T15:28:01Z,CONTRIBUTOR,True,114,44,3,Minion Backend,Python,257222db224c7c195a91fbebdbcc78208d29e3a0,"Allow admins to see all scan results; improved permission in scans to decorator.

Since the utlimate admin has permission to look at the database record anyway, admins normally should have power to look at all results. This privacy changes might be revoked later if we introduce tigher auth control."
180,https://api.github.com/repos/mozilla/minion-backend/pulls/148,148,Add user authorization checks to /scans*,,yeukhon,943001,2013-07-09T15:28:01Z,CONTRIBUTOR,True,114,44,3,Minion Backend,Python,0fde5621f156d8e7e968c8b648f28e2891d19bf6,"Make permission check optional for /scans* apis.

Once scans are created, we don't need to check permission anymore."
181,https://api.github.com/repos/mozilla/minion-backend/pulls/148,148,Add user authorization checks to /scans*,,yeukhon,943001,2013-07-09T15:28:01Z,CONTRIBUTOR,True,114,44,3,Minion Backend,Python,07c612f2202dab5364a66c12526c38ffb05be71e,Add permission check to POST /scans.
182,https://api.github.com/repos/mozilla/minion-backend/pulls/145,145,Disable nmap and zap import in test_sites to fix #144,"...ts.

Since 8091f3c7 we can't import plugins that are invalid (namespace not exist for example).
",yeukhon,943001,2013-07-04T01:14:48Z,CONTRIBUTOR,True,9,5,1,Minion Backend,Python,fc6c2c251ebcfcb630bbac295169200bd4c00737,"Close #144 for now. Allow tests to pass by not importing zap/nmap in tests.

Since 8091f3c7 we can't import plugins that are invalid (namespace not exist for example)."
183,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,17a64314ad795434a8b2fa984ecd88778f4a1f8b,"Merge pull request #122 from yeukhon/issue87

Split up api.py into multiple views files. Fixed #87."
184,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,ed2eb7f8c03ee22b4e1816e242b6866e2600e713,"Merge pull request #125 from yeukhon/issue123

Fixed #123 (don't delete user when delete invite). Fixed #124 update user status on acceptance"
185,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,62400e96b965109defc735c25afdf2a050fdda5e,Fixed #130. Include views into the namespace package.
186,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,e427f51f038c41cd3729ff406e05d79227c726ae,"Fixed #132. Guard POST /groups with validation.

We require 'name' to be present and it cannot be an empty string. We also ensure that if users and sites are provided, they must exist."
187,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,c517a38952275bf15216a1f6835794d24baef29f,Merge branch 'issue128' into issue132
188,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,88c9a948e1f5e69eecea6070976ebc395a76b04d,"In addition to #132, we fixed #136 to send update to groups in minion-db-init."
189,https://api.github.com/repos/mozilla/minion-backend/pulls/139,139,Issue133 Remove user's associations when deleting invites,,yeukhon,943001,2013-07-03T21:16:27Z,CONTRIBUTOR,True,129,28,12,Minion Backend,Python,370546cb8666471902545a83dda6d038c28541fb,Fixed #133. Remove user's associations in groups and sites when deleting invites.
190,https://api.github.com/repos/mozilla/minion-backend/pulls/138,138,Issue135 include 'created' field in GET /plans,,yeukhon,943001,2013-07-03T21:16:03Z,CONTRIBUTOR,True,13,6,5,Minion Backend,Python,62400e96b965109defc735c25afdf2a050fdda5e,Fixed #130. Include views into the namespace package.
191,https://api.github.com/repos/mozilla/minion-backend/pulls/138,138,Issue135 include 'created' field in GET /plans,,yeukhon,943001,2013-07-03T21:16:03Z,CONTRIBUTOR,True,13,6,5,Minion Backend,Python,dbe9b9c645a8ce5d1a5f7e4b4c7f6f7a66e1693e,Fixed #135. GET /plans will also include 'created' as part of response.
192,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,17a64314ad795434a8b2fa984ecd88778f4a1f8b,"Merge pull request #122 from yeukhon/issue87

Split up api.py into multiple views files. Fixed #87."
193,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,ed2eb7f8c03ee22b4e1816e242b6866e2600e713,"Merge pull request #125 from yeukhon/issue123

Fixed #123 (don't delete user when delete invite). Fixed #124 update user status on acceptance"
194,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,62400e96b965109defc735c25afdf2a050fdda5e,Fixed #130. Include views into the namespace package.
195,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,e427f51f038c41cd3729ff406e05d79227c726ae,"Fixed #132. Guard POST /groups with validation.

We require 'name' to be present and it cannot be an empty string. We also ensure that if users and sites are provided, they must exist."
196,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,c517a38952275bf15216a1f6835794d24baef29f,Merge branch 'issue128' into issue132
197,https://api.github.com/repos/mozilla/minion-backend/pulls/137,137,Issue132 Guard POST /groups with validation,,yeukhon,943001,2013-07-03T19:47:22Z,CONTRIBUTOR,True,83,16,8,Minion Backend,Python,88c9a948e1f5e69eecea6070976ebc395a76b04d,"In addition to #132, we fixed #136 to send update to groups in minion-db-init."
198,https://api.github.com/repos/mozilla/minion-backend/pulls/131,131,Fixed #130 include minion.backend.views in the packages,,yeukhon,943001,2013-07-02T23:50:17Z,CONTRIBUTOR,True,1,2,2,Minion Backend,Python,62400e96b965109defc735c25afdf2a050fdda5e,Fixed #130. Include views into the namespace package.
199,https://api.github.com/repos/mozilla/minion-backend/pulls/129,129,Issue128 add /login and last login,,yeukhon,943001,2013-07-02T23:01:47Z,CONTRIBUTOR,True,60,4,3,Minion Backend,Python,8d29090264f0851d4a6bcd717d7f58b46ebe7c81,Added /login to users.py; see #128.
200,https://api.github.com/repos/mozilla/minion-backend/pulls/129,129,Issue128 add /login and last login,,yeukhon,943001,2013-07-02T23:01:47Z,CONTRIBUTOR,True,60,4,3,Minion Backend,Python,84ad7ac8f58db005a6564740f84ffe20aef74349,Fixed #128. Implemented last login and /login in users.py
201,https://api.github.com/repos/mozilla/minion-backend/pulls/125,125,Fixed #123 (don't delete user when delete invite). Fixed #124 update user status on acceptance,"When user accepts an invitation, we will update user's status from invite to active.
When we choose to delete an invitation, if the invite is already used, we should not delete the user unless the user is still mark as invite.
",yeukhon,943001,2013-07-02T11:59:54Z,CONTRIBUTOR,True,1450,1289,17,Minion Backend,Python,0795f5b4619612376f3965eb2bc2bff40a9eb3f5,"Split up api.py into multiple views files. Fixed #87.

In order for Flask to recongize all the new routes, we must import the modules at app.py level. I have commented out loading TESTING_PLUGIN for now to avoid circular import."
202,https://api.github.com/repos/mozilla/minion-backend/pulls/125,125,Fixed #123 (don't delete user when delete invite). Fixed #124 update user status on acceptance,"When user accepts an invitation, we will update user's status from invite to active.
When we choose to delete an invitation, if the invite is already used, we should not delete the user unless the user is still mark as invite.
",yeukhon,943001,2013-07-02T11:59:54Z,CONTRIBUTOR,True,1450,1289,17,Minion Backend,Python,6a7fff7c2badf629da19cdc5647cdc23cd6f86d2,Fixed #123 (don't delete user when delete invite). Fixed #124.
203,https://api.github.com/repos/mozilla/minion-backend/pulls/122,122,Split up api.py into multiple views files. Fixed #87.,"In order for Flask to recongize all the new routes, we must import the modules at app.py level. I have commented out loading TESTING_PLUGIN for now to avoid circular import.
",yeukhon,943001,2013-07-02T11:32:34Z,CONTRIBUTOR,True,1405,1288,16,Minion Backend,Python,0795f5b4619612376f3965eb2bc2bff40a9eb3f5,"Split up api.py into multiple views files. Fixed #87.

In order for Flask to recongize all the new routes, we must import the modules at app.py level. I have commented out loading TESTING_PLUGIN for now to avoid circular import."
204,https://api.github.com/repos/mozilla/minion-backend/pulls/116,116,Pull request for #114 to validate invite id and resend,,yeukhon,943001,2013-06-27T19:07:01Z,CONTRIBUTOR,True,160,48,4,Minion Backend,Python,88fc4043e87bbb40dbe3aaa35488a98681c7e1c0,Add status and max_time_allowed for invites collection.
205,https://api.github.com/repos/mozilla/minion-backend/pulls/116,116,Pull request for #114 to validate invite id and resend,,yeukhon,943001,2013-06-27T19:07:01Z,CONTRIBUTOR,True,160,48,4,Minion Backend,Python,64902f1f574f95a39c9e32b645a8794ec9ae1954,Validate and invalidate invite should work. See #114.
206,https://api.github.com/repos/mozilla/minion-backend/pulls/116,116,Pull request for #114 to validate invite id and resend,,yeukhon,943001,2013-06-27T19:07:01Z,CONTRIBUTOR,True,160,48,4,Minion Backend,Python,3140371d860260b0eb8010ac47723b602709933d,Fixed resent id not changed. See #114.
207,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,f7b084a2565c2b51e906471841f9ba9c3cba746c,"Fixed #109. Users collection has a status field.

We now have an option to either mark a user active via direct signup, or
mark a user as invited via invitation. Bad users can be marked as
'banned'. When a user is marked as invited, the user is given a url
(front-end) to login. Upon the first login, the status will change to
'active'. Ticket #111 will check user's status and prevent banned users
(and non-active) users from accessing Minion."
208,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,95ee3e4ad983f1eb96eb21b461d9f56d6e2773a9,Added SMTP call so POSTing to /users can send invitation. See #110.
209,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,fbd23701636339c85b28024a9e760e00fcc5c4fd,Update README.md to include postfix as dependency.
210,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,0f459eb1ad2b458a5e5cb1603c415efceed13d27,Update setup.py to include minion-db-init.
211,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,45ff29d407cd72d99d8564e19c5f7eaa50d449cc,Removed test_api.py. I think it got accidentally added back after splitting up the tests.
212,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,13601446d5893b6db0dea2c58334c320ec97d9f6,"Fixed #109. Users collection has a status field.

We now have an option to either mark a user active via direct signup, or
mark a user as invited via invitation. Bad users can be marked as
'banned'. When a user is marked as invited, the user is given a url
(front-end) to login. Upon the first login, the status will change to
'active'. Ticket #111 will check user's status and prevent banned users
(and non-active) users from accessing Minion."
213,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,a82a2bba896587ba9e03a7882650240fc13f2bd2,Added SMTP call so POSTing to /users can send invitation. See #110.
214,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,b8e008492bb04bcfa18f806b5ae194e49394c76e,Update README.md to include postfix as dependency.
215,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,46a48b5fefdfb36446e6ece1ac835d585b089b07,Update setup.py to include minion-db-init.
216,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,a7d6a2c048ca54f90a79d10423b1a41c33502921,Added POST /invites. See #114.
217,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,aa45c80af5600c51a55e3eb1f80d24a3b2a86d6a,Added GET /invites with basic filters. See #114.
218,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,27cdd724441c2ffa2a2ecb95e95aa218e24a85a8,"Merge branch 'issue109110' of https://github.com/yeukhon/minion-backend into issue109110

Conflicts:
	minion/backend/api.py"
219,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,8a4e5f5da6af77dde4100d7e57371df6b3bc92e6,Added GET /invites/<id>. See #114
220,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,31a0644844131d8c97bfc34f062a7e7881ba11e6,Add POST /invites/<id>/control. See #114
221,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,338f2815aa94e38c87342bad5caddd610f700f8c,Remove send-email from /users. We moved that to /invites. See #114.
222,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,e098f8aae3bf93be7c662990dda455f89f2aadd4,Added DELETE /invites/<id>. See #114.
223,https://api.github.com/repos/mozilla/minion-backend/pulls/113,113,"Add status to user field, add simple SMTP","We should look into using some kind of template. This is a proof of concept, and I hope it isn't too terrible.
",yeukhon,943001,2013-06-25T04:17:37Z,CONTRIBUTOR,True,454,1021,8,Minion Backend,Python,b6f7210c9014c5fbb4ad34055c6541dce433233d,Fixed delete /invites/<id> doesn't delete user.
224,https://api.github.com/repos/mozilla/minion-backend/pulls/108,108,Fixes #106 POST /scans should include the name of the user creating the scan,,yeukhon,943001,2013-06-24T17:52:33Z,CONTRIBUTOR,True,1234,989,11,Minion Backend,Python,d4f9f14b74172965d5e018f17a89293137b583da,"Fixed #101. Filled in _check_plan_workflow(..) logic.

The logic follows the description in #101. Added a few tests to
test_api.py expecting failure."
225,https://api.github.com/repos/mozilla/minion-backend/pulls/108,108,Fixes #106 POST /scans should include the name of the user creating the scan,,yeukhon,943001,2013-06-24T17:52:33Z,CONTRIBUTOR,True,1234,989,11,Minion Backend,Python,8091f3c7ce61baa257ce69f66a1f5f76e5f83a87,Fixed #103. Refactored test_api.py into multiple files.
226,https://api.github.com/repos/mozilla/minion-backend/pulls/108,108,Fixes #106 POST /scans should include the name of the user creating the scan,,yeukhon,943001,2013-06-24T17:52:33Z,CONTRIBUTOR,True,1234,989,11,Minion Backend,Python,abbffa00b6d7f7f69ffe2c2e6565c79ee05aeccf,"Forgot to import make_response.

This ticket also relates to #103. By now we should be able to run all
the tests."
227,https://api.github.com/repos/mozilla/minion-backend/pulls/108,108,Fixes #106 POST /scans should include the name of the user creating the scan,,yeukhon,943001,2013-06-24T17:52:33Z,CONTRIBUTOR,True,1234,989,11,Minion Backend,Python,88537420a1992e26ca28168f9507e7154ed1530a,"Fixed #106. POSTing to scans requires user.

We want to display the user started the scan in the frontend, and we
have to add user (oriignally called owner) in the POST and have
summary_scan(..) to return 'meta' as part of the summary."
228,https://api.github.com/repos/mozilla/minion-backend/pulls/105,105,Fixed #101. Filled in _check_plan_workflow(..) logic.,"The logic follows the description in #101. Added a few tests to
test_api.py expecting failure.
",yeukhon,943001,2013-06-23T05:05:52Z,CONTRIBUTOR,True,71,15,2,Minion Backend,Python,d4f9f14b74172965d5e018f17a89293137b583da,"Fixed #101. Filled in _check_plan_workflow(..) logic.

The logic follows the description in #101. Added a few tests to
test_api.py expecting failure."
229,https://api.github.com/repos/mozilla/minion-backend/pulls/104,104,"Pull Request for #102, split test_api.py into multiple files.",,yeukhon,943001,2013-06-23T05:03:37Z,CONTRIBUTOR,True,1225,987,11,Minion Backend,Python,d4f9f14b74172965d5e018f17a89293137b583da,"Fixed #101. Filled in _check_plan_workflow(..) logic.

The logic follows the description in #101. Added a few tests to
test_api.py expecting failure."
230,https://api.github.com/repos/mozilla/minion-backend/pulls/104,104,"Pull Request for #102, split test_api.py into multiple files.",,yeukhon,943001,2013-06-23T05:03:37Z,CONTRIBUTOR,True,1225,987,11,Minion Backend,Python,8091f3c7ce61baa257ce69f66a1f5f76e5f83a87,Fixed #103. Refactored test_api.py into multiple files.
231,https://api.github.com/repos/mozilla/minion-backend/pulls/104,104,"Pull Request for #102, split test_api.py into multiple files.",,yeukhon,943001,2013-06-23T05:03:37Z,CONTRIBUTOR,True,1225,987,11,Minion Backend,Python,abbffa00b6d7f7f69ffe2c2e6565c79ee05aeccf,"Forgot to import make_response.

This ticket also relates to #103. By now we should be able to run all
the tests."
232,https://api.github.com/repos/mozilla/minion-backend/pulls/102,102,Update minion-db-init by POSTing to /plans,,yeukhon,943001,2013-06-21T20:19:07Z,CONTRIBUTOR,True,74,0,1,Minion Backend,Python,eacfce55fe10c74c78f0dda59b9f3eb88442d2ca,Fixed #96 allow initialize db with fixtures.
233,https://api.github.com/repos/mozilla/minion-backend/pulls/102,102,Update minion-db-init by POSTing to /plans,,yeukhon,943001,2013-06-21T20:19:07Z,CONTRIBUTOR,True,74,0,1,Minion Backend,Python,afe9e8415494c0b77aa8f62f627ce15a64bc6956,Fixed #96 allow initialize db with fixtures.
234,https://api.github.com/repos/mozilla/minion-backend/pulls/102,102,Update minion-db-init by POSTing to /plans,,yeukhon,943001,2013-06-21T20:19:07Z,CONTRIBUTOR,True,74,0,1,Minion Backend,Python,fc682251de7444c0af6a4335a3317d885f4ae9e6,Fixed create-plan command in db-init
235,https://api.github.com/repos/mozilla/minion-backend/pulls/102,102,Update minion-db-init by POSTing to /plans,,yeukhon,943001,2013-06-21T20:19:07Z,CONTRIBUTOR,True,74,0,1,Minion Backend,Python,62d07f6bbf3f79663f15e2a11114aa5b63061ce0,Updated minion-db-init by POSTing to /plans.
236,https://api.github.com/repos/mozilla/minion-backend/pulls/102,102,Update minion-db-init by POSTing to /plans,,yeukhon,943001,2013-06-21T20:19:07Z,CONTRIBUTOR,True,74,0,1,Minion Backend,Python,a84453e6d008df6f8f8d6af9b704795a78e95709,"Merge branch 'issue96' of https://github.com/yeukhon/minion-backend into issue96

Conflicts:
	scripts/minion-db-init"
237,https://api.github.com/repos/mozilla/minion-backend/pulls/94,94,Fixed #93. HSTSPlugin can report when Strict-Transport-Policy is not set,"....

Also corrected a minior mistake in merging.
",yeukhon,943001,2013-06-21T00:08:27Z,CONTRIBUTOR,True,4,4,2,Minion Backend,Python,6fe98cfd5835c58dfe22b4675aade2eb594f9d88,"Fixed #93. HSTSPlugin can report when Strict-Transport-Policy is not set.

Also corrected a minior mistake in merging."
238,https://api.github.com/repos/mozilla/minion-backend/pulls/92,92,Merge PR #79,"Merged PR #79
",yeukhon,943001,2013-06-20T21:34:20Z,CONTRIBUTOR,True,66,42,4,Minion Backend,Python,5abeb569bf51fe4d449828a201d27f57603d57e0,"Fixed #61. @api_guard takes content-type as argument.

If the content-type does not match with the argument, @api_guard will
abort with HTTP status code 415 media unsupported. A few backend
requests calls have to be modiifed to support this strict content-type
requirement.

Improvement to be made? We probably can subclass app = Flask(__name__)
and use method-based. For example, @app.content_type('text/plain') and
customize @app.route so that by default it checks backend key."
239,https://api.github.com/repos/mozilla/minion-backend/pulls/92,92,Merge PR #79,"Merged PR #79
",yeukhon,943001,2013-06-20T21:34:20Z,CONTRIBUTOR,True,66,42,4,Minion Backend,Python,82af498e86ba99d78af49040fb0f0c4c3143cfd4,"Removed content-type from GET calls.

As noted by stefan, GET should not have conten-type."
240,https://api.github.com/repos/mozilla/minion-backend/pulls/92,92,Merge PR #79,"Merged PR #79
",yeukhon,943001,2013-06-20T21:34:20Z,CONTRIBUTOR,True,66,42,4,Minion Backend,Python,d6cb2d5a123bb9924ab7fdccbeb16e2d0cbee5d5,"Merge branch 'issue61' of https://github.com/yeukhon/minion-backend into yeukhon-issue61

Conflicts:
	tests/functional/test_api.py"
241,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,8dfe5f92549f8d9248bb5e9823f4d5f71a77e0c4,"Working on impropving plugins by standardizing report. See #81.

Currently, we are working on making report more sensible by returning
consistent report format. This commit attempts to fix alive plugin.
Most of the discussion happen on this pad:
https://etherpad.mozilla.org/3F4KSao89V"
242,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,9280a4d8bd586ef46b9ffeaa32f1a129b1537e70,"Make XFrameOptionsPlugin returns consistent report. See #81.

This commit copies and pastes a lot of code. Next commit should attempt
refactor some common code."
243,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,0393f81b9929440a7223a6e95affb320babcf992,"Added _format_report to AbstractPlugin.See #81; Refactored alive report.

_format_report(..) can help us reduced lines needed to format a standard
report. This commit only fixed alive plugin."
244,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,25bd0735f63e51403ccd3d8ce7dfef9e4ed2f2d0,Refactored XFrameOptionsPlugin to use _format_report. See #81.
245,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,2e126f67c1f8c648a9d71ab0a936600e7229e6af,Standardized HSTSPlugin output. See #81.
246,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,ffd4f5eeef36d10f6c53d78b5aa0597e7a3ce716,Standardized XContentTypeOptionsPlugin. See #81.
247,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,4957f942478a44d8071e7705a75361911ec587e1,Standardized XXSSProtectionPlugin report output. See #81.
248,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,3a89ea68f969603b98a6257d92bc0e694c341d97,"Standardized ServerDetailsPlugin report output. See #81.

The test is currently disabled."
249,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,6c77fbb0f413542c33c9eef27166b123e3ee5a27,Standardized RobotsPlugin report output. See #81.
250,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,5c3d1d5456a51a8bf54dfc3496fd954651e6dfa4,"Fixed #81. Completed Standardizing report output for all basic plugins.

In test_api.py, we actually can see all 8 plugins emitting issues and we
have hardened the test_api.py checking the issues."
251,https://api.github.com/repos/mozilla/minion-backend/pulls/91,91,Merge PR #81 with master,"https://github.com/mozilla/minion-backend/pull/82
",yeukhon,943001,2013-06-20T21:28:38Z,CONTRIBUTOR,True,584,104,12,Minion Backend,Python,910d44fb7588f08c4f99a81c1ff2c1786178171e,Manually merged with 981e42b6b1
252,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,8dfe5f92549f8d9248bb5e9823f4d5f71a77e0c4,"Working on impropving plugins by standardizing report. See #81.

Currently, we are working on making report more sensible by returning
consistent report format. This commit attempts to fix alive plugin.
Most of the discussion happen on this pad:
https://etherpad.mozilla.org/3F4KSao89V"
253,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,9280a4d8bd586ef46b9ffeaa32f1a129b1537e70,"Make XFrameOptionsPlugin returns consistent report. See #81.

This commit copies and pastes a lot of code. Next commit should attempt
refactor some common code."
254,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,0393f81b9929440a7223a6e95affb320babcf992,"Added _format_report to AbstractPlugin.See #81; Refactored alive report.

_format_report(..) can help us reduced lines needed to format a standard
report. This commit only fixed alive plugin."
255,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,25bd0735f63e51403ccd3d8ce7dfef9e4ed2f2d0,Refactored XFrameOptionsPlugin to use _format_report. See #81.
256,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,2e126f67c1f8c648a9d71ab0a936600e7229e6af,Standardized HSTSPlugin output. See #81.
257,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,ffd4f5eeef36d10f6c53d78b5aa0597e7a3ce716,Standardized XContentTypeOptionsPlugin. See #81.
258,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,4957f942478a44d8071e7705a75361911ec587e1,Standardized XXSSProtectionPlugin report output. See #81.
259,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,3a89ea68f969603b98a6257d92bc0e694c341d97,"Standardized ServerDetailsPlugin report output. See #81.

The test is currently disabled."
260,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,6c77fbb0f413542c33c9eef27166b123e3ee5a27,Standardized RobotsPlugin report output. See #81.
261,https://api.github.com/repos/mozilla/minion-backend/pulls/82,82,"Standardizing report output (work in progress PR), see #81","See #81. This is work in progress. Commits will be rejected/modified per review.
",yeukhon,943001,2013-06-19T21:15:46Z,CONTRIBUTOR,True,572,101,12,Minion Backend,Python,5c3d1d5456a51a8bf54dfc3496fd954651e6dfa4,"Fixed #81. Completed Standardizing report output for all basic plugins.

In test_api.py, we actually can see all 8 plugins emitting issues and we
have hardened the test_api.py checking the issues."
262,https://api.github.com/repos/mozilla/minion-backend/pulls/80,80,Fixed #77. Removed travis CI badge in favor of drone.io CI badge.,"1. travis is still failing and instead of getting upset we should just remove the icon.
2. travis icon is smaller than drone's, so appearance wise when both are together they look ugly.
",yeukhon,943001,2013-06-19T16:11:41Z,CONTRIBUTOR,True,1,1,1,Minion Backend,Python,f9f76675584c54398cbb2678d139b1e37a1cee5f,Fixed #77. Removed travis CI badge in favor of drone.io CI badge.
263,https://api.github.com/repos/mozilla/minion-backend/pulls/79,79,Fixed #61. @api_guard takes content-type as argument.,"If the content-type does not match with the argument, @api_guard will
abort with HTTP status code 415 media unsupported. A few backend
requests calls have to be modiifed to support this strict content-type
requirement.

Improvement to be made? We probably can subclass app = Flask(**name**)
and use method-based. For example, @app.content_type('text/plain') and
customize @app.route so that by default it checks backend key.
",yeukhon,943001,2013-06-18T18:09:19Z,CONTRIBUTOR,True,64,38,4,Minion Backend,Python,5abeb569bf51fe4d449828a201d27f57603d57e0,"Fixed #61. @api_guard takes content-type as argument.

If the content-type does not match with the argument, @api_guard will
abort with HTTP status code 415 media unsupported. A few backend
requests calls have to be modiifed to support this strict content-type
requirement.

Improvement to be made? We probably can subclass app = Flask(__name__)
and use method-based. For example, @app.content_type('text/plain') and
customize @app.route so that by default it checks backend key."
264,https://api.github.com/repos/mozilla/minion-backend/pulls/79,79,Fixed #61. @api_guard takes content-type as argument.,"If the content-type does not match with the argument, @api_guard will
abort with HTTP status code 415 media unsupported. A few backend
requests calls have to be modiifed to support this strict content-type
requirement.

Improvement to be made? We probably can subclass app = Flask(**name**)
and use method-based. For example, @app.content_type('text/plain') and
customize @app.route so that by default it checks backend key.
",yeukhon,943001,2013-06-18T18:09:19Z,CONTRIBUTOR,True,64,38,4,Minion Backend,Python,82af498e86ba99d78af49040fb0f0c4c3143cfd4,"Removed content-type from GET calls.

As noted by stefan, GET should not have conten-type."
265,https://api.github.com/repos/mozilla/minion-backend/pulls/78,78,Add Drone badge and remove Travis,"I want to keep both, but Travis icon is smaller than drone's icon. Furthermore, I think it's okay to put travis aside for now. 
",yeukhon,943001,2013-06-18T18:08:58Z,CONTRIBUTOR,False,51,1,3,Minion Backend,Python,f6ade6788913f48cd854ef0217dd5a371ec7e320,Closes #77. Added drone CI badge to README.
266,https://api.github.com/repos/mozilla/minion-backend/pulls/78,78,Add Drone badge and remove Travis,"I want to keep both, but Travis icon is smaller than drone's icon. Furthermore, I think it's okay to put travis aside for now. 
",yeukhon,943001,2013-06-18T18:08:58Z,CONTRIBUTOR,False,51,1,3,Minion Backend,Python,f57b748afcd2f21e85ed9125eea34bbf339cf596,Removed travis badge from README in favor of drone.
267,https://api.github.com/repos/mozilla/minion-backend/pulls/76,76,Fixed #74 and fixed #75. _check_site_url fail ends with '/'.,,yeukhon,943001,2013-06-17T21:31:23Z,CONTRIBUTOR,False,3,3,2,Minion Backend,Python,edafdc2ddf99898faaccd3789965f1fa0b8f967b,Fixed #74 and fixed #75. _check_site_url fail ends with '/'.
268,https://api.github.com/repos/mozilla/minion-backend/pulls/73,73,Checking HSTS directive value in the plugin. See #3.,"We are still unable to write tests for local servers because curl has to
be know our self-signed cert.
",yeukhon,943001,2013-06-17T21:12:10Z,CONTRIBUTOR,True,37,3,2,Minion Backend,Python,f525b80b21ca87594a98823871fe3d46e8f5ae03,"Checking HSTS directive value in the plugin. See #3.

We are still unable to write tests for local servers because curl has to
be know our self-signed cert."
269,https://api.github.com/repos/mozilla/minion-backend/pulls/72,72,Closes #5. Added unittest for XFrameOptionsPlugin validator.,,yeukhon,943001,2013-06-17T21:11:34Z,CONTRIBUTOR,True,156,3,5,Minion Backend,Python,f525b80b21ca87594a98823871fe3d46e8f5ae03,"Checking HSTS directive value in the plugin. See #3.

We are still unable to write tests for local servers because curl has to
be know our self-signed cert."
270,https://api.github.com/repos/mozilla/minion-backend/pulls/72,72,Closes #5. Added unittest for XFrameOptionsPlugin validator.,,yeukhon,943001,2013-06-17T21:11:34Z,CONTRIBUTOR,True,156,3,5,Minion Backend,Python,7ced4a3a8486688ff834449c1fffe08700e5b978,Closes #5. Added unittest for XFrameOptionsPlugin validator.
271,https://api.github.com/repos/mozilla/minion-backend/pulls/71,71,Added a base test class for plugins unit tests.,,yeukhon,943001,2013-06-17T21:11:07Z,CONTRIBUTOR,True,30,0,2,Minion Backend,Python,8fdde7ca5826e330581b3d2d92337b736d7912aa,Added a base test class for plugins unit tests.
272,https://api.github.com/repos/mozilla/minion-backend/pulls/70,70,Fixed #2 completed functional tests for apis.,,yeukhon,943001,2013-06-17T19:24:33Z,CONTRIBUTOR,True,38,21,2,Minion Backend,Python,eb948bb1af3da923c34aba8ae7f53fc8b977ebcd,Fixed #2 completed functional tests for apis.
273,https://api.github.com/repos/mozilla/minion-backend/pulls/65,65,"Fixed #64. When debug=True, TEST_PLUGINS is not register.",,yeukhon,943001,2013-06-17T00:35:41Z,CONTRIBUTOR,True,2,2,1,Minion Backend,Python,ce10c7dfb8f1d0e2a3d1867724b66d67737f8542,"Fixed #64. When debug=True, TEST_PLUGINS is not register."
274,https://api.github.com/repos/mozilla/minion-backend/pulls/63,63,Allow test_apis.py to kill used port. See #62.,"test_apis.py cannot start its demo server so when plugin workers
tried to access the target url, the plugin worker will see
""couldn't reach site"" and aborts the plugin (we probably need to fix
that), This commit only fix test_apis.py `_kill_ports` because
when the same fix is applied to tests/functional/plugins/base.py all
tests fail to pass. We will leave this issue aside for a while.
",yeukhon,943001,2013-06-14T21:59:20Z,CONTRIBUTOR,True,3,3,1,Minion Backend,Python,5cd5b3f574a52d4737a39e022196f38c246d3e8f,"Allow test_apis.py to kill used port. See #62.

test_apis.py cannot start its demo server so when plugin workers
tried to access the target url, the plugin worker will see
""couldn't reach site"" and aborts the plugin (we probably need to fix
that), This commit only fix test_apis.py ``_kill_ports`` because
when the same fix is applied to tests/functional/plugins/base.py all
tests fail to pass. We will leave this issue aside for a while."
275,https://api.github.com/repos/mozilla/minion-backend/pulls/60,60,Fixed #14 all apis are now guarded by @api_guard decorator.,"The guard is optional if 'key' is False or not found in the
configuration file. Otherwise, Minion backend now requires all incoming
requests to all backend must have X-Minion-Backend-Key header with a
correct backend secret key.
",yeukhon,943001,2013-06-14T18:37:33Z,CONTRIBUTOR,True,86,22,3,Minion Backend,Python,1b93cb6bfec865156f3c7aa719ee045df87d596f,Fixed _call(..) to allow user specify to jsonify or sent plaintext.
276,https://api.github.com/repos/mozilla/minion-backend/pulls/60,60,Fixed #14 all apis are now guarded by @api_guard decorator.,"The guard is optional if 'key' is False or not found in the
configuration file. Otherwise, Minion backend now requires all incoming
requests to all backend must have X-Minion-Backend-Key header with a
correct backend secret key.
",yeukhon,943001,2013-06-14T18:37:33Z,CONTRIBUTOR,True,86,22,3,Minion Backend,Python,22e9fd0f766b80b85194e66a89da00dd61dd4933,"Fixed #14 all apis are now guarded by @api_guard decorator.

The guard is optional if 'key' is False or not found in the
configuration file. Otherwise, Minion backend now requires all incoming
requests to all backend must have X-Minion-Backend-Key header with a
correct backend secret key."
277,https://api.github.com/repos/mozilla/minion-backend/pulls/60,60,Fixed #14 all apis are now guarded by @api_guard decorator.,"The guard is optional if 'key' is False or not found in the
configuration file. Otherwise, Minion backend now requires all incoming
requests to all backend must have X-Minion-Backend-Key header with a
correct backend secret key.
",yeukhon,943001,2013-06-14T18:37:33Z,CONTRIBUTOR,True,86,22,3,Minion Backend,Python,bb5c3426da2f31ea138de08535df411f6beba055,"Removed default secret key.

We should prevent secret key being written into version control system.
By having a secret key version controlled in utils.py will encourage
users to make that mistake.

401 tests are now commented out. We need to inject the backend-key or restart
the server during the tests."
278,https://api.github.com/repos/mozilla/minion-backend/pulls/59,59,Fixed _call(..) to allow user specify to jsonify or sent plaintext. ,,yeukhon,943001,2013-06-14T17:13:31Z,CONTRIBUTOR,True,15,9,1,Minion Backend,Python,d1ff09e642b8c00bad4850e3f89ba79b11acc125,Fixed _call(..) to allow user specify to jsonify or sent plaintext.
279,https://api.github.com/repos/mozilla/minion-backend/pulls/58,58,"Fixed #50, #51, #52, #56. Added sites to groups collections.","Problem:

Most of these issues is caused by sites are not being added groups when
a site is being created. Some part of the documentation was not clear
either. I also overlooked at some of the issues.

Solution:

This commit appends the site url to each group
specified by `groups`. Furthermore, the `_call(..)` function in the
function test has been modified to remove 'application/json' from GET
request to prevent Flask from complaining.

Problems remain to be solved:
1. When a group is created, owner should be included automatically. This
   is trivial fix; require user to be added as part of the request, and
   add user to the default list instead of an `[]` list.
2. Review documentations.
3. We still want a few more individual functional tests for
   /report/issues.
4. We still have to fix #55.
",yeukhon,943001,2013-06-14T04:04:41Z,CONTRIBUTOR,True,52,19,2,Minion Backend,Python,b14beffcc01eb84a729d182fb0db16a1d4ee85ca,"Fixed #50, #51, #52, #56. Added sites to groups collections.

Problem:

Most of these issues is caused by sites are not being added groups when
a site is being created. Some part of the documentation was not clear
either. I also overlooked at some of the issues.

Solution:

This commit appends the site url to each group
specified by ``groups``. Furthermore, the ``_call(..)`` function in the
function test has been modified to remove 'application/json' from GET
request to prevent Flask from complaining.

Problems remain to be solved:

1. When a group is created, owner should be included automatically. This
is trivial fix; require user to be added as part of the request, and
add user to the default list instead of an ``[]`` list.

2. Review documentations.

3. We still want a few more individual functional tests for
/report/issues.

4. We still have to fix #55."
280,https://api.github.com/repos/mozilla/minion-backend/pulls/57,57,Added functional tests for almost all apis except /reports* due to bugs #52 - #56,"Problems:

users is not present in groups or sites so reports/issues and reports/status will always return empty
",yeukhon,943001,2013-06-14T01:59:48Z,CONTRIBUTOR,True,256,70,2,Minion Backend,Python,50302d1c960a8611ce881707db62a9df685aedbd,Converted existing /plans* and /plugins tests to use _call. See #2.
281,https://api.github.com/repos/mozilla/minion-backend/pulls/57,57,Added functional tests for almost all apis except /reports* due to bugs #52 - #56,"Problems:

users is not present in groups or sites so reports/issues and reports/status will always return empty
",yeukhon,943001,2013-06-14T01:59:48Z,CONTRIBUTOR,True,256,70,2,Minion Backend,Python,b20c9a6a38db04bc2abb4c532d6f37afc29b53e2,"Added functional tests for /scan* endpoints. See #2.

A minor modification has been made to ``put_scan_control``. See
ticket #54. What remains to be done is actually testing running plugins.
Right now plugins don't start according to output. See #55."
282,https://api.github.com/repos/mozilla/minion-backend/pulls/57,57,Added functional tests for almost all apis except /reports* due to bugs #52 - #56,"Problems:

users is not present in groups or sites so reports/issues and reports/status will always return empty
",yeukhon,943001,2013-06-14T01:59:48Z,CONTRIBUTOR,True,256,70,2,Minion Backend,Python,ac6745e266e59fd44794e49d83590ed59b7ea375,"Added /reports* api calls to the tests, but #56 prevents writing tests.

Ticket #56 is blocking me from writing actual tests. It seems like we
have to add users record to either sites or groups. But Stefan will help
me handle this as well tomorrow."
283,https://api.github.com/repos/mozilla/minion-backend/pulls/53,53,Pull request for /sites api tests,"When writing the tests a few bugs have been discovered. See ticket #49,
ticket #50, #51 and #52.
",yeukhon,943001,2013-06-13T22:22:42Z,CONTRIBUTOR,True,82,9,2,Minion Backend,Python,b192ddea0d8a71e70e9786fe85e8535963efac6a,"Added tests to /sites* end points. See #2.

When writing the tests a few bugs have been discovered. See ticket #49,
ticket #50, #51 and #52."
284,https://api.github.com/repos/mozilla/minion-backend/pulls/48,48,Adding functioanl tests to the backend api (see #2),"I am adding more tests to the api. I will continue to finish other tests.
",yeukhon,943001,2013-06-13T04:33:37Z,CONTRIBUTOR,True,229,4,2,Minion Backend,Python,9c713d5e9ea6d9d3bb6641ad37cc53a8db7fcb2e,Added two tests on create user and get all users.
285,https://api.github.com/repos/mozilla/minion-backend/pulls/48,48,Adding functioanl tests to the backend api (see #2),"I am adding more tests to the api. I will continue to finish other tests.
",yeukhon,943001,2013-06-13T04:33:37Z,CONTRIBUTOR,True,229,4,2,Minion Backend,Python,ee48fb28966168c57d2467d96bf4cd90a674e146,Added functional tests for /groups api endpoints. See #2.
286,https://api.github.com/repos/mozilla/minion-backend/pulls/47,47,Closing #33. Header name is only checked in lower-case. ,,yeukhon,943001,2013-06-13T01:36:19Z,CONTRIBUTOR,True,65,30,2,Minion Backend,Python,752ffc798244cc08dbb4ad61d583f68abf6e32d4,"Added a basic validator for CSPPlugin. See #42.

A parser and a validotr were supposed to be written to solve #42. But
the parser I was building using pyparsing doesn't work very well and I
also have a difficult time actually validating through that parser.
Instead of wasting more time building a parser, I have decided to
implement a basic validator plus a url regex within the source code.
This one works for the general purpose.

I will continue my work started in
https://github.com/yeukhon/csp-validator."
287,https://api.github.com/repos/mozilla/minion-backend/pulls/47,47,Closing #33. Header name is only checked in lower-case. ,,yeukhon,943001,2013-06-13T01:36:19Z,CONTRIBUTOR,True,65,30,2,Minion Backend,Python,cad357e2db80eb1427d3bc393b0cacc9d5ac3587,Closing #33. Header name is only checked in lower-case.
288,https://api.github.com/repos/mozilla/minion-backend/pulls/46,46,Added a basic validator for CSPPlugin. See #42.,"A parser and a validotr were supposed to be written to solve #42. But
the parser I was building using pyparsing doesn't work very well and I
also have a difficult time actually validating through that parser.
Instead of wasting more time building a parser, I have decided to
implement a basic validator plus a url regex within the source code.
This one works for the general purpose.

I will continue my work started in
https://github.com/yeukhon/csp-validator.
",yeukhon,943001,2013-06-13T01:07:17Z,CONTRIBUTOR,True,60,25,2,Minion Backend,Python,752ffc798244cc08dbb4ad61d583f68abf6e32d4,"Added a basic validator for CSPPlugin. See #42.

A parser and a validotr were supposed to be written to solve #42. But
the parser I was building using pyparsing doesn't work very well and I
also have a difficult time actually validating through that parser.
Instead of wasting more time building a parser, I have decided to
implement a basic validator plus a url regex within the source code.
This one works for the general purpose.

I will continue my work started in
https://github.com/yeukhon/csp-validator."
289,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,2209a7850433a767cd107cf95442275d93f82b46,"Working on #36 adding test and validator to robots plugin.

Currently robots plugin does not actually verify the
existence of robots.txt. If the target url is 200-reacable, plugin
will return success. This is address by ticket #36.

Ticket #11 addresses the lack of validator in plugin. We should verify
the robots.txt is valid and is confronting to the standard.

We probably will adaopt the recommendations from the official
Robots.org, in addition to w3c.

[1]: http://www.robotstxt.org/orig.html

[2]: http://www.w3.org/TR/html4/appendix/notes.html#h-B.4.1.1"
290,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,03a2a3fb07067932a8df5704d511652a573609d8,"Added a very basic validator to robots plugin.

This basic validator will address some of the concerns in #11 and in
ticket #36. We are rejecting all requests returning non-200 response. If
the header does not return with `text/plain` we assume it is also an
invalid robots.txt.

We will have a difficult time using robotparser straight from Python's
standard library. The module does not return the content of robots.txt.
Subclassing the module may be trick as implementing based on its
""already-parse"" content is useless. I also want to give a try to
implement a real robots.txt parser according to Google's document
outlined in [1]. I believe the first version could just follow the
recommendation based on [2] and [3].

[1]:
https://developers.google.com/webmasters/control-crawl-index/docs/robots_txt

[2]: http://www.w3.org/TR/html4/appendix/notes.html#h-B.4.1.1

[3]: http://www.robotstxt.org/orig.html"
291,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,dd7a539368273989bb1cfe9a4c361a9f2bb57dce,Added functional tests for ServerDetailsPlugin.
292,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,6afd44ac76946cd204966080bb39ab07f189734a,"Fixed #31 test and fixed #32 header name bug for X-XSS-Protection.

In this commit, we have added a functional test for
XXSSProtectionPlugin. Furthermore, like #27, we have to read the
lower-case header name for X-XSS-Protection.

We should actually address this issue either with curly.py or
individually with each plugin. See issue #33."
293,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,267dd96688c570ce4967a55a9ad4e821801cfc5a,Instruct travis to create dist for minion and use pip to install minion.
294,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,cdce12bdcac0c15b99f0b95a44f898cfa467dbc8,Instruct travis to install stunnel.
295,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,244acd2ce245098b104b54b1ffe29e338b4ffcb8,use sudo to kill on travis.
296,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,dcf9f304511bb5f7ea507581c7d439bf7d41ed10,"Instruct travis to start mongodb.

We were getting ""ConnectionFailure: could not connect to
127.0.0.1:27017: [Errno 111] Connection refused"" error in Travis."
297,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,88319ea6c607dfbfa8cc526a74dc33d50e141f5b,Instruct travis to start minions.
298,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,aab1e8263ec99651b6006d7e7a457f28d4d6d0cc,Tells travis to create a basic plan.
299,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,f51a1f306ebcf521f2943814974e4ddf7d69654f,Fixed #38: robots-scanner is added to setup.py
300,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,3f58f91e8f5ebb176a1210cb5e95459e7b0d4399,"Fixed #36. Fixed #11. RobotsPlugins now use robots-scanner validator.

The robots-scanner has a very simple scanner to scan the content of
robots.txt. The overall validation in RobotsPlugins is written in the
commit (see plugins/basics.py)."
301,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,697241eea611c9ceb5e39d6b3d36b3ba418bc3a3,"Use robots-scanner 0.1.1.

robots-scanner has been updated to remove print statements from the its
source code."
302,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,d4d32194d5ee5d626f1ad72535928009ede4ecb5,"Removed test_robots_validator.py.

This is unused and the tests for the actual robots-scanner tests are
within robots-scanner source code. We should instead forcus on writing
unittests for validator method."
303,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,03a7d8c2ea8c8a00b236f3bdd958adfb675b874d,"Added some basic functional tests for CSPPlugin.

unsafe-eval and unsafe-inline tests are still failing."
304,https://api.github.com/repos/mozilla/minion-backend/pulls/43,43,Added functional tests for CSPPlugin,"PS: I forgot to switch back to master when I was creating the new branch. Shouldn't hurt merge though.
",yeukhon,943001,2013-06-11T08:17:20Z,CONTRIBUTOR,True,490,22,11,Minion Backend,Python,d76a0d8990deaf1fca2db41e4e283b293e2a171f,"Fixed #41. CSPPlugin now accepts both prefixed and unprefixed.

The spec actually uses the unprefixed version. FF 23 and on will also
deprecate the prefixed header."
305,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,2209a7850433a767cd107cf95442275d93f82b46,"Working on #36 adding test and validator to robots plugin.

Currently robots plugin does not actually verify the
existence of robots.txt. If the target url is 200-reacable, plugin
will return success. This is address by ticket #36.

Ticket #11 addresses the lack of validator in plugin. We should verify
the robots.txt is valid and is confronting to the standard.

We probably will adaopt the recommendations from the official
Robots.org, in addition to w3c.

[1]: http://www.robotstxt.org/orig.html

[2]: http://www.w3.org/TR/html4/appendix/notes.html#h-B.4.1.1"
306,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,03a2a3fb07067932a8df5704d511652a573609d8,"Added a very basic validator to robots plugin.

This basic validator will address some of the concerns in #11 and in
ticket #36. We are rejecting all requests returning non-200 response. If
the header does not return with `text/plain` we assume it is also an
invalid robots.txt.

We will have a difficult time using robotparser straight from Python's
standard library. The module does not return the content of robots.txt.
Subclassing the module may be trick as implementing based on its
""already-parse"" content is useless. I also want to give a try to
implement a real robots.txt parser according to Google's document
outlined in [1]. I believe the first version could just follow the
recommendation based on [2] and [3].

[1]:
https://developers.google.com/webmasters/control-crawl-index/docs/robots_txt

[2]: http://www.w3.org/TR/html4/appendix/notes.html#h-B.4.1.1

[3]: http://www.robotstxt.org/orig.html"
307,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,dd7a539368273989bb1cfe9a4c361a9f2bb57dce,Added functional tests for ServerDetailsPlugin.
308,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,6afd44ac76946cd204966080bb39ab07f189734a,"Fixed #31 test and fixed #32 header name bug for X-XSS-Protection.

In this commit, we have added a functional test for
XXSSProtectionPlugin. Furthermore, like #27, we have to read the
lower-case header name for X-XSS-Protection.

We should actually address this issue either with curly.py or
individually with each plugin. See issue #33."
309,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,267dd96688c570ce4967a55a9ad4e821801cfc5a,Instruct travis to create dist for minion and use pip to install minion.
310,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,cdce12bdcac0c15b99f0b95a44f898cfa467dbc8,Instruct travis to install stunnel.
311,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,244acd2ce245098b104b54b1ffe29e338b4ffcb8,use sudo to kill on travis.
312,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,dcf9f304511bb5f7ea507581c7d439bf7d41ed10,"Instruct travis to start mongodb.

We were getting ""ConnectionFailure: could not connect to
127.0.0.1:27017: [Errno 111] Connection refused"" error in Travis."
313,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,88319ea6c607dfbfa8cc526a74dc33d50e141f5b,Instruct travis to start minions.
314,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,aab1e8263ec99651b6006d7e7a457f28d4d6d0cc,Tells travis to create a basic plan.
315,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,f51a1f306ebcf521f2943814974e4ddf7d69654f,Fixed #38: robots-scanner is added to setup.py
316,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,3f58f91e8f5ebb176a1210cb5e95459e7b0d4399,"Fixed #36. Fixed #11. RobotsPlugins now use robots-scanner validator.

The robots-scanner has a very simple scanner to scan the content of
robots.txt. The overall validation in RobotsPlugins is written in the
commit (see plugins/basics.py)."
317,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,697241eea611c9ceb5e39d6b3d36b3ba418bc3a3,"Use robots-scanner 0.1.1.

robots-scanner has been updated to remove print statements from the its
source code."
318,https://api.github.com/repos/mozilla/minion-backend/pulls/39,39,Fixed #36. Fixed #11. RobotsPlugin now uses robot-scanner,"This PR merges a bunch of branches. We have robot-scanner added to setup.py and we have robots plugin using robot-scanner to scan the content, and we perform additional validation within the `validator` method in RobotsPlugin class.
",yeukhon,943001,2013-06-10T20:32:13Z,CONTRIBUTOR,True,330,13,10,Minion Backend,Python,d4d32194d5ee5d626f1ad72535928009ede4ecb5,"Removed test_robots_validator.py.

This is unused and the tests for the actual robots-scanner tests are
within robots-scanner source code. We should instead forcus on writing
unittests for validator method."
319,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,930882182fa834648af7ac355210c932471cfabb,Instruct travis to create dist for minion and use pip to install minion.
320,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,05b0b10fe4ea3af68ebf6cc35bb0a0eb352902df,Instruct travis to install stunnel.
321,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,86e86b2b1df4333a8eef6e9cffc1a02e1f98865c,use sudo to kill on travis.
322,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,86d4111237e4b5c06a04071f445eef9e1fcf4371,"Instruct travis to start mongodb.

We were getting ""ConnectionFailure: could not connect to
127.0.0.1:27017: [Errno 111] Connection refused"" error in Travis."
323,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,5898ecdf6f017e5e78a2717b42793124ef934c2b,Instruct travis to start minions.
324,https://api.github.com/repos/mozilla/minion-backend/pulls/37,37,Update .travs.yml to run tests.,,yeukhon,943001,2013-06-10T16:26:28Z,CONTRIBUTOR,True,20,5,2,Minion Backend,Python,05ad7ab76e4b4213de1512cba19994e992bb7107,Tells travis to create a basic plan.
325,https://api.github.com/repos/mozilla/minion-backend/pulls/35,35,Added functional tests for ServerDetailsPlugin.,,yeukhon,943001,2013-06-07T22:29:21Z,CONTRIBUTOR,True,59,1,2,Minion Backend,Python,3c04bcb1f4a960bf265e5a323ac57fd8ee987197,Added functional tests for ServerDetailsPlugin.
326,https://api.github.com/repos/mozilla/minion-backend/pulls/34,34,Fixed #31 test and fixed #32 header name bug for X-XSS-Protection.,"In this commit, we have added a functional test for
XXSSProtectionPlugin. Furthermore, like #27, we have to read the
lower-case header name for X-XSS-Protection.

We should actually address this issue either with curly.py or
individually with each plugin. See issue #33.
",yeukhon,943001,2013-06-07T21:17:56Z,CONTRIBUTOR,True,83,4,2,Minion Backend,Python,ce2962109aa62b9dce6e6b67abcce9998af0eb0a,"Fixed #31 test and fixed #32 header name bug for X-XSS-Protection.

In this commit, we have added a functional test for
XXSSProtectionPlugin. Furthermore, like #27, we have to read the
lower-case header name for X-XSS-Protection.

We should actually address this issue either with curly.py or
individually with each plugin. See issue #33."
327,https://api.github.com/repos/mozilla/minion-backend/pulls/30,30,Fixed #7 added tests and fixed #27 bug on X-Content-Type plugin.,"In this commit, a set of functional tests have been written for
X-Content-Type plugin.

Furthermore, we have fixed bug #27 in XContentTypePlugin. We now
consider both upper- and lower-case header name. At this point, we are
case-insensitive when it comes to checking the value of the header. This
is related to ticket #28 and shall be discussed.

Lastly, we also added a function to kill ports (1234, 1235, 1443) in
`setUpClass` and `tearDownClass`. Apparently, some of the test
classes were unable to be killed properly from calling `.terminate()`.
This will be revisited at some point.
",yeukhon,943001,2013-06-07T17:15:28Z,CONTRIBUTOR,True,261,70,9,Minion Backend,Python,2fd4a71dc64cf2b85bc3141eda65ad96fcb016db,"Working on HSTS functional tests.

1. Our implementation of using CURL is not recongizing HSTS
from https://paypal.com

2. We need to think about how to construct a test server with trusted CA.
Distribute a system-wide cert is okay, but we might require users to
actually generate their own if they wish to execute those (think about
automated testing internally within Mozilla."
328,https://api.github.com/repos/mozilla/minion-backend/pulls/30,30,Fixed #7 added tests and fixed #27 bug on X-Content-Type plugin.,"In this commit, a set of functional tests have been written for
X-Content-Type plugin.

Furthermore, we have fixed bug #27 in XContentTypePlugin. We now
consider both upper- and lower-case header name. At this point, we are
case-insensitive when it comes to checking the value of the header. This
is related to ticket #28 and shall be discussed.

Lastly, we also added a function to kill ports (1234, 1235, 1443) in
`setUpClass` and `tearDownClass`. Apparently, some of the test
classes were unable to be killed properly from calling `.terminate()`.
This will be revisited at some point.
",yeukhon,943001,2013-06-07T17:15:28Z,CONTRIBUTOR,True,261,70,9,Minion Backend,Python,d49734bc0d5dbba31722fc9f03ad75b0350e9e3e,"Fixed #7 added tests and fixed #27 bug on X-Content-Type plugin.

In this commit, a set of functional tests have been written for
X-Content-Type plugin.

Furthermore, we have fixed bug #27 in XContentTypePlugin. We now
consider both upper- and lower-case header name. At this point, we are
case-insensitive when it comes to checking the value of the header. This
is related to ticket #28 and shall be discussed.

Lastly, we also added a function to kill ports (1234, 1235, 1443) in
``setUpClass`` and ``tearDownClass``. Apparently, some of the test
classes were unable to be killed properly from calling ``.terminate()``.
This will be revisited at some point."
329,https://api.github.com/repos/mozilla/minion-backend/pulls/29,29,Working on HSTS functional tests.,"1. Our implementation of using CURL is not recongizing HSTS
   from https://paypal.com
2. We need to think about how to construct a test server with trusted CA.
   Distribute a system-wide cert is okay, but we might require users to
   actually generate their own if they wish to execute those (think about
   automated testing internally within Mozilla.
",yeukhon,943001,2013-06-07T17:13:02Z,CONTRIBUTOR,True,190,66,6,Minion Backend,Python,2fd4a71dc64cf2b85bc3141eda65ad96fcb016db,"Working on HSTS functional tests.

1. Our implementation of using CURL is not recongizing HSTS
from https://paypal.com

2. We need to think about how to construct a test server with trusted CA.
Distribute a system-wide cert is okay, but we might require users to
actually generate their own if they wish to execute those (think about
automated testing internally within Mozilla."
330,https://api.github.com/repos/mozilla/minion-backend/pulls/25,25,Refactored plugin test class; added alive plugin tests.,"In this commit we have refactored out a generic test class for
performing functional tests. This allows us to quickly build test class
for each plugin.

A test class is also built for AlivePlugin.
",yeukhon,943001,2013-06-06T18:12:19Z,CONTRIBUTOR,True,124,0,2,Minion Backend,Python,23c0f5ff64d7810917998b8cbe391a2cc79dc5a4,"Refactored plugin test class; added alive plugin tests.

In this commit we have refactored out a generic test class for
performing functional tests. This allows us to quickly build test class
for each plugin.

A test class is also built for AlivePlugin."
331,https://api.github.com/repos/mozilla/minion-backend/pulls/24,24,Added nose to test setup.py.,"Most people don't use 'python setup.py test' so 'tests_requires' is
included as part of install_requires at installation time. Furthermore,
running 'python setup.py test' will install testing packages locally in
the CWD; doing so will clutter the CWD and may introduce limitations as to how to upgrade testing packages.
",yeukhon,943001,2013-06-06T16:13:11Z,CONTRIBUTOR,True,6,2,1,Minion Backend,Python,f8853f297a3f959337c7631462f83719a0c1d05f,"Added nose to test setup.py.

Most people don't use 'python setup.py test' so 'tests_requires' is
included as part of install_requires at installation time. Furthermore,
running 'python setup.py test' will install testing packages locally in
the CWD; doing so will clutter the CWD and may introduce limitations as to how to upgrade testing packages."
332,https://api.github.com/repos/mozilla/minion-backend/pulls/23,23,Fixed #21. ALLOW-FROM is added to XFrameOptionsPlugin. ,"This PR addresses ALLOW-FROM not included in our plugin according to [MDN](https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options?redirectlocale=en-US&redirectslug=The_X-FRAME-OPTIONS_response_header). We follow the recommendation that FF has taken recently [here](https://bugzilla.mozilla.org/show_bug.cgi?id=836132#c28). We will reject value with colon and value without proper http/s prefix.

Furthermore, some functional tests have been written to test XFrameOptionsPlugin,
",yeukhon,943001,2013-06-06T04:33:03Z,CONTRIBUTOR,True,175,62,4,Minion Backend,Python,d1988fe5abec6104a0711406cdaf4733a1c54e06,"Added functional tests for deny,sameorigin, and allow-form for xframe plugin."
333,https://api.github.com/repos/mozilla/minion-backend/pulls/23,23,Fixed #21. ALLOW-FROM is added to XFrameOptionsPlugin. ,"This PR addresses ALLOW-FROM not included in our plugin according to [MDN](https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options?redirectlocale=en-US&redirectslug=The_X-FRAME-OPTIONS_response_header). We follow the recommendation that FF has taken recently [here](https://bugzilla.mozilla.org/show_bug.cgi?id=836132#c28). We will reject value with colon and value without proper http/s prefix.

Furthermore, some functional tests have been written to test XFrameOptionsPlugin,
",yeukhon,943001,2013-06-06T04:33:03Z,CONTRIBUTOR,True,175,62,4,Minion Backend,Python,0c26d5b9d9e5b68de64556110a15806ff8cf7dff,"Fixed #21. ALLOW-FROM is added to XFrameOptionsPlugin.

This PR addresses ALLOW-FROM not included in our plugin according to
X-Frame-Options on MDN. We also follow the recommendation and
(https://bugzilla.mozilla.org/show_bug.cgi?id=836132#c28). We will
reject values  with colon and values without proper http/s prefix.

Furthermore, some functional tests have been written to test
XFrameOptionsPlugin."
334,https://api.github.com/repos/mozilla/minion-backend/pulls/20,20,Added a functional test for testing bad XFrameOption.,,yeukhon,943001,2013-06-05T20:37:38Z,CONTRIBUTOR,True,59,0,1,Minion Backend,Python,e2a0c2cbcaad153d47234d0fc1cffd1a05824b38,Added a functional test for testing bad XFrameOption.
