,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,28b3886680c4f39d204f6ec330f1f9456bd6ae6b,release v3.32.20026
1,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,292fb8dea605e225d5c6baabd7a83c9b0dc0f1c2,minor change
2,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,697a78d3548a03374d1c407d73a6c64e64de13f0,Fix ordered offset parsing
3,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,455227068d1755d1b45c9f7cdfd52c25083684e6,another attempt to use modified pyparsing lib
4,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4b1f683719daf7285d558df436875a40808b373b,lib update
5,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,25bb294c30cd02e8eab419f045ee72219eb46bff,lib updates
6,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a04a151ae1d4f57f69b651a1ff66784e2c61c984,pass one test with mo-parsing
7,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,adb579a23451b2a5469099ba6f4b5331296dcbfd,"rename vars, remove examples, remove __len__()"
8,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4b378d399b75b6d306fe50ca71cf425402196356,continue to try and use mo-parsing
9,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,28682737d711c111e12af57fee901a1c6ccd337d,lib updates
10,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,23c0592918bf5d53e268637a6a540b567a1ec1c5,78b failures
11,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3b0afc3617c230b244ae3780d9de35d3e9c88217,70 failures
12,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,97559c6c46d1ffa7d4013f70e15abe731e7c106a,270 failures
13,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f38a45668c4300397c06a11d55687311a39a37de,2 failures
14,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,35af2b7ac7377e815ced0e54995c439b33b8f635,all tests pass
15,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c6f937dfd7d754842c4ce23f0f68bfcb5f253147,Merge branch 'use-mo-parsing' into dev
16,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9c4358a64533baf1c7b43966bd90c2080bafb746,Merge remote-tracking branch 'dominikWin/offset-issue' into dev
17,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0643e5a6d148d9ffd1fc8bdecf14c1c1aaa5a2f6,fix https://github.com/mozilla/moz-sql-parser/issues/144
18,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b00887977f295ad61d3def04352c78ec718bd283,mo-black formatting
19,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6e11c0290c94a79aad3fbe28c7b51c428c417489,handle square brackets https://github.com/mozilla/moz-sql-parser/issues/143
20,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6e4361b76e599e3e948f6bba599d2eb22eb40df4,"add simple window function, https://github.com/mozilla/moz-sql-parser/issues/140"
21,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,951ed7fb1374efc5e52530223e783322a9722606,fix travis
22,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b7ad4bd58001d161ccdffd5738b64958d7ad1d9b,add test dependencies
23,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e56b326b0d4d5e576eca7d21c6fc47805461b3fe,add dependencies
24,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,92478a9d2ad32a717197bafd2acfb4b20c0a2c3b,fix script
25,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ef3cd8b34b801dfe0a343d72c16e8ebcb2de1cfd,get travis to pass
26,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5662f33b4d6bb0690eed370c73cd7c353493cc4c,remove itertools use
27,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e42657f851f560e59c152a755f12f2e5b58283a0,verify order of operations
28,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8033f06abcc796fd4952063311938ee2b0888a05,add cast()
29,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/151,151,Issue7,,klahnakoski,2334429,2021-01-11T00:25:47Z,CONTRIBUTOR,False,10956,2164,36,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,762e10976c7defe5f5d0340451915d5dafcf9d56,fix select distinct
30,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/150,150,fix: unpin pyparsing for better cross dependency,"Hi,

Not sure if it's a hard pin, but it would be great to unpin and follow semver regarding `pyparsing` dependency.

Thank you!
",dpgaspar,4025227,2021-01-06T16:32:08Z,NONE,False,4,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,75493e321bb280b1d7b4cd642f5339ff05b2df02,fix: unpin pyparsing for better cross dependency
31,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,28b3886680c4f39d204f6ec330f1f9456bd6ae6b,release v3.32.20026
32,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,292fb8dea605e225d5c6baabd7a83c9b0dc0f1c2,minor change
33,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,697a78d3548a03374d1c407d73a6c64e64de13f0,Fix ordered offset parsing
34,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,455227068d1755d1b45c9f7cdfd52c25083684e6,another attempt to use modified pyparsing lib
35,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4b1f683719daf7285d558df436875a40808b373b,lib update
36,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,25bb294c30cd02e8eab419f045ee72219eb46bff,lib updates
37,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a04a151ae1d4f57f69b651a1ff66784e2c61c984,pass one test with mo-parsing
38,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,adb579a23451b2a5469099ba6f4b5331296dcbfd,"rename vars, remove examples, remove __len__()"
39,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4b378d399b75b6d306fe50ca71cf425402196356,continue to try and use mo-parsing
40,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,28682737d711c111e12af57fee901a1c6ccd337d,lib updates
41,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,23c0592918bf5d53e268637a6a540b567a1ec1c5,78b failures
42,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3b0afc3617c230b244ae3780d9de35d3e9c88217,70 failures
43,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,97559c6c46d1ffa7d4013f70e15abe731e7c106a,270 failures
44,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f38a45668c4300397c06a11d55687311a39a37de,2 failures
45,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,35af2b7ac7377e815ced0e54995c439b33b8f635,all tests pass
46,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c6f937dfd7d754842c4ce23f0f68bfcb5f253147,Merge branch 'use-mo-parsing' into dev
47,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9c4358a64533baf1c7b43966bd90c2080bafb746,Merge remote-tracking branch 'dominikWin/offset-issue' into dev
48,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0643e5a6d148d9ffd1fc8bdecf14c1c1aaa5a2f6,fix https://github.com/mozilla/moz-sql-parser/issues/144
49,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b00887977f295ad61d3def04352c78ec718bd283,mo-black formatting
50,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6e11c0290c94a79aad3fbe28c7b51c428c417489,handle square brackets https://github.com/mozilla/moz-sql-parser/issues/143
51,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6e4361b76e599e3e948f6bba599d2eb22eb40df4,"add simple window function, https://github.com/mozilla/moz-sql-parser/issues/140"
52,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,951ed7fb1374efc5e52530223e783322a9722606,fix travis
53,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b7ad4bd58001d161ccdffd5738b64958d7ad1d9b,add test dependencies
54,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e56b326b0d4d5e576eca7d21c6fc47805461b3fe,add dependencies
55,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,92478a9d2ad32a717197bafd2acfb4b20c0a2c3b,fix script
56,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ef3cd8b34b801dfe0a343d72c16e8ebcb2de1cfd,get travis to pass
57,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5662f33b4d6bb0690eed370c73cd7c353493cc4c,remove itertools use
58,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e42657f851f560e59c152a755f12f2e5b58283a0,verify order of operations
59,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8033f06abcc796fd4952063311938ee2b0888a05,add cast()
60,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/147,147,All pending changes,"Development has resumed over at my fork: https://github.com/klahnakoski/moz-sql-parser

This PR will track all changes on the `dev` branch.",klahnakoski,2334429,2020-10-16T19:23:28Z,CONTRIBUTOR,False,11092,2225,40,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,762e10976c7defe5f5d0340451915d5dafcf9d56,fix select distinct
61,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/145,145,Fix ordered offset parsing,Resolves issue #141 .,dominikWin,10552362,2020-09-02T20:49:19Z,NONE,False,7,0,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,697a78d3548a03374d1c407d73a6c64e64de13f0,Fix ordered offset parsing
62,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/136,136,Import mapping from collections.abc,"Fixing this warning:
  ...\moz_sql_parser\__init__.py:12: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
    from collections import Mapping",LobsterMan,2620043,2020-07-02T15:08:54Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3cccb8a04bac942391921cfe45502842ab87c9bf,"Import mapping from collections.abc

Fixing this warning:  ...\moz_sql_parser\__init__.py:12: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated since Python 3.3,and in 3.9 it will stop working
    from collections import Mapping"
63,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/132,132,Added support for WITH CTE clauses,"This PR includes support for queries using WITH CTE like:

```
WITH t1 AS 
  (SELECT a FROM table) 
   , t2 AS (SELECT 1) 
SELECT * FROM t1, t2
```

In addition, some tests have been included in some suites to check this new behavior.",efernandezleon,1777459,2020-04-25T20:12:01Z,NONE,True,39,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b7cda467cce98a7118b601d75dc4d7e90ba3f235,Added support for WITH CTE clauses
64,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/132,132,Added support for WITH CTE clauses,"This PR includes support for queries using WITH CTE like:

```
WITH t1 AS 
  (SELECT a FROM table) 
   , t2 AS (SELECT 1) 
SELECT * FROM t1, t2
```

In addition, some tests have been included in some suites to check this new behavior.",efernandezleon,1777459,2020-04-25T20:12:01Z,NONE,True,39,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b992a44452422043a96a8d1e2ee6c64bde7c5373,Remove unnecessary print
65,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/132,132,Added support for WITH CTE clauses,"This PR includes support for queries using WITH CTE like:

```
WITH t1 AS 
  (SELECT a FROM table) 
   , t2 AS (SELECT 1) 
SELECT * FROM t1, t2
```

In addition, some tests have been included in some suites to check this new behavior.",efernandezleon,1777459,2020-04-25T20:12:01Z,NONE,True,39,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e09e0f8a6791942b46e17516ab680e857fb2b535,Fixing test name
66,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/131,131,Add support for newer pyparsing versions,"This adds support for pyparsing up to the current version 2.4.7 while keeping support for currently pinned 2.3.1.

Resolves issue #128",dominikWin,10552362,2020-04-21T20:03:38Z,NONE,False,2,2,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,15aa778d34e9636059c1f90e7cdc2db09a289a35,"Add support for newer pyparsing versions

This adds support for pyparsing up to the current version 2.4.7 while
keeping support for currently pinned 2.3.1."
67,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/125,125,Parsing and formatting CASE is broken,"Hello,

We have noticed that when parsing a CASE statement and reformatting the parsed output, the code throws an exception.

We noticed that the format function would not work with simple quote marks on the CASE clause in the THEN part. We have pushed a solution, but as we do not understand what the MatchFirst does, it might not be the best solution.",Alberto15Romero,47987505,2020-03-02T14:26:19Z,CONTRIBUTOR,True,14,5,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,90fdfb710a0ad5c81d9f789ff3a136bbaef33d89,Includes test that verifies that the CASE clause doesn't include speech marks after the format function
68,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/125,125,Parsing and formatting CASE is broken,"Hello,

We have noticed that when parsing a CASE statement and reformatting the parsed output, the code throws an exception.

We noticed that the format function would not work with simple quote marks on the CASE clause in the THEN part. We have pushed a solution, but as we do not understand what the MatchFirst does, it might not be the best solution.",Alberto15Romero,47987505,2020-03-02T14:26:19Z,CONTRIBUTOR,True,14,5,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,16ef9c1c877bffb367d1d2dd0237445ba9a79aea,Fixes the CASE bug
69,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/125,125,Parsing and formatting CASE is broken,"Hello,

We have noticed that when parsing a CASE statement and reformatting the parsed output, the code throws an exception.

We noticed that the format function would not work with simple quote marks on the CASE clause in the THEN part. We have pushed a solution, but as we do not understand what the MatchFirst does, it might not be the best solution.",Alberto15Romero,47987505,2020-03-02T14:26:19Z,CONTRIBUTOR,True,14,5,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,fe1acaedd23984a903744d9a881f92c51ab402ad,Testing
70,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/125,125,Parsing and formatting CASE is broken,"Hello,

We have noticed that when parsing a CASE statement and reformatting the parsed output, the code throws an exception.

We noticed that the format function would not work with simple quote marks on the CASE clause in the THEN part. We have pushed a solution, but as we do not understand what the MatchFirst does, it might not be the best solution.",Alberto15Romero,47987505,2020-03-02T14:26:19Z,CONTRIBUTOR,True,14,5,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0a3418f69dcfbffcf5f121904eea4ed407c4a5e8,Testing
71,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/125,125,Parsing and formatting CASE is broken,"Hello,

We have noticed that when parsing a CASE statement and reformatting the parsed output, the code throws an exception.

We noticed that the format function would not work with simple quote marks on the CASE clause in the THEN part. We have pushed a solution, but as we do not understand what the MatchFirst does, it might not be the best solution.",Alberto15Romero,47987505,2020-03-02T14:26:19Z,CONTRIBUTOR,True,14,5,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d85897af45fe2c9ac5ab36406908cae10a02b1fb,Testing
72,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/122,122,Adds test to verify that parsing queries with table aliases containin…,"#121 

Test to prove the aliases on FROM part of query fails when containing the table with the column alias.",DavidHernandez,877002,2020-02-11T12:39:49Z,NONE,False,5,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f9d0c4bbccfc963c4cd1e6a8fa65dc5b54c753da,Adds test to verify that parsing queries with table aliases containing column aliases are failing.
73,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/118,118,Handle @@ in ident,,klahnakoski,2334429,2020-01-25T23:57:54Z,CONTRIBUTOR,True,9,7,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a61ffc2bf1300b4241940cd67ceaf78b7d84d7c5,release v3.31.20024
74,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/118,118,Handle @@ in ident,,klahnakoski,2334429,2020-01-25T23:57:54Z,CONTRIBUTOR,True,9,7,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,14493a6b6d475e3dfaf15fe2354fe9a880371573,handle @@indentifiers
75,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/116,116,verify literals,,klahnakoski,2334429,2020-01-24T13:51:08Z,CONTRIBUTOR,True,12,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9a581df0ff0e23344d3b7311ba0a4e9f46d33ede,verify literals
76,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/116,116,verify literals,,klahnakoski,2334429,2020-01-24T13:51:08Z,CONTRIBUTOR,True,12,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,1564ba1f4548cd8541d383af6b58fe5ddda8d16f,Merge branch 'dev' into literals
77,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/115,115,More about the recursion limit,,klahnakoski,2334429,2020-01-24T13:28:30Z,CONTRIBUTOR,True,55,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,1b12535d03f1686fb58cb8f39663464cf1650be0,More about the recursion limit
78,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/115,115,More about the recursion limit,,klahnakoski,2334429,2020-01-24T13:28:30Z,CONTRIBUTOR,True,55,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7041bed9273c3ccd6721ecd1df064c3a59c834d9,Merge branch 'dev' into recursion
79,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/114,114,ensure complex parse works,,klahnakoski,2334429,2020-01-24T13:05:16Z,CONTRIBUTOR,True,9,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a082bdb634c4a347c7ef52d5c72091b7c16124c4,ensure complex parse works
80,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/114,114,ensure complex parse works,,klahnakoski,2334429,2020-01-24T13:05:16Z,CONTRIBUTOR,True,9,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,343fd3eb069499b96d1dfb8c17a36922a50f95a5,Merge branch 'dev' into complex
81,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/113,113,Issue 95 -  table-valued functions,,klahnakoski,2334429,2020-01-24T12:41:19Z,CONTRIBUTOR,True,24,16,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4528c05a9efced0271642f06f62387545989fdad,Issue 95 -  table-valued functions
82,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/113,113,Issue 95 -  table-valued functions,,klahnakoski,2334429,2020-01-24T12:41:19Z,CONTRIBUTOR,True,24,16,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5519390036273cb3fffe6c41e80479e285c73b51,ignore ()
83,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/113,113,Issue 95 -  table-valued functions,,klahnakoski,2334429,2020-01-24T12:41:19Z,CONTRIBUTOR,True,24,16,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,deb538d3e415e391dc6166ed695515f3a3bdbd09,Merge branch 'dev' into function
84,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/112,112,add with clause,,klahnakoski,2334429,2020-01-24T04:40:02Z,CONTRIBUTOR,True,117,14,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,141b731146103bbc6587132d50f379f94d48bc28,add with clause
85,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/112,112,add with clause,,klahnakoski,2334429,2020-01-24T04:40:02Z,CONTRIBUTOR,True,117,14,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a1fc69564260421310bbdce11d1ee686d93eb680,remove value2json
86,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/112,112,add with clause,,klahnakoski,2334429,2020-01-24T04:40:02Z,CONTRIBUTOR,True,117,14,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,11242207f76ce7474db65f49901ed414896056a4,merge and enable large test
87,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/112,112,add with clause,,klahnakoski,2334429,2020-01-24T04:40:02Z,CONTRIBUTOR,True,117,14,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6d0b0003b96a8330a7fcd764f87b4c85d4860f06,change structure
88,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,94ec65ee9ba9fc72714de26c363d5a731bab5626,docs
89,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7d31541f864870f7c25beca22cdfb57f35a680d5,add tests
90,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4e4872e0141d46aec4b0b71cafd891fdff4747a8,"add operators, order operators"
91,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,01b5c83952cff0d1d8bf9d5ae18853522390b734,few failing tests
92,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,03d0d7af4f46d8c59acabe5e83f794f614a8d88e,passing tests
93,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a2b31a27b0b41e3513200f9d39ffd4a10eb1c053,Issue 106
94,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4e43e81308c90a559735da8a4b3724f9ffcd031a,issue 97
95,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e383a573959c5f556bd2f6f3a5c69da6354565d8,fix order of operations
96,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,dc755740cc3aeafe97351180c32bd93591ac3587,more docs
97,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c82300b5eab0bac9d1bdd1ad8f4ddaea2d204eb0,issue 104 - identifiers are not quoted
98,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/111,111,"Fix Precedence, and other issues",,klahnakoski,2334429,2020-01-23T19:32:48Z,CONTRIBUTOR,True,454,70,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,53b94ce97a94b6c1898070c0bd83cf02b73e8b6c,fix issue 92 - parsing backticks is wrong
99,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/110,110,Operator precedence and formatting for BETWEEN and NOT BETWEEN,"BETWEEN has lower precedence than ||

According to https://www.sqlite.org/lang_expr.html --
The BETWEEN operator is logically equivalent to a pair of comparisons. ""x BETWEEN y AND z"" is equivalent to ""x>=y AND x<=z"" except that with BETWEEN, the x expression is only evaluated once. The precedence of the BETWEEN operator is the same as the precedence as operators == and != and LIKE and groups left to right.",amolk,212398,2020-01-22T22:22:32Z,CONTRIBUTOR,True,28,4,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3391309c9f99dfbdfce3615e88f43d2dbe18e9d7,"BETWEEN has lower precedence than ||

According to https://www.sqlite.org/lang_expr.html --

The BETWEEN operator is logically equivalent to a pair of comparisons. ""x BETWEEN y AND z"" is equivalent to ""x>=y AND x<=z"" except that with BETWEEN, the x expression is only evaluated once. The precedence of the BETWEEN operator is the same as the precedence as operators == and != and LIKE and groups left to right."
100,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/110,110,Operator precedence and formatting for BETWEEN and NOT BETWEEN,"BETWEEN has lower precedence than ||

According to https://www.sqlite.org/lang_expr.html --
The BETWEEN operator is logically equivalent to a pair of comparisons. ""x BETWEEN y AND z"" is equivalent to ""x>=y AND x<=z"" except that with BETWEEN, the x expression is only evaluated once. The precedence of the BETWEEN operator is the same as the precedence as operators == and != and LIKE and groups left to right.",amolk,212398,2020-01-22T22:22:32Z,CONTRIBUTOR,True,28,4,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,07b929911b166bce2395c701c9b5373864ed67cc,Formatting for BETWEEN and NOT BETWEEN
101,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/109,109,Support underscores in function names,Added a test and verified all tests pass.,amolk,212398,2020-01-10T01:13:37Z,CONTRIBUTOR,True,11,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7e72a878161e181271a901dbb11e38e6c712ac1d,Support underscores in function names
102,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/99,99,Pin mo_future to <3,"Version 3 of `mo_future` is incompatible:
```
Traceback (most recent call last):
  File ""main.py"", line 20, in <module>
    from moz_sql_parser import parse
  File ""/usr/local/lib/python3.7/site-packages/moz_sql_parser/__init__.py"", line 16, in <module>
    from mo_future import binary_type, items, number_types, text_type
ImportError: cannot import name 'text_type' from 'mo_future' (/usr/local/lib/python3.7/site-packages/mo_future/__init__.py)
```",mafrosis,243851,2019-11-13T19:53:54Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,227022ca6fc34610bddf2389c070360d524b020f,Pin mo_future to <3
103,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/94,94,"add function name parser, support underscores,like to_date to_char.","add function name parser,support underscores,like to_date to_char.",SummerTea,5568664,2019-08-15T08:18:14Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5a2c3d345096e8aae3ac10e82c48b64b1c9cd56a,"add function name parasr support underscores,like to_date to_char."
104,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/94,94,"add function name parser, support underscores,like to_date to_char.","add function name parser,support underscores,like to_date to_char.",SummerTea,5568664,2019-08-15T08:18:14Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,529ac1161eb92ad57224c900d21147939b4d0460,"add function name parser support underscores,like to_date to_char."
105,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/94,94,"add function name parser, support underscores,like to_date to_char.","add function name parser,support underscores,like to_date to_char.",SummerTea,5568664,2019-08-15T08:18:14Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6fd2354c6c7877aad39f023caf21adfc184cf42d,Merge branch 'dev' of https://github.com/SummerTea/moz-sql-parser into dev
106,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/94,94,"add function name parser, support underscores,like to_date to_char.","add function name parser,support underscores,like to_date to_char.",SummerTea,5568664,2019-08-15T08:18:14Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,98a84ef85e5f77928a98f211fb4f5cca451f5aed,"add function name parser support underscores,like to_date to_char."
107,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/93,93,Correctly escape backticks,#92 ,enilsen16,5035876,2019-08-13T17:07:11Z,NONE,False,13,0,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,18e9c11cd1e4a84f26a54319153650a75aaf00ac,Add tests for issue 92
108,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/89,89,Rewrote parser to use ASTNodes.,"This is a rewrite for the output of the parse to output a proper AST.

To keep backwards compatibility we could add an AST to JSON transformation. (Using a NodeTransformer for example)

For now I didn't add it yet, because I don't know if there is a possibility of merging this here anyway. I'd love to hear from you.",EraYaN,1627021,2019-06-03T12:14:59Z,NONE,False,1267,265,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,78d5705bab87b5a428d31600c6a399b43eb04100,"Rewrote parser to use ASTNodes.

Fixed the comparison code. Returning NotImplemented breaks the scrub code.

Fixed UNION and added UNION ALL.

Added operators, change inheritance, multi query fixes.

Added shift and bitwise operators.
ASTNode now inherits from ast.AST
Parse result is cast to a list.
Fixed multi query parsing.

Fix warning in new python version

Added Reference class."
109,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/89,89,Rewrote parser to use ASTNodes.,"This is a rewrite for the output of the parse to output a proper AST.

To keep backwards compatibility we could add an AST to JSON transformation. (Using a NodeTransformer for example)

For now I didn't add it yet, because I don't know if there is a possibility of merging this here anyway. I'd love to hear from you.",EraYaN,1627021,2019-06-03T12:14:59Z,NONE,False,1267,265,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,387eb40ef4b385960b5ac110f9d5e9347a322365,Moved to typed_ast to support better transformations on the AST3 even on python2
110,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/89,89,Rewrote parser to use ASTNodes.,"This is a rewrite for the output of the parse to output a proper AST.

To keep backwards compatibility we could add an AST to JSON transformation. (Using a NodeTransformer for example)

For now I didn't add it yet, because I don't know if there is a possibility of merging this here anyway. I'd love to hear from you.",EraYaN,1627021,2019-06-03T12:14:59Z,NONE,False,1267,265,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7470f8d7a09eaa65542425a68f3273922ae30f21,Added correct requirements and fixed where clauses.
111,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/89,89,Rewrote parser to use ASTNodes.,"This is a rewrite for the output of the parse to output a proper AST.

To keep backwards compatibility we could add an AST to JSON transformation. (Using a NodeTransformer for example)

For now I didn't add it yet, because I don't know if there is a possibility of merging this here anyway. I'd love to hear from you.",EraYaN,1627021,2019-06-03T12:14:59Z,NONE,False,1267,265,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e5ab8678a4cb197dce6f6c6929729d99655b2791,Switched to generic metadata for ASTNodes.
112,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/88,88,Update number of tests,,nishikeshKardak,39300717,2019-05-04T11:27:49Z,CONTRIBUTOR,True,11,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8354a7a36b0dd01ba4f0d81140340bd85822eb23,Update number of tests
113,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/88,88,Update number of tests,,nishikeshKardak,39300717,2019-05-04T11:27:49Z,CONTRIBUTOR,True,11,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,69389038a0136449e5650a25ac4c47de47b0544a,Update number of tests
114,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/87,87,fix function unquote indentation,indentation is not a multiple of four,diggzhang,2420385,2019-04-17T08:21:46Z,CONTRIBUTOR,True,2,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,2dd7042ef24b9b1197f4c564c29db75d6630382f,"fix function unquote indentation

indentation is not a multiple of four"
115,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,46b27ecced9283a9ef05277bdf57ebb40e447a8f,Add create table syntax
116,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b762ea797f5c84fcae392ff072b45e6b695d52d2,Add create table syntax
117,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c951662bb66fb07460b05bd81c9b6de8bc913294,"Remove ""name"" keyword"
118,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,306547b2712f266548870ed9c50e5f2bfc367b80,"Fix syntax problem for create table and  add ""columns"""
119,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b02d36b24fdbabd25002b46c5fb6835cb9f4e4d8,skip some tests
120,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,989d2f71c4b8b0f8bc472d069d115894aa50864b,Add some tests for create table syntax
121,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,900b518f706bfec7e537536bd80874b4294aea0d,Skip multiple column test
122,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,75e9622021766c717c4140af0f68b63d989c5990,"Added tests for create table syntax

For multiple columns"
123,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7f9d5a184e16b56a93d9e4a4945e7fdc3e4fd899,Add support for multiple columns
124,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7087b65b540b564e4eaa19fcdbe3c3b0b492a6fc,Update sql_parser.py
125,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,982dd5c83a47fbe30100164dc45acdc6a1cd2222,Added column size
126,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,392ac01426d5ac395e691d6819eb33001ddc9592,Added column size
127,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7792ff2fe1569e229d6afd3509694a8fa92f9c35,Add support for options
128,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8c00e60158e17f5d34ca22faf7567db82ecd8b18,All changes Done!
129,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0f7215f8b52d60b8ab7dd1dc6dd27ac74a3c4680,Added tests for column options
130,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,24d24f13ab7d5063fb4490c560c34d5dbe4b3de0,Add more tests
131,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/86,86,WIP: Add create table syntax,"Hello @klahnakoski, I am working on Issue #6. I have tried to convert SQL = ""create table student (name varchar, age int )"". but I can only convert into {'create table': [{'name': [['student']]}]}
For further SQL I can't understand how to convert it.

I have added WIP in the PR header because this PR is not completed. I'm currently working on it. Please review this and give me suggestions.
I have added the screenshot of the output.
![Capture5](https://user-images.githubusercontent.com/39300717/55288167-22492500-53d1-11e9-8ce3-0d5714047a96.JPG)
",nishikeshKardak,39300717,2019-03-31T10:52:41Z,CONTRIBUTOR,False,165,5,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,989d4f0b1be027950ac12493832671982785c28c,Updated with new changes
132,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/85,85,WIP: Add create table syntax,,nishikeshKardak,39300717,2019-03-31T10:44:43Z,CONTRIBUTOR,False,31,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f4364c04a058a50bf1f9ab6fc62df27013f4cdbe,"Update requirement 

Update mo-files which we used for deployment"
133,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/85,85,WIP: Add create table syntax,,nishikeshKardak,39300717,2019-03-31T10:44:43Z,CONTRIBUTOR,False,31,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c8861ab39224acfca11879b29e0b3ee1ccd378e3,Add create table syntax
134,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/85,85,WIP: Add create table syntax,,nishikeshKardak,39300717,2019-03-31T10:44:43Z,CONTRIBUTOR,False,31,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,46519e8a56b38f0994cc3dabc89c32ae87653417,Update requirements.txt
135,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/85,85,WIP: Add create table syntax,,nishikeshKardak,39300717,2019-03-31T10:44:43Z,CONTRIBUTOR,False,31,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d9858b44f38e9a99f435bffa88c731222d015721,Add create table syntax
136,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/85,85,WIP: Add create table syntax,,nishikeshKardak,39300717,2019-03-31T10:44:43Z,CONTRIBUTOR,False,31,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0ba7cdd7415d8a51fb979b8153aeb967022dc2c7,Delete requirements.txt
137,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/84,84,Add Mozilla Code of Conduct,"Fixes #83


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T22:06:55Z,CONTRIBUTOR,True,15,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9b709993f6c23cf0d691fdbd6a967310e1265bfa,"Add Mozilla Code of Conduct file

Fixes #83.

_(Message COC002)_"
138,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/82,82,Update version number,,nishikeshKardak,39300717,2019-03-26T10:35:22Z,CONTRIBUTOR,True,4,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4f6738211ffe05aea543ca600a1cb0f8f5a51695,Update version number
139,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/82,82,Update version number,,nishikeshKardak,39300717,2019-03-26T10:35:22Z,CONTRIBUTOR,True,4,4,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9e2fb1acb05144495822efe70e0c6291d53a6b5a,Update version number
140,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/81,81,Fixed issue #77,Fixed issue #77 and update the number of tests.,nishikeshKardak,39300717,2019-03-26T10:20:56Z,CONTRIBUTOR,True,7,7,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a1767c088d2b3a787e0d388be408e7273ab75f68,Fixed issue #77
141,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/80,80,"Enable test_issue68, test already passes (fix merge conflict)",,klahnakoski,2334429,2019-03-25T18:17:45Z,CONTRIBUTOR,True,0,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d88a2dc0c63ade06a21260ff2b9b8f45e742a335,"Enable test_issue68, test already passes"
142,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/80,80,"Enable test_issue68, test already passes (fix merge conflict)",,klahnakoski,2334429,2019-03-25T18:17:45Z,CONTRIBUTOR,True,0,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7999563b0bca23789d55dd407537d38053a871d6,Merge branch 'master' of git://github.com/nishikeshKardak/moz-sql-parser into add-test
143,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/78,78,"Enable test_issue68, test already passes","Hello @klahnakoski, I ran the test locally on my machine and it passes without skipping. But unfortunately, the travis ci build failed.
![Capture4](https://user-images.githubusercontent.com/39300717/54875778-040c8380-4e2b-11e9-9339-b090a9f28a17.JPG)
",nishikeshKardak,39300717,2019-03-24T06:11:36Z,CONTRIBUTOR,True,14,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d88a2dc0c63ade06a21260ff2b9b8f45e742a335,"Enable test_issue68, test already passes"
144,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/76,76,Add mo-files in requirements.txt,"In the program, we used module mo-files, but we couldn't update it in the requirements.txt.

Reference: https://github.com/mozilla/moz-sql-parser/blob/dev/moz_sql_parser/__init__.py#L23",nishikeshKardak,39300717,2019-03-19T09:43:06Z,CONTRIBUTOR,False,1,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f4364c04a058a50bf1f9ab6fc62df27013f4cdbe,"Update requirement 

Update mo-files which we used for deployment"
145,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4539a797358c0080c6d21d76010de38732744ffc,Removed #ateam channel
146,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,57bc1453d02c0c5bf1b5701caa69ac423484edb0,"Merge pull request #1 from nishikeshKardak/nishikeshKardak-sdev

Removed #ateam channel"
147,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3a5c172255c19a10d05969997b0b21917b347ffa,Enable test_191
148,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f28276e999e90bb847d763652b8f22909aa992b1,"Merge pull request #2 from nishikeshKardak/nishikeshKardak-sdev-1

Enable test_191"
149,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,2272dc58c85592f352f16f59764831c3e2a6b0ba,Update changes
150,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/75,75,"Removed #ateam channel, add instructions for test",Removed #ateam channel from contribute.json because it is no longer exist. (Reference: https://groups.google.com/forum/#!msg/mozilla.dev.platform/R8QQHTNEROw/7sQSv0GTEwAJ),nishikeshKardak,39300717,2019-03-14T07:51:40Z,CONTRIBUTOR,True,10,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,bd48172efdca62b17c1a70367df8e21ed5cb30dc,"make test instructions separate

Make test instructions separate for Linux and Windows. Linux versions do not recognize this command `python.exe -m unittest discover tests`"
151,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8d0ab04032fd2282655714ed4e3cbebdfaf17d60,Removed #ateam network
152,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f4c36057f6e9392b6a51d343144a277bcb07060d,"Make compatible with linux too

Linux versions do not accept the `python.exe -m unittest discover tests `."
153,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f4b076289bf3e8dbb7f1b5d6e73cdb1b852b8b62,Separate commands of linux and windows tests
154,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,164a032e5a03626dbdf977bf0c0b6c1643b64818,Enable test_191
155,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8b35998780d4edc2fe429814085a079cbf3e5194,Enable test_191
156,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0d93bc5acf9712e0b1e5002dc4185b41f7cc80da,Delete test_format_and_parse.py
157,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/74,74,Fixed #73 and separate Running tests instructions for linux and windows. ,,nishikeshKardak,39300717,2019-03-13T15:02:19Z,CONTRIBUTOR,False,12,2,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5d1b4623a5f291051102370722b653fa7a337b42,Add files via upload
158,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/67,67,"Pre-processes the Query, to remove trailing semicolon",Fixes Issue #49,Sonalisinghal,33093195,2019-02-26T17:37:58Z,CONTRIBUTOR,True,1,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e64a462c402553be1d3d913354f67e941d294655,"Pre-processes the Query, to remove trailing semicolon

Fixes Issue #49"
159,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/66,66,Added MacOS temp file extensions to gitignore,,Sonalisinghal,33093195,2019-02-26T17:08:31Z,CONTRIBUTOR,True,2,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,cabdb1cbc66a87fcaeae9c7b39a75ab7e0fd6c5b,Added MacOS temp file extensions to gitignore
160,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/62,62,Allow subqueries,,klahnakoski,2334429,2019-02-02T23:21:25Z,CONTRIBUTOR,True,58,17,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ac0bf83e75c29892ff081f595ad48588e7d7d0f7,docs
161,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/62,62,Allow subqueries,,klahnakoski,2334429,2019-02-02T23:21:25Z,CONTRIBUTOR,True,58,17,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,52179898ba30e862e0fa3bfde78ce7f1cef99cac,add subquery test
162,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/62,62,Allow subqueries,,klahnakoski,2334429,2019-02-02T23:21:25Z,CONTRIBUTOR,True,58,17,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3ffb9bf30a99689a62aefd4c6062a3c78083c7ac,Merge remote-tracking branch 'origin/dev' into dev
163,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/62,62,Allow subqueries,,klahnakoski,2334429,2019-02-02T23:21:25Z,CONTRIBUTOR,True,58,17,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c18d2df16d89768f2d69dcc632ec08fd6184e1ee,fix subquery
164,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/62,62,Allow subqueries,,klahnakoski,2334429,2019-02-02T23:21:25Z,CONTRIBUTOR,True,58,17,4,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,2aab368de9b56cb7ad077fe065c5c218bcbf6ec7,try this
165,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/60,60,"WIP: Enabled select_one_column test, already passes",,sam-smo,43521142,2019-01-24T00:42:04Z,CONTRIBUTOR,False,0,4,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,acf04e83049e16bda7b5fa0c6bc9af4b9019c398,"Enabled select_one_column test, already passes"
166,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/60,60,"WIP: Enabled select_one_column test, already passes",,sam-smo,43521142,2019-01-24T00:42:04Z,CONTRIBUTOR,False,0,4,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,f668a806fe8d5494fb776249733b6377aac83791,"Merge pull request #1 from mozilla/dev

updating my fork"
167,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/60,60,"WIP: Enabled select_one_column test, already passes",,sam-smo,43521142,2019-01-24T00:42:04Z,CONTRIBUTOR,False,0,4,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,fa60ff3028094dc0518d9b886db012ca9bfa419b,"Re-enabled two tests that already pass, but stuck on the multiple case when test

The test_ugly_case_statement test is the only test in this file that has multiple when statements."
168,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/59,59,First draft of GSOC proposal to include runtime improvements,"Here's a first draft for you to work from for the GSOC proposal to include runtime.  I suspect you'll be better at filling out some of the proposed solutions, so hopefully you don't mind polishing it.  Thanks!",pydolan,467780,2019-01-19T15:04:21Z,CONTRIBUTOR,True,22,10,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a214cdfbf981879bf8414564ec095a5f87ba79e4,First draft of GSOC proposal to include runtime improvements
169,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/57,57,Added not-between operator support,"This PR adds support for `NOT BETWEEN` SQL, such as:

```sql
SELECT a FROM dual WHERE a NOT BETWEEN 1 and 2
```

The operator name returned from the parser is currently `not between`, which differs from `NOT LIKE` and `NOT IN`, who are respectively labeled as `nlike` and `nin`.  I didn't see an obvious way to change this, but if you see an easy way to do so, let me know.",pydolan,467780,2019-01-16T16:15:55Z,CONTRIBUTOR,True,21,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7adaf719493329c1c9dd56641789c264640158d0,Added not-between operator support
170,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6c76c4ef3a6bd998bf626b5b613fb85ef123ff6f,Enhance format function to support different kinds of joins in json
171,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b8bf2813b2341b662c34becd7d70d815675c3f78,"Merge pull request #1 from mozilla/dev

Merge with base"
172,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,e34cbfe7b77ad07d1d9786c2cf7069b4b61551d4,"Merge branches 'dev' and 'enhance-format' of https://github.com/johnatannvmd/moz-sql-parser into enhance-format

# Conflicts:
#	moz_sql_parser/sql_parser.py"
173,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,618f5653c64f1434ae8c7ba8f1d2c1a927a6c9e0,Apply suggested changes for PR
174,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,fda16ef32a1792f2f49626837eebcd1671cb5076,Clean up all import. Fix import
175,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/56,56,Enhance format function to support different kinds of joins in json,Fix #55 ,johnatannvmd,4918448,2019-01-15T20:41:08Z,CONTRIBUTOR,True,53,25,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,27f5ca7efbb4d3a2535b316bd31b83a75bf56572,Remove subtest for Python 2.7 compatibility
176,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/54,54,ensure recursion limit is low for master branch,For https://github.com/mozilla/moz-sql-parser/issues/53,klahnakoski,2334429,2019-01-12T14:21:39Z,CONTRIBUTOR,True,34,4,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,c929442b7e2e5679932faf3e96aba78f9d300e37,ensure recursion limit is low for master branch
177,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/54,54,ensure recursion limit is low for master branch,For https://github.com/mozilla/moz-sql-parser/issues/53,klahnakoski,2334429,2019-01-12T14:21:39Z,CONTRIBUTOR,True,34,4,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,dc854072dcbae2584f50522e085653d1012d382e,revert change in test
178,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/51,51,Added support for JOINs with USING syntax,"This PR adds support for `USING` in join statements. For example:

```sql
SELECT * FROM table1 INNER JOIN table2 USING (id)
```

This would result in `{'join': 'table2', 'using': 'id'}` being added to the `from` list.

This addresses #50 ",pydolan,467780,2019-01-09T20:33:23Z,CONTRIBUTOR,True,21,3,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,aad189348e857e8879f5562d8eb33bdb5cb44ac2,Added support for JOINs with USING syntax
179,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/51,51,Added support for JOINs with USING syntax,"This PR adds support for `USING` in join statements. For example:

```sql
SELECT * FROM table1 INNER JOIN table2 USING (id)
```

This would result in `{'join': 'table2', 'using': 'id'}` being added to the `from` list.

This addresses #50 ",pydolan,467780,2019-01-09T20:33:23Z,CONTRIBUTOR,True,21,3,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,91f6ac0dd6d088e0edf7364ee761743c1cb0d6a5,Added exclusivity requirement for ON and USING
180,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/51,51,Added support for JOINs with USING syntax,"This PR adds support for `USING` in join statements. For example:

```sql
SELECT * FROM table1 INNER JOIN table2 USING (id)
```

This would result in `{'join': 'table2', 'using': 'id'}` being added to the `from` list.

This addresses #50 ",pydolan,467780,2019-01-09T20:33:23Z,CONTRIBUTOR,True,21,3,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,43bd587b7a6865a82e9623775be50cda34225a60,Added failing test for JOIN with ON and USING
181,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/47,47,remove extra requirements from tests,,klahnakoski,2334429,2019-01-08T20:44:12Z,CONTRIBUTOR,True,55,124,9,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,13d1f31e657ab657a6592cdd98fc2cd5486c6dcf,remove extra requirements from tests
182,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/47,47,remove extra requirements from tests,,klahnakoski,2334429,2019-01-08T20:44:12Z,CONTRIBUTOR,True,55,124,9,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,350b5cf1bfefae9caee3ba3a4aef1acecf80f4ce,fix tests
183,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/45,45,"Added support for parsing other JOIN types (FULL, RIGHT, LEFT OUTER, etc)","Previously, the parser did not recognize all of the standard JOINs, such as RIGHT JOIN, RIGHT OUTER JOIN, LEFT OUTER JOIN, FULL JOIN, and FULL OUTER JOIN.  This PR adds support for these, as well as some simple test cases to test their parsing. 

Notes:
- For the test cases, I simply duplicated `test_simple.test_left_join`, swapping the new join types accordingly and putting the new functions in `test_simple.py`.  Let me know if you prefer these in `test_resources.py` instead (or if it would be better to just merge these into one function with a while loop).
- In the JSON output, ""LEFT OUTER JOIN"" becomes ""left outer join"", and ""LEFT JOIN"" remains ""left join"".  I could see how some might prefer ""LEFT OUTER JOIN"" to become ""left join"" since it is the same thing.  I left it as is since it keeps the PR changes simple and the behavior preference will be pretty subjective.",pydolan,467780,2019-01-07T22:30:07Z,CONTRIBUTOR,True,41,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,87af5df6def3fba31e81b1c71ef3d58c2584a1c0,"Added support for parsing other JOIN types (FULL, RIGHT, LEFT OUTER, etc.)"
184,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/44,44,Pulled EXCEPTION_MESSAGE up to module constant,"Fixes issue #28 

I tried making test_two_tables fail by changing the expected sql, but no exception was thrown. I was able to verify the change worked by making test_select_expression fail. Do you know why test_two_tables didn't fail?",sam-smo,43521142,2019-01-03T02:12:04Z,CONTRIBUTOR,True,16,16,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a1f4abb4da01089a9b0680a8c8ddd0486d95e317,Pulled EXCEPTION_MESSAGE up to module constant
185,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4bb036047d5751bee7828e94243e27f4e34cc1c1,"Add ""NOT LIKE"" operator

parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '"
186,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9719e65229b81d1d3c15db105963689ca150f6e1,fix typo
187,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0a5e28729bb3731b92a14a3b3a87b34b2e17be84,remove space in the NOT LIKE keyword in SQL ast
188,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a5a93c89a9e68637f622fbc23b8604045d7ac24a,add formatting function for NOT LIKE operator
189,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,92a7cf302d03c860021149ad569f9672ae1cfae7,add simple test for NOT LIKE operator
190,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5831b92ff05238311efb4d9baf3060cc0c1e0e7d,rename the not like keyword in SQL ast to nlike
191,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/43,43,"Add ""NOT LIKE"" operator","parse queries such as 'SELECT column FROM Table WHERE column NOT LIKE ""%ihello%"" '",todpole3,4227871,2018-12-22T06:28:54Z,CONTRIBUTOR,True,22,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5e2180db86ec9eb73ed992adf5b9039900afaa78,add not like in select test
192,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/42,42,"Add ""NOT IN"" operator","parse queries like ""SELECT * FROM   customers WHERE country NOT IN ('Germany', 'France', 'UK');""",todpole3,4227871,2018-12-22T06:04:40Z,CONTRIBUTOR,True,23,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,854644e4887cb588db2f25fc8cb87742cdfd0285,"Add ""NOT IN"" operator

parse queries like ""SELECT * FROM   customers WHERE country NOT IN ('Germany', 'France', 'UK');"""
193,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/42,42,"Add ""NOT IN"" operator","parse queries like ""SELECT * FROM   customers WHERE country NOT IN ('Germany', 'France', 'UK');""",todpole3,4227871,2018-12-22T06:04:40Z,CONTRIBUTOR,True,23,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8f70c0cc2fd0a8e671e8b7655001da00060a7d04,rename the not in keyword in SQL ast to nin
194,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/42,42,"Add ""NOT IN"" operator","parse queries like ""SELECT * FROM   customers WHERE country NOT IN ('Germany', 'France', 'UK');""",todpole3,4227871,2018-12-22T06:04:40Z,CONTRIBUTOR,True,23,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,4eeba463bb05bd56879dd81f67cc95ed93665405,add formatting function for NOT IN operator
195,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/42,42,"Add ""NOT IN"" operator","parse queries like ""SELECT * FROM   customers WHERE country NOT IN ('Germany', 'France', 'UK');""",todpole3,4227871,2018-12-22T06:04:40Z,CONTRIBUTOR,True,23,0,3,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,2de7ebd84c4e469998a2d868bd9b82c8553fe65e,add simple test for NOT IN operator
196,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/40,40,Removing binary file from repo,,todpole3,4227871,2018-12-20T22:53:18Z,CONTRIBUTOR,True,0,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,74878367035950003a59e0a097effa3678967528,Removing binary file from repo
197,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0172bf234bd2746d84370aba1b9c8a9fb8ed8922,"Handle nested queries in def op()

Passed test 86-89"
198,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,67e5eb758ed0679db8b79375a7b6b906ee439f3b,"remove @skip(broken) for tests 86-89

after fixing nested query formatting"
199,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3ef69d1c4b51b650fff1b3a060ffb59850ee00ad,move nested query checks to dispatch function
200,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5a7a3f953c17e1e7c19eab0580526468393e00ff,rewrite dispatch checks for nested queries
201,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0ac0a54838856b678c046e1debb569847897c05e,shove all other multiple-key cases to op() and raise exception
202,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6985fa46381eedcacb1a733fa6ca7aa7ce87b5ff,remove irrelevant test files
203,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,1db7e553c9e36a5309ea31d3d12d703251ec2cd5,shove all other multiple-key cases to op() and raise exception
204,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/39,39,Handle nested queries in def op(),Passed test 86-89,todpole3,4227871,2018-12-20T22:32:15Z,CONTRIBUTOR,True,10,5,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ad7f0f3f6360ea4fe49c885c88ce86d2c975d9ae,"use the original op() exception message

operators should have only one key"
205,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/37,37,Experimental: attempt to make infix_notation faster,"The idea is to parse the alternating sequence of operands and operators, then compose the parse tree from that.",klahnakoski,2334429,2018-11-14T03:31:26Z,CONTRIBUTOR,False,6140,1,9,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,14725a9ab0cdb8afcfc6d16efa92b5f7695d1dbb,add as vendor files
206,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/37,37,Experimental: attempt to make infix_notation faster,"The idea is to parse the alternating sequence of operands and operators, then compose the parse tree from that.",klahnakoski,2334429,2018-11-14T03:31:26Z,CONTRIBUTOR,False,6140,1,9,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,af7c48f1b002b434e3418baa4b8932d2b1f89b3b,split up pyparsing into some files
207,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/37,37,Experimental: attempt to make infix_notation faster,"The idea is to parse the alternating sequence of operands and operators, then compose the parse tree from that.",klahnakoski,2334429,2018-11-14T03:31:26Z,CONTRIBUTOR,False,6140,1,9,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,16030b73524bc767d9902341c4cc9901407a77d6,add token_type to ParseResults for future object size reduction
208,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/35,35,ADD parsing option for column names containing spaces,"Hi,
I encountered a problem when parsing SQL queries with column names that contained special characters like space. In MySql (I use mariaDB) such columns are put into backticks, so a valid query yields:
```
SELECT `user ID`
FROM a
```
I added a test and parsing option to the sql_parse module.

Please merge it if you find it useful.",mknorps,27200848,2018-11-09T10:13:53Z,CONTRIBUTOR,True,53,3,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b30c7c9832dc605d8951646c3c53bf0bb778e7ab,ADD parsing option for column names containing spaces
209,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/35,35,ADD parsing option for column names containing spaces,"Hi,
I encountered a problem when parsing SQL queries with column names that contained special characters like space. In MySql (I use mariaDB) such columns are put into backticks, so a valid query yields:
```
SELECT `user ID`
FROM a
```
I added a test and parsing option to the sql_parse module.

Please merge it if you find it useful.",mknorps,27200848,2018-11-09T10:13:53Z,CONTRIBUTOR,True,53,3,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,35a63d3c3d5ce04b9d359210bca9c8ce3e85dcfc,"FIX requirements

ADD simple backticks test"
210,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/35,35,ADD parsing option for column names containing spaces,"Hi,
I encountered a problem when parsing SQL queries with column names that contained special characters like space. In MySql (I use mariaDB) such columns are put into backticks, so a valid query yields:
```
SELECT `user ID`
FROM a
```
I added a test and parsing option to the sql_parse module.

Please merge it if you find it useful.",mknorps,27200848,2018-11-09T10:13:53Z,CONTRIBUTOR,True,53,3,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,1631b84d36e89e80537ef75071c276de36d2d809,ADD backtick escape
211,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/35,35,ADD parsing option for column names containing spaces,"Hi,
I encountered a problem when parsing SQL queries with column names that contained special characters like space. In MySql (I use mariaDB) such columns are put into backticks, so a valid query yields:
```
SELECT `user ID`
FROM a
```
I added a test and parsing option to the sql_parse module.

Please merge it if you find it useful.",mknorps,27200848,2018-11-09T10:13:53Z,CONTRIBUTOR,True,53,3,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8b852457970100c809adc6bb087d29072060994c,"DEL replace(""''"", ""\\'"") for backticks

ADD handling for 'LEFT JOIN' in parser
ADD test for 'LEFT JOIN' handling
SKIP test in format_and_parse for backticks and 'LEFT JOIN'"
212,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/34,34,support function name with underline and number,some function name may have _ or number that could be support,hyacker,6059307,2018-11-06T08:23:58Z,NONE,False,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3272100ac4ba523261d9e59a2d7953f35a1b890a,"support function name with underline and number

some function name may have _ or number that could be support"
213,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/33,33,Fix orderby multiple value formatting issue,"Support to format orderby multiple fields, like {""orderby"": [{""value"": ""a""}, {""value"", ""b""}]}
",thrbowl,1860809,2018-09-21T23:38:30Z,CONTRIBUTOR,True,5,11,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,640730109e4d296e3cbe41eaae45eca25b0ec687,fix orderby multiple value formatting issue
214,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/31,31,"Change ""mult"" to ""mul""","fix issue #29
",thrbowl,1860809,2018-09-20T10:59:41Z,CONTRIBUTOR,True,21,21,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,735d60fb48f0fa457461b0bac7a73209fc8da6db,Parse *[multiply] to mul instead of mult
215,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/31,31,"Change ""mult"" to ""mul""","fix issue #29
",thrbowl,1860809,2018-09-20T10:59:41Z,CONTRIBUTOR,True,21,21,6,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d00237fa6b5f0ebd1913248160ebbb2956555ede,Update test cases to use *[mul]
216,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/30,30,Fix functions without arguments in formatter,A small quick fix for functions without arguments like `NOW()`. Added a unit test covering the problem.,betodealmeida,1534870,2018-09-19T18:12:42Z,CONTRIBUTOR,True,8,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d923cd90c56c29a78d8ef56c356912132392fb13,Merge branch 'improvements_sql_formatter' of github.com:betodealmeida/moz-sql-parser
217,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/30,30,Fix functions without arguments in formatter,A small quick fix for functions without arguments like `NOW()`. Added a unit test covering the problem.,betodealmeida,1534870,2018-09-19T18:12:42Z,CONTRIBUTOR,True,8,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,6b2782250017877e65fb1d14173d6e3e312f6438,Merge branch 'master' of github.com:mozilla/moz-sql-parser
218,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/30,30,Fix functions without arguments in formatter,A small quick fix for functions without arguments like `NOW()`. Added a unit test covering the problem.,betodealmeida,1534870,2018-09-19T18:12:42Z,CONTRIBUTOR,True,8,1,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,8a9655b0e23894971a905ee12878e3400dc01b44,Fix formatting of functions without arguments
219,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/26,26,More Unit Tests for the Formatter,,tolmanam,3492441,2018-09-17T19:20:39Z,NONE,False,1060,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ddf66f7cce170b31c2d46d89b082dd7152043424,Extented unit tests
220,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/26,26,More Unit Tests for the Formatter,,tolmanam,3492441,2018-09-17T19:20:39Z,NONE,False,1060,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,3a88dc63c6ff092e2cc39495ba71b7556997218f,Clean up the unit test code
221,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/26,26,More Unit Tests for the Formatter,,tolmanam,3492441,2018-09-17T19:20:39Z,NONE,False,1060,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,7bb9b1d4bb218f1aa717e99ec102afd7aa2c58ab,Remove debug print statements
222,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/25,25,Improvements to SQL formatter,This PR rewrites the `query` method in the formatter to use a list comprehension. It also fixes a bug where the values of operators were not processed (I've added a unit test capturing the bug).,betodealmeida,1534870,2018-09-17T06:26:02Z,CONTRIBUTOR,True,12,7,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,ae7393caa723d43163cfa60355cbbba8d6729ebd,Fix bug
223,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/25,25,Improvements to SQL formatter,This PR rewrites the `query` method in the formatter to use a list comprehension. It also fixes a bug where the values of operators were not processed (I've added a unit test capturing the bug).,betodealmeida,1534870,2018-09-17T06:26:02Z,CONTRIBUTOR,True,12,7,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,a5ba71b6a6cc432b7b3b1d99f5103e5609f28634,Use comprehension
224,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/24,24,Sql synthesizer,"@klahnakoski @betodealmeida
I had started to work on my own version of the SQL formatter but you guys beat me to the punch.  I think the code you've already accepted is easier to read then what I came up with, but there are a few additional unit tests that I brought over from the test_resources.py, that fail when run against the code on MASTER.

Please check out my full_unittesting branch to see the unit tests run against the current baseline.
https://github.com/tolmanam/moz-sql-parser/tree/full_unittesting

This branch uses jinja2 templating to generate the SQL statement from the JSON.  It started out pretty simple but quickly become ridiculous, so I'm not really proposing that you accept this version into your baseline.  I just wanted to demonstrate that it is able to pass (most of) the new unit tests.",tolmanam,3492441,2018-09-14T14:51:58Z,NONE,False,4396,5,12,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,aec0d83062161bde4004734cf1033c1766893262,add test
225,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/24,24,Sql synthesizer,"@klahnakoski @betodealmeida
I had started to work on my own version of the SQL formatter but you guys beat me to the punch.  I think the code you've already accepted is easier to read then what I came up with, but there are a few additional unit tests that I brought over from the test_resources.py, that fail when run against the code on MASTER.

Please check out my full_unittesting branch to see the unit tests run against the current baseline.
https://github.com/tolmanam/moz-sql-parser/tree/full_unittesting

This branch uses jinja2 templating to generate the SQL statement from the JSON.  It started out pretty simple but quickly become ridiculous, so I'm not really proposing that you accept this version into your baseline.  I just wanted to demonstrate that it is able to pass (most of) the new unit tests.",tolmanam,3492441,2018-09-14T14:51:58Z,NONE,False,4396,5,12,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,32441675a489010f1461dd589f19ef1192f91246,"fix tests/requirements.txt, use markdown documentation"
226,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/24,24,Sql synthesizer,"@klahnakoski @betodealmeida
I had started to work on my own version of the SQL formatter but you guys beat me to the punch.  I think the code you've already accepted is easier to read then what I came up with, but there are a few additional unit tests that I brought over from the test_resources.py, that fail when run against the code on MASTER.

Please check out my full_unittesting branch to see the unit tests run against the current baseline.
https://github.com/tolmanam/moz-sql-parser/tree/full_unittesting

This branch uses jinja2 templating to generate the SQL statement from the JSON.  It started out pretty simple but quickly become ridiculous, so I'm not really proposing that you accept this version into your baseline.  I just wanted to demonstrate that it is able to pass (most of) the new unit tests.",tolmanam,3492441,2018-09-14T14:51:58Z,NONE,False,4396,5,12,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9ca2e47787d2ab40a3f5189a5a252cf565ee845d,docs
227,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/24,24,Sql synthesizer,"@klahnakoski @betodealmeida
I had started to work on my own version of the SQL formatter but you guys beat me to the punch.  I think the code you've already accepted is easier to read then what I came up with, but there are a few additional unit tests that I brought over from the test_resources.py, that fail when run against the code on MASTER.

Please check out my full_unittesting branch to see the unit tests run against the current baseline.
https://github.com/tolmanam/moz-sql-parser/tree/full_unittesting

This branch uses jinja2 templating to generate the SQL statement from the JSON.  It started out pretty simple but quickly become ridiculous, so I'm not really proposing that you accept this version into your baseline.  I just wanted to demonstrate that it is able to pass (most of) the new unit tests.",tolmanam,3492441,2018-09-14T14:51:58Z,NONE,False,4396,5,12,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,0e1c93c3792ca63a7207f902d3a673aa1682f9be,Update dead link for pyparsing
228,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/24,24,Sql synthesizer,"@klahnakoski @betodealmeida
I had started to work on my own version of the SQL formatter but you guys beat me to the punch.  I think the code you've already accepted is easier to read then what I came up with, but there are a few additional unit tests that I brought over from the test_resources.py, that fail when run against the code on MASTER.

Please check out my full_unittesting branch to see the unit tests run against the current baseline.
https://github.com/tolmanam/moz-sql-parser/tree/full_unittesting

This branch uses jinja2 templating to generate the SQL statement from the JSON.  It started out pretty simple but quickly become ridiculous, so I'm not really proposing that you accept this version into your baseline.  I just wanted to demonstrate that it is able to pass (most of) the new unit tests.",tolmanam,3492441,2018-09-14T14:51:58Z,NONE,False,4396,5,12,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,14592daffb511b1db88bd9b57c4a22f6e390f338,Attempt to add SQL synthesizer using jinja2
229,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/23,23,Add formatter,"I created a new file for generating SQL back from the parsed JSON. The unit tests from the parser were adapted to check for the inverse operation, and a few others were added.

While at it, I added support for `OFFSET`. I know it's not standard SQL, but since neither is the supported `LIMIT` I thought it wouldn't matter (and I really need my parser to be able to understand `OFFSET`).

Let me know if I should sign a contributor license agreement. I added my name as the author in the files I created, let me know if that's ok or if I should add your name since you're the lead developer.

This PR fixes https://github.com/mozilla/moz-sql-parser/issues/9.

",betodealmeida,1534870,2018-09-14T03:02:42Z,CONTRIBUTOR,True,575,3,5,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d9812ffde20edc954aa9bba58eb7696b1811ac31,Add formatter.
230,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/22,22,fix the select_one_* test,,klahnakoski,2334429,2018-09-13T15:37:48Z,CONTRIBUTOR,True,3,3,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b79f9621627b1fd019651174bf9f38e7d1d52102,fix the select_one_* test
231,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/20,20,Update dead link for pyparsing,,ealter,607391,2018-09-07T01:03:42Z,CONTRIBUTOR,True,1,1,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,5d86edd6071055920e1aa9d92e0105599acc8674,Update dead link for pyparsing
232,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/16,16,fix:support like expression,"select * from trade where school LIKE '%shool' and name='abc' and id IN ('1','2')
->
{'select': '*', 'from': 'trade', 'where': {'and': [{'like': [{'literal': 'school'}, {'symbol': 'right'}, 'xiao']}, {'eq': ['name', {'literal': 'abc'}]}, {'in': ['tid', [{'literal': '1'}, {'literal': '2'}]]}]}}",faryang-sh,14032423,2018-06-28T03:48:03Z,NONE,False,25,0,1,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,df619ffa98b147938efea7011bf1392c5d699ec3,fix:support like expression
233,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/15,15,support like expression,"select * from trade where school LIKE '%shool' and name='abc' and id IN ('1','2')
->
{'select': '*', 'from': 'trade', 'where': {'and': [{'like': [{'literal': 'school'}, {'symbol': 'right'}, 'xiao']}, {'eq': ['name', {'literal': 'abc'}]}, {'in': ['tid', [{'literal': '1'}, {'literal': '2'}]]}]}}",faryang-sh,14032423,2018-06-28T03:44:07Z,NONE,False,0,0,0,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,65d354f8ed597dfc782ae7b36932ab90215ace61,Merge branch 'dev'
234,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/7,7,Fixes for Python3,,klahnakoski,2334429,2018-01-29T17:04:54Z,CONTRIBUTOR,True,8,3,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,9f86b58892926ddb2f17dbc7642a3e9aff991bbd,attempt to fix for py3
235,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/7,7,Fixes for Python3,,klahnakoski,2334429,2018-01-29T17:04:54Z,CONTRIBUTOR,True,8,3,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,d40c0ce2a361c1e70c95ee259b059c0cddfc2d5b,fix py2 tests
236,https://api.github.com/repos/mozilla/moz-sql-parser/pulls/7,7,Fixes for Python3,,klahnakoski,2334429,2018-01-29T17:04:54Z,CONTRIBUTOR,True,8,3,2,Let's make a SQL parser so we can provide a familiar interface to non-sql datastores!,Python,b01d8165b615f7c16d59c7f35c46bbd048c642f8,"generators are truthy
all tests pass on py3"
