,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/cerberus/pulls/43,43,Update link to alert dashboard,,mreid-moz,969479,2019-04-12T14:31:51Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,cfc0b2f87cfda34a3165d9ececed0aa1960d26e9,Update link to alert dashboard
1,https://api.github.com/repos/mozilla/cerberus/pulls/42,42,Add Mozilla Code of Conduct,"Fixes #41


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T05:00:05Z,CONTRIBUTOR,True,15,0,1,Automatic alert system for telemetry histograms,Python,54717722028cd5eabd70ab901a05dbabc11a017d,"Add Mozilla Code of Conduct file

Fixes #41.

_(Message COC002)_"
2,https://api.github.com/repos/mozilla/cerberus/pulls/39,39,Fix scraper for the release calendar,This fixes #38.,fbertsch,20819040,2018-08-09T20:08:40Z,CONTRIBUTOR,True,10,2,3,Automatic alert system for telemetry histograms,Python,c2f12884b7f20387d4d09e0c0a0ea5bfab94b465,"Allow hyperlinks and multi-versioned cells

When scraping the table, we previously started failing
because release management has included both hyperlinks
and multi-versioned cells (for ESR) in the release
calendar.

This allows for both of those, picking the last version
as the ""version""."
3,https://api.github.com/repos/mozilla/cerberus/pulls/39,39,Fix scraper for the release calendar,This fixes #38.,fbertsch,20819040,2018-08-09T20:08:40Z,CONTRIBUTOR,True,10,2,3,Automatic alert system for telemetry histograms,Python,09f1ddf61269bfa7b9b15fb7dfcbfb598926df8c,Test mozilla_versions in ci
4,https://api.github.com/repos/mozilla/cerberus/pulls/37,37,Add circleci integration,"This is to test for failing of the expiration emails.

The alerting doesn't have tests.",fbertsch,20819040,2018-07-18T18:41:13Z,CONTRIBUTOR,True,47,1,2,Automatic alert system for telemetry histograms,Python,b7e140c85215675fc9d5fa63b66a7ab320304aa8,Add circleci integration
5,https://api.github.com/repos/mozilla/cerberus/pulls/37,37,Add circleci integration,"This is to test for failing of the expiration emails.

The alerting doesn't have tests.",fbertsch,20819040,2018-07-18T18:41:13Z,CONTRIBUTOR,True,47,1,2,Automatic alert system for telemetry histograms,Python,8226cd24344b70473c965b3e602f1e939ec7ce3b,Add status badge
6,https://api.github.com/repos/mozilla/cerberus/pulls/37,37,Add circleci integration,"This is to test for failing of the expiration emails.

The alerting doesn't have tests.",fbertsch,20819040,2018-07-18T18:41:13Z,CONTRIBUTOR,True,47,1,2,Automatic alert system for telemetry histograms,Python,9f02ba5e4abcce0b3fbab8d0bb491cc253f73864,Add scheduled nightly builds
7,https://api.github.com/repos/mozilla/cerberus/pulls/37,37,Add circleci integration,"This is to test for failing of the expiration emails.

The alerting doesn't have tests.",fbertsch,20819040,2018-07-18T18:41:13Z,CONTRIBUTOR,True,47,1,2,Automatic alert system for telemetry histograms,Python,7f8f8ccc8fb80b26a17f1adc3a82f59254247e90,Add link to workflows docs
8,https://api.github.com/repos/mozilla/cerberus/pulls/36,36,Staged changes,"Fixes #31 and #32, as well as a staged change for `run.sh`.",fbertsch,20819040,2018-07-18T18:18:06Z,CONTRIBUTOR,True,5,1,3,Automatic alert system for telemetry histograms,Python,ff37e20120bb35112048a93048690f9ed95507ca,Print and continue instead of assert for shape mismatch
9,https://api.github.com/repos/mozilla/cerberus/pulls/36,36,Staged changes,"Fixes #31 and #32, as well as a staged change for `run.sh`.",fbertsch,20819040,2018-07-18T18:18:06Z,CONTRIBUTOR,True,5,1,3,Automatic alert system for telemetry histograms,Python,f89c2588558faa4d4df8f19df4935de7c4f2ebe0,Set execute bits for run.sh
10,https://api.github.com/repos/mozilla/cerberus/pulls/36,36,Staged changes,"Fixes #31 and #32, as well as a staged change for `run.sh`.",fbertsch,20819040,2018-07-18T18:18:06Z,CONTRIBUTOR,True,5,1,3,Automatic alert system for telemetry histograms,Python,9d8d2275f018944d239cce9e2fa053cc097483f3,Add Scalars.* to .gitignore
11,https://api.github.com/repos/mozilla/cerberus/pulls/35,35,Fix broken expiry,Fixes #34 ,fbertsch,20819040,2018-07-17T17:01:34Z,CONTRIBUTOR,True,2,2,1,Automatic alert system for telemetry histograms,Python,0762a220dafde76a6beb278c28c9b5872e432ae7,Read from Release_Management/Calendar
12,https://api.github.com/repos/mozilla/cerberus/pulls/35,35,Fix broken expiry,Fixes #34 ,fbertsch,20819040,2018-07-17T17:01:34Z,CONTRIBUTOR,True,2,2,1,Automatic alert system for telemetry histograms,Python,159547e9cc38cd23eb7dc1a91ee313b34d6f2aab,Set BeautifulSoup parser explicitly
13,https://api.github.com/repos/mozilla/cerberus/pulls/28,28,"Bug 1306623, Bug 1330988 - Scalar Regression and Expiration Support","This is pretty straightforward. I tested this on a local Medusa. Some scalar alerts actually showed! All scalars were available in the dropdown, as expected (though I'm not sure anyone uses that anyways).

Note the ubuntu/wily64 machine is not longer available on hashicorp.

@chutten r?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/cerberus/28)
<!-- Reviewable:end -->
",fbertsch,20819040,2017-03-24T01:29:12Z,CONTRIBUTOR,True,87,33,7,Automatic alert system for telemetry histograms,Python,ad7a043db558267b2784d4396f4452c814340840,Make vagrant build work
14,https://api.github.com/repos/mozilla/cerberus/pulls/28,28,"Bug 1306623, Bug 1330988 - Scalar Regression and Expiration Support","This is pretty straightforward. I tested this on a local Medusa. Some scalar alerts actually showed! All scalars were available in the dropdown, as expected (though I'm not sure anyone uses that anyways).

Note the ubuntu/wily64 machine is not longer available on hashicorp.

@chutten r?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/cerberus/28)
<!-- Reviewable:end -->
",fbertsch,20819040,2017-03-24T01:29:12Z,CONTRIBUTOR,True,87,33,7,Automatic alert system for telemetry histograms,Python,7632adf6952f98e319d8c18f834bf852182945bf,Add ability to alert on scalars
15,https://api.github.com/repos/mozilla/cerberus/pulls/28,28,"Bug 1306623, Bug 1330988 - Scalar Regression and Expiration Support","This is pretty straightforward. I tested this on a local Medusa. Some scalar alerts actually showed! All scalars were available in the dropdown, as expected (though I'm not sure anyone uses that anyways).

Note the ubuntu/wily64 machine is not longer available on hashicorp.

@chutten r?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/cerberus/28)
<!-- Reviewable:end -->
",fbertsch,20819040,2017-03-24T01:29:12Z,CONTRIBUTOR,True,87,33,7,Automatic alert system for telemetry histograms,Python,6281f660bfa64cce08a5722686a9c0128624e8fd,Add expiration emails to scalars
16,https://api.github.com/repos/mozilla/cerberus/pulls/28,28,"Bug 1306623, Bug 1330988 - Scalar Regression and Expiration Support","This is pretty straightforward. I tested this on a local Medusa. Some scalar alerts actually showed! All scalars were available in the dropdown, as expected (though I'm not sure anyone uses that anyways).

Note the ubuntu/wily64 machine is not longer available on hashicorp.

@chutten r?

<!-- Reviewable:start -->
---
This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/cerberus/28)
<!-- Reviewable:end -->
",fbertsch,20819040,2017-03-24T01:29:12Z,CONTRIBUTOR,True,87,33,7,Automatic alert system for telemetry histograms,Python,9521b1435c29ed4f62ee8aba8b5afbd76bb678fa,Fetch Histograms.json from hg rather than github
17,https://api.github.com/repos/mozilla/cerberus/pulls/26,26,Fix a typo in export.js,"Due to the typo, this was failing locally for me, not even fetching the files. I'm not quite sure why this isn't failing on the server.

r? @vitillo

<!-- Reviewable:start -->

---

This change is [<img src=""https://reviewable.io/review_button.svg"" height=""34"" align=""absmiddle"" alt=""Reviewable""/>](https://reviewable.io/reviews/mozilla/cerberus/26)

<!-- Reviewable:end -->
",Dexterp37,883721,2016-10-27T09:56:23Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,3a3e57c2dc2a5a54bbd09c435adfbea565af41aa,Fix a typo in export.js
18,https://api.github.com/repos/mozilla/cerberus/pulls/25,25,Do not request data for keyed histograms.,"We do not support keyed histograms (we toss out evolutions that aren't mapped
to the empty string), so we need not task the aggregator by asking for data
we do not use.
",chutten,1123376,2016-05-30T14:27:26Z,CONTRIBUTOR,True,6,1,1,Automatic alert system for telemetry histograms,Python,00aad8bcd29904bf5d972155f3b91b6728006b67,"Do not request data for keyed histograms.

We do not support keyed histograms (we toss out evolutions that aren't mapped
to the empty string), so we need not task the aggregator by asking for data
we do not use."
19,https://api.github.com/repos/mozilla/cerberus/pulls/24,24,Add crash aggregates watchdog script,"Cerberus is a good place to put the watchdog script because we already have various other watchdogs here, like the histogram regression and histogram expiry detectors, and a convenient scheduled script to kick things off.

This script simply checks if the aggregates have been updated in the last few days, and sends out an email to dev-telemetry-alerts if not. I've tested this with changing the target address to my own email, and it works quite well.

Usage:

``` bash
$ ./crash_aggregates.py
Check if the crash rate aggregator job is giving the expected output.
Usage: ./crash_aggregates.py email|test
  ./crash_aggregates.py email [YYYY-MM-DD]   if crash aggregates haven't been updated in about a day as of YYYY-MM-DD (defaults to current date), email the telemetry alerts mailing list saying so
  ./crash_aggregates.py test  [YYYY-MM-DD]   print out whether crash aggregates have been updated in about a day as of YYYY-MM-DD (defaults to current date)
```
",Uberi,437196,2016-04-12T22:31:52Z,CONTRIBUTOR,False,90,4,3,Automatic alert system for telemetry histograms,Python,4caa35960092392f87fa3cc8bc16414cecedbd23,Add crash aggregates watchdog script
20,https://api.github.com/repos/mozilla/cerberus/pulls/23,23,A few more tweaks to cerberus deployment,"The script doesn't get marked as executable by root, so the most foolproof way to fix this is to just run it with bash.
",Uberi,437196,2016-04-08T16:47:23Z,CONTRIBUTOR,True,2,1,2,Automatic alert system for telemetry histograms,Python,7d91901ff1f5c96f44e9c88d6480bb952f027dbb,A few more tweaks to cerberus deployment - run script with bash
21,https://api.github.com/repos/mozilla/cerberus/pulls/22,22,Validate histograms,"This fixes the `libdc1394 error: Failed to initialize libdc1394` error from OpenCV (the `ln /dev/null /dev/raw1394` must be run on every reboot, so I've put it in run.sh).

This also mitigates the damage from histograms changing size. See https://bugzilla.mozilla.org/show_bug.cgi?id=1261530 for details. With these checks in place, we can identify this sort of issue more easily in the future.

Also, update the Vagrant config, which was broken due to using the vivid64, which is no longer available.
",Uberi,437196,2016-04-04T18:03:35Z,CONTRIBUTOR,True,32,8,4,Automatic alert system for telemetry histograms,Python,2953f7289a048f25b02fe45e6210a5490028dc8d,"Validate time series before attempting to compare them

https://bugzilla.mozilla.org/show_bug.cgi?id=1261530 broke change detection when the bucket count changed.

This patch ignores histograms for ones that change buckets, since they're supposed to be immutable."
22,https://api.github.com/repos/mozilla/cerberus/pulls/21,21,Multiple updates,"- Implement 2 waves of notifications as per [bug 1233398](https://bugzilla.mozilla.org/show_bug.cgi?id=1233398).
- Some more documentation for `run.sh`.
- Tests were failing as of 97f98c884ab20df58343e8b2e5e7592151fb32a3 - this updates the tests to use the correct dates.
",Uberi,437196,2016-01-11T22:36:52Z,CONTRIBUTOR,True,62,46,2,Automatic alert system for telemetry histograms,Python,c0ef7d57d71b3a0bfae3fbc30fae3abbe956712b,"Update tests, document run.sh, implement 2 waves of notifications as per https://bugzilla.mozilla.org/show_bug.cgi?id=1233398"
23,https://api.github.com/repos/mozilla/cerberus/pulls/20,20,Make version parsing more robust.,"Previously, parsing broke on a change in the wiki page made in July - the minor version as the second row was removed.

We can now check all rows and use all the ones that match the expected format.
",Uberi,437196,2015-08-19T15:26:41Z,CONTRIBUTOR,True,37,53,1,Automatic alert system for telemetry histograms,Python,7ad044b87bb13da466462f1921a29927df6188ea,"Make version parsing more robust.

Previously, parsing broke on a change in the wiki page made in July - the minor version as the second row was removed. We can now check all rows and use all the ones that match the expected format."
24,https://api.github.com/repos/mozilla/cerberus/pulls/20,20,Make version parsing more robust.,"Previously, parsing broke on a change in the wiki page made in July - the minor version as the second row was removed.

We can now check all rows and use all the ones that match the expected format.
",Uberi,437196,2015-08-19T15:26:41Z,CONTRIBUTOR,True,37,53,1,Automatic alert system for telemetry histograms,Python,c3a8e2af0beae797c900db0b01986d9e7627e9f8,Refactor get_release_dates() into two functions.
25,https://api.github.com/repos/mozilla/cerberus/pulls/19,19,Link to telemetry-next-node instead of a fork of telemetry-js-node.,"This has already been updated in the code, but the README was not.
",Uberi,437196,2015-08-12T14:30:28Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,263404d3339fc468ba35f6eeb2e6f3366c16d45d,Link to telemetry-next-node instead of a fork of telemetry-js-node.
26,https://api.github.com/repos/mozilla/cerberus/pulls/18,18,Link to v4 histogram dashboard in regression alerts.,"Depends on https://github.com/mozilla/telemetry-dashboard/pull/102 for the date ranges and measure selection to work correctly.

Link to v4 histogram dashboard, with the correct day and measure selected for the regression, instead of the advanced dashboard.
",Uberi,437196,2015-08-07T15:32:53Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,1b519bf13b98f66a8624b3bd68af5f77731fd1bd,Link to v4 histogram dashboard in regression alerts.
27,https://api.github.com/repos/mozilla/cerberus/pulls/17,17,Add result check,"Fixes the https://irccloud.mozilla.com/pastebin/3rVktcr1 issue and adds some better error handling.
",Uberi,437196,2015-08-04T16:30:58Z,CONTRIBUTOR,True,9,11,3,Automatic alert system for telemetry histograms,Python,ab644dd2b63d0763850c565ca83dac7ae051ddfe,Add proper checks for result size.
28,https://api.github.com/repos/mozilla/cerberus/pulls/17,17,Add result check,"Fixes the https://irccloud.mozilla.com/pastebin/3rVktcr1 issue and adds some better error handling.
",Uberi,437196,2015-08-04T16:30:58Z,CONTRIBUTOR,True,9,11,3,Automatic alert system for telemetry histograms,Python,9465b6aab8c62707b3ecae6d320e9bc47e84a543,Ignore downloaded histograms in Git.
29,https://api.github.com/repos/mozilla/cerberus/pulls/16,16,Ignore development and working files in .gitignore,"These files are used in testing, development, and production, but shouldn't be in the repo.
",Uberi,437196,2015-07-31T21:43:59Z,CONTRIBUTOR,True,4,0,1,Automatic alert system for telemetry histograms,Python,5c66d3fb5abde55678bea1d5cc5193213b3407c7,Ignore development and working files in .gitignore.
30,https://api.github.com/repos/mozilla/cerberus/pulls/15,15,Significantly reduce memory usage,"- Avoid concat (which copies the entire source array)
- Avoid storing tons of data in Promise.all() (which keeps a copy of all of it until the end, when it is processed in bulk) - process it as it is received.
- Don't do the keys for keyed histograms, just like in the v2 pipeline exporter.
- Cerberus is currently swapping heavily on the AWS instance and very close to the memory limit.
- These changes allow the exporter to run without swapping at all - it runs at ~80mb on a 64-bit system, where before it would go to ~800mb.
",Uberi,437196,2015-07-31T18:30:28Z,CONTRIBUTOR,True,18,17,1,Automatic alert system for telemetry histograms,Python,1e1f4424dc9140f58079e116722346c53e41774f,"Significantly reduce memory usage:

* Avoid concat (which copies the entire source array)
* Avoid storing tons of data in Promise.all() (which keeps a copy of all of it until the end, when it is processed in bulk) - process it as it is received.
* Don't do the keys for keyed histograms, just like in the v2 pipeline exporter."
31,https://api.github.com/repos/mozilla/cerberus/pulls/15,15,Significantly reduce memory usage,"- Avoid concat (which copies the entire source array)
- Avoid storing tons of data in Promise.all() (which keeps a copy of all of it until the end, when it is processed in bulk) - process it as it is received.
- Don't do the keys for keyed histograms, just like in the v2 pipeline exporter.
- Cerberus is currently swapping heavily on the AWS instance and very close to the memory limit.
- These changes allow the exporter to run without swapping at all - it runs at ~80mb on a 64-bit system, where before it would go to ~800mb.
",Uberi,437196,2015-07-31T18:30:28Z,CONTRIBUTOR,True,18,17,1,Automatic alert system for telemetry histograms,Python,f1571c3fd921388ba903c7ab8d58d4a057a0b286,Don't write measures that are empty.
32,https://api.github.com/repos/mozilla/cerberus/pulls/14,14,Also use dates in plot filenames,"Since there could potentially be multiple regressions for the same measure, each with a different date.
",Uberi,437196,2015-07-30T17:01:14Z,CONTRIBUTOR,True,5,4,1,Automatic alert system for telemetry histograms,Python,adfbbbedd1426735c51d46e381386ab82b09f628,"Also use dates in plot filenames, since there could potentially be multiple regressions for the same measure, each with a different date."
33,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,a00caad11eaad80f8e3be0fcaeefc4580aa99357,First pass at porting cerberus to the v4 pipeline.
34,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,12b9237b3e7b9e4475f238dc29c276270d98b00b,Working v4 exporter.
35,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,911007e0d64b530a875d182903dff92c6912e39e,Exporter fixes.
36,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,ecccc8c9b878fc8c1a313ffaf3af6c548add33ba,Modify regression detector to work with the new exporter.
37,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,e2258bb433fa6f9b40b9560398357a6a98dcd2dc,Exporter and regression detector fixes.
38,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,1ce4294588df92fa318bad59563da2356928fe56,Update exporter to use v4 pipeline Telemetry.js v2.
39,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,42389f9b6ddd847ac70622fb2547c3f3be990275,Add comments and fix bug where the reference histogram isn't normalized.
40,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,ea883aa07c4f7db06f7e373f4e4370c8bd9f96eb,Remove debug statements.
41,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,45d7762bb222a514d58124b6fbaf857513d95904,Add README.
42,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,b7fa6d945531a428937261754d501353e23c72f8,Fully working regression detection.
43,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,f57ba7487cb94593e2e6b1c54f88c555247cebf0,Merge branch 'master' of https://github.com/mozilla/cerberus into new-pipeline
44,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,0b0f5b9954391cd010c3338df0c1ed89718c22ce,Remove trailing whitespace.
45,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,851d6b3b66b23169dcf56897a1b30ba44c1d29d6,Remove paragraph about deployment.
46,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,893f7f7dbe4e72f428ff5c0a2374a3b10b6f2f7e,Update wording on dashboard.
47,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,81d57e6e0599c6e18a9cc24f4f0a0fce20345270,Use telemetry-next-node (newly published module) instead of a fork of telemetry-js-node.
48,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,e8b89b45fe840a0fd5a3100d1ee03e9be0dc6fe1,Use new version of telemetry-next-node with support for retry with exponential backoff.
49,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,bda33c74ad92d63e11ed94b2877355e1778a1e76,Only download 2 in parallel.
50,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,b649eee657bc6a3c3373bfde914e0096ab4aa34e,Use new version of telemetry-js-node without the memory-hogging caching.
51,https://api.github.com/repos/mozilla/cerberus/pulls/13,13,Pipeline v4 regression detector,"- We now use a new version of telemetry-js-node that supports telemetry.js v2 (v4 pipeline).
  - It now lives at https://github.com/Uberi/telemetry-js-node/tree/v4-pipeline.
- Fixed a bug where, if the last reference histogram doesn't have enough submissions, but there is still a regression in previous comparisons, the reference histogram doesn't get normalized.
  - This is the cause of the flat red line in alerts like [this one](http://alerts.telemetry.mozilla.org/index.html#/detectors/1/alerts/?from=2015-07-08&to=2015-07-08&metrics-filter=).
  - This does not affect detection, only the histograms that the resulting alerts show - there should no longer be flat red lines.
- Added code overview section to the README.
- The exporter output format has now changed: we now output the overall histogram for the entire measure, rather than one histogram for every single filter option.
  - That means we don't have to aggregate histograms manually anymore (except when dates overlap between two different versions).
  - Originally, we only considered histograms from saved_session/Firefox/WINNT. That means that we were only detecting regressions for Firefox on Windows. Now we detect based on data from all options.
  - The exporter format now no longer has an ""filter"" field, since it is not necessary anymore.

Testing:
- One entire run took less than an hour. This includes exporting histograms, detecting regressions, and detecting expired histograms.
- The results of running the regression detector at the moment are:
  
  ```
  Regression found for MISBEHAVING_ADDONS_CPOW_TIME_MS, 2015-04-07
  Regression found for STS_POLL_AND_EVENT_THE_LAST_CYCLE, 2015-05-13
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_GCED, 2015-05-30
  Regression found for CYCLE_COLLECTOR_WORKER_VISITED_REF_COUNTED, 2015-06-18
  Regression found for GC_BUDGET_MS, 2015-06-22
  Regression found for IMAGE_MAX_DECODE_COUNT, 2015-07-01
  Regression found for SIMPLE_MEASURES_SAVEDPINGS, 2015-07-08
  Regression found for SUBPROCESS_ABNORMAL_ABORT, 2015-07-11
  Regression found for PROCESS_CRASH_SUBMIT_ATTEMPT, 2015-07-17
  ```
  - Some alerts, like IMAGE_MAX_DECODE_COUNT, match the v2 pipeline values, while others do not.
- Making plots of the regressions, we see that they look sane and when applicable, match those generated by the v2 pipeline version.
- The differences can come from two sources:
  - We are using aggregates for the entire metric, rather than just the metric on Firefox Windows.
  - The v2 pipeline is [missing submissions](https://bugzilla.mozilla.org/show_bug.cgi?id=1179751).
",Uberi,437196,2015-07-24T20:56:20Z,CONTRIBUTOR,True,135,1807,6,Automatic alert system for telemetry histograms,Python,e7a7314f84d0d74988e4fbdcfd0e549d968d9aec,Add flag for whether to plot regressions.
52,https://api.github.com/repos/mozilla/cerberus/pulls/12,12,Expired histogram alert improvements,"- Use the standard from address for Telemetry alerts.
- Show the watchers of already expired histograms.
",Uberi,437196,2015-07-21T21:38:36Z,CONTRIBUTOR,True,5,3,1,Automatic alert system for telemetry histograms,Python,6f1cf0aa154181bc8ab8b73010f44fc1e5bd01b5,Use the standard posting email address for the From field.
53,https://api.github.com/repos/mozilla/cerberus/pulls/12,12,Expired histogram alert improvements,"- Use the standard from address for Telemetry alerts.
- Show the watchers of already expired histograms.
",Uberi,437196,2015-07-21T21:38:36Z,CONTRIBUTOR,True,5,3,1,Automatic alert system for telemetry histograms,Python,630be867bdffbe0089027b572a8994dadd57f607,Show watchers in the expired histograms list.
54,https://api.github.com/repos/mozilla/cerberus/pulls/11,11,Fix histograms file path,"Currently Histograms.json is located in the Cerberus project root. This PR accounts for this in the relative path handling.
",Uberi,437196,2015-07-06T20:23:20Z,CONTRIBUTOR,True,3,3,2,Automatic alert system for telemetry histograms,Python,52b5af3009b18d790761f1e914d557bf23663dc5,Fix histograms file path.
55,https://api.github.com/repos/mozilla/cerberus/pulls/11,11,Fix histograms file path,"Currently Histograms.json is located in the Cerberus project root. This PR accounts for this in the relative path handling.
",Uberi,437196,2015-07-06T20:23:20Z,CONTRIBUTOR,True,3,3,2,Automatic alert system for telemetry histograms,Python,0ee6c797712ea5fc72facf1272c55ea050e21494,Remove extraneous log messages.
56,https://api.github.com/repos/mozilla/cerberus/pulls/10,10,Ignore UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY,"Added ignore list with UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY. Ignored histograms are specified in `ignored_histograms.json`.
",Uberi,437196,2015-06-15T17:54:55Z,CONTRIBUTOR,True,23,12,2,Automatic alert system for telemetry histograms,Python,a115573895d29c1f755ee9347bfeab5e4195d429,Add ignored histogram checking.
57,https://api.github.com/repos/mozilla/cerberus/pulls/10,10,Ignore UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY,"Added ignore list with UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY. Ignored histograms are specified in `ignored_histograms.json`.
",Uberi,437196,2015-06-15T17:54:55Z,CONTRIBUTOR,True,23,12,2,Automatic alert system for telemetry histograms,Python,978aab0bcaa88395ae8f45672da07af14d84ed40,Add UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY to ignore list.
58,https://api.github.com/repos/mozilla/cerberus/pulls/10,10,Ignore UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY,"Added ignore list with UPDATE_PREF_UPDATE_CANCELATIONS_NOTIFY. Ignored histograms are specified in `ignored_histograms.json`.
",Uberi,437196,2015-06-15T17:54:55Z,CONTRIBUTOR,True,23,12,2,Automatic alert system for telemetry histograms,Python,feb4f77c74731e4b242ba96775b676e63a224568,Fix path for ignored histograms.
59,https://api.github.com/repos/mozilla/cerberus/pulls/9,9,Notify mailing list of already expired histograms,"```
$ python expiring.py preview 2015-08-03
Email notification for dev-telemetry-alerts@lists.mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have their expiry versions updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

The following histograms are expired as of 2015-08-03:

* BLOCKLIST_SYNC_FILE_LOAD expired in version 35.0a1 - blocklist.xml has been loaded synchronously *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* BROWSERPROVIDER_XUL_IMPORT_HISTORY expired in version 40.0a1 - Number of history entries in the original XUL places database
* BROWSERPROVIDER_XUL_IMPORT_TIME expired in version 40.0a1 - Time for the initial conversion of a XUL places database (ms)
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSDISKCACHEBINDING_DESTRUCTOR expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSDISKCACHEBINDING_DESTRUCTOR *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSDISKCACHEDEVICEDEACTIVATEENTRYEVENT_RUN expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSDISKCACHEDEVICEDEACTIVATEENTRYEVENT_RUN *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSDISKCACHEMAP_REVALIDATION expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSDISKCACHEMAP_REVALIDATION *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSDISKCACHESTREAMIO_CLOSEOUTPUTSTREAM expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSDISKCACHESTREAMIO_CLOSEOUTPUTSTREAM *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSDISKCACHESTREAMIO_WRITE expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSDISKCACHESTREAMIO_WRITE *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* CACHE_SERVICE_LOCK_WAIT_MAINTHREAD_NSEVICTDISKCACHEENTRIESEVENT_RUN expired in version 40.0a1 - Time spent waiting on the cache service lock (ms) on the main thread in NSEVICTDISKCACHEENTRIESEVENT_RUN *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* COOKIES_3RDPARTY_NUM_ATTEMPTS_ACCEPTED expired in version 40.0a1 - The total number of distinct attempts by third-party sites to place cookies which have been accepted.  Measures are normalized per 24h. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* COOKIES_3RDPARTY_NUM_ATTEMPTS_BLOCKED expired in version 40.0a1 - The total number of distinct attempts by third-party sites to place cookies which have been rejected.  Measures are normalized per 24h. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* COOKIES_3RDPARTY_NUM_SITES_ACCEPTED expired in version 40.0a1 - The number of distinct pairs (first-party site, third-party site attempting to set cookie) for which the third-party cookie has been accepted. Sites are considered identical if they have the same eTLD + 1. Measures are normalized per 24h. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* COOKIES_3RDPARTY_NUM_SITES_BLOCKED expired in version 40.0a1 - The number of distinct pairs (first-party site, third-party site attempting to set cookie) for which the third-party cookie has been rejected. Sites are considered identical if they have the same eTLD + 1. Measures are normalized per 24h. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* DATABASE_LOCKED_EXCEPTION expired in version 42.0a1 - Record database locks when opening one of Fennec's databases. The index corresponds to how many attempts, beginning with 0.
* DATABASE_SUCCESSFUL_UNLOCK expired in version 42.0a1 - Record on which attempt we successfully unlocked a database. See DATABASE_LOCKED_EXCEPTION.
* DISK_CACHE_CORRUPT_DETAILS expired in version 40.0a1 - Why the HTTP disk cache was corrupted at startup
* DISK_CACHE_INVALIDATION_SUCCESS expired in version 40.0a1 - Stores 1 if writing '0' to the cache clean file succeeded, and 0 if it failed.
* DISK_CACHE_REDUCTION_TRIAL expired in version 40.0a1 - Stores 1 if the cache would be clean with the disk cache corruption plan of Bug 105843
* DISK_CACHE_REVALIDATION_SAFE expired in version 40.0a1 - Stores 1 if the cache clean file was revalidated, or 0 if a non empty doom list prevented revalidation
* DISK_CACHE_REVALIDATION_SUCCESS expired in version 40.0a1 - Stores 1 if writing '1' to the cache clean file succeeded, and 0 if it failed.
* DISK_CACHE_SMART_SIZE_USING_OLD_MAX expired in version 40.0a1 - Whether we are using the old default cache smart size
* DOM_RANGE_DETACHED expired in version 40.0a1 - DOM: Ranges that are detached on destruction (bug 702948) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* DOM_TIMERS_FIRED_PER_NATIVE_TIMEOUT expired in version 40.0a1 - DOM: Timer handlers called per native timer expiration *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* DOM_TIMERS_RECENTLY_SET expired in version 40.0a1 - DOM: setTimeout/setInterval calls recently (last 30s or more) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* DOM_WINDOW_SHOWMODALDIALOG_USED expired in version 41.0a1 - Whether Window.showModalDialog was used in this session
* EARLY_GLUESTARTUP_HARD_FAULTS expired in version 40.0a1 - Hard faults count before glue startup *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* EARLY_GLUESTARTUP_READ_OPS expired in version 40.0a1 - ProcessIoCounters.ReadOperationCount before glue startup *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* EARLY_GLUESTARTUP_READ_TRANSFER expired in version 40.0a1 - ProcessIoCounters.ReadTransferCount before glue startup (KB) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FENNEC_FAVICONS_COUNT expired in version 40.0a1 - Number of favicons stored in the browser DB *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FENNEC_READING_LIST_COUNT expired in version 40.0a1 - Number of reading list items stored in the browser DB *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FENNEC_THUMBNAILS_COUNT expired in version 40.0a1 - Number of thumbnails stored in the browser DB *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FENNEC_TILES_CACHE_HIT expired in version 40.0a1 - Cache hits on the tile-info metadata database *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FX_GESTURE_TAKE_SNAPSHOT_OF_PAGE expired in version 40.0a1 - Firefox: Time taken to capture the page to a canvas, for reuse while swiping through history (ms).
* FX_IDENTITY_POPUP_OPEN_MS expired in version 40.0a1 - Firefox: Time taken by the identity popup to open in milliseconds
* FX_TAB_ANIM_ANY_FRAME_PAINT_MS expired in version 40.0a1 - Average paint duration during any tab open/close animation (excluding tabstrip scroll) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FX_TAB_ANIM_CLOSE_MS expired in version 40.0a1 - Firefox: Time taken by the tab closing animation in milliseconds *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* FX_TAB_ANIM_OPEN_MS expired in version 40.0a1 - Firefox: Time taken by the tab opening animation in milliseconds *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* GLUESTARTUP_HARD_FAULTS expired in version 40.0a1 - Hard faults count after glue startup *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* GLUESTARTUP_READ_OPS expired in version 40.0a1 - ProcessIoCounters.ReadOperationCount after glue startup *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* GLUESTARTUP_READ_TRANSFER expired in version 40.0a1 - ProcessIoCounters.ReadTransferCount after glue startup (KB) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* HTML_BACKGROUND_REFLOW_MS_2 expired in version 40.0a1 - HTML reflows in background windows (ms)
* IDLE_NOTIFY_BACK_LISTENERS expired in version 40.0a1 - Number of listeners notified that the user is back
* IDLE_NOTIFY_BACK_MS expired in version 40.0a1 - Time spent checking for and notifying listeners that the user is back (ms)
* IDLE_NOTIFY_IDLE_LISTENERS expired in version 40.0a1 - Number of listeners notified that the user is idle
* LOCALDOMSTORAGE_CLEAR_BLOCKING_MS expired in version 40.0a1 - Time to block before we clear LocalStorage for all domains (ms)
* LOCALDOMSTORAGE_GETALLKEYS_BLOCKING_MS expired in version 40.0a1 - Time to block before we return a list of all keys in domain's LocalStorage (ms)
* LOCALDOMSTORAGE_GETKEY_BLOCKING_MS expired in version 40.0a1 - Time to block before we return a key name in domain's LocalStorage (ms)
* LOCALDOMSTORAGE_GETLENGTH_BLOCKING_MS expired in version 40.0a1 - Time to block before we return number of keys in domain's LocalStorage (ms)
* LOCALDOMSTORAGE_INIT_DATABASE_MS expired in version 40.0a1 - Time to open the localStorage database (ms)
* LOCALDOMSTORAGE_KEY_SIZE_BYTES expired in version 40.0a1 - DOM storage: size of keys stored in localStorage
* LOCALDOMSTORAGE_REMOVEKEY_BLOCKING_MS expired in version 40.0a1 - Time to block before we remove a single key from LocalStorage (ms)
* LOCALDOMSTORAGE_SESSIONONLY_PRELOAD_BLOCKING_MS expired in version 40.0a1 - Time to fetch LocalStorage data before we can expose them as session only data (ms)
* LOCALDOMSTORAGE_SETVALUE_BLOCKING_MS expired in version 40.0a1 - Time to block before we set a single key's value in LocalStorage (ms)
* LOCALDOMSTORAGE_UNLOAD_BLOCKING_MS expired in version 40.0a1 - Time to fetch LocalStorage data before we can clean the cache (ms)
* LOCALDOMSTORAGE_VALUE_SIZE_BYTES expired in version 40.0a1 - DOM storage: size of values stored in localStorage
* MOZ_SQLITE_COOKIES_READ_B expired in version 40.0a1 - SQLite read() (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_COOKIES_READ_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_COOKIES_READ_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_COOKIES_WRITE_B expired in version 40.0a1 - SQLite write (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_COOKIES_WRITE_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_COOKIES_WRITE_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_OPEN_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite open() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_OTHER_READ_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_OTHER_READ_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_OTHER_WRITE_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_OTHER_WRITE_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_PLACES_READ_B expired in version 40.0a1 - SQLite read() (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_PLACES_READ_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_PLACES_READ_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_PLACES_WRITE_B expired in version 40.0a1 - SQLite write (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_PLACES_WRITE_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_TRUNCATE_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite truncate() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_TRUNCATE_MS expired in version 40.0a1 - Time spent on SQLite truncate() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_READ_B expired in version 40.0a1 - SQLite read() (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_READ_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_READ_MS expired in version 40.0a1 - Time spent on SQLite read() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_WRITE_B expired in version 40.0a1 - SQLite write (bytes) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_WRITE_MAIN_THREAD_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_SQLITE_WEBAPPS_WRITE_MS expired in version 40.0a1 - Time spent on SQLite write() (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_STORAGE_ASYNC_REQUESTS_MS expired in version 40.0a1 - mozStorage async requests completion (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* MOZ_STORAGE_ASYNC_REQUESTS_SUCCESS expired in version 40.0a1 - mozStorage async requests success *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* NETWORK_CACHE_FS_TYPE expired in version 42.0a1 - Type of FS that the cache is stored on (0=NTFS (Win), 1=FAT32 (Win), 2=FAT (Win), 3=other FS (Win), 4=other OS)
* NETWORK_CACHE_SIZE_FULL_FAT expired in version 42.0a1 - Size (in MB) of a cache that reached a file count limit
* NETWORK_DISK_CACHE_REVALIDATION expired in version 40.0a1 - Total Time spent (ms) during disk cache revalidation
* NETWORK_DISK_CACHE_STREAMIO_CLOSE expired in version 40.0a1 - Time spent in nsDiskCacheStreamIO::Close() on non-main thread (ms)
* NETWORK_DISK_CACHE_STREAMIO_CLOSE_MAIN_THREAD expired in version 40.0a1 - Time spent in nsDiskCacheStreamIO::Close() on the main thread (ms)
* NEWTAB_PAGE_SHOWN expired in version 35.0a1 - Number of times about:newtab was shown from opening a new tab or window. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* NEWTAB_PAGE_SITE_CLICKED expired in version 35.0a1 - Track click count on about:newtab tiles per index (0-8). For non-default row or column configurations all clicks into the '9' bucket. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* PANORAMA_GROUPS_COUNT expired in version 40.0a1 - Number of groups in Panorama *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* PANORAMA_INITIALIZATION_TIME_MS expired in version 40.0a1 - Time it takes to initialize Panorama (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* PANORAMA_MEDIAN_TABS_IN_GROUPS_COUNT expired in version 40.0a1 - Median of tabs in groups in Panorama
* PANORAMA_STACKED_GROUPS_COUNT expired in version 40.0a1 - Number of stacked groups in Panorama *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* POPUP_NOTIFICATION_MAINACTION_TRIGGERED_MS expired in version 40.0a1 - The time (in milliseconds) after showing a PopupNotification that the mainAction was first triggered
* READER_MODE_DOWNLOAD_MS expired in version 42.0a1 - Time (ms) to download a document to show in reader mode
* READER_MODE_DOWNLOAD_RESULT expired in version 42.0a1 - The result of trying to download a document to show in reader view (0=Success, 1=Error XHR, 2=Error no document)
* READER_MODE_PARSE_RESULT expired in version 42.0a1 - The result of trying to parse a document to show in reader view (0=Success, 1=Error too many elements, 2=Error in worker, 3=Error no article)
* READER_MODE_SERIALIZE_DOM_MS expired in version 42.0a1 - Time (ms) to serialize a DOM to send to the reader worker
* READER_MODE_WORKER_PARSE_MS expired in version 42.0a1 - Time (ms) for the reader worker to parse a document
* SEARCH_SERVICE_BUILD_CACHE_MS expired in version 40.0a1 - Time (ms) it takes to build the cache of the search service
* SESSIONDOMSTORAGE_KEY_SIZE_BYTES expired in version 40.0a1 - DOM storage: size of keys stored in sessionStorage
* SESSIONDOMSTORAGE_VALUE_SIZE_BYTES expired in version 40.0a1 - DOM storage: size of values stored in sessionStorage
* SQLITEBRIDGE_PROVIDER_FORMS_LOCKED expired in version 40.0a1 - The number of errors using the FormHistoryProvider due to a locked DB. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* SQLITEBRIDGE_PROVIDER_HOME_LOCKED expired in version 40.0a1 - The number of errors using the HomeProvider due to a locked DB. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* SQLITEBRIDGE_PROVIDER_PASSWORDS_LOCKED expired in version 40.0a1 - The number of errors using the PasswordsProvider due to a locked DB. *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* SSL_PERMANENT_CERT_ERROR_OVERRIDES expired in version 42.0a1 - How many permanent certificate overrides a user has stored.
* TELEMETRY_TEST_EXPIRED expired in version 4.0a1 - a testing histogram; not meant to be touched
* UDP_SOCKET_PARALLEL_CLOSE_COUNT expired in version 41.0a1 - Number of concurrent UDP socket closing threads
* VIDEO_ADOBE_GMP_DISAPPEARED expired in version 42.0a1 - Whether or not the Adobe EME GMP was expected to be resident on disk but mysteriously isn't.
* VIDEO_OPENH264_GMP_DISAPPEARED expired in version 42.0a1 - Whether or not the OpenH264 GMP was expected to be resident on disk but mysteriously isn't.
* XUL_BACKGROUND_REFLOW_MS expired in version 40.0a1 - XUL reflows in background windows (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* XUL_FOREGROUND_REFLOW_MS expired in version 40.0a1 - XUL reflows in foreground windows (ms) *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***
* XUL_INITIAL_FRAME_CONSTRUCTION expired in version 40.0a1 - initial xul frame construction *** No longer needed (bug 1156565). Delete histogram and accumulation code! ***

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for dmose@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have their expiry versions updated:

* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for mdeboer@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have their expiry versions updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for firefox-dev@mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have their expiry versions updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================
```
",Uberi,437196,2015-06-03T18:07:38Z,CONTRIBUTOR,True,112,47,1,Automatic alert system for telemetry histograms,Python,0e7478d843fa43e5f32d5e59120b852226635462,Notify mailing list of already expired histograms
60,https://api.github.com/repos/mozilla/cerberus/pulls/8,8,Be more explicit about the expiry version if not specified,"```
$ python expiring.py preview 2015-08-03
Email notification for dev-telemetry-alerts@lists.mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for dmose@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for mdeboer@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for firefox-dev@mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43.0a1 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================
```
",Uberi,437196,2015-06-01T16:44:14Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,c463ab6a3dcc5e1662718999bee158f25a068a7c,"Be more explicit about the expiry version if not specified, to clarify assumptions that might not be obvious. For example, ""40"" is now displayed as 40.0a1."
61,https://api.github.com/repos/mozilla/cerberus/pulls/7,7,Add an option to override the current date for purposes such as testing.,"```
$ python expiring.py preview 2015-08-03
Email notification for dev-telemetry-alerts@lists.mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for dmose@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for mdeboer@mozilla.com:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================

Email notification for firefox-dev@mozilla.org:
===============================================
The following histograms will be expiring on 2015-08-10, and should be removed from the codebase, or have its expiry date updated:

* LOOP_SHARING_STATE_CHANGE_1 expires in version 43 (watched by firefox-dev@mozilla.org, mdeboer@mozilla.com) - Number of times the sharing feature has been enabled and disabled (0=WINDOW_ENABLED, 1=WINDOW_DISABLED, 2=BROWSER_ENABLED, 3=BROWSER_DISABLED)
* LOOP_TWO_WAY_MEDIA_CONN_LENGTH_1 expires in version 43 (watched by firefox-dev@mozilla.org, dmose@mozilla.com) - Connection length for bi-directionally connected media (0=SHORTER_THAN_10S, 1=BETWEEN_10S_AND_30S, 2=BETWEEN_30S_AND_5M, 3=MORE_THAN_5M)

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
===============================================
```
",Uberi,437196,2015-06-01T16:03:52Z,CONTRIBUTOR,True,21,9,1,Automatic alert system for telemetry histograms,Python,d8544be531e467175bb3947b1e063a699ac0a0cc,Add an option to override the current date for purposes such as testing.
62,https://api.github.com/repos/mozilla/cerberus/pulls/6,6,Various changes to emailing behaviour:,"- Always send expiry notices to dev-telemetry-alerts@lists.mozilla.org.
- Allow previewing email sending using the `preview` subcommand.
- Only show the histograms that a user is subscribed to in the emails.
",Uberi,437196,2015-05-28T19:29:27Z,CONTRIBUTOR,True,39,36,1,Automatic alert system for telemetry histograms,Python,c3c0be59079e40a55011fc5173353ab351637976,"Various changes to emailing behaviour:

* Always send expiry notices to dev-telemetry-alerts@lists.mozilla.org.
* Allow previewing email sending using the `preview` subcommand.
* Only show the histograms that a user is subscribed to in the emails."
63,https://api.github.com/repos/mozilla/cerberus/pulls/5,5,Fix email body issues.,"- Histograms expire ON the specified day, not before.
- `already_notified_histograms` is no longer being used.
- `now` is now a `date` rather than a `datetime`.
",Uberi,437196,2015-05-28T18:01:55Z,CONTRIBUTOR,True,5,7,1,Automatic alert system for telemetry histograms,Python,859f326ab269a69988ed89569e4f19ff71cc30ff,Slight changes to email wording.
64,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,6e7fd412be76fad6cf5cf913a49ffd3f013e80a6,Add expiring histogram detector.
65,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,ca8c0a7567c915c5918a5affa20fa2942e5ce97c,Make the histogram expiry script run with the rest.
66,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,56210a046c8d25e3abf6af7340ad2ce28891096d,Add version comparator.
67,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,7a7c796916aa29aabde2907fb9bea237e241801d,Fix email and formatting.
68,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,4a5dd345eec5cf07635c4166a910725fca3e05cd,Fix SES mailing.
69,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,4d9751e571b48ea0e96c469c072c903a36818d0a,Format docstrings a bit better.
70,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,48a60dc5f184f5d9831eed833129713b8401bc84,"Don't alert for old expired histograms, infer the expiry date for unknown versions, and don't notify users about the same histograms twice (by storing the notified histograms in a file)."
71,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,0e3c7bb7b26bcb610dbbb211489f58de991443c5,"Add test suite, add docstrings, add subcommands."
72,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,265646a8c808b01d414a4183cdc4217baebeaf67,Use the default AWS configuration.
73,https://api.github.com/repos/mozilla/cerberus/pulls/4,4,Histogram Expiry Detector,"Ref: https://bugzilla.mozilla.org/show_bug.cgi?id=1149741

Email alerts are sent out listing every histogram that is expired or is soon to be expired. Running it at the moment will result in something like the following:

```
Sending email to rvitillo@mozilla.com with body:
The following histograms will be expired on or before 2015-05-27, and should be removed from the codebase:

* [SUBSCRIBED] BLOCKLIST_SYNC_FILE_LOAD expires in version 35
* NEWTAB_PAGE_SHOWN expires in version 35
* NEWTAB_PAGE_SITE_CLICKED expires in version 35
* TELEMETRY_TEST_EXPIRED expires in version 4.0a1

This is an automated message sent by Cerberus. See https://github.com/mozilla/cerberus for details and source code.
```
",Uberi,437196,2015-05-20T14:28:59Z,CONTRIBUTOR,True,291,7,4,Automatic alert system for telemetry histograms,Python,d9677049f2e2e9727aa04c48164c17ea552bd23b,"Update expiry detection as per comments in #4 - histograms are expiring only exactly N days before they actually expire.

* Add a few version functions.
* Add tests for functionality.
* Parse the nightly/aurora/beta release dates out of the wiki table."
74,https://api.github.com/repos/mozilla/cerberus/pulls/3,3,Use mozilla repository in alerts.,,vitillo,2061747,2014-09-18T13:51:55Z,CONTRIBUTOR,True,1,1,1,Automatic alert system for telemetry histograms,Python,94cdb6731ffa6cd649f305031f9fc7e9daa3c7c1,Use mozilla repository in alerts.
75,https://api.github.com/repos/mozilla/cerberus/pulls/2,2,Add a wrapper to run cerberus as a scheduled job.,"Use run_run.sh to launch cerberus as a Telemetry scheduled job.
",mreid-moz,969479,2014-08-11T14:27:59Z,CONTRIBUTOR,True,33,0,1,Automatic alert system for telemetry histograms,Python,510ed6606a8bc068ddc99ff042b19bf9fcc3483b,"Add a wrapper to run cerberus as a scheduled job.

Use run_run.sh to launch cerberus as a Telemetry scheduled job."
76,https://api.github.com/repos/mozilla/cerberus/pulls/1,1,"Fixes, faster now using telemtry-js-node","So I wrote a node.js module to download `telemetry.js` from `telemetry.mozilla.org/v1/telemetry.js` and initialize it... Note that this is not very secure... as we load code over HTTP... So should run some where not too critical :)
See [mozilla/telemtry-js-node](https://github.com/mozilla/telemetry-js-node) for details.

I also fixed some scoping issues, missing `var`... And set it to download 3 files in parallel... That was enough to max out my CPU... I guess the JSON parsing, construction and stringify is the expensive operations.

**Please**, make sure to test this... I only tested the exporter... and didn't run to end, coz I was lazy :)
",jonasfj,149732,2014-07-31T19:49:41Z,CONTRIBUTOR,True,25,33,3,Automatic alert system for telemetry histograms,Python,6a6dc2d4115d848514a7769972aad013a3ab0fa3,Fixed a bunch of bugs... downloads in parallel and uses telemetry-js-node
77,https://api.github.com/repos/mozilla/cerberus/pulls/1,1,"Fixes, faster now using telemtry-js-node","So I wrote a node.js module to download `telemetry.js` from `telemetry.mozilla.org/v1/telemetry.js` and initialize it... Note that this is not very secure... as we load code over HTTP... So should run some where not too critical :)
See [mozilla/telemtry-js-node](https://github.com/mozilla/telemetry-js-node) for details.

I also fixed some scoping issues, missing `var`... And set it to download 3 files in parallel... That was enough to max out my CPU... I guess the JSON parsing, construction and stringify is the expensive operations.

**Please**, make sure to test this... I only tested the exporter... and didn't run to end, coz I was lazy :)
",jonasfj,149732,2014-07-31T19:49:41Z,CONTRIBUTOR,True,25,33,3,Automatic alert system for telemetry histograms,Python,4b6a56bb6307bff34f86dbdcffdc2c7d2d873f81,Remove debug utility
