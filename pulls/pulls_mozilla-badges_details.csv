,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/mozilla-badges/pulls/42,42,Add Mozilla Code of Conduct,"Fixes #41


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T04:59:04Z,NONE,False,15,0,1,,Python,3b57876dcdf7bf9e8158b69acdb9648a7a401a49,"Add Mozilla Code of Conduct file

Fixes #41.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/mozilla-badges/pulls/39,39,Fixing team/ROA to support admin interface,"I've made a few changes to the `Team` model and the `ROA` infrastructure, which allows us to use the standard Django admin site to make changes to `ROA` models.
",andrewhayward,159848,2014-08-07T15:46:23Z,MEMBER,True,18,4,3,,Python,35663e2a9e2ad9736dd1f0be7e7bc13a53808316,Fixing team/ROA to support admin interface
2,https://api.github.com/repos/mozilla/mozilla-badges/pulls/39,39,Fixing team/ROA to support admin interface,"I've made a few changes to the `Team` model and the `ROA` infrastructure, which allows us to use the standard Django admin site to make changes to `ROA` models.
",andrewhayward,159848,2014-08-07T15:46:23Z,MEMBER,True,18,4,3,,Python,3101e8685e02badc1f605964bd47857ee19bacfb,Remnants of earlier futile attempts
3,https://api.github.com/repos/mozilla/mozilla-badges/pulls/38,38,User keys,"To allow for scripted access, etc.
",andrewhayward,159848,2014-08-07T13:39:33Z,MEMBER,True,2096,9,52,,Python,29a3212d19d0e717fb8ce65c953f164f95e9f8ec,Adding `valet-keys` submodule
4,https://api.github.com/repos/mozilla/mozilla-badges/pulls/38,38,User keys,"To allow for scripted access, etc.
",andrewhayward,159848,2014-08-07T13:39:33Z,MEMBER,True,2096,9,52,,Python,a9ad75c9ab0d3f7bd995a14173b7ac6d88721d8f,Valet keys
5,https://api.github.com/repos/mozilla/mozilla-badges/pulls/38,38,User keys,"To allow for scripted access, etc.
",andrewhayward,159848,2014-08-07T13:39:33Z,MEMBER,True,2096,9,52,,Python,45b64ca7f0e87d50ed8e86fcf78c2f08d80b32ec,Making `valet-keys` local to allow for changes
6,https://api.github.com/repos/mozilla/mozilla-badges/pulls/38,38,User keys,"To allow for scripted access, etc.
",andrewhayward,159848,2014-08-07T13:39:33Z,MEMBER,True,2096,9,52,,Python,8e675c2a98e7623323e4cb553b0363a9cdb0469e,Reverting `dashboard` view
7,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,ad9c82b6254c12383d9870489610320c75492cb3,Adding `django-notification` to vendor-local
8,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,1a7e330061158f3a502bc565c0069d6d31468376,Fixing ContextMixin null-data bug
9,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,a3dc58ea27c087362614b1ccaa54c4e0e3323b5f,Adding user notifications
10,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,2da71ad3d285ab3d3b810e9dc2c09d4155b5e49a,Notification emails require `site` app
11,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,fe7cbc5f0bc3d62185e619b514389725b2cbc71e,Notifications
12,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,dddc7f53f6ee08f9e25b94a058c48fb3f38232a0,Fixes
13,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,21b092a8bf0f42a4a9a96d455a5dbf5de32a99e1,Renaming messages folder
14,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,5a8cef0a67fdae5e92590028c1ec826292485b32,Making notification simpler
15,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,b5c6af14dc7f92513ebbdd0a8e5db5be89428434,Using signals for welcome messages
16,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,3b3e66b2754e7eaf12278887325b362151637dfd,Adding message actions
17,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,a7acfa4d200c6d9cf573ea28d2a1ab2ef37419e8,Spacing consistency
18,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,99575933fecc30b02b0a0bb3b5718c1a2cd39428,Removing subproject
19,https://api.github.com/repos/mozilla/mozilla-badges/pulls/36,36,Notifications,"Fixes #23.
",andrewhayward,159848,2014-07-30T23:27:43Z,MEMBER,True,2061,18,51,,Python,db5fc61277dd47ee8f2430dd4ca4e63d9017c25b,Making `django-notification` fully local
20,https://api.github.com/repos/mozilla/mozilla-badges/pulls/35,35,Teams,"This adds the Teams model (pulled from Issuer on the badgekit-api side).  Note that this should be merged after #33.
",ghost,10137,2014-07-30T19:01:15Z,NONE,True,107,8,7,,Python,88006204b25333aa6bc82e02c41e0d22a75df9ad,Adding teams/issuer model
21,https://api.github.com/repos/mozilla/mozilla-badges/pulls/34,34,Adding missing migration,"This just adds a migration that appears to have been missing from the people PR (the username_changes field, specifically)
",ghost,10137,2014-07-30T17:36:23Z,NONE,True,79,0,1,,Python,3996b3d972fe979d0c556d7db785fce21ef76b40,Adding missing migration
22,https://api.github.com/repos/mozilla/mozilla-badges/pulls/33,33,Badge awards,"This adds badge awards, and modifies ROA to allow for more dynamic resource URL construction (to allow awards to be fetched by badge and by user)
",ghost,10137,2014-07-30T17:35:00Z,NONE,True,161,26,17,,Python,84b99fd7836944ea19176618fb020f8195a8a65a,badge awards
23,https://api.github.com/repos/mozilla/mozilla-badges/pulls/33,33,Badge awards,"This adds badge awards, and modifies ROA to allow for more dynamic resource URL construction (to allow awards to be fetched by badge and by user)
",ghost,10137,2014-07-30T17:35:00Z,NONE,True,161,26,17,,Python,0fd750aa4e25e751134d9f8825cabb6180fa8510,Fixes from feedback
24,https://api.github.com/repos/mozilla/mozilla-badges/pulls/32,32,Edit user profile,"Fixes #22.
",andrewhayward,159848,2014-07-30T12:15:06Z,MEMBER,True,109,47,13,,Python,674544aaebad4dbb0e87c819020fce2a27372777,Edit user profile
25,https://api.github.com/repos/mozilla/mozilla-badges/pulls/21,21,Automating page titles,"Taking a reasonable guess at what the page should be called.
",andrewhayward,159848,2014-07-29T19:54:42Z,MEMBER,True,48,10,6,,Python,fb633cab62e3462f5b4dfc7b74efeefa669d1341,Automating page titles
26,https://api.github.com/repos/mozilla/mozilla-badges/pulls/20,20,adding basic GA tracking and webmaker-analytics module,,adamlofting,1901816,2014-07-29T16:20:02Z,MEMBER,False,277,4,5,,Python,3aacde4612d6ea5ee843816154331fafab62a513,adding basic GA tracking and webmaker-analytics module
27,https://api.github.com/repos/mozilla/mozilla-badges/pulls/19,19,Styling,"First pass at basic layout
",andrewhayward,159848,2014-07-29T14:50:58Z,MEMBER,True,845,51,14,,Python,ab795c80433c53cacb7b4e681caa4f7a01573469,Minor tweaks to mozillians API wrapper
28,https://api.github.com/repos/mozilla/mozilla-badges/pulls/19,19,Styling,"First pass at basic layout
",andrewhayward,159848,2014-07-29T14:50:58Z,MEMBER,True,845,51,14,,Python,7060384364277114febb337dac81131a83b068e6,Fist pass at basic layout
29,https://api.github.com/repos/mozilla/mozilla-badges/pulls/19,19,Styling,"First pass at basic layout
",andrewhayward,159848,2014-07-29T14:50:58Z,MEMBER,True,845,51,14,,Python,70a70648f45b3ce61a1b00d8ab8229eb7d98974f,Don't need `math` imported
30,https://api.github.com/repos/mozilla/mozilla-badges/pulls/17,17,Initial commit of badge model,"This contains a slightly (though increasingly as time goes on) customized version of the django-roa module, used to allow Django models to be represeted on a remote REST API.  (In this case, badgekit api)
",ghost,10137,2014-07-24T19:35:57Z,NONE,True,2384,5,38,,Python,e5395f16dc8187cc18e1adb0d32fe0113c5ff90c,Initial commit of badge model
31,https://api.github.com/repos/mozilla/mozilla-badges/pulls/17,17,Initial commit of badge model,"This contains a slightly (though increasingly as time goes on) customized version of the django-roa module, used to allow Django models to be represeted on a remote REST API.  (In this case, badgekit api)
",ghost,10137,2014-07-24T19:35:57Z,NONE,True,2384,5,38,,Python,a4bc8ee90d014a8847fd6411025004a7ef1b1cb5,removing debug-related import
32,https://api.github.com/repos/mozilla/mozilla-badges/pulls/17,17,Initial commit of badge model,"This contains a slightly (though increasingly as time goes on) customized version of the django-roa module, used to allow Django models to be represeted on a remote REST API.  (In this case, badgekit api)
",ghost,10137,2014-07-24T19:35:57Z,NONE,True,2384,5,38,,Python,884a6343fcb4ea03a3dbe398a5c352f88955194d,"removing simplejson requirement, conflicts with django 1.5"
33,https://api.github.com/repos/mozilla/mozilla-badges/pulls/17,17,Initial commit of badge model,"This contains a slightly (though increasingly as time goes on) customized version of the django-roa module, used to allow Django models to be represeted on a remote REST API.  (In this case, badgekit api)
",ghost,10137,2014-07-24T19:35:57Z,NONE,True,2384,5,38,,Python,0f09d5f05a812556b48597ba957b43ddf8678364,Changing roa_setup init signature
34,https://api.github.com/repos/mozilla/mozilla-badges/pulls/17,17,Initial commit of badge model,"This contains a slightly (though increasingly as time goes on) customized version of the django-roa module, used to allow Django models to be represeted on a remote REST API.  (In this case, badgekit api)
",ghost,10137,2014-07-24T19:35:57Z,NONE,True,2384,5,38,,Python,1a228688111deb06aaa243b44e40dfc31fd76c20,removing debug print statements
35,https://api.github.com/repos/mozilla/mozilla-badges/pulls/16,16,Setting up some templates,,andrewhayward,159848,2014-07-24T14:01:25Z,MEMBER,True,171,7,11,,Python,cfd5268fb7c95c8b39d5d8e047ad533c4b6aa2af,Setting up some templates
36,https://api.github.com/repos/mozilla/mozilla-badges/pulls/16,16,Setting up some templates,,andrewhayward,159848,2014-07-24T14:01:25Z,MEMBER,True,171,7,11,,Python,ec7d3cdc11eec10fce074e12a643e7734901b747,Don't need `placeholder_view` any more
37,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,124e34a1c907ec7ed3e75444b864594f8651b14c,Basic people stuff
38,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,2db6232ffc84b9fb5a8900d3bc921323dcef1eaf,"Merge branch 'master' into people

Conflicts:
	mozbadges/site/base/templates/base.html"
39,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,2355cd2ea26c260a94592c914a445083a77645e9,Adjusting template
40,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,10949bc4cd529f5fdfc3e30f1d0274ed060af968,Custom auth backend to use our Person model
41,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,d56ed7c2fdef3bb39a247cac8fd296c478b16eb4,Updating templates
42,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,ba25cc2040fba2824c62f52341fb5b410babb15c,Wrapper for compat imports
43,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,a134e2272b9f3d918d1d0a5cfcd905ef992f2f7b,Mozillians API
44,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,67d7a7362115bf0adf30972fbb2eb64df1c6b305,Adding Mozillians API app info
45,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,7009671237c2267f05dcbb9726f24d004f9f0b1b,"Featurising…
- caching
- logging
- less susceptible to HTTP errors
- using `constance` for settings"
46,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,e457d8f7f3250a435e4e74a27410e22c613e2676,"F**k it, we'll do it live
- Note to self: remember to commit stuff"
47,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,9df4314d20186133bfdd95a9dc7447ac719e00b7,"Merge branch 'master' into people

Conflicts:
	mozbadges/settings/local.py-dist
	requirements/dev.txt
	requirements/prod.txt"
48,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,e61101024750f00af1b96c1c4ab03c374bb0ec14,Removing last vestiges of `site.auth`
49,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,25947e23b9e52af2641621eeb127d9cfbf0dc1aa,Fixing `south`/`constance` versions in req docs
50,https://api.github.com/repos/mozilla/mozilla-badges/pulls/15,15,People / Auth,,andrewhayward,159848,2014-07-24T11:30:21Z,MEMBER,True,1018,63,38,,Python,e02549e9dca7d50ed156a1f68187c57d2c000e92,Fixing person admin
51,https://api.github.com/repos/mozilla/mozilla-badges/pulls/14,14,Fixing up JSON view,,andrewhayward,159848,2014-07-24T10:18:49Z,MEMBER,True,59,16,4,,Python,ac5fe7229ceca3a44106bc4c10580eb9d44f0969,Fixing up JSON view
52,https://api.github.com/repos/mozilla/mozilla-badges/pulls/10,10,Extending people URLs for badges/awards,,andrewhayward,159848,2014-07-23T17:10:58Z,MEMBER,True,18,7,1,,Python,82bfae2f47d6bcd9865b63fafbad0b56671d8803,Extending people URLs for badges/awards
53,https://api.github.com/repos/mozilla/mozilla-badges/pulls/9,9,Minor import tweaks,,andrewhayward,159848,2014-07-23T17:03:34Z,MEMBER,True,11,2,1,,Python,107945d4e53e5c2f3164534db86f32b0c5c136dd,Minor import tweaks
54,https://api.github.com/repos/mozilla/mozilla-badges/pulls/8,8,We'll get there eventually,"Fixing my fix
",andrewhayward,159848,2014-07-23T16:24:02Z,MEMBER,True,1,1,1,,Python,178dd7867691e44a0d7aef4a39e00e97dd2dd6dd,We'll get there eventually
55,https://api.github.com/repos/mozilla/mozilla-badges/pulls/7,7,Fixing view errors,"Stupid errors at that.
",andrewhayward,159848,2014-07-23T16:06:59Z,MEMBER,True,2,2,1,,Python,3f54373d0b2a77b350ff1f27f0aeb6df58f55cc9,Fixing view errors
56,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,98b8e81bd853e9a0192fa7aa6a15faa1fe6c560c,Basic team stuff
57,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,6b7e8aa2f716c5f2fa112b327a95b9e037413e81,Extending team badges/members URLs
58,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,7b1324b37ca97bc3dc0fb0715c439095eed0fa38,Merge branch 'master' into teams
59,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,b96fb886e975d79177fa622e17420051d97f0e86,Merge branch 'master' into teams
60,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,38e1725660039b2aece64bff48ab8be48a185b70,Merge branch 'master' into teams
61,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,89f74d1241fa3dc3f72119175670de15d0128a59,"Merge branch 'master' into teams

Conflicts:
	mozbadges/site/base/templates/base.html"
62,https://api.github.com/repos/mozilla/mozilla-badges/pulls/6,6,[WIP] Teams,"Working on basic team stuff
",andrewhayward,159848,2014-07-23T14:42:58Z,MEMBER,False,80,9,7,,Python,772a136af04dfe95de7c045b8bd35bf253b185a5,Adjusting templates
63,https://api.github.com/repos/mozilla/mozilla-badges/pulls/5,5,Updating generic views,"Adding `HybridListView` and `HybridDetailView`, which work much like the standard `ListView` and `DetailView` but are able to serve additional content types depending on the request.

``` python
# views.py
from mozbadges.views.generic.detail import HybridDetailView

class ModelDetailView(HybridDetailView):
    model = Model

model_detail = ModelDetailView.as_view()
```

``` python
# urls.py
url(r'^.../model(?:/|.json|.xml)$', views.model_detail)
```

Also moved `placeholder_view` from `mozbadges.utils.views` to `mozbadges.views` - at some point we can kill it entirely.
",andrewhayward,159848,2014-07-23T13:48:29Z,MEMBER,True,118,7,12,,Python,482f0636092b02971a2768dc102cbc487f5c2522,Updating generic views
64,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,4e03bcb209bb8f0e1215b249264eb0f879bcb50a,Nomination update
65,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,e365ebd11a90ff74ad10e0c93ffbbbffe12988c5,Misc style and UI tweaks
66,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,f1b721fa837da08298e4fff088c930be4bcfac6c,More misc style and UI changes
67,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,decae74f2250e3d2255367372b790060898614c0,Still more misc style and UI changes
68,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,9be817aa3e463c75fbdf7ae7ec343ca5f582e530,Make the award claim buttons larger
69,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,94792f4898f6bde6dc6e97b1eb551d5d595766df,Tweaks to nomination detail UI and styles
70,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,ef5753981a46e394a18f8aef71b7b363a7fb7494,"Rename badgermini to badgus, in anticipation of setting up badg.us"
71,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,84d474f8a36c90d6449fa5b635ed6cc248bdcfa2,Site title setting; README / TODO updates
72,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,8b0149dff94dfb744517c84e7dde8f10429cd8f4,Updated sign out view; updates to notifications
73,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,d0cafdc2a5862b75cb749873c8d3fe21c73ddc9e,Need a 404 template once DEBUG is turned off
74,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,764e6653a586be11d99ba638e99c1d676c42e1f5,adding django-taggit
75,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,396cc66c152f673df86d7ab8a1a85da1ce9192e8,"Tweaks to fix tests, update to django-badger"
76,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,d4a2af091b86308253db0f779b69c62b76edd1b9,Initial stab at adding tags
77,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,16f2e4cef403b251941042235f27b23bb3c73836,django-badger update
78,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,13e1960a7054e69d2708fef4346948dbb7e041c2,Make sure django-taggit submodule added
79,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,2f6aa13a08c7e1eed4b5eebd1c4693846e19a30b,Update django-badger-multiplayer
80,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,d783d38f8557fb6615cdbfc113327510dd41048d,Accept initial value to pre-fill tags field
81,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,d29503d9b35e77353e7a7e1cff3258e962f34afb,"Claim code mass generation, management, and display"
82,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,91ceb71dbc2d6626aebb89241a6268c80bbde762,Quick tweak to badge detail template
83,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,cefeff0db18c17205928d7c36ab1e264c62950f4,Quick bugfix for award claiming
84,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,7a5d73bd7f27b455d52253a31405fcf27be03982,"UI tweaks, django-badger update"
85,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,568c4373922e4e517cdfeb082d230ea00ac79afd,"Allow anonymous user to view award claim page, bugfix for next page on sign in"
86,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,759f8e75ccabf3e4823f79cb58127a30f6a30af2,First stab at building a PDF for printable claim labels; misc tweaks and bugfixes
87,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,31492b3ec9ab64191fe30eaa16ea01707e109062,PDF generation: Tweak to measuring line width for font size adjustment
88,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,68fb2200631c1c14850212d73f40adf6bcab6df6,Add CACHES setting to local.py-dist
89,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,7dc6601bbd10b119c41b2a2002753bf8c187d9eb,Reworked layout of home page; misc other layout tweaks
90,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,e105665389ce63093a4a93061e5fdb8ce87432fc,Merge branch 'master' of github.com:lmorchard/badg.us
91,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,de4365b0c034cb375e82555ee137cd3a8c3dbdea,Tweak to add recent badges to tag and search results
92,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,15ff607872a93ed820e3adfcf9f557e9f62f0140,Tweak in displaying tag in result title
93,https://api.github.com/repos/mozilla/mozilla-badges/pulls/4,4,[WIP] badgekit api integration,"This is still a WIP, and currently only allows you to create, view, and delete badges (most notably, you cannot award them yet).

This uses a modified version of the django-roa library (https://github.com/charles-vdulac/django-roa) to allow the Badge model (and soon the Award model) to use Badgekit API's REST interface as its ""database"" representation instead of mysql.  There are still some consequences to work out, most notably the fact that Badgekit API badges do not currently have the concept of a creator, which is fairly central to the way django-badger works.

(Note that I've just dumped the django-roa library in vendor-local rather than linking to a submodule.  It should probably be moved to a submodule eventually, but I've been making changes often enough to the module that it was much easier to not have to update a submodule every time)
",ghost,10137,2014-07-01T13:35:31Z,NONE,False,36856,651,368,,Python,5cf797b13e68da3984815727927938947866f49e,"Badge deletion, misc layout tweaks"
94,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,00c06ea21692a653ac87fddca8020392e371391a,Override bootstrap's cursor treatment on .badge
95,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,eece3a813893bb4aac207d5f6a109f63c008354f,"Support for granting deferred awards to others

* Use case is a staff/support volunteer given claim code and email
  address, who can then claim the award on the behalf of the email
  address owner."
96,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,48ad075c3fbe2a8b1c66c56b30b8fb3025d2fa3a,Misc style and UI tweaks
97,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,8a8cd6b24565c8d09336c1172a756a2ee6cb15d0,django-badger update; misc style and UI updates
98,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,4c363557366ae876f534f9b567993916bcc671f3,Update to accept multiple email addresses for nomination submission
99,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,a3eb294e6a450fbbbce2d4634a0f5b89328fa458,Nomination update
100,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,4e03bcb209bb8f0e1215b249264eb0f879bcb50a,Nomination update
101,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,e365ebd11a90ff74ad10e0c93ffbbbffe12988c5,Misc style and UI tweaks
102,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,f1b721fa837da08298e4fff088c930be4bcfac6c,More misc style and UI changes
103,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,decae74f2250e3d2255367372b790060898614c0,Still more misc style and UI changes
104,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,9be817aa3e463c75fbdf7ae7ec343ca5f582e530,Make the award claim buttons larger
105,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,94792f4898f6bde6dc6e97b1eb551d5d595766df,Tweaks to nomination detail UI and styles
106,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,ef5753981a46e394a18f8aef71b7b363a7fb7494,"Rename badgermini to badgus, in anticipation of setting up badg.us"
107,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,84d474f8a36c90d6449fa5b635ed6cc248bdcfa2,Site title setting; README / TODO updates
108,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,8b0149dff94dfb744517c84e7dde8f10429cd8f4,Updated sign out view; updates to notifications
109,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,d0cafdc2a5862b75cb749873c8d3fe21c73ddc9e,Need a 404 template once DEBUG is turned off
110,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,764e6653a586be11d99ba638e99c1d676c42e1f5,adding django-taggit
111,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,396cc66c152f673df86d7ab8a1a85da1ce9192e8,"Tweaks to fix tests, update to django-badger"
112,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,d4a2af091b86308253db0f779b69c62b76edd1b9,Initial stab at adding tags
113,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,16f2e4cef403b251941042235f27b23bb3c73836,django-badger update
114,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,13e1960a7054e69d2708fef4346948dbb7e041c2,Make sure django-taggit submodule added
115,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,2f6aa13a08c7e1eed4b5eebd1c4693846e19a30b,Update django-badger-multiplayer
116,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,d783d38f8557fb6615cdbfc113327510dd41048d,Accept initial value to pre-fill tags field
117,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,d29503d9b35e77353e7a7e1cff3258e962f34afb,"Claim code mass generation, management, and display"
118,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,91ceb71dbc2d6626aebb89241a6268c80bbde762,Quick tweak to badge detail template
119,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,cefeff0db18c17205928d7c36ab1e264c62950f4,Quick bugfix for award claiming
120,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,7a5d73bd7f27b455d52253a31405fcf27be03982,"UI tweaks, django-badger update"
121,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,568c4373922e4e517cdfeb082d230ea00ac79afd,"Allow anonymous user to view award claim page, bugfix for next page on sign in"
122,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,759f8e75ccabf3e4823f79cb58127a30f6a30af2,First stab at building a PDF for printable claim labels; misc tweaks and bugfixes
123,https://api.github.com/repos/mozilla/mozilla-badges/pulls/3,3,[WIP] Sandstone,"For a new L&F. Plus studio!
",andrewhayward,159848,2014-06-27T12:26:55Z,MEMBER,False,37849,651,322,,Python,31492b3ec9ab64191fe30eaa16ea01707e109062,PDF generation: Tweak to measuring line width for font size adjustment
124,https://api.github.com/repos/mozilla/mozilla-badges/pulls/2,2,Updating README,,andrewhayward,159848,2014-06-24T23:24:42Z,MEMBER,True,18,27,1,,Python,dcde6f3301f58d3b13818a8ef6e500b2972cfaaa,Updating README
125,https://api.github.com/repos/mozilla/mozilla-badges/pulls/1,1,Initial changes to get stuff workin',"This switches from using django-badger to django-badgekit, upgrades to a (somewhat) newer version of playdoh-lib in order to fix an outdated py-bcrypt version, and removes some redundant requirements in prod.txt.
",ghost,10137,2014-06-24T23:08:15Z,NONE,True,7,10,7,,Python,ff3f2e288a555d42877563d7e6b71838e40018f7,Changing to django-badgekit
126,https://api.github.com/repos/mozilla/mozilla-badges/pulls/1,1,Initial changes to get stuff workin',"This switches from using django-badger to django-badgekit, upgrades to a (somewhat) newer version of playdoh-lib in order to fix an outdated py-bcrypt version, and removes some redundant requirements in prod.txt.
",ghost,10137,2014-06-24T23:08:15Z,NONE,True,7,10,7,,Python,b082065dafe6932728979f873a6c3aaa35d2f4e7,Updating playdoh-lib version
127,https://api.github.com/repos/mozilla/mozilla-badges/pulls/1,1,Initial changes to get stuff workin',"This switches from using django-badger to django-badgekit, upgrades to a (somewhat) newer version of playdoh-lib in order to fix an outdated py-bcrypt version, and removes some redundant requirements in prod.txt.
",ghost,10137,2014-06-24T23:08:15Z,NONE,True,7,10,7,,Python,7f2047b6ef0ea6849ab3f5c41ff636743abc3321,Fixing = vs ==
128,https://api.github.com/repos/mozilla/mozilla-badges/pulls/1,1,Initial changes to get stuff workin',"This switches from using django-badger to django-badgekit, upgrades to a (somewhat) newer version of playdoh-lib in order to fix an outdated py-bcrypt version, and removes some redundant requirements in prod.txt.
",ghost,10137,2014-06-24T23:08:15Z,NONE,True,7,10,7,,Python,21402c2d8752c5dfb4461800381864bfe1618530,Removing redundant requirement
129,https://api.github.com/repos/mozilla/mozilla-badges/pulls/1,1,Initial changes to get stuff workin',"This switches from using django-badger to django-badgekit, upgrades to a (somewhat) newer version of playdoh-lib in order to fix an outdated py-bcrypt version, and removes some redundant requirements in prod.txt.
",ghost,10137,2014-06-24T23:08:15Z,NONE,True,7,10,7,,Python,4450e1f826283b68ccc54cdfb3e0ea66deceb004,Adjusting prod requirements
