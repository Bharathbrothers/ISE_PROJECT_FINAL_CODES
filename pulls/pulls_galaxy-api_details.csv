,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/galaxy-api/pulls/367,367,Add Mozilla Code of Conduct,"Fixes #366


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T04:53:41Z,CONTRIBUTOR,True,15,0,1,To infinity and beyond. The backend API.,JavaScript,f150da3331703b75e8d4b7fc207628246041deb7,"Add Mozilla Code of Conduct file

Fixes #366.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/galaxy-api/pulls/364,364,[WIP] add Steam authentication (issue #270),,cvan,203725,2015-01-21T07:29:48Z,CONTRIBUTOR,False,74,8,5,To infinity and beyond. The backend API.,JavaScript,5b22fe4fdbbbd977e1060d0c3fe73b6afa8ad19d,steam login
2,https://api.github.com/repos/mozilla/galaxy-api/pulls/364,364,[WIP] add Steam authentication (issue #270),,cvan,203725,2015-01-21T07:29:48Z,CONTRIBUTOR,False,74,8,5,To infinity and beyond. The backend API.,JavaScript,d50a074d8ce9123bee97e70429a6402fff628c2f,start using hapi-passport + passport-steam
3,https://api.github.com/repos/mozilla/galaxy-api/pulls/364,364,[WIP] add Steam authentication (issue #270),,cvan,203725,2015-01-21T07:29:48Z,CONTRIBUTOR,False,74,8,5,To infinity and beyond. The backend API.,JavaScript,59a32d377a266d3e6b6899e809d13c2d587d0724,use openid library for steam auth
4,https://api.github.com/repos/mozilla/galaxy-api/pulls/362,362,move `safeHandler` to `utils`,,cvan,203725,2015-01-20T23:37:14Z,CONTRIBUTOR,True,32,32,2,To infinity and beyond. The backend API.,JavaScript,e704c7d4bce7324f3b44fe44744d61f4ca32df34,move `safeHandler` to `utils`
5,https://api.github.com/repos/mozilla/galaxy-api/pulls/361,361,fix regressed URL routes (from #360),,cvan,203725,2015-01-17T00:54:52Z,CONTRIBUTOR,True,9,11,2,To infinity and beyond. The backend API.,JavaScript,192837fd74a66654b58c44dbade4060a9551e765,"fix regressed URL routes, and move `server.routes` call (from #360)"
6,https://api.github.com/repos/mozilla/galaxy-api/pulls/360,360,make URL routes file easier to read (fixes #268),,cvan,203725,2015-01-16T23:45:52Z,CONTRIBUTOR,True,7,39,1,To infinity and beyond. The backend API.,JavaScript,82d8eb8c80b13ff9f91a3cfbad32ab9e609fb9ce,make URL routes file easier to read (fixes #268)
7,https://api.github.com/repos/mozilla/galaxy-api/pulls/359,359,add URL route for steam authentication (issue #270),,cvan,203725,2015-01-16T12:19:10Z,CONTRIBUTOR,True,31,0,3,To infinity and beyond. The backend API.,JavaScript,b5fdfa70dedce9a799fb24cda8872a42bf4edaf3,add URL route for steam authentication (issue #270)
8,https://api.github.com/repos/mozilla/galaxy-api/pulls/355,355,add sample `curl` commands for API usage to README,,cvan,203725,2015-01-16T02:17:11Z,CONTRIBUTOR,True,81,70,2,To infinity and beyond. The backend API.,JavaScript,7dc817bf097f814e958128bdfe2d9772638d5f0f,add sample `curl` commands for API usage to README (issue #358)
9,https://api.github.com/repos/mozilla/galaxy-api/pulls/354,354,use a consistent interface for what models return to controllers (fixes #353),,cvan,203725,2015-01-16T01:55:36Z,CONTRIBUTOR,True,11,18,2,To infinity and beyond. The backend API.,JavaScript,56965625ccca87cc97f64108d4bc89b3ba780bf6,use a consistent interface for what models return to controllers (fixes #353)
10,https://api.github.com/repos/mozilla/galaxy-api/pulls/352,352,make controller handlers' `catch` methods more DRY (fixes #351),,cvan,203725,2015-01-16T01:08:02Z,CONTRIBUTOR,True,37,36,1,To infinity and beyond. The backend API.,JavaScript,06c06e3d69e0717ce6fb1de40db33c1bd814f272,make controller handlers' `catch` methods more DRY (fixes #351)
11,https://api.github.com/repos/mozilla/galaxy-api/pulls/349,349,simplify routes (fixes #268),"this makes `routes.js` way more readable. and moves all the logic out of `routes.js` and into the controllers' JS files.
",cvan,203725,2015-01-15T07:15:56Z,CONTRIBUTOR,True,151,166,3,To infinity and beyond. The backend API.,JavaScript,4db2576d338a021358b2c86e387b70390c8a2bd6,simplify routes (fixes #268)
12,https://api.github.com/repos/mozilla/galaxy-api/pulls/347,347,add dependency and stubs for Steam user authentication,,cvan,203725,2015-01-14T12:27:23Z,CONTRIBUTOR,True,110,2,4,To infinity and beyond. The backend API.,JavaScript,c7aaab3958dcad41e436dfcceb2e3810ec60a472,add `node-steam` dependency for Steam authentication (issue #270)
13,https://api.github.com/repos/mozilla/galaxy-api/pulls/347,347,add dependency and stubs for Steam user authentication,,cvan,203725,2015-01-14T12:27:23Z,CONTRIBUTOR,True,110,2,4,To infinity and beyond. The backend API.,JavaScript,8fa397a2b5abfcfddb7df7d4a82af9bd348d6aa1,add stubs for user controllers and models for Steam authentication (issue #270)
14,https://api.github.com/repos/mozilla/galaxy-api/pulls/345,345,add test for `PUT /games/{idOrSlug}` hapi endpoint (fixes #300),,cvan,203725,2015-01-14T12:02:48Z,CONTRIBUTOR,True,150,0,1,To infinity and beyond. The backend API.,JavaScript,0ad3390ca6db079b7e149ec1d1b9825bc224044c,add test for `PUT /games/{idOrSlug}` hapi endpoint (fixes #300)
15,https://api.github.com/repos/mozilla/galaxy-api/pulls/344,344,"add assertion for `Game.objects.exists` call in `submitGame` helper function in game controller tests (related to issue #298, issue #301)",,cvan,203725,2015-01-14T11:46:45Z,CONTRIBUTOR,True,2,0,1,To infinity and beyond. The backend API.,JavaScript,c093885f4bb7e4252083256358a9167c4d202416,"add assertion for `Game.objects.exists` call in `submitGame` helper function in game controller tests (related to issue #298, issue #301)"
16,https://api.github.com/repos/mozilla/galaxy-api/pulls/343,343,add test for `DELETE /games/{idOrSlug}` hapi endpoint (fixes #301),,cvan,203725,2015-01-14T11:39:14Z,CONTRIBUTOR,True,64,4,2,To infinity and beyond. The backend API.,JavaScript,c53793a7ed08229e9d78d7e91596deb5dd222890,add test for `DELETE /games/{idOrSlug}` hapi endpoint (fixes #301)
17,https://api.github.com/repos/mozilla/galaxy-api/pulls/342,342,check database after game creation; make game object assertions DRYer (issue #298),,cvan,203725,2015-01-14T11:23:43Z,CONTRIBUTOR,True,32,34,1,To infinity and beyond. The backend API.,JavaScript,68ca65be23e38ef4d11bce39391c558900ba82e7,check database after game creation; make game object assertions DRYer (issue #298)
18,https://api.github.com/repos/mozilla/galaxy-api/pulls/339,339,use afterEach to empty table for each game CRUD tests,"Related to PR #336.
",cvan,203725,2015-01-14T10:11:09Z,CONTRIBUTOR,True,11,5,1,To infinity and beyond. The backend API.,JavaScript,266e1194e5883cefa3b204252534602353819b06,use afterEach to empty table for each game CRUD tests
19,https://api.github.com/repos/mozilla/galaxy-api/pulls/338,338,test `description` in games unit tests (for good measure),,cvan,203725,2015-01-14T09:38:11Z,CONTRIBUTOR,True,4,3,1,To infinity and beyond. The backend API.,JavaScript,cba052c179782eb891da91d33c74e9038349fdf7,test `description` in games unit tests (for good measure)
20,https://api.github.com/repos/mozilla/galaxy-api/pulls/336,336,add test for `GET /games/{idOrSlug}` hapi endpoint (fixes #302),,cvan,203725,2015-01-14T01:58:42Z,CONTRIBUTOR,True,53,1,1,To infinity and beyond. The backend API.,JavaScript,58a7078eb36515aab29ea68a8168c6d919fc4f67,add test for `GET /games/{idOrSlug}` hapi endpoint (fixes #302)
21,https://api.github.com/repos/mozilla/galaxy-api/pulls/335,335,fix `db.query` test (blocks PRs #321 and #334),"was causing intermittent test failures if `games` table was empty.
",cvan,203725,2015-01-13T23:13:15Z,CONTRIBUTOR,True,1,1,1,To infinity and beyond. The backend API.,JavaScript,de05a66e5f27b236d0322ad86de7cb5ab2c05336,fix `db.query` test (blocks PRs #321 and #334)
22,https://api.github.com/repos/mozilla/galaxy-api/pulls/334,334,add test for `GET /games` hapi endpoint (fixes #286),"WIP. issues locally.
",cvan,203725,2015-01-13T10:30:52Z,CONTRIBUTOR,False,97,20,2,To infinity and beyond. The backend API.,JavaScript,bcd2010c6540d6ef0bdb2dddc46354e26e9d4cb9,add test for `GET /games` hapi endpoint (fixes #286)
23,https://api.github.com/repos/mozilla/galaxy-api/pulls/333,333,make `isConnected` helper function in `lib.db` to be more DRY,,cvan,203725,2015-01-13T08:21:22Z,CONTRIBUTOR,True,8,7,2,To infinity and beyond. The backend API.,JavaScript,69e15b8466f66fd36e03d7c1f7bad5f9173d676b,make `isConnected` helper function in `lib.db` to be more DRY
24,https://api.github.com/repos/mozilla/galaxy-api/pulls/330,330,Closes #318 - Fixed jslint errors.,"There are a few errors left. This one troubles me: 

```
./galaxy-api/api/models/game.js
  line 3  col 5  Redefinition of 'Promise'.
```

The line in question is:

``` javascript
var Promise = require('es6-promise').Promise;
```

I don't understand what causes the problem, nor how to fix it. @cvan, any idea? 

The other question I have is a styling issue. In a case like this (in unit tests): 

``` javascript
  lab.test('succeeds when server is connected with valid connection string', function (done) {
    expect('bla bla');
    // ...
  });
```

The first line is too long, how should I break it? I have 2 suggestions: 

``` javascript
  lab.test(
    'succeeds when server is connected with valid connection string', 
    function (done) {
      expect('bla bla');
      // ...
    }
  );
```

or

``` javascript
  lab.test(
  'succeeds when server is connected with valid connection string',
  function (done) {
    expect('bla bla');
    // ...
  });
```

What's best? 
",adngdb,328790,2015-01-09T16:32:39Z,CONTRIBUTOR,True,219,173,13,To infinity and beyond. The backend API.,JavaScript,e8fedc6d7b66cd963ddcbf04572d05ec000e4426,Closes #318 - Fixed jslint errors.
25,https://api.github.com/repos/mozilla/galaxy-api/pulls/330,330,Closes #318 - Fixed jslint errors.,"There are a few errors left. This one troubles me: 

```
./galaxy-api/api/models/game.js
  line 3  col 5  Redefinition of 'Promise'.
```

The line in question is:

``` javascript
var Promise = require('es6-promise').Promise;
```

I don't understand what causes the problem, nor how to fix it. @cvan, any idea? 

The other question I have is a styling issue. In a case like this (in unit tests): 

``` javascript
  lab.test('succeeds when server is connected with valid connection string', function (done) {
    expect('bla bla');
    // ...
  });
```

The first line is too long, how should I break it? I have 2 suggestions: 

``` javascript
  lab.test(
    'succeeds when server is connected with valid connection string', 
    function (done) {
      expect('bla bla');
      // ...
    }
  );
```

or

``` javascript
  lab.test(
  'succeeds when server is connected with valid connection string',
  function (done) {
    expect('bla bla');
    // ...
  });
```

What's best? 
",adngdb,328790,2015-01-09T16:32:39Z,CONTRIBUTOR,True,219,173,13,To infinity and beyond. The backend API.,JavaScript,459d75c47fb3607865a5525277ddade315bea0af,"Issue #318 - Fixed linting errors for unit tests, fixed Promise polyfill."
26,https://api.github.com/repos/mozilla/galaxy-api/pulls/330,330,Closes #318 - Fixed jslint errors.,"There are a few errors left. This one troubles me: 

```
./galaxy-api/api/models/game.js
  line 3  col 5  Redefinition of 'Promise'.
```

The line in question is:

``` javascript
var Promise = require('es6-promise').Promise;
```

I don't understand what causes the problem, nor how to fix it. @cvan, any idea? 

The other question I have is a styling issue. In a case like this (in unit tests): 

``` javascript
  lab.test('succeeds when server is connected with valid connection string', function (done) {
    expect('bla bla');
    // ...
  });
```

The first line is too long, how should I break it? I have 2 suggestions: 

``` javascript
  lab.test(
    'succeeds when server is connected with valid connection string', 
    function (done) {
      expect('bla bla');
      // ...
    }
  );
```

or

``` javascript
  lab.test(
  'succeeds when server is connected with valid connection string',
  function (done) {
    expect('bla bla');
    // ...
  });
```

What's best? 
",adngdb,328790,2015-01-09T16:32:39Z,CONTRIBUTOR,True,219,173,13,To infinity and beyond. The backend API.,JavaScript,9fb679c08ae2fdfe94f97ef5dcca325977434f8a,Only one Promise polyfill call.
27,https://api.github.com/repos/mozilla/galaxy-api/pulls/330,330,Closes #318 - Fixed jslint errors.,"There are a few errors left. This one troubles me: 

```
./galaxy-api/api/models/game.js
  line 3  col 5  Redefinition of 'Promise'.
```

The line in question is:

``` javascript
var Promise = require('es6-promise').Promise;
```

I don't understand what causes the problem, nor how to fix it. @cvan, any idea? 

The other question I have is a styling issue. In a case like this (in unit tests): 

``` javascript
  lab.test('succeeds when server is connected with valid connection string', function (done) {
    expect('bla bla');
    // ...
  });
```

The first line is too long, how should I break it? I have 2 suggestions: 

``` javascript
  lab.test(
    'succeeds when server is connected with valid connection string', 
    function (done) {
      expect('bla bla');
      // ...
    }
  );
```

or

``` javascript
  lab.test(
  'succeeds when server is connected with valid connection string',
  function (done) {
    expect('bla bla');
    // ...
  });
```

What's best? 
",adngdb,328790,2015-01-09T16:32:39Z,CONTRIBUTOR,True,219,173,13,To infinity and beyond. The backend API.,JavaScript,fc57f8756d133ba9edf9265d8e69e9b9c6bee167,gulp lint now returns no error!
28,https://api.github.com/repos/mozilla/galaxy-api/pulls/329,329,Closes #308 - Use uuids instead of database IDs.,"@cvan r?

Do we want to publicly expose the UUID? 
",adngdb,328790,2015-01-09T15:34:43Z,CONTRIBUTOR,False,88,43,8,To infinity and beyond. The backend API.,JavaScript,9418800bd80c01bfac4225d9ff15c564b6f7bf5d,Closes #308 - Use uuids instead of database IDs.
29,https://api.github.com/repos/mozilla/galaxy-api/pulls/329,329,Closes #308 - Use uuids instead of database IDs.,"@cvan r?

Do we want to publicly expose the UUID? 
",adngdb,328790,2015-01-09T15:34:43Z,CONTRIBUTOR,False,88,43,8,To infinity and beyond. The backend API.,JavaScript,d5fa352bec89664b60e96d8d502819ce6ec43450,Issue #308 - Use postgresql's uuid data type instead of string.
30,https://api.github.com/repos/mozilla/galaxy-api/pulls/329,329,Closes #308 - Use uuids instead of database IDs.,"@cvan r?

Do we want to publicly expose the UUID? 
",adngdb,328790,2015-01-09T15:34:43Z,CONTRIBUTOR,False,88,43,8,To infinity and beyond. The backend API.,JavaScript,432e717ae5b70592b9f78267e8b8994f12af8aed,"Issue #308 - idOrSlug -> uuidOrSlug, isStringAnInt -> isStringAUuid, added a test to get a game by its uuid."
31,https://api.github.com/repos/mozilla/galaxy-api/pulls/329,329,Closes #308 - Use uuids instead of database IDs.,"@cvan r?

Do we want to publicly expose the UUID? 
",adngdb,328790,2015-01-09T15:34:43Z,CONTRIBUTOR,False,88,43,8,To infinity and beyond. The backend API.,JavaScript,fa4e367276b713d04a1665e6b09c2fbdbffa4446,Fixed errors after rebasing.
32,https://api.github.com/repos/mozilla/galaxy-api/pulls/329,329,Closes #308 - Use uuids instead of database IDs.,"@cvan r?

Do we want to publicly expose the UUID? 
",adngdb,328790,2015-01-09T15:34:43Z,CONTRIBUTOR,False,88,43,8,To infinity and beyond. The backend API.,JavaScript,7a193eeccc9468eab481f941d158e3f5d90f1a73,Return location using UUID when a game is updated.
33,https://api.github.com/repos/mozilla/galaxy-api/pulls/328,328,let environment variables override defaults for npm server scripts,,cvan,203725,2015-01-08T07:02:01Z,CONTRIBUTOR,True,18,22,4,To infinity and beyond. The backend API.,JavaScript,4e4fe9d3b5001eeda93618e1b75a062a7f2eefa4,let environment variables override defaults for npm server scripts; fix npm scripts
34,https://api.github.com/repos/mozilla/galaxy-api/pulls/327,327,update POSTGRES_URL in dist dev/prod settings files,,cvan,203725,2015-01-08T01:07:16Z,CONTRIBUTOR,True,2,4,2,To infinity and beyond. The backend API.,JavaScript,616534fe00853d500f457d7b13eeeea2532c569d,update POSTGRES_URL in dist dev/prod settings files
35,https://api.github.com/repos/mozilla/galaxy-api/pulls/325,325,use a persistent database connection (fixes #322),,cvan,203725,2015-01-07T09:01:57Z,CONTRIBUTOR,True,256,22,7,To infinity and beyond. The backend API.,JavaScript,cd7f47961d47c33075478373d33664962ad9638d,use a persistent database connection (fixes #322)
36,https://api.github.com/repos/mozilla/galaxy-api/pulls/324,324,always wipe database for other npm `test-*` scripts,"we were already wiping the test database for `npm test`, but I forgot to update the other scripts.
",cvan,203725,2015-01-07T00:46:21Z,CONTRIBUTOR,True,5,4,1,To infinity and beyond. The backend API.,JavaScript,11ace804fdb354c03420a97e45180bfadb090124,always wipe database for other npm `test-*` scripts
37,https://api.github.com/repos/mozilla/galaxy-api/pulls/321,321,write test for `GET /games` hapi endpoint (fixes #286),,cvan,203725,2015-01-06T01:07:01Z,CONTRIBUTOR,True,96,19,1,To infinity and beyond. The backend API.,JavaScript,4e0804c7ff18c1cb6f4af252ad903a20b04a9191,add test for `GET /games` hapi endpoint (fixes #286)
38,https://api.github.com/repos/mozilla/galaxy-api/pulls/320,320,change `.only.contain` assertion to `.deep.equal` in `POST /games` test (issue #298),,cvan,203725,2015-01-06T01:03:16Z,CONTRIBUTOR,True,1,1,1,To infinity and beyond. The backend API.,JavaScript,db5cccd1d294e18faadac36764f7ef1434c032fa,change `.only.contain` assertion to `.deep.equal` in `POST /games` test (issue #298)
39,https://api.github.com/repos/mozilla/galaxy-api/pulls/319,319,add test for `POST /games` hapi endpoint (issue #298),,cvan,203725,2015-01-06T00:07:04Z,CONTRIBUTOR,True,102,0,1,To infinity and beyond. The backend API.,JavaScript,886b1799440f630b44034947a9f10de703f6f4b1,add test for `POST /games` hapi endpoint (issue #298)
40,https://api.github.com/repos/mozilla/galaxy-api/pulls/317,317,add a `.jshintrc`,,cvan,203725,2015-01-06T00:02:54Z,CONTRIBUTOR,True,86,0,1,To infinity and beyond. The backend API.,JavaScript,db1e039026504bd528f613e109e9d86c1c3149a9,add a `.jshintrc`
41,https://api.github.com/repos/mozilla/galaxy-api/pulls/316,316,improve pattern for jshint-able files,,cvan,203725,2015-01-06T00:00:52Z,CONTRIBUTOR,True,2,3,1,To infinity and beyond. The backend API.,JavaScript,d361d450dbc0811c9fd250ff40de2e4f7375ef46,improve pattern for jshint-able files
42,https://api.github.com/repos/mozilla/galaxy-api/pulls/314,314,suppress gulp standard output when running tests,,cvan,203725,2015-01-05T23:45:33Z,CONTRIBUTOR,True,1,1,1,To infinity and beyond. The backend API.,JavaScript,0109a753ec5f8b5ed11f6db1a3d1fc650e8e565f,suppress gulp standard output when running tests
43,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,d21c6cff880a74cf08f82991be82ee7242f4ea4f,replace koa with hapi (#245)
44,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,c0ba28e2c5cd212b1ce95e20fcccd78a16d5a046,use hapi-pg for maintaining postgres connections
45,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,e29996484be5491674f364f37dd1777eb61d31c9,remove `lib.utils.extend`
46,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,78b18efc8e4d9af1b805f17481c9bee7aa0003ea,"use `hapi-node-postgres`, postgres migrations, queries; add basic create/get game hapi endpoints (issue #215; issue #296, issue #297)"
47,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,b5fb650ff5d31257ca884eafeeff00056e4cc216,send 404 when game not found
48,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,1b167f9fb6b06fb476c128f35800691900dfdd54,use promises for hapi API game endpoints
49,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,fabac447c2282aa58b69b3f6c52d8868c63ccd09,use boom to surface hapi API errors
50,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,6c9b63a4b09b04d18c47eb1ba43b155a1165eaa2,reorder columns in `games` table
51,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,2484f86d31dc4595f1a4f55ed395cea2917fc229,ensure DB errors are properly caught and internal errors are caught+logged but not shown in responses (fixes #259)
52,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,590a66ffc1a1373642f230861ba3d98e67d39f94,add comments of sample usage for existing game API endpoints (fixes #285)
53,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,946cc3db24306d4a8932670c8663c542d70f0ff4,abstract out DB calls in `POST /games` controller (fixes #265)
54,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,3d7ef5ec41f2529fd082581d9fe850a51ea21653,use `Boom.internal` when preparing error response for `DatabaseError`
55,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,6964ba2a8f291da438e1657ff2f4eea59d47d38c,add `GET /games` hapi controller (fixes #261)
56,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,492e25a99cfda75027120013e92cef1533e93209,implement `DELETE /games/{idOrSlug}` in hapi; exclude soft-deleted games (fixes #262; fixes #293)
57,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,bc0b71fc0eb4b3a5867469443260be9c2666236e,game controllers: simplify arguments and remove unused `utils`
58,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,5a5a96654c6a3cab71a95e9b03eb20463226a12e,sanitise rows as objects in hapi game API responses (fixes #295)
59,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,29417ce9c605a96268ac399315e84e271850afa4,add comment for sample usage of `DELETE /games/{gameIdOrSlug}` (issue #262)
60,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,f1c65736c6bfbfb0e6bfd510ad11def8bd8e1757,implement `PUT /games/{gameIdOrSlug}` in hapi (fixes #264)
61,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,60ef5ec665652d9202c4e983ea1e6d8f10df3094,redirect upon changing a slug after a `PUT /games/{idOrSlug}` (fixes #304)
62,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,5b4a9d61b5db847a91ab5d1a701ba537b0854220,redirect to resource after a `POST /games` (fixes #303)
63,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,160b444e2dc18d941b1ece23f89150b2f00d284d,add `lab` for unit testing; add tests for `lib.utils.isStringAnInt` (issue #309)
64,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,21a9116d48942c0253a2c93ddbec0e2cd8c757fc,add tests for `lib.utils.stringifyObject` (issue #309)
65,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,cbc5342093b5d6620ddc217a5677008220b13855,add tests for `lib.utils.promisify` (issue #309)
66,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,177f060bf88ba0e1c4a033adaa6586653f035ead,add tests for `lib.utils.errors` (issue #309)
67,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,d2c94c6e2f80973600abb8f819f44ed6d49e73cb,add tests for `lib.utils.returnError` (issue #309)
68,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,2727f243e17c44acbf1d04988fa3f285e6248579,change `npm run-script` to `npm run` in `README`
69,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,6bb0b10938a2324bb085186766fbd91b37338738,fix grammar in `utils.errors` unit test
70,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,8c67a1edde7081279c023203f957d7c10e3ada5c,show all hapi validation errors in error responses
71,https://api.github.com/repos/mozilla/galaxy-api/pulls/313,313,"use hapi as the new framework, add postgres, revamp testing",,cvan,203725,2015-01-03T04:36:44Z,CONTRIBUTOR,True,976,1424,30,To infinity and beyond. The backend API.,JavaScript,5de8d8786bfef3b2e72acae008b33dd6f81cdaa7,add gulp tasks for DB operations (issue #311); swap DB when running tests (issue #312)
72,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,41a2fa058cf9fd5cf61feced38878d30ce2860a5,add disclaimer
73,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,ece4ca41d6b3949aba41026e483d67587d7bb235,Add Travis config
74,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,10b3252433ac66cdd0f5ced6a6a7c7204b375b36,add Travis CI Build Status badge to README (issue #234)
75,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,527b0c3ca68090572fa287a8b0e33931ac2a53d8,Working games and etc unit tests.
76,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,796b292a387daa46ca27bc98b369c15a36ac2511,Fixes #235 - Return a proper error message when JSON payload is malformed.
77,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,6a79378baac1b6ae127a6ee52386eaafc0c85ed9,replace koa with hapi (#245)
78,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,bcd4d7e78bcb8084be832cc20f8eceab15e183c2,use hapi-pg for maintaining postgres connections
79,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,fa5bb81e2ccff03882e51e19681491bda78c6f42,remove `lib.utils.extend`
80,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,88f8ad0c899915c38e45c52e73716de27dae1ee1,"use `hapi-node-postgres`, postgres migrations, queries; add basic create/get game hapi endpoints (issue #215; issue #296, issue #297)"
81,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,9b172192ab7f334893709f4b8e1d972187452e03,send 404 when game not found
82,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,3c3cd4f069b69e40b0fa724768baf12e56437ae8,use promises for hapi API game endpoints
83,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,86ce1a8c0372af355e9599da2672b00ebec0cb20,use boom to surface hapi API errors
84,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,8ea875d82833aa6864e27e88cc4c466ee355a7fc,reorder columns in `games` table
85,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,5803cac41382c92786c16ae9d704754deeaa6bdf,ensure DB errors are properly caught and internal errors are caught+logged but not shown in responses (fixes #259)
86,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,7c5d0c972e0a12c24e5acc19b5e1ccdeee783b5f,add comments of sample usage for existing game API endpoints (fixes #285)
87,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,91acaeb1521a5cb870c7f376f9b6d24c36e03669,abstract out DB calls in `POST /games` controller (fixes #265)
88,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,09389b0fb60a7f95cb521207822aafa338a8c3ef,use `Boom.internal` when preparing error response for `DatabaseError`
89,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,438b34b2759cc7b3880d548835973801c6d8bd1c,add `GET /games` hapi controller (fixes #261)
90,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,b2449290c7ad533f1642e553ed58329f84aeaa4f,implement `DELETE /games/{idOrSlug}` in hapi; exclude soft-deleted games (fixes #262; fixes #293)
91,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,52a5447bb4c22d4d3e246e672bddbf52a16ab3da,game controllers: simplify arguments and remove unused `utils`
92,https://api.github.com/repos/mozilla/galaxy-api/pulls/254,254,replace koa with hapi (#245),"## TODO
- [ ] have parity with all Koa endpoints and all redis calls with postgres calls
",cvan,203725,2014-12-13T00:31:39Z,CONTRIBUTOR,False,459,1381,29,To infinity and beyond. The backend API.,JavaScript,f93d72ae6de9d943d82dd729d69e2ae657a59bd2,sanitise rows as objects in hapi game API responses (fixes #295)
93,https://api.github.com/repos/mozilla/galaxy-api/pulls/251,251,Add Travis config,,robhudson,1106,2014-11-25T23:36:47Z,MEMBER,True,7,0,1,To infinity and beyond. The backend API.,JavaScript,ac0b69f62598ee8568333a3a7c9b2b30cfc0511f,Add Travis config
94,https://api.github.com/repos/mozilla/galaxy-api/pulls/250,250,Working games and etc unit tests.,"@cvan r? 

The `etc` and `games` unit tests pass on my machine. I haven't gotten to the `leaderboards` ones yet, except for some refactoring / styling improvements. 
",adngdb,328790,2014-10-24T11:05:58Z,CONTRIBUTOR,True,194,178,3,To infinity and beyond. The backend API.,JavaScript,6fcfdc7f05241d6ffdf33a34c9cef212e430ddea,Working games and etc unit tests.
95,https://api.github.com/repos/mozilla/galaxy-api/pulls/249,249,Fixes #235 - Return a proper error message when JSON payload is malformed.,"@cvan Is this a correct solution? 
",adngdb,328790,2014-10-17T08:07:20Z,CONTRIBUTOR,True,15,0,1,To infinity and beyond. The backend API.,JavaScript,448c737e23fa7ca2211b1a58b57ac5444799cdd8,Fixes #235 - Return a proper error message when JSON payload is malformed.
96,https://api.github.com/repos/mozilla/galaxy-api/pulls/248,248,Fixed a few issues with the README file.,"I just installed this and ran into some small issues with the README file. And I wanted to make it clear that redis is a dependency (though maybe there are others that were already installed on my computer and that should also be mentioned? )

@cvan r?
",adngdb,328790,2014-09-23T03:38:04Z,CONTRIBUTOR,True,7,3,1,To infinity and beyond. The backend API.,JavaScript,e3db9a801d0cf0640e0a353542c23dd2e32423cf,Fixed a few issues with the README file.
97,https://api.github.com/repos/mozilla/galaxy-api/pulls/210,210,Test runner,"Resolved merge conflicts for #185.
",cvan,203725,2014-08-06T02:18:15Z,CONTRIBUTOR,True,174,19,7,To infinity and beyond. The backend API.,JavaScript,033b1870b7a0d252ebda77b9d70d782e439f1ff3,Added test runner to automatically launch redis before running tests (#177)
98,https://api.github.com/repos/mozilla/galaxy-api/pulls/210,210,Test runner,"Resolved merge conflicts for #185.
",cvan,203725,2014-08-06T02:18:15Z,CONTRIBUTOR,True,174,19,7,To infinity and beyond. The backend API.,JavaScript,65504bc16179d24773c4c76ab7e1d46d2ceaa9de,Abstracted testing parts of the runner into test_lib (#177)
99,https://api.github.com/repos/mozilla/galaxy-api/pulls/210,210,Test runner,"Resolved merge conflicts for #185.
",cvan,203725,2014-08-06T02:18:15Z,CONTRIBUTOR,True,174,19,7,To infinity and beyond. The backend API.,JavaScript,6ded3962190e1b658cb503e1af810cb3d8f70139,Remove an unneeded console.log (#177)
100,https://api.github.com/repos/mozilla/galaxy-api/pulls/206,206,add API endpoint to increment a user's leaderboard score,,cvan,203725,2014-07-31T21:09:47Z,CONTRIBUTOR,False,60,4,1,To infinity and beyond. The backend API.,JavaScript,8851e283ed0dce44f16359c9be4cfcd479485234,add API endpoint to increment a user's leaderboard score
101,https://api.github.com/repos/mozilla/galaxy-api/pulls/204,204,do not require `GALAXY_API_SETTINGS` by default (#202),,cvan,203725,2014-07-21T19:44:05Z,CONTRIBUTOR,True,17,9,2,To infinity and beyond. The backend API.,JavaScript,e8dc1a0af5a445630e0c29ccfe94e75dea127968,do not require `GALAXY_API_SETTINGS` by default (#202)
102,https://api.github.com/repos/mozilla/galaxy-api/pulls/203,203,Pull all settings from GALAXY_API_SETTINGS file,"@cvan r?

Fixes #202
",oremj,45590,2014-07-19T00:10:40Z,CONTRIBUTOR,True,34,40,7,To infinity and beyond. The backend API.,JavaScript,dc1db3984b66c88a5c8d2dccaf6bd783b0e4d41c,"Pull all settings from GALAXY_API_SETTINGS file

Fixes #202"
103,https://api.github.com/repos/mozilla/galaxy-api/pulls/203,203,Pull all settings from GALAXY_API_SETTINGS file,"@cvan r?

Fixes #202
",oremj,45590,2014-07-19T00:10:40Z,CONTRIBUTOR,True,34,40,7,To infinity and beyond. The backend API.,JavaScript,a156e1a0f6265872f75091b469d4e7d02be90fcf,Settings.js fixups mentioned in issue #202
104,https://api.github.com/repos/mozilla/galaxy-api/pulls/203,203,Pull all settings from GALAXY_API_SETTINGS file,"@cvan r?

Fixes #202
",oremj,45590,2014-07-19T00:10:40Z,CONTRIBUTOR,True,34,40,7,To infinity and beyond. The backend API.,JavaScript,dacf86c7112f92a0c58c9c1f36210b8fe0ddd251,"settings: require GALAXY_API_SETTINGS

Issue #202"
105,https://api.github.com/repos/mozilla/galaxy-api/pulls/197,197,Add callback to db.redis,"Changes `db.redis` to accept a callback so that client code doesn't have to manually set a handler for the redis client.
",at-kevinlau,3458285,2014-05-01T12:06:00Z,CONTRIBUTOR,True,7,1,1,To infinity and beyond. The backend API.,JavaScript,a7af2ca1f057bc25a1f4ed684217a8d95fdf3fc7,add callback to db.redis
106,https://api.github.com/repos/mozilla/galaxy-api/pulls/195,195,Retrieve waiting time when retrieving queue position,"Solves #194

Added retrieval of game `waitingTime` whenever retrieving game `queuePosition`. Waiting time is equivalent to the time since the last change in game status (through the `moderate` endpoint).
r?
",CharlesChong,1669035,2014-05-01T01:20:35Z,CONTRIBUTOR,True,15,4,2,To infinity and beyond. The backend API.,JavaScript,87171186d82f353b805964fc94221c54df993cb3,retrieve waiting time when retrieving queue position
107,https://api.github.com/repos/mozilla/galaxy-api/pulls/195,195,Retrieve waiting time when retrieving queue position,"Solves #194

Added retrieval of game `waitingTime` whenever retrieving game `queuePosition`. Waiting time is equivalent to the time since the last change in game status (through the `moderate` endpoint).
r?
",CharlesChong,1669035,2014-05-01T01:20:35Z,CONTRIBUTOR,True,15,4,2,To infinity and beyond. The backend API.,JavaScript,aa91f626c8c7d02c39d123b8a3353f809fb17f9c,optimized indentation
108,https://api.github.com/repos/mozilla/galaxy-api/pulls/193,193,Feature game fix,"fixing a bug where `null`variable is not correctly checked
",scottmeng,1774203,2014-04-23T11:30:16Z,CONTRIBUTOR,True,2,2,2,To infinity and beyond. The backend API.,JavaScript,3eb6e20f1581cf19d922d6bb74063b4a811daa59,quick fix on ranked list insertion
109,https://api.github.com/repos/mozilla/galaxy-api/pulls/193,193,Feature game fix,"fixing a bug where `null`variable is not correctly checked
",scottmeng,1774203,2014-04-23T11:30:16Z,CONTRIBUTOR,True,2,2,2,To infinity and beyond. The backend API.,JavaScript,aec3e0416bf0fec0f32e5a3435bab8c3901e53bb,simplify script
110,https://api.github.com/repos/mozilla/galaxy-api/pulls/193,193,Feature game fix,"fixing a bug where `null`variable is not correctly checked
",scottmeng,1774203,2014-04-23T11:30:16Z,CONTRIBUTOR,True,2,2,2,To infinity and beyond. The backend API.,JavaScript,9a523bddac4ff539e1e05ebdec9b41533540b044,remove extra spaces
111,https://api.github.com/repos/mozilla/galaxy-api/pulls/193,193,Feature game fix,"fixing a bug where `null`variable is not correctly checked
",scottmeng,1774203,2014-04-23T11:30:16Z,CONTRIBUTOR,True,2,2,2,To infinity and beyond. The backend API.,JavaScript,4cecddd5dd81e5d4edd82decc62f482d1cf51459,removing spaces
112,https://api.github.com/repos/mozilla/galaxy-api/pulls/193,193,Feature game fix,"fixing a bug where `null`variable is not correctly checked
",scottmeng,1774203,2014-04-23T11:30:16Z,CONTRIBUTOR,True,2,2,2,To infinity and beyond. The backend API.,JavaScript,586b4af8c6a088eba7f37a4f32cc301b15e77843,add force casting
113,https://api.github.com/repos/mozilla/galaxy-api/pulls/192,192,Update game fields validation,"I have no idea why the `homepage_url` field was there. We never used it before, it's not part of the game submission page too. So I removed it.

Updated with other compulsory keys: `description` and `genre`.
",yangshun,1315101,2014-04-22T05:03:37Z,CONTRIBUTOR,True,4,2,1,To infinity and beyond. The backend API.,JavaScript,8339fcfd73223ae7ec0bbfbf49d602fbbe45b5eb,Update game fields validation
114,https://api.github.com/repos/mozilla/galaxy-api/pulls/190,190,Refactor prefill for testing (#166),"Modify the prefill script so that it can be require'd and used elsewhere (in testing scripts, for example).
",at-kevinlau,3458285,2014-04-17T11:50:45Z,CONTRIBUTOR,True,39,38,3,To infinity and beyond. The backend API.,JavaScript,bb7c6e4617a6c25d09659a8d037c0cb4a405dbc5,refactor prefill for testing (#166)
115,https://api.github.com/repos/mozilla/galaxy-api/pulls/190,190,Refactor prefill for testing (#166),"Modify the prefill script so that it can be require'd and used elsewhere (in testing scripts, for example).
",at-kevinlau,3458285,2014-04-17T11:50:45Z,CONTRIBUTOR,True,39,38,3,To infinity and beyond. The backend API.,JavaScript,176b556c004c93187db09c8bdd229a5464b2872d,"fix minor issues in prefill script, remove exports (#166)"
116,https://api.github.com/repos/mozilla/galaxy-api/pulls/189,189,Prefill parameters update/Queue position race condition,"Some minor changes:
1. Fixed race condition with gamesByStatus:pending on game creation. Queue position ordering could mismatch game creation ordering when multiple games were created concurrently because 2 timestamps were created during creation instead of 1.
2. Added number_of_players to prefillParameters.json.dist because the prefill script failed to create games otherwise.
3. changed name from ""2048"" -> ""Flappy Bird""
",CharlesChong,1669035,2014-04-17T02:20:33Z,CONTRIBUTOR,True,12,2,2,To infinity and beyond. The backend API.,JavaScript,3a85ab2134df359fcebdf40148691ba4ece51399,Added number_of_players to prefill script
117,https://api.github.com/repos/mozilla/galaxy-api/pulls/189,189,Prefill parameters update/Queue position race condition,"Some minor changes:
1. Fixed race condition with gamesByStatus:pending on game creation. Queue position ordering could mismatch game creation ordering when multiple games were created concurrently because 2 timestamps were created during creation instead of 1.
2. Added number_of_players to prefillParameters.json.dist because the prefill script failed to create games otherwise.
3. changed name from ""2048"" -> ""Flappy Bird""
",CharlesChong,1669035,2014-04-17T02:20:33Z,CONTRIBUTOR,True,12,2,2,To infinity and beyond. The backend API.,JavaScript,114bb2a95bf9611bbef3952f61d69bbe224f272d,Fixed race condition with gameIDsByDeveloperID ranking on game creation
118,https://api.github.com/repos/mozilla/galaxy-api/pulls/189,189,Prefill parameters update/Queue position race condition,"Some minor changes:
1. Fixed race condition with gamesByStatus:pending on game creation. Queue position ordering could mismatch game creation ordering when multiple games were created concurrently because 2 timestamps were created during creation instead of 1.
2. Added number_of_players to prefillParameters.json.dist because the prefill script failed to create games otherwise.
3. changed name from ""2048"" -> ""Flappy Bird""
",CharlesChong,1669035,2014-04-17T02:20:33Z,CONTRIBUTOR,True,12,2,2,To infinity and beyond. The backend API.,JavaScript,4510983de34a568ab3680e7cbecdaa0fb8d99041,fixed spelling mistake
119,https://api.github.com/repos/mozilla/galaxy-api/pulls/188,188,"Refactor feedback lib, and added unit tests","I was starting to write tests for the feedback lib, and I realize that we can't really test the setters only. So I did some refactoring, and added getters (to get the list of feedback).

Main changes:
1. The `newFeedback` function now checks for valid user id
2. Added 2 'helper' function that adds feedback anonymously or by the user's email
3. In redis, we now key the feedback set using the page url (eg: `feedback:http://galaxy.mozilla.com/games`). Also there is a key `feedbackKeys` which is a set that stores all the keys that has at least 1 feedback.
4. Added getters to get the feedback for a particular page url.

Juicy unit tests included. :yum:

r? @cvan @birkanu @yangshun
",soedar,571891,2014-04-16T18:40:49Z,CONTRIBUTOR,True,244,37,4,To infinity and beyond. The backend API.,JavaScript,eb666730e33320ac2bc917951a401690fe47bf94,"Refactor feedback lib, and added tests"
120,https://api.github.com/repos/mozilla/galaxy-api/pulls/188,188,"Refactor feedback lib, and added unit tests","I was starting to write tests for the feedback lib, and I realize that we can't really test the setters only. So I did some refactoring, and added getters (to get the list of feedback).

Main changes:
1. The `newFeedback` function now checks for valid user id
2. Added 2 'helper' function that adds feedback anonymously or by the user's email
3. In redis, we now key the feedback set using the page url (eg: `feedback:http://galaxy.mozilla.com/games`). Also there is a key `feedbackKeys` which is a set that stores all the keys that has at least 1 feedback.
4. Added getters to get the feedback for a particular page url.

Juicy unit tests included. :yum:

r? @cvan @birkanu @yangshun
",soedar,571891,2014-04-16T18:40:49Z,CONTRIBUTOR,True,244,37,4,To infinity and beyond. The backend API.,JavaScript,63556c67f528c2e1c7882e84f2210fb27403223b,Updated boundary condition for addFeedback
121,https://api.github.com/repos/mozilla/galaxy-api/pulls/187,187,Added more tests for user (#178),"Added more tests for the user. Mainly attempting to test the `user` function with null inputs, and also added team related tests.

Authentication and user methods (websocket) will come after pull request #185 is merged. 

r? @cvan @emoore24
",soedar,571891,2014-04-16T16:01:09Z,CONTRIBUTOR,True,122,2,1,To infinity and beyond. The backend API.,JavaScript,db5ee12041bd0facde4b3a84bd1ea1030fb2f8c6,"Added more tests for user, some empty input test and developer users (#178)"
122,https://api.github.com/repos/mozilla/galaxy-api/pulls/185,185,Added test runner (Fixes #177),"I've implemented a simple test runner that we can use to run our tests. The test runner can spawn 'servers', and will also run the tests in order (which is good, because I'd imagine that later tests depend on earlier tests being correct). The test runner now looks at `settings_test.js` file, and will attempt to launch the server at the port that is listed in the settings file. 

You can specify the servers that you wish to spawn before running any of the tests, but really, 'servers' are simply child processes spawned by the test runner. Note that servers should be polling, and not terminate for the lifetime of the runner script. If a server arbitrarily terminates, the test runner will fail. ed arbitrarily (else the whole test will fail). This is not an issue for server processes - the current test runner spawns `redis-server` as well as `persona-faker`. The `test/runner.js` file is really quite simple, but do let me know if theres anything that is unclear there.

An implication of a polling server is that when we launched the process, it is difficult to know whether the server has launched successfully or not. I've opted to use a simple timeout - if the server did not terminate within `DEFAULT_SERVER_LAUNCH_TIMEOUT` ms (which defaults to 1s), it is considered 'alive'. If the server dies after the launch timeout, an error will be thrown and we will try and terminate the all existing launched processes.

For now, I have not exposed the server function in `test_lib` file, which would allow the launching of any processes. I think it's cleaner that we expose server specific functions; but if anyone think otherwise, it's easy to just expose it.

One last thing: because test_lib spawns and kill child processes, it is easy to run into orphaned processes when you modify the code in that file. Do take caution and note that any programming mistake within the file itself might lead to orphaned processes. Just `ps` and `kill` when you run into any problems.

r? @cvan @at-kevinlau @aricha
",soedar,571891,2014-04-10T19:15:59Z,CONTRIBUTOR,False,174,18,7,To infinity and beyond. The backend API.,JavaScript,071d08d7e41b4c4942d9e598ab5c067608c4db53,Added test runner to automatically launch redis before running tests (#177)
123,https://api.github.com/repos/mozilla/galaxy-api/pulls/185,185,Added test runner (Fixes #177),"I've implemented a simple test runner that we can use to run our tests. The test runner can spawn 'servers', and will also run the tests in order (which is good, because I'd imagine that later tests depend on earlier tests being correct). The test runner now looks at `settings_test.js` file, and will attempt to launch the server at the port that is listed in the settings file. 

You can specify the servers that you wish to spawn before running any of the tests, but really, 'servers' are simply child processes spawned by the test runner. Note that servers should be polling, and not terminate for the lifetime of the runner script. If a server arbitrarily terminates, the test runner will fail. ed arbitrarily (else the whole test will fail). This is not an issue for server processes - the current test runner spawns `redis-server` as well as `persona-faker`. The `test/runner.js` file is really quite simple, but do let me know if theres anything that is unclear there.

An implication of a polling server is that when we launched the process, it is difficult to know whether the server has launched successfully or not. I've opted to use a simple timeout - if the server did not terminate within `DEFAULT_SERVER_LAUNCH_TIMEOUT` ms (which defaults to 1s), it is considered 'alive'. If the server dies after the launch timeout, an error will be thrown and we will try and terminate the all existing launched processes.

For now, I have not exposed the server function in `test_lib` file, which would allow the launching of any processes. I think it's cleaner that we expose server specific functions; but if anyone think otherwise, it's easy to just expose it.

One last thing: because test_lib spawns and kill child processes, it is easy to run into orphaned processes when you modify the code in that file. Do take caution and note that any programming mistake within the file itself might lead to orphaned processes. Just `ps` and `kill` when you run into any problems.

r? @cvan @at-kevinlau @aricha
",soedar,571891,2014-04-10T19:15:59Z,CONTRIBUTOR,False,174,18,7,To infinity and beyond. The backend API.,JavaScript,a1dd1393babb7fd8a02b36b485d7dbae8dbf2b93,Abstracted testing parts of the runner into test_lib (#177)
124,https://api.github.com/repos/mozilla/galaxy-api/pulls/185,185,Added test runner (Fixes #177),"I've implemented a simple test runner that we can use to run our tests. The test runner can spawn 'servers', and will also run the tests in order (which is good, because I'd imagine that later tests depend on earlier tests being correct). The test runner now looks at `settings_test.js` file, and will attempt to launch the server at the port that is listed in the settings file. 

You can specify the servers that you wish to spawn before running any of the tests, but really, 'servers' are simply child processes spawned by the test runner. Note that servers should be polling, and not terminate for the lifetime of the runner script. If a server arbitrarily terminates, the test runner will fail. ed arbitrarily (else the whole test will fail). This is not an issue for server processes - the current test runner spawns `redis-server` as well as `persona-faker`. The `test/runner.js` file is really quite simple, but do let me know if theres anything that is unclear there.

An implication of a polling server is that when we launched the process, it is difficult to know whether the server has launched successfully or not. I've opted to use a simple timeout - if the server did not terminate within `DEFAULT_SERVER_LAUNCH_TIMEOUT` ms (which defaults to 1s), it is considered 'alive'. If the server dies after the launch timeout, an error will be thrown and we will try and terminate the all existing launched processes.

For now, I have not exposed the server function in `test_lib` file, which would allow the launching of any processes. I think it's cleaner that we expose server specific functions; but if anyone think otherwise, it's easy to just expose it.

One last thing: because test_lib spawns and kill child processes, it is easy to run into orphaned processes when you modify the code in that file. Do take caution and note that any programming mistake within the file itself might lead to orphaned processes. Just `ps` and `kill` when you run into any problems.

r? @cvan @at-kevinlau @aricha
",soedar,571891,2014-04-10T19:15:59Z,CONTRIBUTOR,False,174,18,7,To infinity and beyond. The backend API.,JavaScript,b7359f43c7ea95afc9cdf51feea40098000c483b,Remove an unneeded console.log (#177)
125,https://api.github.com/repos/mozilla/galaxy-api/pulls/184,184,Fixed a misleading /user/search error,"Fixed a case where /user/search was always returning a `bad_email` error when user lookup failed. Use parentheses, people!
",aricha,1644254,2014-04-08T23:18:31Z,CONTRIBUTOR,True,1,1,1,To infinity and beyond. The backend API.,JavaScript,eb1e969d1ef980d914b19bdf122f30a303f24fce,Fixed a case where /user/search was always returning a bad_email error when user lookup failed
126,https://api.github.com/repos/mozilla/galaxy-api/pulls/183,183,Implement potato-captcha,"Implements the potato-captcha validation. Note that `tuber` should always be blank, and `sprout` should always be potato (set by HTML).
",birkanu,4560085,2014-04-08T20:17:05Z,CONTRIBUTOR,True,9,3,1,To infinity and beyond. The backend API.,JavaScript,b1a5cda76ddae6e7edf59f5763256bd8c76e4e26,Implemented potato captcha in feedback validation
127,https://api.github.com/repos/mozilla/galaxy-api/pulls/183,183,Implement potato-captcha,"Implements the potato-captcha validation. Note that `tuber` should always be blank, and `sprout` should always be potato (set by HTML).
",birkanu,4560085,2014-04-08T20:17:05Z,CONTRIBUTOR,True,9,3,1,To infinity and beyond. The backend API.,JavaScript,ec0e3115ffc54d9254c4387d4d5e72fe9d70ec3e,Simplify potato-captcha verification
128,https://api.github.com/repos/mozilla/galaxy-api/pulls/183,183,Implement potato-captcha,"Implements the potato-captcha validation. Note that `tuber` should always be blank, and `sprout` should always be potato (set by HTML).
",birkanu,4560085,2014-04-08T20:17:05Z,CONTRIBUTOR,True,9,3,1,To infinity and beyond. The backend API.,JavaScript,dda6b19fc6ced5c46a05429158882bb2516c45a7,Simplify potato-captcha validation more and Remove comments
129,https://api.github.com/repos/mozilla/galaxy-api/pulls/183,183,Implement potato-captcha,"Implements the potato-captcha validation. Note that `tuber` should always be blank, and `sprout` should always be potato (set by HTML).
",birkanu,4560085,2014-04-08T20:17:05Z,CONTRIBUTOR,True,9,3,1,To infinity and beyond. The backend API.,JavaScript,147acc4ef59ef977c1ecb1da4a09490310e3622b,Change the way the keys tuber and sprout are accesses
130,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,9b80bf0ef9189ca74d262d925f0936b25386c23e,change fb to fbData
131,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,68265cc7c331feb3db00a6d6d9abd013f5145494,pre-testing lib init (#167)
132,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,295823338e286713dbc72f36c93b56f3eb7b0f40,"move feedback endpoint test, use settings (#167)"
133,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,51aa29d44f9e6a3bc76378e7dc5e14d0e854ff64,remove TODOs (#167)
134,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,0f2e71573cf7e6e9f8d007f5137f2792df8e50e5,fix feedback test for potato-captcha (#167)
135,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,c086a4934cbfcf402fbf7e02e8bcea7631775db0,add test api url to settings_test (#167)
136,https://api.github.com/repos/mozilla/galaxy-api/pulls/182,182,Pre-testing library (WIP) (#167),"I've added a basic pre-testing library with two functions:
- `startTestServer` starts running the API server at port 5055 using an instance of fakeredis.
- `postJSON` posts a JSON blob to the API server. It's technically not in the scope of the issue, but I wasn't able to find any similar functions that already did this, and it'll be necessary later for other tests anyway.

My main issue right now is that, since `startTestServer` starts the server as a new process using `child_process` rather than through Javascript directly, I can't use callbacks to determine when the server's actually done loading. For now, I'm just doing `setTimeout(done, 1000)` so that the server will be done loading before the test runs. Also, I can't get the API server URL for the same reason.

Any suggestions?
",at-kevinlau,3458285,2014-04-08T11:01:20Z,CONTRIBUTOR,False,167,37,7,To infinity and beyond. The backend API.,JavaScript,de5592821eef07df164c7b57271e6027fd4e7143,temp commit (#167)
137,https://api.github.com/repos/mozilla/galaxy-api/pulls/175,175,Unit Test for lib/user.js,"I've implemented some support for unit test in the project. Right now, we will have to run a test redis instance to run the tests. When @at-kevinlau integrate fakeredis to the project, we will be able to point the test_db to use fakeredis instead of a redis instance. Instructions to run test is updated in the README.md file.

So far, I've only added tests for most of the main user library function. Next steps will be to integrate persona-faker in the test (to test authentication and login), and team related functions. I've also skipped the tests that have failed for now (mostly are failing because of inconsistency issues)

r? @cvan @at-kevinlau @aricha 
",soedar,571891,2014-04-06T18:58:04Z,CONTRIBUTOR,True,243,4,9,To infinity and beyond. The backend API.,JavaScript,60cb6c2e9cd606954468512b0d054cd7dab2944a,Added directory structure for unit tests
138,https://api.github.com/repos/mozilla/galaxy-api/pulls/175,175,Unit Test for lib/user.js,"I've implemented some support for unit test in the project. Right now, we will have to run a test redis instance to run the tests. When @at-kevinlau integrate fakeredis to the project, we will be able to point the test_db to use fakeredis instead of a redis instance. Instructions to run test is updated in the README.md file.

So far, I've only added tests for most of the main user library function. Next steps will be to integrate persona-faker in the test (to test authentication and login), and team related functions. I've also skipped the tests that have failed for now (mostly are failing because of inconsistency issues)

r? @cvan @at-kevinlau @aricha 
",soedar,571891,2014-04-06T18:58:04Z,CONTRIBUTOR,True,243,4,9,To infinity and beyond. The backend API.,JavaScript,94232134a2a58ceece9320df444cc0ce3ac8f834,Added more tests for user
139,https://api.github.com/repos/mozilla/galaxy-api/pulls/175,175,Unit Test for lib/user.js,"I've implemented some support for unit test in the project. Right now, we will have to run a test redis instance to run the tests. When @at-kevinlau integrate fakeredis to the project, we will be able to point the test_db to use fakeredis instead of a redis instance. Instructions to run test is updated in the README.md file.

So far, I've only added tests for most of the main user library function. Next steps will be to integrate persona-faker in the test (to test authentication and login), and team related functions. I've also skipped the tests that have failed for now (mostly are failing because of inconsistency issues)

r? @cvan @at-kevinlau @aricha 
",soedar,571891,2014-04-06T18:58:04Z,CONTRIBUTOR,True,243,4,9,To infinity and beyond. The backend API.,JavaScript,eb23d76158254c902816c54ebca08dcb45193e35,"Fixed typo in README.md, minor syntax issue and added TODOs"
140,https://api.github.com/repos/mozilla/galaxy-api/pulls/175,175,Unit Test for lib/user.js,"I've implemented some support for unit test in the project. Right now, we will have to run a test redis instance to run the tests. When @at-kevinlau integrate fakeredis to the project, we will be able to point the test_db to use fakeredis instead of a redis instance. Instructions to run test is updated in the README.md file.

So far, I've only added tests for most of the main user library function. Next steps will be to integrate persona-faker in the test (to test authentication and login), and team related functions. I've also skipped the tests that have failed for now (mostly are failing because of inconsistency issues)

r? @cvan @at-kevinlau @aricha 
",soedar,571891,2014-04-06T18:58:04Z,CONTRIBUTOR,True,243,4,9,To infinity and beyond. The backend API.,JavaScript,5c1c233d7dc9f36963859cfee6c261e7329858fd,Fixed issues from review and added TODO for missing test cases
141,https://api.github.com/repos/mozilla/galaxy-api/pulls/174,174,Make use of testify bodyParser for game submission endpoints,"@aricha  is this ok?
",yangshun,1315101,2014-04-06T18:32:34Z,CONTRIBUTOR,True,3,14,1,To infinity and beyond. The backend API.,JavaScript,396aed198e7cbab1ec551b9e7d18a18bd1f35fb2,Make use of testify bodyParser for game submission endpoints
142,https://api.github.com/repos/mozilla/galaxy-api/pulls/173,173,Updated keys of game object,"- Fixed a typo with `privacy_policy_url`. It used to be `privacy`.
- Added the `videos` key.
",yangshun,1315101,2014-04-06T16:44:22Z,CONTRIBUTOR,True,3,2,1,To infinity and beyond. The backend API.,JavaScript,0b653e4101208e994d764d1dc77a6ce9f53379b9,Updated keys of game object
143,https://api.github.com/repos/mozilla/galaxy-api/pulls/172,172,Added number of players field to the Game object,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well.
- Got rid of a lot of commits, thanks to @yangshun for cherry-picking.
- Fixed the `icon`/`icons` problem.
",birkanu,4560085,2014-04-06T15:33:14Z,CONTRIBUTOR,True,20,4,2,To infinity and beyond. The backend API.,JavaScript,17717c735765a2de280c2ba02ceca7e84bf1259e,Added number of players field to the Game object
144,https://api.github.com/repos/mozilla/galaxy-api/pulls/170,170,Queue position(issue#162),"Finishes #162
Needed for #91, still need to retrieve from sets to finish it

I'm not sure if Promise.all is the best way to approach doing multiple client.zrank calls

r? @cvan @aricha
",CharlesChong,1669035,2014-04-03T02:10:49Z,CONTRIBUTOR,True,42,3,2,To infinity and beyond. The backend API.,JavaScript,2520cf2117310a096dc9585ad69f14442fab8aed,Added gamesByStatus:pending
145,https://api.github.com/repos/mozilla/galaxy-api/pulls/170,170,Queue position(issue#162),"Finishes #162
Needed for #91, still need to retrieve from sets to finish it

I'm not sure if Promise.all is the best way to approach doing multiple client.zrank calls

r? @cvan @aricha
",CharlesChong,1669035,2014-04-03T02:10:49Z,CONTRIBUTOR,True,42,3,2,To infinity and beyond. The backend API.,JavaScript,485f21e9b399efdee9f5b408ce861ebdbd309c2b,"fixed queue position retrieval, updated gameByStatus sets on game moderation"
146,https://api.github.com/repos/mozilla/galaxy-api/pulls/170,170,Queue position(issue#162),"Finishes #162
Needed for #91, still need to retrieve from sets to finish it

I'm not sure if Promise.all is the best way to approach doing multiple client.zrank calls

r? @cvan @aricha
",CharlesChong,1669035,2014-04-03T02:10:49Z,CONTRIBUTOR,True,42,3,2,To infinity and beyond. The backend API.,JavaScript,c4c256bc934b9668186086dd38f8bd085a7730d7,Fixed minor issues
147,https://api.github.com/repos/mozilla/galaxy-api/pulls/170,170,Queue position(issue#162),"Finishes #162
Needed for #91, still need to retrieve from sets to finish it

I'm not sure if Promise.all is the best way to approach doing multiple client.zrank calls

r? @cvan @aricha
",CharlesChong,1669035,2014-04-03T02:10:49Z,CONTRIBUTOR,True,42,3,2,To infinity and beyond. The backend API.,JavaScript,46b3370f76cfb8c7523ee81c8efdaa864dd53843,added an indent
148,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,dccffcff573d65b0ea6a84769e870602045d6f02,initial commit
149,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,3b9ebc237cee7655965370e0f27d820754489836,add insert sorted list script
150,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,559c681b61dade777043610e94a9ef06822061b4,add deletion script
151,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,5a65ceb8a92e8fc2575b8a5cb27864a5768e3c58,reorder arguments
152,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,7c5a0bd42b751183902bab613c9940c3bc7d6618,add dependency
153,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,9b1c4a3df0e46a5168d8c3807cdf86e169c2c2a3,"alter argu position, handle null rank"
154,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,54b57d1b66229a771118421c84e8a5c8fb59b20e,move script loading to db initialization
155,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,8df46850beefdf6e2c7d88c0ae5f08c0cbf202f9,integrate script manager
156,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,b64cf0a62a05ca3f1c4f304a99e87075863772a3,edit comments
157,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,04b80cf1ff8c3d7548b977faaeb8b8ddeaf3bf73,change tab to soft spaces
158,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,f925005c8ce7d6de709a3657ef77cf3901fb1e3f,address issues
159,https://api.github.com/repos/mozilla/galaxy-api/pulls/169,169,Sorted list insertion and deletion script [WIP],"This is just to stage what I have right now.

[Sorted list](http://redis.io/topics/data-types#sorted-sets) is relevant to issues #162 and #158. This script makes it easy to maintain the list of featured games (sorted by rank) and the list of pending game queue.

Todo:
- [x] add deletion script
- ~~call the scripts through [redis.eval](http://redis.io/commands/EVAL)~~ To be completed in #181 
",scottmeng,1774203,2014-04-02T06:25:52Z,CONTRIBUTOR,True,98,7,5,To infinity and beyond. The backend API.,JavaScript,7c98158bce4b038158c393207496bdda06e59ee2,remove callback
160,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,392faaf65a4d395d5ebb100e7537cbe37568796c,JSON format for screenshots and videos
161,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,2d14b6055b9a19f558de42b904e7be148bd1df68,Merge branch 'master' into game-details
162,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,f0c0f85e96c30fe8c03ca7bbd0d330583fc887e7,Decode media URL arguments before parsing
163,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,0df4df7ff275720d22339aae2f9017969b91d278,Changed icons key to icon
164,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,b507f09b8f5249ed6c5a08e2d1c5f215db044123,Modified README for new game submission and game detail format
165,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,a80bfef04a52e762be67d24e023e96d973b7f2ec,Catch errors for invalid screenshots and videos URL in game submission.
166,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,de0112c919720e52f803ffdc507c90c8fae1063c,WIP editGame
167,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,7ddf03fe9d1a8e6e7747356022d51a42845188d7,WIP removed user plugin for now
168,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,561d9abd4d9074f66e04d652128f90f66f18ea08,Merging conflicts
169,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,3b3061f886c9ef421c195e46269d7b3112611511,Merge remote-tracking branch 'upstream/master' into game-details
170,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,21a7af20354b0f231cb7134aa83acabea2c0907f,Add the number of players field to the Game object
171,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,04959d07db900a30afd07218b928fc04df382533,Merge conflicts
172,https://api.github.com/repos/mozilla/galaxy-api/pulls/165,165,Add the number of players field to the Game object.,"Now, the number of players can be submitted through the front-end, and then it will be saved in the database. Once the game details page is hooked up with real data, this information can be viewed there as well. 
",birkanu,4560085,2014-04-01T02:39:13Z,CONTRIBUTOR,False,3,2,2,To infinity and beyond. The backend API.,JavaScript,173c59b4df2ccb791000c07de074ca01fa4355c4,Change the 'icon' property of a game to 'icons'
173,https://api.github.com/repos/mozilla/galaxy-api/pulls/164,164,Fixed parsing of requests with a URL-encoded body,"~~Disabled the `mapParams` option of restify's bodyParser plugin so that the
parsed data from a URL-encoded POST body is assigned to the body property and
not params. Fixes the feedback form and any other POST endpoints that were
expecting a parsed object from a URL-encoded body.~~

Replaced all uses of the `body` field in request objects with `params` so that URL-encoded POST / PUT request bodies can be parsed correctly.

Fixes #163.

r? @cvan @yangshun @at-kevinlau
",aricha,1644254,2014-03-27T20:37:21Z,CONTRIBUTOR,True,3,19,2,To infinity and beyond. The backend API.,JavaScript,a41a776701666ace1992c93f8575dea5a5c0c2d0,Disabled the 'mapParams' option of restify's bodyParser plugin so that the parsed data from a URL-encoded POST body is assigned to the body property and not params. Fixes the feedback form and any other POST endpoints that were expecting a parsed object from a URL-encoded body.
174,https://api.github.com/repos/mozilla/galaxy-api/pulls/164,164,Fixed parsing of requests with a URL-encoded body,"~~Disabled the `mapParams` option of restify's bodyParser plugin so that the
parsed data from a URL-encoded POST body is assigned to the body property and
not params. Fixes the feedback form and any other POST endpoints that were
expecting a parsed object from a URL-encoded body.~~

Replaced all uses of the `body` field in request objects with `params` so that URL-encoded POST / PUT request bodies can be parsed correctly.

Fixes #163.

r? @cvan @yangshun @at-kevinlau
",aricha,1644254,2014-03-27T20:37:21Z,CONTRIBUTOR,True,3,19,2,To infinity and beyond. The backend API.,JavaScript,f7718db9e48bd92d231a3e310715cb01c31b41b3,"Reverted change to 'mapParams' option, and instead replaced all uses of the 'body' field with 'params', since the bodyParser plugin maps the parsed body data to 'params'. This also means we can be consistent with data access for both GET and POST / PUT requests."
175,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,2ab2f2e7364d3c90c983d849f0352401d59a08fb,Fail on all errors in pre-fill script (was silently failing on validation errors)
176,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,e895ecd345a70bd34ab299f260d281083dffec7f,"- Swapped node-restify-validation with our forked version that supports body validation and custom error handling in package.json
- Use 'bodyValidation' in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses"
177,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,18141c65c3656079bcd9caa90edd13995c449a10,Removed unused import
178,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,bb27fd0eedc77635c1e269ed1a6fc49a928ac337,"Use 'validation' instead of 'bodyValidation' for validating POST / PUT request bodies, since restify's bodyParser plugin maps parsed body fields to params (which is what 'validation' validates). This also alleviates the need for a 'bodyValidation' field in the first place. See #164 for details."
179,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,3690964ca7331cec472899990131a4df8564a6c7,Use node-restify-validation for feedback endpoint
180,https://api.github.com/repos/mozilla/galaxy-api/pulls/161,161,Use node-restify-validation for body validation,"- Swapped node-restify-validation with my forked version (that supports body validation and custom error handling) in `package.json`
- Use `bodyValidation` in the game submission endpoint to handle validation of game data
- Implemented a custom validation error handler that sends back a response more consistent with our other error responses

Dependent on my fork of [node-restify-validation](https://github.com/aricha/node-restify-validation). The changes I've made in my fork to support body validation (and custom error handlers) can be viewed [here](https://github.com/aricha/node-restify-validation/compare/z0mt3c:master...master). Everyone will need to run `npm update` or `npm update node-restify-validation` locally in order for this to work.

Fixes #152.

r? @cvan @soedar @at-kevinlau 
",aricha,1644254,2014-03-27T01:13:54Z,CONTRIBUTOR,True,45,65,5,To infinity and beyond. The backend API.,JavaScript,9c112456726467e86c44a0d1a6f270f3e6fcd0fb,Fixed rebase error
181,https://api.github.com/repos/mozilla/galaxy-api/pulls/159,159,Feedback modal (squashed commits) (#123),"Pull request for feedback modal back-end, issue #123 (squashed commits from #125).
",at-kevinlau,3458285,2014-03-26T06:01:54Z,CONTRIBUTOR,True,96,0,3,To infinity and beyond. The backend API.,JavaScript,dc9f7d49370abed8231ac3ef1de6fd910abc992c,"implement feedback modal endpoint (fixes #123)

implement feedback modal endpoint (fixes #123)

implement feedback modal endpoint (fixes #123)"
182,https://api.github.com/repos/mozilla/galaxy-api/pulls/157,157,Fixed redis connections closing prematurely,"Modified redisView in db.js to close redis connections with `client.quit()` instead of `client.end()`, since that is [what the documentation recommends](https://github.com/mranney/node_redis#clientend). This avoids prematurely closing the connection if a request is still awaiting a reply.

Also fixed the POST submit endpoint to close the redis connection on success.

r? @cvan @soedar @at-kevinlau
",aricha,1644254,2014-03-23T18:51:32Z,CONTRIBUTOR,True,2,1,2,To infinity and beyond. The backend API.,JavaScript,cb7c80d4cb6bd29a33d9f4f46de7b07982db48ac,"Modified redisView in db.js to close redis connections with `client.quit()` instead of `client.end()`, since that is what the documentation recommends. This avoids prematurely closing the connection if a request is still awaiting a reply. See https://github.com/mranney/node_redis#clientend."
183,https://api.github.com/repos/mozilla/galaxy-api/pulls/157,157,Fixed redis connections closing prematurely,"Modified redisView in db.js to close redis connections with `client.quit()` instead of `client.end()`, since that is [what the documentation recommends](https://github.com/mranney/node_redis#clientend). This avoids prematurely closing the connection if a request is still awaiting a reply.

Also fixed the POST submit endpoint to close the redis connection on success.

r? @cvan @soedar @at-kevinlau
",aricha,1644254,2014-03-23T18:51:32Z,CONTRIBUTOR,True,2,1,2,To infinity and beyond. The backend API.,JavaScript,54081964d227188a13c905dbd10364e14fca9d7e,Fixed the submit endpoint not closing some redis connections by calling `done()` on success
184,https://api.github.com/repos/mozilla/galaxy-api/pulls/155,155,Update Prefill data to include more games,"I've updated the games in prefill data to include more fields, and it should aid in testing. Also, more games.

r? @cvan @yangshun @aricha @charleschong
",soedar,571891,2014-03-23T15:32:33Z,CONTRIBUTOR,True,494,36,4,To infinity and beyond. The backend API.,JavaScript,93e37c2bc3597519c192594a297c19adda2008cb,"Updated the prefill data to include game details, and more games"
185,https://api.github.com/repos/mozilla/galaxy-api/pulls/155,155,Update Prefill data to include more games,"I've updated the games in prefill data to include more fields, and it should aid in testing. Also, more games.

r? @cvan @yangshun @aricha @charleschong
",soedar,571891,2014-03-23T15:32:33Z,CONTRIBUTOR,True,494,36,4,To infinity and beyond. The backend API.,JavaScript,a394147bd864f228661457b2e05df6d53301b7e2,"Updated instructions, and change db-prefill to runnable script"
186,https://api.github.com/repos/mozilla/galaxy-api/pulls/155,155,Update Prefill data to include more games,"I've updated the games in prefill data to include more fields, and it should aid in testing. Also, more games.

r? @cvan @yangshun @aricha @charleschong
",soedar,571891,2014-03-23T15:32:33Z,CONTRIBUTOR,True,494,36,4,To infinity and beyond. The backend API.,JavaScript,963eb833f382f5b2db07e69fe8208f55b0afafe2,Reordered library import statements
187,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,79cdc14d36427ae8ab3fb1c018e8038aad037b00,Added preliminary gameIDsByUserID set and game list filtering on userIDs
188,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,5f37f31a51b03cd06af47581f4e786d6701417d3,Fixed bugs with gameIDsByUserID and developer game list filter
189,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,fed0f04ec8b999fb34f3a62b4ac3530ba4e88c5a,Fixed bug with JSON parsing gameIDsByUserID
190,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,b4439ab0957e10ccfbea496c334d36d04eef3494,Updated sample usage
191,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,5c3a6ff371c9148cd9e60163d7c39155af0c63f5,removed unnecessary else if
192,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,c800fdc2e6be2065ff225339bd08d822234a14e2,Added preliminary gameIDsByUserID set and game list filtering on userIDs
193,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,30fb02c81854095d4f1a794abccf1f8a254a623f,Fixed bugs with gameIDsByUserID and developer game list filter
194,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,ef6851f12e5781fd564edc4ae42de8a6f39dd2f6,Fixed bug with JSON parsing gameIDsByUserID
195,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,b6245fc0663486296739d09556cf366eb460c71b,Updated sample usage
196,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,1a9ea65d04d0cd2a9c3f3844da8c722b9bdc86be,removed unnecessary else if
197,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,75a6c363e3fd58ad8372ae8e6aa6ad6e4a505ae6,Changed user to developer in variable names
198,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,38e7799cba6952d4d3f9f9cf0788fe1dd0592ba0,Resolevd merge conflicts
199,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,ae677f8a635ebb85d22b5c21588da1922123e952,"Merge pull request #157 from cvan/db-connection-fix

Fixed redis connections closing prematurely"
200,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,ee0ed25d63a97ff8a5c871f5dd878c3e4eb90b78,Added preliminary gameIDsByUserID set and game list filtering on userIDs
201,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,ffe4b66392118f970a261ad7d409f02f16fe180c,Fixed bugs with gameIDsByUserID and developer game list filter
202,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,3dfe2f50b698a239f229bcd1882b4e21e4ab554f,Fixed bug with JSON parsing gameIDsByUserID
203,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,975055519b01d8e0fa847a4d631b1ebe17666096,Updated sample usage
204,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,cfb355cc97b6e19b6b33aa77334778563fdec6ed,removed unnecessary else if
205,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,04204e7b1f778438a9aa0964691ffc259320bbc5,Added preliminary gameIDsByUserID set and game list filtering on userIDs
206,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,ab4f34d6709f5a61dd418019057a15b735e5389c,Fixed bugs with gameIDsByUserID and developer game list filter
207,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,eb730723468dacdd343433595c296cc9a33bdf50,Fixed bug with JSON parsing gameIDsByUserID
208,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,4f7f159fe114f01409d8b941f783c42f12918c86,Changed user to developer in variable names
209,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,7aa8830a7964252a83b2152b20710041b7a26ab4,Merge branch 'filter-games-by-dev-id(issue#150)' of github.com:CharlesChong/galaxy-api into filter-games-by-dev-id(issue#150)
210,https://api.github.com/repos/mozilla/galaxy-api/pulls/153,153,Filter games by developer ID(issue#150),"See #150

There is a race condition on lines 17-27 for lib/game.js. I'm not sure how or if I should be fixing it. It comes up when the db-prefill script attempts several concurrent game creations.
",CharlesChong,1669035,2014-03-20T14:06:09Z,CONTRIBUTOR,True,47,13,3,To infinity and beyond. The backend API.,JavaScript,399ae66f51d8ddf8f974f1e3cf6d9f28ace5544e,Fixed minor bug with gameByDevIDs on game creation
211,https://api.github.com/repos/mozilla/galaxy-api/pulls/148,148,Fixed moderate endpoints,"Fixed moderate endpoints to use updateGame properly; provides a callback to updateGame so that an error can be properly detected, and uses the entire game object instead of a delta object since apparently that changed recently.

r? @rchreptyk
",aricha,1644254,2014-03-17T21:44:03Z,CONTRIBUTOR,True,9,4,1,To infinity and beyond. The backend API.,JavaScript,9f9ef10a41b4541bef14e205caa6551d7af89daf,Fixed moderate endpoints to use updateGame properly; previously it was silently failing
212,https://api.github.com/repos/mozilla/galaxy-api/pulls/147,147,Updated filterable statuses for game/list endpoint,"Updated list of valid statuses to filter by to include 'deleted' and
'disabled' (required for [galaxy/#121](https://github.com/cvan/galaxy/issues/121))
",aricha,1644254,2014-03-17T21:04:03Z,CONTRIBUTOR,True,1,1,1,To infinity and beyond. The backend API.,JavaScript,812762686c8332a4ea82e013ad731a997ea7dfa9,Updated list of valid statuses to filter by to include 'deleted' and 'disabled' (required for https://github.com/cvan/galaxy/issues/121)
213,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,2c86cc7961a9e585c484354619a120ff71fce105,"Fixed an incorrect permission name in admin scripts, and added ability to create a user for an email automatically if one doesn't exist when running the add permissions script"
214,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,a76c25b2d96b46e028f1e93605812e2ef01da1de,"Fixed pre-fill script by handling errors correctly (some weren't being caught), creating a developer user with which to authenticate game submission requests, and added a couple of missing fields required for submitting games. Also fixed a typo in userIDView / userDataView that caused an error not to be caught."
215,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,28b2725e874e594f0570cb2436321590587fdef3,Renamed 'dev' to 'developer' in permissions for both acl endpoint and in user data so that it's all consistent
216,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,1ec66da5b42ffcf9a8e05784c54b7732b427231a,Fixed another use of 'dev' instead of 'developer' for permissions
217,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,7e8ceeb234c46164e987cab1492c88120a8e61b0,One more 'dev' fix...
218,https://api.github.com/repos/mozilla/galaxy-api/pulls/146,146,Fixed bugs with pre-fill and admin scripts,"- Enhanced error handling in pre-fill script (now checks for `error` parameter in all responses), since some errors were effectively being ignored and silenced
- Updated game creation in pre-fill script to first create a developer user with which to submit all games (needed since we now authenticate game submissions), and to include a couple of now-required fields
- Enhanced add user permissions script to create a user with a given email if one doesn't already exist
- Fixed typo in `userIDView` / `userDataView` (used an incorrect error key)
- Renamed `dev` parameter of permissions in `acl.js` to `developer` for consistency with user data

r? @cvan @CharlesChong
",aricha,1644254,2014-03-17T17:11:41Z,CONTRIBUTOR,True,85,52,5,To infinity and beyond. The backend API.,JavaScript,3f3634b482f9161f427df47a1101df3d813c65ff,Updated comment
219,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,2ab45657822ee4539b9a784ecf911ce339d6e7a3,add get user purchase api endpoint
220,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,8c6f4394aeecbd5b982682bcb6379f6e7fc171c9,"add purchased flag in game/detail request, fixes issue #144"
221,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,eb82290e10f6bd6ff509343702e489233c949157,refactoring
222,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,6e628a5244c1d49e2b9945802b427b155f799ce8,fix problems and clear up code
223,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,6e784b66da52efa5097eb971d81e2543d6d15bc0,fix error
224,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,71feae976cca241d80783707a2b11b3fce6c53c6,only allow the user to view purchase list
225,https://api.github.com/repos/mozilla/galaxy-api/pulls/145,145,Add user purchase endpoint,"- Add get user purchase list api endpoint 
- Add `purchased` flag in game detail endpoint

Relevant to issue #128, #144
",scottmeng,1774203,2014-03-17T07:36:32Z,CONTRIBUTOR,True,58,2,2,To infinity and beyond. The backend API.,JavaScript,ae6a474ee9719656d9c5e88b8177b8f4f8142fbf,"better error handling, fixes #144 and also resolves #128"
226,https://api.github.com/repos/mozilla/galaxy-api/pulls/142,142,Add 'status' to public game object -- needed for galaxy #124,"For [galaxy/124](https://github.com/cvan/galaxy/issues/124), I need to display the game status, which is not currently being returned in the public game object
",emoore24,1326720,2014-03-14T00:58:00Z,CONTRIBUTOR,True,2,1,1,To infinity and beyond. The backend API.,JavaScript,b8f6fe4e2dc5b5492f6106745028a8db7544e0d7,Add 'status' to public game object -- needed for galaxy #124
227,https://api.github.com/repos/mozilla/galaxy-api/pulls/139,139,Fixed list endpoint,"Fixed the list endpoint that was broken by 9425ef6. An error argument was prepended to the getGameList callback, so list.js was updated accordingly.

r? @cvan
",aricha,1644254,2014-03-12T04:34:21Z,CONTRIBUTOR,True,5,1,1,To infinity and beyond. The backend API.,JavaScript,bb762819f409049949deef2c93351299ad02b87d,Fixed the list endpoint that was broken by 9425ef6
228,https://api.github.com/repos/mozilla/galaxy-api/pulls/138,138,Added uncaught exception handler to log errors,"Added an uncaught exception handler to the HTTP restify server, which logs the
exception and sends a response with the error. This replaces restify's default
exception handler.

This fixes #135.
",aricha,1644254,2014-03-11T22:10:20Z,CONTRIBUTOR,True,15,0,1,To infinity and beyond. The backend API.,JavaScript,ab9c742729745e66d20b4e9bfcd1f2e5abb72346,"Added an uncaught exception handler to the HTTP restify server, which logs the exception and sends a response with the error. This replaces restify's default exception handler."
229,https://api.github.com/repos/mozilla/galaxy-api/pulls/138,138,Added uncaught exception handler to log errors,"Added an uncaught exception handler to the HTTP restify server, which logs the
exception and sends a response with the error. This replaces restify's default
exception handler.

This fixes #135.
",aricha,1644254,2014-03-11T22:10:20Z,CONTRIBUTOR,True,15,0,1,To infinity and beyond. The backend API.,JavaScript,4f8a3114ab32a2c16f625d7a896e1b8493af3e2c,Send the actual error as part of an exception response only when settings.DEBUG is enabled
230,https://api.github.com/repos/mozilla/galaxy-api/pulls/134,134,Updated featured endpoint to use game id instead of slug (Unblocks #132),"Featured endpoints now internally stores game ids instead of game slugs.

r? @cvan @emoore24
",soedar,571891,2014-03-10T09:05:23Z,CONTRIBUTOR,True,76,47,2,To infinity and beyond. The backend API.,JavaScript,9425ef63f5d82f0dde059fb84f27b72303310fb7,Updated featured endpoint to use game id instead of slug (Unblocks #132)
231,https://api.github.com/repos/mozilla/galaxy-api/pulls/132,132,Send back game objects from featured endpoint,"Change JSON response of /featured endpoint to return objects instead of
slugs. Needed for [galaxy/124](https://github.com/cvan/galaxy/issues/124)

r? @soedar @cvan
",emoore24,1326720,2014-03-10T07:46:53Z,CONTRIBUTOR,False,9,2,1,To infinity and beyond. The backend API.,JavaScript,573dc08c23245a89a7bf7d28b61c1aa2da0c4f36,"Send back game objects from featured endpoint

Change JSON response of /featured endpoint to return objects instead of
slugs."
232,https://api.github.com/repos/mozilla/galaxy-api/pulls/132,132,Send back game objects from featured endpoint,"Change JSON response of /featured endpoint to return objects instead of
slugs. Needed for [galaxy/124](https://github.com/cvan/galaxy/issues/124)

r? @soedar @cvan
",emoore24,1326720,2014-03-10T07:46:53Z,CONTRIBUTOR,False,9,2,1,To infinity and beyond. The backend API.,JavaScript,a07ab161a011e6cba2367d52168a19108b1154a3,style featured.js
233,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,322a998ac25875c62f4f812b1c8a6f13da7c7e78,Fixed a :fries: on lib/game.js
234,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,600e4d847865483e3888beedf5a006757f115c33,"fix type, add user settings modification capability"
235,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,926c27505b5538f24a35657bcb0f18bd9de58f66,make url parameter names consistent with local cache names
236,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,1e35575d521adcfd5d7f2b88057fa42b78113060,change company name to team name
237,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,78b2e2d99dadb12e6a9e517bd60ac86a6b39b3f5,"change companySlug to teamSlug, add team slug modification function. fix issue #141"
238,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,1f207bd3e9e0dc7b7d81f33f041cd3658e458de1,"revert back to companyslug for data storage, api endpoints remain as team slug"
239,https://api.github.com/repos/mozilla/galaxy-api/pulls/127,127,"fix type, add user settings modification capability","- fix typo in lib/game.js file
- change user settings endpoint to include company name and homepage url modification
",scottmeng,1774203,2014-03-09T09:37:59Z,CONTRIBUTOR,False,29,14,3,To infinity and beyond. The backend API.,JavaScript,57e4c3fa6cfcbd1c9750779054c41f1f3f6ae6ee,convert to teamName and teamSlug
240,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,78aa54e71b4407eea450d720b382c5a750bdb862,feedback (incomplete)
241,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,bb762819f409049949deef2c93351299ad02b87d,Fixed the list endpoint that was broken by 9425ef6
242,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,6aef046e60e628e6617679a21acb6de0c7e27577,"Merge pull request #139 from cvan/game-list-fix

Fixed list endpoint"
243,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,b8f6fe4e2dc5b5492f6106745028a8db7544e0d7,Add 'status' to public game object -- needed for galaxy #124
244,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,2ab45657822ee4539b9a784ecf911ce339d6e7a3,add get user purchase api endpoint
245,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,1c4b69acf8236ead877133ea37c20ef4467b0c2d,feedback (incomplete)
246,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,5cb1c048b0878a8176fda8664e129423dab641af,Merge branch 'feedback' of github.com:at-kevinlau/galaxy-api into feedback
247,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,2c86cc7961a9e585c484354619a120ff71fce105,"Fixed an incorrect permission name in admin scripts, and added ability to create a user for an email automatically if one doesn't exist when running the add permissions script"
248,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,a76c25b2d96b46e028f1e93605812e2ef01da1de,"Fixed pre-fill script by handling errors correctly (some weren't being caught), creating a developer user with which to authenticate game submission requests, and added a couple of missing fields required for submitting games. Also fixed a typo in userIDView / userDataView that caused an error not to be caught."
249,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,8c6f4394aeecbd5b982682bcb6379f6e7fc171c9,"add purchased flag in game/detail request, fixes issue #144"
250,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,eb82290e10f6bd6ff509343702e489233c949157,refactoring
251,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,f20ccb48bbd929a46a6e750457aebb4768ae67e2,"feedback when not logged in, refactor (#123)"
252,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,0af29f5f37f014ef6cd9aa8a167eaaf559038191,move stuff out of db callback (#123)
253,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,b79550fc7188cfd91cdf4d5f166f192c18b03398,add comment about optional _user (#123)
254,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,6e628a5244c1d49e2b9945802b427b155f799ce8,fix problems and clear up code
255,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,6e784b66da52efa5097eb971d81e2543d6d15bc0,fix error
256,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,e454686910849088f66f6e4b91b2b4c808c97eaa,move feedback view up a folder (#123)
257,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,9fe1b3dd66cf3cd6df50baa6fcc2d52871213d32,Match fields to front-end modal (#123)
258,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,a0f4ab914117b7c2eae06e18d424cdc8a185951f,todo on remove logs (#123)
259,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,28b2725e874e594f0570cb2436321590587fdef3,Renamed 'dev' to 'developer' in permissions for both acl endpoint and in user data so that it's all consistent
260,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,1ec66da5b42ffcf9a8e05784c54b7732b427231a,Fixed another use of 'dev' instead of 'developer' for permissions
261,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,7e8ceeb234c46164e987cab1492c88120a8e61b0,One more 'dev' fix...
262,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,9f9ef10a41b4541bef14e205caa6551d7af89daf,Fixed moderate endpoints to use updateGame properly; previously it was silently failing
263,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,ba111cf9e34ae64239fa0b464558ab5b0b6af2fd,"Merge pull request #148 from cvan/moderate-update-fix

Fixed moderate endpoints"
264,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,812762686c8332a4ea82e013ad731a997ea7dfa9,Updated list of valid statuses to filter by to include 'deleted' and 'disabled' (required for https://github.com/cvan/galaxy/issues/121)
265,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,f7ce3c6c92aabfc5744d6c23426869a00aa6e0dd,"Merge pull request #147 from cvan/list-statuses-fix

Updated filterable statuses for game/list endpoint"
266,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,bacb35597d3da3f204ed7b7417605ab732c129fa,"fix type, add user settings modification capability"
267,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,a4da540c5936b9d169790c35d68abf2c0f36a0b7,make url parameter names consistent with local cache names
268,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,b1b5883d3dc08bca1e936e7a847721a840af3941,change company name to team name
269,https://api.github.com/repos/mozilla/galaxy-api/pulls/125,125,feedback modal (incomplete) (#123),"Incomplete pull request for the feedback modal (#123).

Remaining issues/questions:
- ~~Should I make a new file inside `/lib/` that would contain just the functions `publicFeedbackObj` and `newFeedback`? It'd be more consistent with `submit.js` and such, but it seems like the functions will only ever be called by `feedback.js`. Will be moving some functions to lib files.~~
- ~~For logged-in users, the user field should be inserted into the feedback data.~~
- ~~Currently only works for logged-in users.~~
- ~~How would you verify that the `page_url` that the feedback refers to is valid? Would you even have to?~~ no point in checking
- Use a potato captcha to filter out spam, i.e. have two extraneous fields be submitted in the request: one which must be left blank and one which must be filled with a particular value. (see https://github.com/cvan/django-potato-captcha/blob/master/django_potato_captcha/forms.py)
- ~~Remove `user` from `publicFeedbackObj` so people can't falsify their usernames~~
",at-kevinlau,3458285,2014-03-07T12:14:39Z,CONTRIBUTOR,False,285,73,14,To infinity and beyond. The backend API.,JavaScript,a81c6de5de7f9710ffe2b7f5553d651b289700cd,"change companySlug to teamSlug, add team slug modification function. fix issue #141"
270,https://api.github.com/repos/mozilla/galaxy-api/pulls/121,121,Modified /game/list to return a 403 instead of a 401 on insufficient permissions,"r? @cvan
",aricha,1644254,2014-03-04T20:02:59Z,CONTRIBUTOR,True,2,2,1,To infinity and beyond. The backend API.,JavaScript,96d967893a6119365048c052886952d41fc78d62,Modified /game/list to return a 403 instead of a 401 on insufficient permissions
271,https://api.github.com/repos/mozilla/galaxy-api/pulls/121,121,Modified /game/list to return a 403 instead of a 401 on insufficient permissions,"r? @cvan
",aricha,1644254,2014-03-04T20:02:59Z,CONTRIBUTOR,True,2,2,1,To infinity and beyond. The backend API.,JavaScript,b109f8deec033f0aa99a039a39fd86c97aaf1b6b,Updated unauthorized error code to be consistent
272,https://api.github.com/repos/mozilla/galaxy-api/pulls/120,120,Modify featured endpoints to use the user view wrappers,"Refactored the featured endpoints to use the user view wrappers.

r? @aricha @cvan
",soedar,571891,2014-03-04T14:09:33Z,CONTRIBUTOR,True,41,75,1,To infinity and beyond. The backend API.,JavaScript,dfd34aafdad28c639e5e335ae30dd63a70c34d23,Modify featured endpoints to use the user view wrappers
273,https://api.github.com/repos/mozilla/galaxy-api/pulls/119,119,waffle.io Badge,"Merge this to receive a badge indicating the number of issues in the ready column on your waffle.io board at https://waffle.io/cvan/galaxy-api

This was requested by a real person (user cvan) on waffle.io, we're not trying to spam you.
",waffleio,4751584,2014-03-03T01:43:31Z,NONE,False,1,0,1,To infinity and beyond. The backend API.,JavaScript,d97feb48aae61e5057c34d7ae6de8284bb649025,add waffle.io badge
274,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,aef7bcc2b2ecbf0d528a64f74df5b9f5af3cce9e,JSON format for screenshots and videos
275,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,97ab074f9fa25afe108865b9b4f15567638c0767,Decode media URL arguments before parsing
276,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,5aea09e0f44cd37d9d7081793436a94f6211356e,Changed icons key to icon
277,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,f281bece8ffe8bf6af2ec71de70d803dedc33859,Modified README for new game submission and game detail format
278,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,4a3f7a6f6cfb99209ba98f94eca355d620b384be,Catch errors for invalid screenshots and videos URL in game submission.
279,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,517652fe4b9951a7cb6b1acedaf3b51b31f0d297,Updated game submission and edit endpoints to accept json blob (#95 #105 #114 #115)
280,https://api.github.com/repos/mozilla/galaxy-api/pulls/118,118,Game media URL submission,"Front end submits the `screenshots` and `videos` values as a JSON stringified urlencoded array of URLs. 
",yangshun,1315101,2014-03-01T16:05:42Z,CONTRIBUTOR,True,105,61,3,To infinity and beyond. The backend API.,JavaScript,c53f2b52ff147b15c79d57bdd6a43c9538b470fb,"Fixed comments, and ensure that required fields cannot be empty set. (Fixes #95 #105 #114 #115)"
281,https://api.github.com/repos/mozilla/galaxy-api/pulls/117,117,Changed the moderate endpoints to be POST,"I think these endpoints should be POST, not GET, since we're modifying the status of the game.

r? @cvan @rchreptyk
",aricha,1644254,2014-02-28T20:25:20Z,CONTRIBUTOR,True,3,3,1,To infinity and beyond. The backend API.,JavaScript,55e84da1d5667e0a8a6bdbd60cf7760a6c80e58a,Changed the moderate endpoints (ie. `/game/{slug}/{status}`) to be POST instead of GET
282,https://api.github.com/repos/mozilla/galaxy-api/pulls/117,117,Changed the moderate endpoints to be POST,"I think these endpoints should be POST, not GET, since we're modifying the status of the game.

r? @cvan @rchreptyk
",aricha,1644254,2014-02-28T20:25:20Z,CONTRIBUTOR,True,3,3,1,To infinity and beyond. The backend API.,JavaScript,d24f07313dc1ff28afd80b60b9aff1e8af045904,Updated usage comments
283,https://api.github.com/repos/mozilla/galaxy-api/pulls/116,116,Stripe payments - WIP,"Work in Progress, but I figured I'd open the request now. Right now, just putting certain things in the backend.  The Access Token is for Developers (Gotten through OAuth).  The Customer Token is an id to identify a customer in Stripe (so, if we would like to 'save' a user's payment details, we will save their stripe customer id).  More details on shared customers [here](https://stripe.com/docs/connect/shared-customers)

Will be going into navigator.game and I will add to this pull request when it is done.
",emoore24,1326720,2014-02-28T15:22:08Z,CONTRIBUTOR,False,257,2,5,To infinity and beyond. The backend API.,JavaScript,4fdfbaeac9816ce60284abfbafb8863ff79db8c9,"initial commit on stripe

- Add Stripe token to User
- Create Stripe API  Endpoint (WIP)
- Add new input to app.js"
284,https://api.github.com/repos/mozilla/galaxy-api/pulls/116,116,Stripe payments - WIP,"Work in Progress, but I figured I'd open the request now. Right now, just putting certain things in the backend.  The Access Token is for Developers (Gotten through OAuth).  The Customer Token is an id to identify a customer in Stripe (so, if we would like to 'save' a user's payment details, we will save their stripe customer id).  More details on shared customers [here](https://stripe.com/docs/connect/shared-customers)

Will be going into navigator.game and I will add to this pull request when it is done.
",emoore24,1326720,2014-02-28T15:22:08Z,CONTRIBUTOR,False,257,2,5,To infinity and beyond. The backend API.,JavaScript,9e43a1d4e2511974805f9c55bdb269c17ec8d7f3,"Remove stripe.js, add customerToken"
285,https://api.github.com/repos/mozilla/galaxy-api/pulls/116,116,Stripe payments - WIP,"Work in Progress, but I figured I'd open the request now. Right now, just putting certain things in the backend.  The Access Token is for Developers (Gotten through OAuth).  The Customer Token is an id to identify a customer in Stripe (so, if we would like to 'save' a user's payment details, we will save their stripe customer id).  More details on shared customers [here](https://stripe.com/docs/connect/shared-customers)

Will be going into navigator.game and I will add to this pull request when it is done.
",emoore24,1326720,2014-02-28T15:22:08Z,CONTRIBUTOR,False,257,2,5,To infinity and beyond. The backend API.,JavaScript,3fb8364cf045eafece34dd32afa4b67dbab341b6,"Add payment endpoint

+ Add endpoint for charging a customer given a developer’s stripe
accessToken
+ Add Library for Stripe functions"
286,https://api.github.com/repos/mozilla/galaxy-api/pulls/116,116,Stripe payments - WIP,"Work in Progress, but I figured I'd open the request now. Right now, just putting certain things in the backend.  The Access Token is for Developers (Gotten through OAuth).  The Customer Token is an id to identify a customer in Stripe (so, if we would like to 'save' a user's payment details, we will save their stripe customer id).  More details on shared customers [here](https://stripe.com/docs/connect/shared-customers)

Will be going into navigator.game and I will add to this pull request when it is done.
",emoore24,1326720,2014-02-28T15:22:08Z,CONTRIBUTOR,False,257,2,5,To infinity and beyond. The backend API.,JavaScript,53a41bf861f27abaf645a9c3f4af37ea674a69f5,goodbye r.kelly lyrics
287,https://api.github.com/repos/mozilla/galaxy-api/pulls/111,111,moved URL routing to app.js (issue #71),"Unfortunately, this makes app.js significantly messier and each of the views files significantly less documented due to their swagger(s) being moved to app.js.
",at-kevinlau,3458285,2014-02-27T08:08:20Z,CONTRIBUTOR,False,749,626,14,To infinity and beyond. The backend API.,JavaScript,3e6cdfcd17a068c7146deade89539f94a096aea4,moved URL routing to app.js (issue #71)
288,https://api.github.com/repos/mozilla/galaxy-api/pulls/109,109,Fixed a couple of bugs in user.js and list.js,"- `getUserFromEmail` now returns an error if no user was found, which I believe is the correct behaviour, and added a check in `login.js` to account for this
- `list.js` now fetches the entire game object instead of the public object so it can check the game's `status` property correctly, then maps them to public objects when returning them as a response
- `list.js` was iterating over `Object.keys`, which was unnecessary and doesn't actually work as it turns out
",aricha,1644254,2014-02-27T02:59:15Z,CONTRIBUTOR,True,5,5,3,To infinity and beyond. The backend API.,JavaScript,4ca3057083e08e76384d1e7b5d8516ef4a1a8a74,"Fixed a couple of bugs:
- `getUserFromEmail` now returns an error if no user was found, which I believe is the correct behaviour, and added a check in `login.js` to account for this
- `list.js` now fetches the entire game object instead of the public object so it can check the game's `status` property correctly, then maps them to public objects when returning them as a response"
289,https://api.github.com/repos/mozilla/galaxy-api/pulls/109,109,Fixed a couple of bugs in user.js and list.js,"- `getUserFromEmail` now returns an error if no user was found, which I believe is the correct behaviour, and added a check in `login.js` to account for this
- `list.js` now fetches the entire game object instead of the public object so it can check the game's `status` property correctly, then maps them to public objects when returning them as a response
- `list.js` was iterating over `Object.keys`, which was unnecessary and doesn't actually work as it turns out
",aricha,1644254,2014-02-27T02:59:15Z,CONTRIBUTOR,True,5,5,3,To infinity and beyond. The backend API.,JavaScript,4633f66d29cc6835e5b82f6b2717e899f5331972,Removed an unneeded closure
290,https://api.github.com/repos/mozilla/galaxy-api/pulls/107,107,Moved db-prefill parameters to an external .json file,"Addresses #106
I'm not sure if I should put documentation about the parameters or where I would put them.
",CharlesChong,1669035,2014-02-26T07:52:52Z,CONTRIBUTOR,True,29,19,3,To infinity and beyond. The backend API.,JavaScript,2e601047a05cabb9e2b71d6440ec97bdc9b7087d,Moved db-prefill parameters to an external .json file and added it to the .gitignore file
291,https://api.github.com/repos/mozilla/galaxy-api/pulls/107,107,Moved db-prefill parameters to an external .json file,"Addresses #106
I'm not sure if I should put documentation about the parameters or where I would put them.
",CharlesChong,1669035,2014-02-26T07:52:52Z,CONTRIBUTOR,True,29,19,3,To infinity and beyond. The backend API.,JavaScript,3f16d516b56188c85975ac5d061b63543e443337,"Made .dist parameters version, updated default parameters"
292,https://api.github.com/repos/mozilla/galaxy-api/pulls/104,104,Modified updateGame function,"Basically renamed the arguments, and added a way to delete fields. Should now be able to support `PATCH` requests.

Should fix #99

r? @cvan @birkanu @yangshun
",soedar,571891,2014-02-25T18:37:17Z,CONTRIBUTOR,True,21,9,1,To infinity and beyond. The backend API.,JavaScript,b62ab115a6af32e602bb095ad5f23aa815f71b15,updateGame now accepts full object to be updated (#99)
293,https://api.github.com/repos/mozilla/galaxy-api/pulls/104,104,Modified updateGame function,"Basically renamed the arguments, and added a way to delete fields. Should now be able to support `PATCH` requests.

Should fix #99

r? @cvan @birkanu @yangshun
",soedar,571891,2014-02-25T18:37:17Z,CONTRIBUTOR,True,21,9,1,To infinity and beyond. The backend API.,JavaScript,e2d1f65402d316775448f26356c030c0711bd229,Fixed changes from review (Fixes #99)
294,https://api.github.com/repos/mozilla/galaxy-api/pulls/102,102,add command-line script for adding/removing users from ACL groups (fixes #82),"r? @emoore24 @scottmeng and anyone else
",cvan,203725,2014-02-25T04:34:32Z,CONTRIBUTOR,True,162,29,4,To infinity and beyond. The backend API.,JavaScript,1dc47fdf73527cb5dd01ad51ad7359df1a76bbb3,add command-line script for adding/removing users from ACL groups (fixes #82)
295,https://api.github.com/repos/mozilla/galaxy-api/pulls/102,102,add command-line script for adding/removing users from ACL groups (fixes #82),"r? @emoore24 @scottmeng and anyone else
",cvan,203725,2014-02-25T04:34:32Z,CONTRIBUTOR,True,162,29,4,To infinity and beyond. The backend API.,JavaScript,2e8ba19eca8daebadfcdf2669c7cb033beec6045,Fixed user ID in scripts
296,https://api.github.com/repos/mozilla/galaxy-api/pulls/102,102,add command-line script for adding/removing users from ACL groups (fixes #82),"r? @emoore24 @scottmeng and anyone else
",cvan,203725,2014-02-25T04:34:32Z,CONTRIBUTOR,True,162,29,4,To infinity and beyond. The backend API.,JavaScript,b13f1c8ff5f72fec563960ffa20984d6a1d64924,Fixed issues with acl.js caused by a weird merge resolution
297,https://api.github.com/repos/mozilla/galaxy-api/pulls/102,102,add command-line script for adding/removing users from ACL groups (fixes #82),"r? @emoore24 @scottmeng and anyone else
",cvan,203725,2014-02-25T04:34:32Z,CONTRIBUTOR,True,162,29,4,To infinity and beyond. The backend API.,JavaScript,246111c4c1a5a3a36066000b267e81b9cd65917c,Added argc checks and renamed a misleading variable name
298,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,b4103656f3823513e2a538f7f56e224a55d3ab25,Added userIDView to wrap restify endpoint handlers and pre-fetch user ID from the extracted email in the _user field
299,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,53267c771edc1de6cabd11e3eeac5343e666e0ff,Adopted userIDView for views that always need to fetch the user ID
300,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,840b8ed32d43d7758202a2daec5924ba9f11af63,"Added userDataView for fetching all user data, and adopted it where possible; refactored generation of user views to stay DRY"
301,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,6431bfaaaf22fed3905fd064eeae62af3279ecf8,"Added documentation for wrapper views, and moved the result argument of each wrapper view to the front of the args list, using view.apply with the args list provided by redisView instead of hardcoding the args. This way arguments are never clobbered, and callers are free to ignore arguments at the end of the list."
302,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,3b41c941bcd5e2fc2eaa7d471d7a60ba62231656,Fixed unrelated style issues from feedback
303,https://api.github.com/repos/mozilla/galaxy-api/pulls/100,100,Added wrapper views to pre-fetch user ID / data,"Added `user.userIDView` and `user.userDataView` wrappers to facilitate fetching
the user ID and user data for the provided `_user` parameter, respectively. These
views wrap `db.redisView` and prepend the result of each fetch to the arguments list.
Sample usage is documented inline. Also adopted these wrapper views wherever possible.
",aricha,1644254,2014-02-24T18:32:16Z,CONTRIBUTOR,True,144,197,5,To infinity and beyond. The backend API.,JavaScript,e9a49ef8bb4de7da67c81d124e39dfe7829eccda,Inlined a function
304,https://api.github.com/repos/mozilla/galaxy-api/pulls/97,97,Change game submission requirements ,"Set isRequired to false for screenshots and icons so that submission works. This is temporary. 
",birkanu,4560085,2014-02-22T02:10:02Z,CONTRIBUTOR,False,92,2,1,To infinity and beyond. The backend API.,JavaScript,261e2d93d20322a046072ad684bdef2fba9a224a,Change game submission requirements to exclude screenshots and icons until their submission is implemented
305,https://api.github.com/repos/mozilla/galaxy-api/pulls/97,97,Change game submission requirements ,"Set isRequired to false for screenshots and icons so that submission works. This is temporary. 
",birkanu,4560085,2014-02-22T02:10:02Z,CONTRIBUTOR,False,92,2,1,To infinity and beyond. The backend API.,JavaScript,2004a979dd574bbd1e1d893b21b635098c470ff7,Create endpoint for editing game details
306,https://api.github.com/repos/mozilla/galaxy-api/pulls/97,97,Change game submission requirements ,"Set isRequired to false for screenshots and icons so that submission works. This is temporary. 
",birkanu,4560085,2014-02-22T02:10:02Z,CONTRIBUTOR,False,92,2,1,To infinity and beyond. The backend API.,JavaScript,0a7f2ad38d7556ed3248dbd0483afb9df57c0337,Modifications to edit endpoint
307,https://api.github.com/repos/mozilla/galaxy-api/pulls/97,97,Change game submission requirements ,"Set isRequired to false for screenshots and icons so that submission works. This is temporary. 
",birkanu,4560085,2014-02-22T02:10:02Z,CONTRIBUTOR,False,92,2,1,To infinity and beyond. The backend API.,JavaScript,9ad7f8a8bfa74d1f176372a6dfb5c929ea75e5cd,Merge remote-tracking branch 'upstream/master'
308,https://api.github.com/repos/mozilla/galaxy-api/pulls/97,97,Change game submission requirements ,"Set isRequired to false for screenshots and icons so that submission works. This is temporary. 
",birkanu,4560085,2014-02-22T02:10:02Z,CONTRIBUTOR,False,92,2,1,To infinity and beyond. The backend API.,JavaScript,62c5b98e24a1a9f5b926e6a2aed193ed0716c9be,Address issues on edit-game api endpoint
309,https://api.github.com/repos/mozilla/galaxy-api/pulls/96,96,Featured Games API Endpoint,"See: https://github.com/cvan/galaxy-api/issues/41 https://github.com/cvan/galaxy-api/issues/40

The GET endpoint will return an array of game slugs of the featured games.

I've opted to use PUT for the edit of featured game. PUT will modify the genres pages in which the game will be featured in. (Edit is basically DELETE + POST)

r? @cvan @mattbasta @CharlesChong
",soedar,571891,2014-02-21T12:34:33Z,CONTRIBUTOR,True,360,9,4,To infinity and beyond. The backend API.,JavaScript,bd4faaa672ce7cbcd7465ad25d3b8521c97bada6,"Created a lib/genre.js file, and move the genreExists method there"
310,https://api.github.com/repos/mozilla/galaxy-api/pulls/96,96,Featured Games API Endpoint,"See: https://github.com/cvan/galaxy-api/issues/41 https://github.com/cvan/galaxy-api/issues/40

The GET endpoint will return an array of game slugs of the featured games.

I've opted to use PUT for the edit of featured game. PUT will modify the genres pages in which the game will be featured in. (Edit is basically DELETE + POST)

r? @cvan @mattbasta @CharlesChong
",soedar,571891,2014-02-21T12:34:33Z,CONTRIBUTOR,True,360,9,4,To infinity and beyond. The backend API.,JavaScript,0910d17e63cc97692ac48039e7c22e347a79a136,"Added POST, PUT and DELETE endpoint for featured (Fixes #40)"
311,https://api.github.com/repos/mozilla/galaxy-api/pulls/96,96,Featured Games API Endpoint,"See: https://github.com/cvan/galaxy-api/issues/41 https://github.com/cvan/galaxy-api/issues/40

The GET endpoint will return an array of game slugs of the featured games.

I've opted to use PUT for the edit of featured game. PUT will modify the genres pages in which the game will be featured in. (Edit is basically DELETE + POST)

r? @cvan @mattbasta @CharlesChong
",soedar,571891,2014-02-21T12:34:33Z,CONTRIBUTOR,True,360,9,4,To infinity and beyond. The backend API.,JavaScript,6cb6a221cde68b0cfb340734cbd730b7b9186b8c,Added API endpoint to list featured games (Fixes #41)
312,https://api.github.com/repos/mozilla/galaxy-api/pulls/96,96,Featured Games API Endpoint,"See: https://github.com/cvan/galaxy-api/issues/41 https://github.com/cvan/galaxy-api/issues/40

The GET endpoint will return an array of game slugs of the featured games.

I've opted to use PUT for the edit of featured game. PUT will modify the genres pages in which the game will be featured in. (Edit is basically DELETE + POST)

r? @cvan @mattbasta @CharlesChong
",soedar,571891,2014-02-21T12:34:33Z,CONTRIBUTOR,True,360,9,4,To infinity and beyond. The backend API.,JavaScript,cbe1a464dcdcf9c3963cd9ef8a1990abc833750c,Updated featured endpoints from review (Fixes #40 #41)
313,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,d629ba663a16efc5fb58844bd1e259c7f6436324,Added api endpoints for genre (Fixes #84)
314,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,971831b00414c607d75c2dc34f15923b8286ca15,"Updated the genre endpoint, and minor changes from review"
315,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,52ac6fd7a8506b070bc83afa0459029600219d71,Refactored game.js to support filtering a list of games by its properties
316,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,2c6257136e38624819b1552f807f0644aee89866,"Added 'game/list' endpoint to fetch a list of games using filters, including limiting by count. Supports restricted filters that require additonal permissions to use (ie. filtering by 'status' requires reviewer or admin permissions). Currently only the 'status' filter is implemented, but adding others is trivial thanks to an abstracted model and filter support in game.js.

Also fixed some bugs in game.js from last commit."
317,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,963b993187dfb3886e6f73a76a2aa2a258ea8103,Uppercased some constants
318,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,e2f7db06a95ccf51db2df777da3966f1b143ea24,(#35) Games should default to 'pending' status when created
319,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,ee56b63e209d11cf4a631c9f9e095fa675ea0d24,(fixed #35) Changed to single quotes
320,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,b8da7a06b073704909570e631175bbfe917f885f,"Merge pull request #86 from soedar/genre

Added api endpoints for genre (Fixes #84)"
321,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,3be1dc5309a7bfe381b94cf265bdf278a9d2a9ea,Reverse-abstracted everything
322,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,7fcc8f4cd46616ac7b53fec28923dcaf22345766,Style fixes
323,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,9f117384bd61f805887a2a438047b53e18238281,Stylin'
324,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,a2c976ae0f4df0ba5c7c19b47185e2562dcc4418,Fixed refactoring mistakes
325,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,4a38d42d47ba85eb88ea63a1d54a2b30941fd8b3,Merge branch 'master' into review-list
326,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,1338b27748157808b50311abe7c3b60e45b89405,"Merge pull request #89 from cvan/review-list

Added game/list endpoint for fetching filterable lists of games"
327,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,42269f617947373966755423d0af084799037f0b,Fixed a couple of silly bugs in list.js
328,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,134cb78cc811adb4b95dedd2a87b511374d6330a,Style
329,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,79c6fd90dd6345bd93dbc1926c722a7058b7fdad,"Merge pull request #93 from cvan/list-fixes

Fixed a couple of silly bugs in list.js"
330,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,947dfe1ed904c5e2ec5f3d97782aa0ae1b7ea31e,"Added an SSA verification plugin to restify that transforms the _user token, when present, to an email address, setting the _email param of the request object on success. If that step fails, it automatically returns a 403 bad_user response. This will help eliminate some boilerplate we've been using in pretty much every API endpoint."
331,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,821ac17436bddd80680c05b2bd5364ca1393427e,Replaced all instances of `auth.verifySSA(_user)` with the new `_email` param outputted by the SSA verification plugin
332,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,64ff84408cabd786a8caca3568e63ef9290e2b4c,"Added documentation for SSA verification plugin, and fixed a potential security flaw by always setting the _email parameter"
333,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,cf1264d89fbcac64301818bd63832332226d2a8e,Style fixes
334,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,86344d035cf0faeacdbfd275ae8bd7246db7f3be,Style
335,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,7d8bac271cb33134df62a0bcd6f955d8fc920e31,"Moved _email to a root-level property on request, so that there's no risk of having it set by callers of the API"
336,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,1e4951aa3634e0ba8b205b91f18741ddbdb444bc,Fixed a typo
337,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,162ff6da00c8223025ec3a98b7fb5c5223a7cf47,"Merge pull request #69 from rchreptyk/master

(#34) moderate.js now updates DB with new status"
338,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,406867cec802f1d3fc21a6fd1d1180d115114547,"Merge pull request #90 from rchreptyk/iss35

(#35) Games should default to 'pending' status when created"
339,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,87c448e904e0468bb5f95d13cec37d06757b0003,"Added an SSA verification plugin to restify that transforms the _user token, when present, to an email address, setting the _email param of the request object on success. If that step fails, it automatically returns a 403 bad_user response. This will help eliminate some boilerplate we've been using in pretty much every API endpoint."
340,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,f5d3459f93c4c7cd0a0e7a2c190e69a93042611b,Replaced all instances of `auth.verifySSA(_user)` with the new `_email` param outputted by the SSA verification plugin
341,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,1d370a6c7ba0d2fda26ca09f316f5523eb93cfec,"Added documentation for SSA verification plugin, and fixed a potential security flaw by always setting the _email parameter"
342,https://api.github.com/repos/mozilla/galaxy-api/pulls/94,94,Added user SSA token verification plugin,"Added an SSA verification plugin to restify that transforms the `_user` token, when present, to an email address, setting the `_email` param of the request object on success. If that step fails, it automatically returns a `403 bad_user` response. 

Adopted use of this new parameter in every API endpoint that was calling `auth.verifySSA` manually. Less boilerplate code, yay!
",aricha,1644254,2014-02-18T22:40:19Z,CONTRIBUTOR,True,257,105,13,To infinity and beyond. The backend API.,JavaScript,919118a743ff695164c4e8f0f0ee2e2865992fbc,Style fixes
343,https://api.github.com/repos/mozilla/galaxy-api/pulls/93,93,Fixed a couple of silly bugs in list.js,"Added a missing import and handle unauthorized case correctly
",aricha,1644254,2014-02-18T21:34:55Z,CONTRIBUTOR,True,3,2,1,To infinity and beyond. The backend API.,JavaScript,42269f617947373966755423d0af084799037f0b,Fixed a couple of silly bugs in list.js
344,https://api.github.com/repos/mozilla/galaxy-api/pulls/93,93,Fixed a couple of silly bugs in list.js,"Added a missing import and handle unauthorized case correctly
",aricha,1644254,2014-02-18T21:34:55Z,CONTRIBUTOR,True,3,2,1,To infinity and beyond. The backend API.,JavaScript,134cb78cc811adb4b95dedd2a87b511374d6330a,Style
345,https://api.github.com/repos/mozilla/galaxy-api/pulls/90,90,(#35) Games should default to 'pending' status when created,"r?
",rchreptyk,3599708,2014-02-17T04:32:39Z,CONTRIBUTOR,True,1,0,1,To infinity and beyond. The backend API.,JavaScript,e2f7db06a95ccf51db2df777da3966f1b143ea24,(#35) Games should default to 'pending' status when created
346,https://api.github.com/repos/mozilla/galaxy-api/pulls/90,90,(#35) Games should default to 'pending' status when created,"r?
",rchreptyk,3599708,2014-02-17T04:32:39Z,CONTRIBUTOR,True,1,0,1,To infinity and beyond. The backend API.,JavaScript,ee56b63e209d11cf4a631c9f9e095fa675ea0d24,(fixed #35) Changed to single quotes
347,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,52ac6fd7a8506b070bc83afa0459029600219d71,Refactored game.js to support filtering a list of games by its properties
348,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,2c6257136e38624819b1552f807f0644aee89866,"Added 'game/list' endpoint to fetch a list of games using filters, including limiting by count. Supports restricted filters that require additonal permissions to use (ie. filtering by 'status' requires reviewer or admin permissions). Currently only the 'status' filter is implemented, but adding others is trivial thanks to an abstracted model and filter support in game.js.

Also fixed some bugs in game.js from last commit."
349,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,963b993187dfb3886e6f73a76a2aa2a258ea8103,Uppercased some constants
350,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,3be1dc5309a7bfe381b94cf265bdf278a9d2a9ea,Reverse-abstracted everything
351,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,7fcc8f4cd46616ac7b53fec28923dcaf22345766,Style fixes
352,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,9f117384bd61f805887a2a438047b53e18238281,Stylin'
353,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,a2c976ae0f4df0ba5c7c19b47185e2562dcc4418,Fixed refactoring mistakes
354,https://api.github.com/repos/mozilla/galaxy-api/pulls/89,89,Added game/list endpoint for fetching filterable lists of games,"Added a `game/list` endpoint to fetch a list of games using filters by game property. Currently the only supported filter is by `status`, which will be used to implement [galaxy/15](https://github.com/cvan/galaxy/issues/15). This endpoint is implemented in an abstract fashion, however, so adding additional filters in the future should be trivial. Filters can also be restricted to users with certain permissions, so use of the `status` filter, for example, is restricted to reviewers and admins. There is also primitive support for limiting results by `count`. 

The implementation for fetching and filtering games will need to be refactored at some point for scalability reasons, as we currently have to fetch the entire list of games from the DB in order to filter them by property. We'll likely also have to support paginated fetching of games from the DB, which would factor in to how `count` is currently used. For now, though, this implementation works.

Fixes #87.
",aricha,1644254,2014-02-17T04:29:51Z,CONTRIBUTOR,True,126,10,3,To infinity and beyond. The backend API.,JavaScript,4a38d42d47ba85eb88ea63a1d54a2b30941fd8b3,Merge branch 'master' into review-list
355,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,9c6bee38ce5bb2f5c1388abfbe1e6a4cb1607da6,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

This makes use of redis pub/sub to detect when the API and persona-faker servers are set up, so it requires each to send a message after launching their HTTP server so that db-prefill can begin the pre-fill process. If you have already run `npm install` with persona-faker, you will need to run `npm install` again to receive this change on persona-faker."
356,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,b833210efdf49a35fa28d3243ebabedf20f205f4,Prefix stdout / stderr of child processes with their respective names in db-prefill
357,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,039837a37b14fdeb090a20b05e1549fc2538b544,Cleanup
358,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,679fa3c2923a8ae5d18a0806b9d0ca2aee4538db,"Setup exit handler before calling startServers so that if we crash for some reason after creating one server but before finishing the other, we can still kill the server that we had already started"
359,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,e16287dc9b4eeb64498c73d9499139d20e712fd7,"Moved startServers to its chronological location, and refactored the server ready listening into a promise with a timeout handler for easier debugging"
360,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,34bf7aed8b4d7a9f6dd55449ad3ce0785e3ebb0d,Changed stdout / stderr prefixing to use a proper stream.Writable subclass; style fixes
361,https://api.github.com/repos/mozilla/galaxy-api/pulls/88,88,Enhanced db-prefill to spawn its own API and persona-faker instances,"Modified db-prefill to use `fork()` to start up an instance of the API and persona-faker servers, then kill them on completion; this means that we can now run db-prefill without any prior setup (after `npm install`).

Note that if you have already run `npm install` recently (ie. persona-faker is already installed as a module), you will need to run `npm install` again so that persona-faker will send its callback message to notify db-prefill that it is ready to run.
",aricha,1644254,2014-02-16T05:59:33Z,CONTRIBUTOR,True,162,44,4,To infinity and beyond. The backend API.,JavaScript,5c30e9b98357350f89de5434f3ce811e3097ee32,Reorganized imports
362,https://api.github.com/repos/mozilla/galaxy-api/pulls/86,86,Added api endpoints for genre (Fixes #84),"Basic implementation of genre. See #84

I figured we'll do all the i18n thing all at once, and we'll probably have some helper to help out with that, so I didn't do the name thing.

Basically just a lot of copy and pasting.

r? @cvan
",soedar,571891,2014-02-13T19:04:58Z,CONTRIBUTOR,True,98,0,2,To infinity and beyond. The backend API.,JavaScript,d629ba663a16efc5fb58844bd1e259c7f6436324,Added api endpoints for genre (Fixes #84)
363,https://api.github.com/repos/mozilla/galaxy-api/pulls/86,86,Added api endpoints for genre (Fixes #84),"Basic implementation of genre. See #84

I figured we'll do all the i18n thing all at once, and we'll probably have some helper to help out with that, so I didn't do the name thing.

Basically just a lot of copy and pasting.

r? @cvan
",soedar,571891,2014-02-13T19:04:58Z,CONTRIBUTOR,True,98,0,2,To infinity and beyond. The backend API.,JavaScript,971831b00414c607d75c2dc34f15923b8286ca15,"Updated the genre endpoint, and minor changes from review"
364,https://api.github.com/repos/mozilla/galaxy-api/pulls/81,81,Leaderboard: /board endpoint should include data from each board of the game (#62),"Abstracted out most of the leaderboard functions from views/board.js to lib/leaderboard.js.

Fixes #62 

r? @cvan @mattbasta
",soedar,571891,2014-02-09T19:39:26Z,CONTRIBUTOR,True,133,59,2,To infinity and beyond. The backend API.,JavaScript,49ca5764041f7064bd2eaabcc9e3ccfe0d0e13ab,Abstracted out leaderboard methods into leaderboard.js
365,https://api.github.com/repos/mozilla/galaxy-api/pulls/81,81,Leaderboard: /board endpoint should include data from each board of the game (#62),"Abstracted out most of the leaderboard functions from views/board.js to lib/leaderboard.js.

Fixes #62 

r? @cvan @mattbasta
",soedar,571891,2014-02-09T19:39:26Z,CONTRIBUTOR,True,133,59,2,To infinity and beyond. The backend API.,JavaScript,b4b33ba70069185c634e3054f2399671eceb7edf,"Updated the leaderboard library function, and first pass at including leaderboard data (#62)"
366,https://api.github.com/repos/mozilla/galaxy-api/pulls/81,81,Leaderboard: /board endpoint should include data from each board of the game (#62),"Abstracted out most of the leaderboard functions from views/board.js to lib/leaderboard.js.

Fixes #62 

r? @cvan @mattbasta
",soedar,571891,2014-02-09T19:39:26Z,CONTRIBUTOR,True,133,59,2,To infinity and beyond. The backend API.,JavaScript,431aabedd014e97740bdf9ea32fc96d2a28e1dbd,Replaced a clunky boardCallback call with a less clunky one.
367,https://api.github.com/repos/mozilla/galaxy-api/pulls/81,81,Leaderboard: /board endpoint should include data from each board of the game (#62),"Abstracted out most of the leaderboard functions from views/board.js to lib/leaderboard.js.

Fixes #62 

r? @cvan @mattbasta
",soedar,571891,2014-02-09T19:39:26Z,CONTRIBUTOR,True,133,59,2,To infinity and beyond. The backend API.,JavaScript,4cee78d7b91a4d6b3f02e2f7d39d26b7f33c0d41,Fixed style issues for leaderboard library (Fixes #62)
368,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,3bf23c71f84e849c0dba4f1628f2c9166dd47318,Moved Persona verification URL to settings.js so that it can be overridden by settings_local.js
369,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,f195b3bb8f26c7844e3417ee25e75e008f5bbcfe,Added skeleton for db prefill test
370,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,2bbf8edd00eb761093877930f256bf5c5c0f4b22,Apparently JS doesn't do ternary shorthand...
371,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,b08608352c43e5f2cac373930c3671cb78258c6e,added functionality to login 100 users
372,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,b354d2d1f1032695aff172be8f048ab10c648027,Added working game submitting method
373,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,4db13f3452ad98ab83e35dc529fdb75c5a290b43,Merge branch 'db-pre-fill' of https://github.com/cvan/galaxy-api into db-pre-fill
374,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,5edef0e86721c332587423b9c151694a08be295a,Moved db-prefill to scripts/
375,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,9f6a4d32d96a6c928c11c19ec9cae439e485b334,Added example promise
376,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,f48f244949d20571bffb96d9160d41189e0b03b5,Wrap createGames in a promise
377,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,15c5fa22e9fb7b3c9fc00585659ea76d1863365c,moved user creation to promises
378,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,d7952986e16f38821e0010a4e8de595a809da1e3,Added purchaseGames method
379,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,69f97283a340259819736fe84f50f36b0bb0a04f,added more stored attributes for created users
380,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,0ef314663e5e7c5d521d350eb0dde938a9ec79db,Merge commit '15c5fa22e9fb7b3c9fc00585659ea76d1863365c' into db-pre-fill
381,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,9a3bd8cd2f4ae5f41b06c0dece677bc1c0123f38,"Added utils API for creating a promise map (takes a map of keys to promises, returns a map of keys to results)"
382,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,4b5d4468cad41be057c801e6b759f61e2c321738,"Hooked up users and games creation (run concurrently and join when done), and call purchaseGames when done"
383,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,9542b38a584f46a9e206fce16354d4e9f9203530,Merge commit '69f97283a340259819736fe84f50f36b0bb0a04f' into db-pre-fill
384,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,1f0551609ed5e1191f4c17b19a6e63c9b605db55,preliminary friend creation
385,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,9f55f57af4945134938be52feb0ee297f506180f,fixed conflicts
386,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,1b4beccd92433cacad67121ffafcdc5a8a272669,"flattened friend request array, ignore already_requested"
387,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,38519fd04ca3ca3f4c4e4dcc51c451d3d12416f7,changed request/accepts to be parallel
388,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,d7b9471902ed88315220ad75392ef28e25ac0b85,Fixed typo
389,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,00275736f589802e84a7ef208717608b479bc516,"Fixed the promise chain for friend requests, handle redundant friend requests correctly, and join friend requests and game purchase promises together so we can know when we're done"
390,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,5c5d31bb4da06583975f45c5e4ea28e2144f926e,"- Flush db before running if FLUSH_DB_ON_PREFILL is set
- Cleaned up script output to be more useful
- Added TODOs for things we should eventually fix in the script"
391,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,e0e5004f688910895dc238c041a98fcd635adb2d,Added persona-faker as a dev dependency so that it can be launched using a script
392,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,eeb3f4368e57c1d148d175a328c026209d35ff53,simple style fixes
393,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,f10bd8aa5d76f202ae11f65247b518e7a7125800,changed some each to map and made wrapper for requests
394,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,fb7957d3901d275dc2894374a605c9f5a02c3490,"Fixed style issues, and adapted acceptRequest to use the postPromise helper"
395,https://api.github.com/repos/mozilla/galaxy-api/pulls/76,76,DB prefill script,"Created a script to prefill the database

NOTE: In order to generate users with this script, you should first run
persona-faker (http://github.com/aricha/persona-faker) so that we can
generate fake Persona assertions (instead of flooding the production
Persona server with fake users). You should also update PERSONA_VERIFICATION_URL
in settings_local.js to point to this endpoint (ie. http://localhost:9001/verify)
so that galaxy-api actually touches this server.

Addresses issue #3
",CharlesChong,1669035,2014-02-09T01:16:36Z,CONTRIBUTOR,True,250,3,5,To infinity and beyond. The backend API.,JavaScript,50e336e3f767bb7bfadd8b19061d4f84530a29e5,"Added sample usage for promiseMap, converted remaining uses of request.post to use postPromise, and made more style fixes"
396,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,79282f53d9b6b8d0dc775d379f3df61d51ad0c55,"Add way to get company info from Dev Slug

+ Add list in redid matching slug to devleopers
+ Add method to get ids of developers from slug
+ Add method to grab avatar, companyName, homepage, support urls from
developer slug"
397,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,b47ff1902e2391928ad6d859a17d21ad513d5ece,Merge branch 'master' of https://github.com/cvan/galaxy-api into dev_search
398,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,bbd84c99c167c2d28173c5c2583599a682a2f767,some internal documentation
399,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,644e4262415a9a91380aaef67f4b6f33c897165a,add ability to search for company info by dev
400,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,cccc00d0b83488dd158d33b60205e679a1c1d8fe,"only add to developer list when company slug is changed

+ When company slug is updated, add to new developer list.
+ fix typo with returning support url
+ restructure error callbacks for more info"
401,https://api.github.com/repos/mozilla/galaxy-api/pulls/72,72,Dev search,"For [galaxy/16](https://github.com/cvan/galaxy/issues/16), I needed a way to get developer info via the slug from the url.

**in users.js**:
- Create a list of developer id's under a company slug in redis. Update list when company Slug is changed
- Add method for getting all developer id's under a company slug
- Add method for getting company info for a developer slug (along with helper methd that picks info to return)

**in search.js**:
- Add devSlug parameter to search against
- if devSlug parameter specified, search for company info

Note: I created a branch on cvan for this before I realized I should fork.  Will do next time!
",emoore24,1326720,2014-02-08T23:11:06Z,CONTRIBUTOR,True,72,1,2,To infinity and beyond. The backend API.,JavaScript,03335cedb03a19da69fe03c4fd3c1bb133c2643f,space fixes
402,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,b77ffb3fff1a18692f445b9cec6726c46c66a64b,"Only allow admin to update acl

+ Add auth user library and authenticate user making request
+ Only allow update if authenticator is admin"
403,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,c8cd706638dcd7e5d25ace62787dc90c12480153,small fix to acl
404,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,be5529a504bc8296623c2f03f5634f7bc7e42f86,"Update acl.js

Small fixes"
405,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,c59da93023afc22fe3988c3481512c812d07adae,indentation fix
406,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,0eef6ea23b2c0dd406ba6d70cacab84145440a5a,don't expose err
407,https://api.github.com/repos/mozilla/galaxy-api/pulls/70,70,Only allow admin to update acl,"- Add auth user library and authenticate user making request
- Only allow update if authenticator is admin

for [galaxy-api/68](https://github.com/cvan/galaxy-api/issues/68)

@cvan  you mentioned something about a script when I first started talking to you about acl? I can't remember what you said.
",emoore24,1326720,2014-02-08T21:33:41Z,CONTRIBUTOR,True,47,19,1,To infinity and beyond. The backend API.,JavaScript,50f70b46631d910b3beca5385263383f8ddbc0fa,small fixes
408,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,fc40827a090618cf87805b0d9e93e4142a14edb1,(#34) Refactored moderate.js to be cleaner and only match specific urls
409,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,71bb980d0fdac6b919e94ecc8bb4e5d6587e5631,(#34) Refactored moderate.js to be cleaner and only match specific urls
410,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,6088a2c65754cc204916d716e72e35ab8e282b5f,Merge branch 'master' of github.com:cvan/galaxy-api into moderateJS
411,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,72b1b665156cc0a893fbe655197d13eb6a71ed7c,(#34) Now updates status in database
412,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,7d0434562afce188af6aa2e3ed23a084e6fdac11,"Merge branch 'moderateJS'

Conflicts:
	views/game/moderate.js"
413,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,7f54871ef06ccc8c99ac34573d57eeee119cb961,(#34) Refactored and changed success response
414,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,6cb29df360d32b30635575ff537762ba6806246a,(Fixed #34) Refactored with style changes
415,https://api.github.com/repos/mozilla/galaxy-api/pulls/69,69,(#34) moderate.js now updates DB with new status,"r? @cvan
",rchreptyk,3599708,2014-02-08T20:20:36Z,CONTRIBUTOR,True,43,15,1,To infinity and beyond. The backend API.,JavaScript,afaf48cd98d36c130f6db54e52f42e95d167844a,Added 500 error code on db error
416,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,6a61913c26a369c1592d7968ce5d1c3b0cd3f284,store games in redis - WIP (#31)
417,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,b64f8fc57bf5adc245b70fbd37aa6289e9c79433,Replace occurrence of email with slug
418,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,546e1c7fb75bc270b61d1e5355216e580481165a,Updated game detail to use redis instead of flatfile (#31)
419,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,7348f94d4db4ffae9afb75ee7030c00198dab11b,Removed unnecessary leaderboard require
420,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,ca1a5de876115199729011395eb4aa6fa26dfd48,Fixed stylistic issues from pull request (#31)
421,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,79bf240c7fc5fb4ba0fc0becb5bb2f78bd12e1a2,Removed old slug in the UpdateGame call
422,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,9a47fa9d9da60e85386f9b4e57e187328b618415,Detail and submit now uses redis as datastore
423,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,1640f1024b29ef01414b4c5fa1c4d09e11573543,Updated manifest to use the new game lib APIs
424,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,a38cb64c0ae39bf5fdb5758ea5f6f30bfccdf548,Remove flatfile from db.js (#31)
425,https://api.github.com/repos/mozilla/galaxy-api/pulls/66,66,store games in redis - WIP (#31),"r? @aricha @birkanu @rchreptyk @soedar and anyone else who was blocked on this.

please note that this is a WIP and I'd love some help with this patch (especially around deletion of old hashes, hooking this up to `views/detail`, removing the static `.json` file, etc.).
",cvan,203725,2014-02-08T07:07:29Z,CONTRIBUTOR,True,197,86,5,To infinity and beyond. The backend API.,JavaScript,e1cdd3c3dcb36466579501a3c281cfce7a9e3209,Fixed minor issues relating from pull request (#31)
426,https://api.github.com/repos/mozilla/galaxy-api/pulls/65,65,Basic ACL,"**Changes**
- Add acl.js file to app.js
- Add properties “permissions”, “homepage”, “support”, “companyName”,
  and “companySlug” to user
- change login to return permissions
- Add ability to set developer and reviewer permissions. Right now, can save ""developer"" and ""reviewer"" and ""admin"" permissions.

**Tested via**: CURL calls

**Things to consider**:
- When testing via curl, ""dev"" and ""rev"" and ""admin"" variables were strings, so I converted them to booleans.

**Things todo**:
- [x] Only allow ""admins"" to change permissions (making a new issue)
",emoore24,1326720,2014-02-08T02:50:10Z,CONTRIBUTOR,True,84,1,4,To infinity and beyond. The backend API.,JavaScript,e3656b325396ea833ed4dc1d0709c33e50b2ea43,"Basic ACL

+ Add acl.js file to app.js
+ Add properties “permissions”, “homepage”, “support”, “companyName”,
and “companySlug” to user
+ change login to return permissions
+ Add ability to set developer and reviewer permissions"
427,https://api.github.com/repos/mozilla/galaxy-api/pulls/65,65,Basic ACL,"**Changes**
- Add acl.js file to app.js
- Add properties “permissions”, “homepage”, “support”, “companyName”,
  and “companySlug” to user
- change login to return permissions
- Add ability to set developer and reviewer permissions. Right now, can save ""developer"" and ""reviewer"" and ""admin"" permissions.

**Tested via**: CURL calls

**Things to consider**:
- When testing via curl, ""dev"" and ""rev"" and ""admin"" variables were strings, so I converted them to booleans.

**Things todo**:
- [x] Only allow ""admins"" to change permissions (making a new issue)
",emoore24,1326720,2014-02-08T02:50:10Z,CONTRIBUTOR,True,84,1,4,To infinity and beyond. The backend API.,JavaScript,db7ad55dc881feacb269517b59917cd8a55f753a,"Add admin to basic ACL

+ Add “admin” to “permissions” property
+ Allow change to “admin” permission"
428,https://api.github.com/repos/mozilla/galaxy-api/pulls/65,65,Basic ACL,"**Changes**
- Add acl.js file to app.js
- Add properties “permissions”, “homepage”, “support”, “companyName”,
  and “companySlug” to user
- change login to return permissions
- Add ability to set developer and reviewer permissions. Right now, can save ""developer"" and ""reviewer"" and ""admin"" permissions.

**Tested via**: CURL calls

**Things to consider**:
- When testing via curl, ""dev"" and ""rev"" and ""admin"" variables were strings, so I converted them to booleans.

**Things todo**:
- [x] Only allow ""admins"" to change permissions (making a new issue)
",emoore24,1326720,2014-02-08T02:50:10Z,CONTRIBUTOR,True,84,1,4,To infinity and beyond. The backend API.,JavaScript,f8f5585e6f1cf06c22175ded17a1065d890785d2,Merge branch 'master' of https://github.com/cvan/galaxy-api into user_acl
429,https://api.github.com/repos/mozilla/galaxy-api/pulls/65,65,Basic ACL,"**Changes**
- Add acl.js file to app.js
- Add properties “permissions”, “homepage”, “support”, “companyName”,
  and “companySlug” to user
- change login to return permissions
- Add ability to set developer and reviewer permissions. Right now, can save ""developer"" and ""reviewer"" and ""admin"" permissions.

**Tested via**: CURL calls

**Things to consider**:
- When testing via curl, ""dev"" and ""rev"" and ""admin"" variables were strings, so I converted them to booleans.

**Things todo**:
- [x] Only allow ""admins"" to change permissions (making a new issue)
",emoore24,1326720,2014-02-08T02:50:10Z,CONTRIBUTOR,True,84,1,4,To infinity and beyond. The backend API.,JavaScript,f55ba9ab96dd001d750e0d9911c34ec66a8e82db,"Simplify ACL + small fix in app.js

+ Make views in app.’s alphabetical
+ remove unnecessary requires
+ require dev, rev, and admin parameters (instead of making them
optional) and make them numbers"
430,https://api.github.com/repos/mozilla/galaxy-api/pulls/65,65,Basic ACL,"**Changes**
- Add acl.js file to app.js
- Add properties “permissions”, “homepage”, “support”, “companyName”,
  and “companySlug” to user
- change login to return permissions
- Add ability to set developer and reviewer permissions. Right now, can save ""developer"" and ""reviewer"" and ""admin"" permissions.

**Tested via**: CURL calls

**Things to consider**:
- When testing via curl, ""dev"" and ""rev"" and ""admin"" variables were strings, so I converted them to booleans.

**Things todo**:
- [x] Only allow ""admins"" to change permissions (making a new issue)
",emoore24,1326720,2014-02-08T02:50:10Z,CONTRIBUTOR,True,84,1,4,To infinity and beyond. The backend API.,JavaScript,6978648a49cd33661a9ce997820bf01d1711331e,"acl fixes

+ single quotes
+ change rev to reviewer
+ change Boolean to !!
+ infer admin=0 if admin is not sent"
431,https://api.github.com/repos/mozilla/galaxy-api/pulls/63,63,Added videos key in game submission curl and saved json file format,"Related to this issue: [https://github.com/cvan/galaxy/issues/46](https://github.com/cvan/galaxy/issues/46)
",yangshun,1315101,2014-02-08T01:51:37Z,CONTRIBUTOR,True,3,2,2,To infinity and beyond. The backend API.,JavaScript,7d5adb50ffe536fd8bcca4ec7e89205ee45e2e86,Added videos key in game submission curl and saved json file format
432,https://api.github.com/repos/mozilla/galaxy-api/pulls/63,63,Added videos key in game submission curl and saved json file format,"Related to this issue: [https://github.com/cvan/galaxy/issues/46](https://github.com/cvan/galaxy/issues/46)
",yangshun,1315101,2014-02-08T01:51:37Z,CONTRIBUTOR,True,3,2,2,To infinity and beyond. The backend API.,JavaScript,54b11f661c2befba7fb415df355f40326139669b,Merge branch 'master' of github.com:cvan/galaxy-api
433,https://api.github.com/repos/mozilla/galaxy-api/pulls/63,63,Added videos key in game submission curl and saved json file format,"Related to this issue: [https://github.com/cvan/galaxy/issues/46](https://github.com/cvan/galaxy/issues/46)
",yangshun,1315101,2014-02-08T01:51:37Z,CONTRIBUTOR,True,3,2,2,To infinity and beyond. The backend API.,JavaScript,80bcc8f87c7bed52cc2eb012b73a7ccf66a22811,Merge branch 'master' of github.com:cvan/galaxy-api
434,https://api.github.com/repos/mozilla/galaxy-api/pulls/60,60,"create user.userUpdate, add last date login","- Add dateLastLogin to user properties
- Add user.updateUser method
- Create now() function in utils
- on login, update dateLastLogin
",emoore24,1326720,2014-02-07T23:42:38Z,CONTRIBUTOR,True,32,1,3,To infinity and beyond. The backend API.,JavaScript,9f4b7d194bb3d12fa789fff2795d493808849381,"create user.userUpdate, add last date login"
435,https://api.github.com/repos/mozilla/galaxy-api/pulls/60,60,"create user.userUpdate, add last date login","- Add dateLastLogin to user properties
- Add user.updateUser method
- Create now() function in utils
- on login, update dateLastLogin
",emoore24,1326720,2014-02-07T23:42:38Z,CONTRIBUTOR,True,32,1,3,To infinity and beyond. The backend API.,JavaScript,689990b78acb79562f5b0138d327a41a3c61ec22,"Fix Formatting issues

+ move require to “third-party requires” section
+ add more newlines between newUser and updateUser
+ Make now() function indent 4 spaces"
436,https://api.github.com/repos/mozilla/galaxy-api/pulls/52,52,Leaderboard endpoints,"Most of the work that I've done here is to retrieve the scores for individual leaderboards of a game, which is the `GET /api/v1/game/<game>/board/<board>` endpoint. For now, the `GET /api/v1/game/<game>/board` does not include the default output of the specific endpoint. (Only shows the name and the slug) https://github.com/cvan/galaxy-api/issues/62

For the `GET /api/v1/game/<game>/board/<board>` endpoint:

**Optional Parameters**
`sort`: `asc` or `desc` (default: `desc`)
`friendsOnly`: `true` or `false` (default: `false`)
 `_user`: user's ssa token. Required when `friendsOnly` is true. The code will checks the token when this parameter is specified, no matter `friendsOnly` is true or false
`page`: Page number. Defaults to 0
`limit`: Number of scores per page. Defaults to 10

See https://github.com/soedar/galaxy-api/blob/master/views/game/board.js#L194 for page start/stop calculation

**Sample Output**

``` javascript
[
    {
        ""user"": {
            ""avatar"": ""http://www.gravatar.com/avatar/52ee5da3a600790b01386b551ec2e36a"",
            ""username"": ""1234"",
            ""id"": ""1234""
        },
        ""score"": ""200""
    },
    {
        ""user"": {
            ""avatar"": ""http://www.gravatar.com/avatar/8c5a1bf958ec4bbdfafc8a2fb4614b75"",
            ""username"": ""soedar.sg"",
            ""id"": ""b27911cf-7fe7-4c95-80e8-0db204e571cf""
        },
        ""score"": ""10""
    }
]
```
",soedar,571891,2014-02-03T16:22:16Z,CONTRIBUTOR,False,169,23,3,To infinity and beyond. The backend API.,JavaScript,06a93dfca88c005758b6865f0e9e1a66194143c3,add leaderboard view endpoints (fixes #52)
437,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,4f15f11a155ee6b23388650abfa2edc8e18ad1e1,Updated readme to make it clear that redis is required
438,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,997033ad704d07816acfd07ae543e8d44df08345,Added API for updating username and email for a given user
439,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,10889714e13caa45422792ba4c295b0fa0c9576e,"Clarified installation of redis in readme, and fixed a couple style issues in profile.js"
440,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,ee2969f53e5edd92a3712e91809cbcc71e2a3af6,Moar style fixes
441,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,b012c09a032333db997e57404ac38d6d80cd6d4a,remove manifest (fixes #77)
442,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,780a413e566f7382b352f6ff3ab9f52c745d0496,Merge commit 'b012c09a032333db997e57404ac38d6d80cd6d4a' into profile-api
443,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,e4bfe2b232ad137cdce743002f4e7d97c49a7dc9,"Refactored profile updating into updateUser, which is now much more elaborate, and updated existing uses of updateUser to be asynchronous"
444,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,bac22f75db110f8f912106bda21f5448b6e8fcf6,"Fixed typos, bugs, and improved error handling"
445,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,9a202ed66aeeabe4b9e255aaaac42cc515adde88,Merge branch 'master' into profile-api
446,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,42b7dbc79975eba63d1a16811d6bc51c9e332afa,Removed redis comments (not needed) and test.js that shouldn't be there
447,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,27814c04bd232a623b3961fa2801f7c4c59685f8,Cleaned up log statements
448,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,702b98a252df8cf21c2ceefde3322e1f2c6b694c,Style fixes
449,https://api.github.com/repos/mozilla/galaxy-api/pulls/50,50,Added API for updating username and email for a given user,"Accessible through the `/user/profile` endpoint, using a `PUT` request. Sanity tested through `curl`. There will be issues when changing the user's email address (ie. updating the SSA token on the client), but as far as I can tell there shouldn't be any additional work needed on the API side to make this work. Fixes #23.
",aricha,1644254,2014-01-25T02:09:55Z,CONTRIBUTOR,True,202,38,5,To infinity and beyond. The backend API.,JavaScript,d359924ddc78d79fc49735075c28845529afaa27,Removed an entire line of code
450,https://api.github.com/repos/mozilla/galaxy-api/pulls/13,13,check game ownership when user updates leaderboard (fixes #6),,cvan,203725,2013-12-18T19:37:47Z,CONTRIBUTOR,True,9,5,1,To infinity and beyond. The backend API.,JavaScript,8fd3cb0bfd5435a2028af57f33adbf6695ce92f9,check game ownership when user updates leaderboard (fixes #6)
451,https://api.github.com/repos/mozilla/galaxy-api/pulls/1,1,flatDB changes,"r? @mattbasta
",cvan,203725,2013-12-15T04:26:25Z,CONTRIBUTOR,False,22,23,3,To infinity and beyond. The backend API.,JavaScript,7235e4094f6532ea86c1c4dc7229f0654425e103,use more lodash goodness
452,https://api.github.com/repos/mozilla/galaxy-api/pulls/1,1,flatDB changes,"r? @mattbasta
",cvan,203725,2013-12-15T04:26:25Z,CONTRIBUTOR,False,22,23,3,To infinity and beyond. The backend API.,JavaScript,b36f2b93095b30b83b7a47f9b2044567d80d9638,clean up flatDB.read
453,https://api.github.com/repos/mozilla/galaxy-api/pulls/1,1,flatDB changes,"r? @mattbasta
",cvan,203725,2013-12-15T04:26:25Z,CONTRIBUTOR,False,22,23,3,To infinity and beyond. The backend API.,JavaScript,f04618564bf1f5974f33f085c965f82beb5e1458,add flatDB.update
