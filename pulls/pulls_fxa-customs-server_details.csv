,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/332,332,chore(docs): Point to monorepo in README,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-03T05:58:31Z,MEMBER,True,2,133,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4c041e6a748a679325d4c57daef8805225fee1ae,chore(docs): Point to monorepo in README
1,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/331,331,fix(deps): Fix the audit warnings.,"Update:
* tap
* js-yaml
* grunt",shane-tomlinson,848085,2019-04-02T13:35:30Z,MEMBER,True,86,70,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6014d759af1824e179b5f3379c61eefa1dbb1557,"fix(deps): Fix the audit warnings.

Update:
* tap
* js-yaml
* grunt"
2,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/330,330,chore(release): Merge train-134 into master.,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-02T13:27:51Z,MEMBER,True,112,72,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a153198e11080c21bfd6955bc0296e577c6c6ecc,Release v1.134.0
3,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/330,330,chore(release): Merge train-134 into master.,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-02T13:27:51Z,MEMBER,True,112,72,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6014d759af1824e179b5f3379c61eefa1dbb1557,"fix(deps): Fix the audit warnings.

Update:
* tap
* js-yaml
* grunt"
4,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/330,330,chore(release): Merge train-134 into master.,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-02T13:27:51Z,MEMBER,True,112,72,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4b2304b3d0f228ffd75a4d9a9c83b39b649f3a16,"Merge pull request #331 from mozilla/fix-audit-warnings r=@philbooth

fix(deps): Fix the audit warnings."
5,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/330,330,chore(release): Merge train-134 into master.,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-02T13:27:51Z,MEMBER,True,112,72,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ea7d713de8f51592aba71926979153138c236118,Release v1.134.1
6,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/329,329,chore(readme): added forwarding link,,dannycoates,87619,2019-04-01T23:26:34Z,MEMBER,False,3,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b50f15630c7d9849778ef2701c048574c5d0ab3c,chore(readme): added forwarding link
7,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/328,328,Add Mozilla Code of Conduct,"Fixes #327


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T04:56:13Z,NONE,False,15,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,20f4f5ee8c8eeac27a3e12fe6ae471a7e2e87b78,"Add Mozilla Code of Conduct file

Fixes #327.

_(Message COC002)_"
8,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/326,326,feat(docker): Use node 10 to build the docker image,,shane-tomlinson,848085,2019-03-20T13:28:01Z,MEMBER,True,3,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2b124c2302c479dec0ca60fddfad7ceb0bea552e,feat(docker): Use node 10 to build the docker image
9,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/325,325, feat(dataflow): Log if DataFlow declares a block that FxA does not have. ,,shane-tomlinson,848085,2019-03-20T12:55:34Z,MEMBER,False,121,11,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9e05463bbaa9c90b0dc136d0d4144f526b21d712,feat(dataflow): Log if DataFlow declares a block that FxA does not have.
10,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/324,324,"refactor(server): Extract and simplify record retreival/storage, user defined rules.","server.js has a whole bunch of mixed concerns, part of which was record retrieval
and loading/checking user defined rules.

This PR extracts record handling logic as well as user defined rules logic
into their own modules.

Loading/saving records can now be done through a common interface. fetchRecords no longer
holds the assumption that an ip address will be passed in. setRecord no longer requires
passing in a key as the key is stored on the record, and setRecords now only accepts records
instead of it's confusing signature.  It's now possible to define non-enumerable
properties on a record that are not saved when serialized.

I started to use async/await to simplify logic where it made sense as well as
started down the path to using native promises in places.

Note, no remote tests are modified, so functionality should be the same.

This is groundwork to simplify the DataFlow integration where a simple API is
needed to fetch records of varying types.

@mozilla/fxa-devs - r?

blocks #325
",shane-tomlinson,848085,2019-03-20T12:42:59Z,MEMBER,True,490,343,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6f73c3c8b81df183cc59919feab0ddb2a6875aa0,"refactor(server): Extract and simplify record retreival/storage, user defined rules.

server.js has a whole bunch of mixed concerns, part of which was record retreival
and loading/checking user defined rules.

This PR extracts record handling logic as well as user defined rules logic
into their own modules.

Loading/saving records can now be done through a common interface. fetchRecords no longer
holds the assumption that an ip address will be passed in. setRecord no longer requires
passing in a key as the key is stored on the record, and setRecords now only accepts records
instead of it's confusing signature.  It's now possible to define non-enumerable
properties on a record that are not saved when serialized.

I started to use async/await to simplify logic where it made sense as well as
started down the path to using native promises in places.

Note, no remote tests are modified, so functionality should be the same.

This is groundwork to simplify the DataFlow integration where a simple API is
needed to fetch records of varying types."
11,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/323,323,chore(release): Release v1.132.0,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-03-05T13:23:40Z,MEMBER,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,48dbee59ea68de22957aec6e7a5cbf6aab6284e4,Release v1.132.0
12,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/321,321,Merge train-130 into master,@mozilla/fxa-devs r?,philbooth,64367,2019-02-06T15:42:55Z,CONTRIBUTOR,True,47,31,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,28ad6d56b322da0375afba87f33f0ee1cea99736,chore(package): update shrinkwrap
13,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/321,321,Merge train-130 into master,@mozilla/fxa-devs r?,philbooth,64367,2019-02-06T15:42:55Z,CONTRIBUTOR,True,47,31,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f7cfac3630f5d91afe75fd74331127e9d3b44f55,Release v1.130.0
14,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/320,320,fix(logs): preserve homogeneity of more log properties,"Fixes #319, using the same approach as #315.

@mozilla/fxa-devs r?

(I'll tag a ~~point~~ train-130 release if this is merged)",philbooth,64367,2019-02-06T14:20:41Z,CONTRIBUTOR,True,40,6,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bb91ab59b4d88108aa784ca1c1d8ffc204e042cc,fix(logs): preserve homogeneity of more log properties
15,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/318,318,chore(release): Merge train-130 into master,,shane-tomlinson,848085,2019-02-05T13:53:33Z,MEMBER,False,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8aecd232dcc5cfc69cba323c5df82552e9a2761e,Release v1.130.0
16,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/317,317,feat(fraud-detection): Listen for DataFlow fraud detection events,"Hook up to GCP PubSub to listen for fraud detection events
from the DataFlow fraud detection pipeline.

fixes #311",shane-tomlinson,848085,2019-01-31T14:14:39Z,MEMBER,True,2633,2578,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ad16e74d0a3c3bf02aa41fbc43114b6a29a6cfbd,"feat(fraud-detection): Listen for DataFlow fraud detection events

Hook up to GCP PubSub to listen for fraud detection events
from the DataFlow fraud detection pipeline.

fixes #311"
17,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/316,316,Merge train-129 into master,@mozilla/fxa-devs r?,philbooth,64367,2019-01-25T14:36:14Z,CONTRIBUTOR,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9257d4d8deaa5e3a25817ae32af8fa0f37a3b203,Release v1.129.0
18,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/315,315,fix(logs): preserve homogeneity of log properties,"Fixes #314.

Stackdriver doesn't like it when properties in logged objects change their types. This change just ensures that our `limits.validate.changed` log line doesn't overload `current` and `future` properties for all the different limit types.

@mozilla/fxa-devs r?

/cc @jbuck",philbooth,64367,2019-01-24T15:58:43Z,CONTRIBUTOR,True,324,167,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,469ca49eab6789aad70595483169ae52c498a464,fix(logs): preserve homogeneity of log properties
19,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/285,285,feat(test): Test on node 10,,shane-tomlinson,848085,2018-11-05T16:11:54Z,MEMBER,False,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,903aa4da96847b38a6967cfe540e47b6d5d221a4,feat(test): Test on node 10
20,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/284,284,chore(release): Merge train-124 into master,,shane-tomlinson,848085,2018-10-30T15:49:45Z,MEMBER,True,16,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0df9787aae281cf5dd602e1385fc2be1a3f338a9,Release v1.124.0
21,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/283,283,"feat(deps): Add tls-shrink, remove ""^"" prefix on audit-filter version","I noticed that tls-shrink was not included in this repo like our others, so added it while I was removing the ""^"" prefix on the audit-filter version.

follow on from #280

@mozilla/fxa-devs - r?",shane-tomlinson,848085,2018-10-30T10:25:54Z,MEMBER,True,160,286,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fd6912550746b8e2f333113179fef7c0fb5e27e5,"feat(deps): Add tls-shrink, remove ""^"" prefix on audit-filter version

follow on from #280"
22,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/282,282,chore(release): Merge train-123 into master,,shane-tomlinson,848085,2018-10-16T11:59:03Z,MEMBER,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,79e0bc9cb76443da7cfb80e6663d366f4549a11f,Release v1.123.0
23,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/281,281,chore(release): Merge train-122 into master,,shane-tomlinson,848085,2018-10-02T19:51:18Z,MEMBER,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,460f46a41a4bd3ccb96529f2160dac5855206e78,Release v1.122.0
24,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/280,280,fix(deps): add filtered npm audit support,"refs: #270, #271

https://github.com/mozilla/fxa/issues/303
https://bugzilla.mozilla.org/show_bug.cgi?id=1478025

edit: this could be a grunt task too though it's been awhile since I've written grunt tasks. ",g-k,226605,2018-09-26T21:02:12Z,CONTRIBUTOR,True,22,1,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fbc7d3b8b896b339779dcdaf5ad09d88a48b065e,"fix(deps): add filtered npm audit support

refs: #270, #271

https://github.com/mozilla/fxa/issues/303
https://bugzilla.mozilla.org/show_bug.cgi?id=1478025"
25,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/279,279,chore(release): Merge train-121 into master,,shane-tomlinson,848085,2018-09-18T13:33:02Z,MEMBER,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cad8df4f0a664ca2bf5efe6fb26a891719f82669,Release v1.121.0
26,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/278,278,Release v1.120.1,,rfk,34695,2018-09-07T01:50:35Z,MEMBER,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa4258c181c0c64b429599c1e7f65e5bcac1bcd2,Release v1.120.1
27,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/277,277,feat(code): add custom rate limits for token code,"Connects to https://github.com/mozilla/fxa-content-server/issues/5990

This PR adds the custom rate limit rule for `verifyTokenCode`. The limit is 5 attempts every 15mins, after which you are blocked for 15mins.",vbudhram,1295288,2018-09-06T17:33:59Z,CONTRIBUTOR,True,164,139,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cd949ae1ae59a235d88729dcc7f7ff71d9809187,feat(code): add custom rate limits for token code
28,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/276,276,Release v1.120.0,Please don't squash-merge me.,rfk,34695,2018-09-06T01:29:53Z,MEMBER,True,16,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5aea8bf0de639ff8218889257752cc119f6a9328,Release v1.120.0
29,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/274,274,"fix(deps): Remove nsp support, add npm audit support in logging only mode.","The second commit updates all deps (except restify, which is updated in #264)

fixes #270
fixes #271 ",shane-tomlinson,848085,2018-08-24T11:47:47Z,MEMBER,True,4054,3412,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,90bad7f2cd9160ae422a934b9697264ae6e9809c,"fix(deps): Remove nsp support, add npm audit support in logging only mode.

fixes #270
fixes #271"
30,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/272,272,Release v1.119.0,"No changes except for a version number, but hey.

@mozilla/fxa-devs - r?",shane-tomlinson,848085,2018-08-22T12:42:51Z,MEMBER,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,020f030bf334fe124c7310909820b283e91e90cf,Release v1.119.0
31,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/269,269,chore(release): Merge Release v1.118.1 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-08-21T13:54:28Z,MEMBER,True,13,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a46e71387310b5c19fe2f512b6522bc6523ff47c,Release v1.118.1
32,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/267,267,fix(restify): set keepAliveTimeout correctly on api.server object,"(Same as fxa-auth-db-mysql):

Hey @vladikoff. I biffed setting this on my first try. This is the correct object location, and I've verified by watching tcpdump/netstat in stage with this fix that connections are held open until idle for 2 minutes.",jrgm,758162,2018-08-10T23:14:45Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e83fa0c12fcd7d6c9048fa0ff22e8321d98931b7,fix(restify): set keepAliveTimeout correctly on api.server object
33,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/266,266,"fix(restify): set server.keepAliveTimeout to 120s, similar to in node6","I was looking at `tcpdump` for port 7000 on these customs<->auth sockets in stage, and correlating that with exceptions thrown on socket hang up.

The customs-server is regularly shutting down these sockets. The auth-server pool handling is doing a poor job at detecting/acting-on these close events, and regularly tries to push on a closed socket.

However, the reason this is cropping up more recently than in the past is a behaviour change in node8 http modules. See comment. (Also, a more serious problem now that we fail close on customs failures).

Should put this on master now, and look at a point release for v1.118.x customs.

r? - @mozilla/fxa-devs 
",jrgm,758162,2018-08-09T00:03:56Z,CONTRIBUTOR,True,8,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d180c17b11c0dde7ba5996a97df70b0ff04dfe86,"fix(restify): set server.keepAliveTimeout to 120s, similar to in node6"
34,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/265,265,chore(release): Merge train-118 into master,,shane-tomlinson,848085,2018-08-08T21:15:54Z,MEMBER,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b1daec7d436e416ca8e1f4e9029407104a39d34,Release v1.118.0
35,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/264,264,feat(deps): Update to the newest restify.,"Fixes https://github.com/mozilla/fxa-customs-server/issues/248

Update to restify@7.2.1, restify-safe-json-formatter@0.3.0
",shane-tomlinson,848085,2018-08-08T17:22:33Z,MEMBER,True,340,218,31,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,79558b8d5c17867ef898c655e049d25f20a4c1dd,"feat(deps): Update to the newest restify.

Update to restify@7.2.1, restify-safe-json-formatter@0.3.0"
36,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/263,263,fix(deps): update ip-reputation-js-client to 4.1.0,"Makes timeout param include DNS resolution and `connect()` not just time since last byte after a connection is established.

https://github.com/mozilla-services/ip-reputation-js-client/pull/24",g-k,226605,2018-07-31T19:42:58Z,CONTRIBUTOR,True,152,35,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e9e471c2b270013b146ced3e71df1fe2425d1a48,fix(deps): update ip-reputation-js-client to 4.1.0
37,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/262,262,chore(release): Merge train-117 into master,,shane-tomlinson,848085,2018-07-24T15:22:11Z,MEMBER,True,13,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,69a25602df1bd65300d9a2b99d3d08b200906d92,Release v1.117.0
38,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/261,261,Release v1.116.0,"@mozilla/fxa-devs - r?

I forgot to reverse merge this last time.",shane-tomlinson,848085,2018-07-24T14:56:49Z,MEMBER,True,16,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d617b0b63261b24159250a18354ea10da3267043,Release v1.116.0
39,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,19e59e2afa2da85fc264a3d275f1743dbeabfc7c,feat(ci): update to circle 2
40,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,65ab5110aa786f6af8e7b64e9d4a2c9adbffff5f,Add memcached
41,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bd813fa1468dfc19115d1196fcfaf46514e2c6e1,Fix typo
42,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7dc54da8d62a389b29b228d20f3b36a252a6c3de,Fixes
43,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d96be40ca89562a3eccbcb2b250fabc6ee73f4b0,Fixes
44,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e3bc302c8c48717d13e8c99cc2163de5ebc8db87,Fixes
45,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/260,260,feat(ci): update to circle 2,,vladikoff,128755,2018-07-17T18:22:22Z,CONTRIBUTOR,True,89,51,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ea22930d6f637a8ad227489f3e649aebc74e887a,Fixes
46,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/259,259,feat(code): add `recoveryKeyExists` to account status actions,"Fixes https://github.com/mozilla/fxa-auth-server/pull/2518#discussion_r202904055

Since we are adding to an existing action, no additional test coverage was needed.

@mozilla/fxa-devs r?",vbudhram,1295288,2018-07-17T18:12:58Z,CONTRIBUTOR,True,4,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d378e648f2615ffd8866edff93541502554bae7a,feat(code): add `recoveryKeyExists` to account status actions
47,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/258,258,fix(circle): docker run --rm -it fxa-customs-server:build npm ls --production fxa#302,"ref: mozilla/fxa#302

r? - @mozilla/fxa-devs ",jrgm,758162,2018-07-03T17:32:38Z,CONTRIBUTOR,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ace16f4d07b5034f3079cda44a4f40d2eaf8b499,fix(circle): docker run --rm -it fxa-customs-server:build npm ls --production fxa#302
48,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/257,257,Release v1.115.0,,rfk,34695,2018-06-27T05:48:13Z,MEMBER,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6ed167daa69bc9ab6e8bd178db10c4086b75b909,Release v1.115.0
49,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/256,256,Merge v1.114.3 to master,,rfk,34695,2018-06-22T03:40:52Z,MEMBER,True,1073,1060,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d419a53824074120eb1169b9cc46f8d38b980d31,feat(actions): Add 'verifyRecoveryCode' as a code-checking action.
50,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/256,256,Merge v1.114.3 to master,,rfk,34695,2018-06-22T03:40:52Z,MEMBER,True,1073,1060,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5fb8acb5831f94a977c764a2d00de1b129457f40,Release v1.114.3
51,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/255,255,fix(docker): base image node:8-alpine and upgrade to npm6,r? - @vladikoff ,jrgm,758162,2018-06-13T20:48:40Z,CONTRIBUTOR,True,3,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,60a90132a846330e60669a8d712789cfbbde7cb7,fix(docker): base image node:8-alpine and upgrade to npm6
52,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,35908016889e9eb622abeb4e24c98e252e48861a,fix(tests): fix test-local.sh bug introduced in d177360
53,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,057a039bf31605603e90879568b975a087ef4b84,Release v1.114.0
54,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b706b2016ea41dcb96f18f08bf6f986f8f9deeb,"Merge pull request #252 from ameihm0912/testlocalfix r=@shane-tomlinson

fix(tests): fix test-local.sh bug introduced in d177360"
55,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa594fdfe56dd38d2f8f7566593767642c2521e9,Release v1.114.1
56,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,60a90132a846330e60669a8d712789cfbbde7cb7,fix(docker): base image node:8-alpine and upgrade to npm6
57,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,781e3486b4800ecf2642257ef2b49fbcc1efd99c,"Merge pull request #255 from mozilla/fix-generic-node8-and-update-npm6 r=@shane-tomlinson

fix(docker): base image node:8-alpine and upgrade to npm6"
58,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/254,254,merge train-114 into master,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T17:30:38Z,MEMBER,True,38,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,96ff4ad7df973bb573d9fd486a12928d41e0cddd,Release v1.114.2
59,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/253,253,test(reputation): adds compose based integration test with iprepd,"Add framework for integration testing between fxa-customs-server and
iprepd (newer version of Tigerblood). The existing set of tests included a stub
reputation server; this conducts similar testing but uses the actual
reputation service backend.

Note: this doesn't actually hook it into the CI yet but can be executed manually

```
docker build -f Dockerfile-build fxa-customs-server:build
cd test/integration/reputation
docker-compose build
docker-compose run customs
docker-compose down
```",ameihm0912,9889986,2018-06-12T20:49:29Z,NONE,True,260,1,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a9c1cec4b001d878657994230b38835645105a6e,"test(reputation): adds compose based integration test with iprepd

Add framework for integration testing between fxa-customs-server and
iprepd (newer version of Tigerblood). The existing tests included a stub
reputation server; this conducts similar testing but uses the actual
reputation service backend."
60,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/252,252,fix(tests): fix test-local.sh bug introduced in d177360,See also #250 ,ameihm0912,9889986,2018-06-12T20:33:24Z,NONE,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,35908016889e9eb622abeb4e24c98e252e48861a,fix(tests): fix test-local.sh bug introduced in d177360
61,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/251,251,Updates to reputation service integration,"- Update ip-reputation-js-client to 4.0.2, which contains the addition of request timing info (https://github.com/mozilla-services/ip-reputation-js-client/commit/e0d3d58e53a9c01cd46c669809f7daa0fb3a0b03)
- Include request timing info in reputation service logging
- Add tests using ip-reputation-js-client to confirm addition of timing data
- Update stub reputation service to remove a deprecated endpoint",ameihm0912,9889986,2018-06-11T19:41:21Z,NONE,True,65,25,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4465e0ab8c12a5ea6ed643faa1cb19b5b0ebf2e3,fix(deps): update ip-reputation-js-client to 4.0.2
62,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/251,251,Updates to reputation service integration,"- Update ip-reputation-js-client to 4.0.2, which contains the addition of request timing info (https://github.com/mozilla-services/ip-reputation-js-client/commit/e0d3d58e53a9c01cd46c669809f7daa0fb3a0b03)
- Include request timing info in reputation service logging
- Add tests using ip-reputation-js-client to confirm addition of timing data
- Update stub reputation service to remove a deprecated endpoint",ameihm0912,9889986,2018-06-11T19:41:21Z,NONE,True,65,25,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,16db51b535a7b1d2244037dbde142f951874b1c3,"feat(reputation): request time logging, update tests

- Modify reputation service integration to log reputation service query
  time
- Include a test to verify ip-reputation-js-client return values contain
  the desired timing value
- The newer version of the reputation service deprecated the POST /
  endpoint for reputation updates. Modify the stub reputation service
  and tests to use the update endpoint (which should be used for both
  new reputation creation and reputation updates now)."
63,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/250,250,fix(tests): remove bash builtin from test-local.sh,"test-local.sh specifies /bin/sh as an interpreter, but contains the [[
bash builtin which fails on systems where /bin/sh is not bash or is
running in a compatibility mode.

Updates test-local.sh to use a standard test command.",ameihm0912,9889986,2018-06-11T19:08:12Z,NONE,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54ca81dfaadea722da24e3692f93ede9adc69d61,"fix(tests): remove bash builtin from test-local.sh

test-local.sh specifies /bin/sh as an interpreter, but contains the [[
bash builtin which fails on systems where /bin/sh is not bash or is
running in a compatibility mode.

Updates test-local.sh to use a standard test command."
64,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/249,249,fix(deps): update ip rep client to v4,"Update ip-reputation-js-client to v4 which includes the changes:

* remove the add method (I don't see customs-server using this anywhere)
* downcased field names (fixed Reputation to reputation and Violation to violation; don't see any other occurrences)
* switch to the memcached backed [iprepd](https://github.com/mozilla-services/iprepd) backend
* add eslint changes and fixes

cc @ameihm0912 who wants to make sure the client tracks failed requests and latency (in this PR or a new separate one)",g-k,226605,2018-06-07T20:35:17Z,CONTRIBUTOR,True,1064,1064,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,311c7eb2fe553a52adf482d3db768410423cb9cb,fix(deps): update ip rep client to v4
65,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/247,247,fix(deps): Update ip rep client to v3,Fixes https://github.com/mozilla/fxa-customs-server/issues/243,vladikoff,128755,2018-05-31T13:48:40Z,CONTRIBUTOR,True,1319,8196,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2cbae3916ecd5314cea4cd992742b52328802c1d,fix(deps): Update ip rep client to v3
66,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/246,246,chore(ci): Remove coveralls from travis config,Per https://bugzilla.mozilla.org/show_bug.cgi?id=1455339,rfk,34695,2018-05-23T00:18:34Z,MEMBER,True,1,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,68d489cb218fc658e927e5d5e242c5fc3702b4ad,chore(ci): Remove coveralls from travis config
67,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/242,242,chore(deps): Update ip-reputation-js-client dependency.,"As discussed in backend meeting earlier today, this updates ip-reputation-js-client to latest release, in preparation for train-112 cut.

The shrinkwrap diff seems to have a fair bit of churn, but all I did was:

* `rm -rf node_modules npm-shrinkwrap.json`
* Update `package.json`
* `npm install`
* `npm run shrinkwrap`

So maybe this is expected?

/cc @shane-tomlinson for train-112 cut.",rfk,34695,2018-05-16T02:16:57Z,MEMBER,False,626,7763,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5e56c83b8a96fbe439aff4ffe56d3d1a5881d44d,chore(deps): Update ip-reputation-js-client dependency.
68,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/241,241,fix(npm): update shrinkwrap,cc @jrgm ,vladikoff,128755,2018-05-12T00:29:17Z,CONTRIBUTOR,True,171,38,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6d800c108a2eb491b02369a623db635911be24bc,fix(npm): update shrinkwrap
69,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/240,240,fix(nsp): Update newrelic version,r? - @vladikoff ,jrgm,758162,2018-05-08T00:19:16Z,CONTRIBUTOR,True,12841,6400,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f67f11425ec853d1dcd1e5022d2c29f32c92f585,fix(nsp): Update newrelic version
70,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/240,240,fix(nsp): Update newrelic version,r? - @vladikoff ,jrgm,758162,2018-05-08T00:19:16Z,CONTRIBUTOR,True,12841,6400,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2e1ea16d3b8d758da356edd09dd9192ac7b5be74,chore(pkg): fix pkg.json new line
71,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/239,239,feat(node): update to node 8,,vladikoff,128755,2018-04-24T01:00:37Z,CONTRIBUTOR,True,2,3,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fec7ab57e6b2314d6074dff9a1396b765961b382,feat(node): update to node 8
72,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/237,237,chore(docs): Add documentation on tagging private releases.,"I do a bunch of private-repo wrangling when tagging customs-server that's probably not obvious to others, so I thought I better write it down.  @mozilla/fxa-devs r?",rfk,34695,2018-04-18T02:07:32Z,MEMBER,True,42,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54b443adf459dd33c12e7ef586804749b6d681dc,chore(docs): Add documentation on tagging private releases.
73,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/235,235,fix(sms): Reduce sms rate-limit interval to half an hour.,As discussed in https://bugzilla.mozilla.org/show_bug.cgi?id=1448854#c5; @philbooth r?,rfk,34695,2018-04-16T01:51:54Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fdba681576a8abe41d3eb41ab2d0f6b3159c7537,fix(sms): Reduce sms rate-limit interval to half an hour.
74,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/234,234,fix(tests): fix dependent tests,"I was setting up a new computer yesterday and found that these tests depended on a previous tests state which caused some test failures. I suspect that the older computer was slow enough that the limits were reset before the next test. This fixes the issue my using unique ips, emails and actions when needed.

Unfortunately, there are probably more tests that have shared states but it would be more work to find and fix them than to do a complete refactor such as https://github.com/mozilla/fxa-customs-server/pull/174.",vbudhram,1295288,2018-04-11T14:37:39Z,CONTRIBUTOR,True,103,60,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,93d57a47297b023697e046eedd97fc618d5de05b,fix(tests): fix dependent tests
75,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/234,234,fix(tests): fix dependent tests,"I was setting up a new computer yesterday and found that these tests depended on a previous tests state which caused some test failures. I suspect that the older computer was slow enough that the limits were reset before the next test. This fixes the issue my using unique ips, emails and actions when needed.

Unfortunately, there are probably more tests that have shared states but it would be more work to find and fix them than to do a complete refactor such as https://github.com/mozilla/fxa-customs-server/pull/174.",vbudhram,1295288,2018-04-11T14:37:39Z,CONTRIBUTOR,True,103,60,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0c1731256c2aaf42c9a3ec0b41521e4676616348,fix(tests): pr fixes
76,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/233,233,feat(totp): add totp rate limits,"Fixes #226 

This PR adds rate limiting to actions that involve checking a TOTP code (only `verifyTotpCode` atm ). Unfortunately, while adding this rate limit, I could not re-use the existing rate limiting structure for ip and email based actions since those limits are defined `config.limits.rateLimitIntervalSeconds`. The TOTP rate limit requirement is 2 checks every 30 seconds (rate the codes are generated).

To support this feature, I decided to build off https://github.com/mozilla/fxa-customs-server/pull/174, which had a lofty goal of refactoring all the things. This PR is a smaller subset that adds support for creating a custom rule for actions and checking limits.

* To maintain backwards comp, a new route is used `/checkWithRule`
* Added a generic record class that stores custom limits and actions for rule
* Records are stored in memcache with key `ip + email + ruleName`

While this doesn't negate the fact we should refactor this service, it does provide the minimum parts needed to support rate limiting TOTP.

@rfk What are your thoughts on this approach?",vbudhram,1295288,2018-04-02T21:11:25Z,CONTRIBUTOR,True,521,117,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4fce5ca0f16d8715466dc6aed7dfc36dff6b2e85,feat(totp): add totp rate limits
77,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/232,232,fix(node): Use Node.js v6.14.0,,jbuck,578466,2018-03-29T14:57:34Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,07deb6cfa4d2a5a8f74729bcd2785fcf52063964,fix(node): Use Node.js v6.14.0
78,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/231,231,chore(deps): update ip-reputation-js-client,"See discussion starting at https://bugzilla.mozilla.org/show_bug.cgi?id=1447452#c18.

@mozilla/fxa-devs r?",philbooth,64367,2018-03-22T06:58:20Z,CONTRIBUTOR,True,585,234,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,89ff5e97f0152c8494f9cb8bb5d8b77b90d88083,chore(deps): update ip-reputation-js-client
79,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/230,230,fix(test): #228 Start memcached as part of 'npm test',"Have added the lines to start memcached, not checking if it is running already as it does nothing if it is already running. spawnSync makes it waiting forever so i am using spawn only.
",deeptibaghel,448609,2018-03-14T09:16:03Z,CONTRIBUTOR,True,19,15,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,83265143a3e6747d5ac8879e0d4e8c51a1f2c332,fix(test): #228 Start memcached as part of 'npm test'
80,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/229,229,"chore(deps): update deps, fix nsp",@mozilla/fxa-devs r?,vladikoff,128755,2018-02-16T22:21:34Z,CONTRIBUTOR,True,479,560,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e5bf70b00f42ca646f69b03fa73c27f53ffe1a9c,"chore(deps): update deps, fix nsp"
81,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/227,227,Check ip only doc and log fix,"Changes:

* Add API docs for `POST /checkIpOnly`
* Fix an apparent typo in the op for the missing params error log

Checked that:

* the example from the docs `curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/checkIpOnly"" -d '{""ip"":""192.0.2.1"",""action"":""accountCreate""}'` returns the expected result
* ran tests locally, a bunch fail but I don't think it's related to these changes",g-k,226605,2018-02-06T15:59:05Z,CONTRIBUTOR,True,43,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,13e6af46598d6cce3f0f1f8d49bf9b900dc92db0,fix(log): fix log op s/checkAuthenticated/checkIpOnly/
82,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/227,227,Check ip only doc and log fix,"Changes:

* Add API docs for `POST /checkIpOnly`
* Fix an apparent typo in the op for the missing params error log

Checked that:

* the example from the docs `curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/checkIpOnly"" -d '{""ip"":""192.0.2.1"",""action"":""accountCreate""}'` returns the expected result
* ran tests locally, a bunch fail but I don't think it's related to these changes",g-k,226605,2018-02-06T15:59:05Z,CONTRIBUTOR,True,43,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ed22ea90a475aeaaf75f32a05aa8b6abad507d09,docs(api): add /checkIpOnly
83,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/225,225,feat(token): Add rate limit for tokenCodes,"Fixes #222 

Opted to do a dynamic test to avoid duplication. Also took the chance to update to ES6 [syntax](https://github.com/mozilla/fxa-customs-server/pull/225/commits/02acdb2daef2d8f63998e251f4796976e9c773ee).",vbudhram,1295288,2018-01-05T15:26:27Z,CONTRIBUTOR,True,68,84,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,288b86d020b9f06f844fc4e120fd38192a188a11,feat(token): Add rate limit for tokenCodes
84,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/225,225,feat(token): Add rate limit for tokenCodes,"Fixes #222 

Opted to do a dynamic test to avoid duplication. Also took the chance to update to ES6 [syntax](https://github.com/mozilla/fxa-customs-server/pull/225/commits/02acdb2daef2d8f63998e251f4796976e9c773ee).",vbudhram,1295288,2018-01-05T15:26:27Z,CONTRIBUTOR,True,68,84,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,682822dd24c8c575a732b06c443407f154b9fb46,feat(token): Update code formatting
85,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/225,225,feat(token): Add rate limit for tokenCodes,"Fixes #222 

Opted to do a dynamic test to avoid duplication. Also took the chance to update to ES6 [syntax](https://github.com/mozilla/fxa-customs-server/pull/225/commits/02acdb2daef2d8f63998e251f4796976e9c773ee).",vbudhram,1295288,2018-01-05T15:26:27Z,CONTRIBUTOR,True,68,84,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a69e65eafd0ad7198ceec55417facfdf247cabe2,feat(token): PR fixes
86,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/224,224,feat(logs): add Sentry error logs,Fixes https://github.com/mozilla/fxa-customs-server/issues/221,vladikoff,128755,2018-01-04T23:07:41Z,CONTRIBUTOR,True,126,69,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c59e9203195ce23a964497f7bf7f75c6892f3c5f,feat(logs): add Sentry error logs
87,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/223,223,fix(node): use node 6.12.3,use node 6.12.3. r? - @vladikoff ,jrgm,758162,2018-01-04T00:56:18Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0c8c4f3da205f9c56bc71a9a72691da7f87b0355,fix(node): use node 6.12.3
88,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/220,220,fix(blocklist): Fix use of setImmediate to work with node 8,"Trial balloon to see if this fixes #212; it makes the demo script from that issue work OK, so I'm hopeful...",rfk,34695,2017-11-27T04:23:33Z,MEMBER,True,3,3,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,134a4ef9770a2af45446bd4f768ad6f42f4b05a5,fix(blocklist): Fix use of setImmediate to work with node 8
89,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/220,220,fix(blocklist): Fix use of setImmediate to work with node 8,"Trial balloon to see if this fixes #212; it makes the demo script from that issue work OK, so I'm hopeful...",rfk,34695,2017-11-27T04:23:33Z,MEMBER,True,3,3,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c3efddb5c31ddc1ae9cb4de7d5667670bf588a9f,fix(deps): Don't fail travis for outdated dependencies.
90,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/218,218,feat(sms): Add an allow list of non-rate limited phone numbers for testing.,"fixes #217

@rfk - r?",shane-tomlinson,848085,2017-11-15T12:13:00Z,MEMBER,True,173,7,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,78226031d44e79064ac50a79c696553ff8540155,"feat(sms): Add an allow list of non-rate limited phone numbers for testing.

fixes #217"
91,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/218,218,feat(sms): Add an allow list of non-rate limited phone numbers for testing.,"fixes #217

@rfk - r?",shane-tomlinson,848085,2017-11-15T12:13:00Z,MEMBER,True,173,7,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,17a94591d5df4a77153888b2cb71a494233d39a7,chore(sms): Store allowed phone numbers in a Set
92,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/218,218,feat(sms): Add an allow list of non-rate limited phone numbers for testing.,"fixes #217

@rfk - r?",shane-tomlinson,848085,2017-11-15T12:13:00Z,MEMBER,True,173,7,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,35c37d592795a9a11f52f6a902a090f9dff4116c,feat(sms): Added tests for `change allowedPhoneNumbers` config
93,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/218,218,feat(sms): Add an allow list of non-rate limited phone numbers for testing.,"fixes #217

@rfk - r?",shane-tomlinson,848085,2017-11-15T12:13:00Z,MEMBER,True,173,7,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,79517725a6a4c51485d7044a4de7334762b1c690,"refactor(isAllowed): Add `isAllowed` to allowedIPs.

This allows server.js to become more concise by
removing `isIPAllowed`, `isPhoneNumberAllowed` and `isEmailAllowed`"
94,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/218,218,feat(sms): Add an allow list of non-rate limited phone numbers for testing.,"fixes #217

@rfk - r?",shane-tomlinson,848085,2017-11-15T12:13:00Z,MEMBER,True,173,7,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6cc0cebec11e7d510d55a872a542c325b4a80f6a,fix(sms): Load `allowedPhoneNumbers` from memcached!
95,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/216,216,"fix(newrelic): newrelic native requires python, gyp, c++; update node@6.12.0",r? - @vladikoff ,jrgm,758162,2017-11-13T21:13:52Z,CONTRIBUTOR,True,3,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,274ff0bccb303d51170cb7810a4e7a5420996d9b,"fix(newrelic): newrelic native requires python, gyp, c++; update node@6.12.0"
96,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/215,215,Dockerpush fix newrelic must be first,"This PR supersedes #284 which just added a futureproofing comment, to update the newrelic module to latest 2.3.2, with an npm run shrink using npm@2.15.1

It would be helpful to merge this down to fxa-customs-server-private so I can run this in stage!

r? - @vladikoff ",jrgm,758162,2017-11-12T07:17:00Z,CONTRIBUTOR,True,92,89,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a08ffdd880017181778eeb9ba500b978bdb2cb0b,fix(newrelic): be clear that newrelic must be required first
97,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/215,215,Dockerpush fix newrelic must be first,"This PR supersedes #284 which just added a futureproofing comment, to update the newrelic module to latest 2.3.2, with an npm run shrink using npm@2.15.1

It would be helpful to merge this down to fxa-customs-server-private so I can run this in stage!

r? - @vladikoff ",jrgm,758162,2017-11-12T07:17:00Z,CONTRIBUTOR,True,92,89,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7e040d037bc2b01d5a7b40b33bc02a5d4558987c,fix(newrelic): update to newrelic@2.3.2 and `npm run shrink`
98,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/214,214,fix(newrelic): be clear that newrelic must be required first,"Just adding a comment to try to future proof against including other modules before newrelic (which would mean they would not be instrumented)

r? - @vladikoff ",jrgm,758162,2017-11-12T04:47:25Z,CONTRIBUTOR,False,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a08ffdd880017181778eeb9ba500b978bdb2cb0b,fix(newrelic): be clear that newrelic must be required first
99,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/213,213,chore(build): add changelog tag,"Fixes https://github.com/mozilla/fxa-customs-server/issues/177

@vbudhram r?",vladikoff,128755,2017-11-03T17:45:37Z,CONTRIBUTOR,True,2120,898,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,25646f9105ef263949205c0b4993f293ec91f515,chore(build): add changelog tag
100,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/213,213,chore(build): add changelog tag,"Fixes https://github.com/mozilla/fxa-customs-server/issues/177

@vbudhram r?",vladikoff,128755,2017-11-03T17:45:37Z,CONTRIBUTOR,True,2120,898,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4afb28f9e3a9b08981998b65bcf95c1c061baf62,fix(changelog): add older versions
101,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/211,211,fix(docs): document the dependency on memcached,@mozilla/fxa-devs r?,philbooth,64367,2017-07-18T10:54:39Z,CONTRIBUTOR,True,8,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fde9b6345f163d8b1676d5e4c625f88ca0c7399d,fix(docs): document the dependency on memcached
102,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/210,210,fix(nodejs): upgrade to 6.11.1 for security fixes,,seanmonstar,51479,2017-07-12T18:33:48Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ef20449cc81fcd9a8a740a54cac91d70635b5d5c,fix(nodejs): upgrade to 6.11.1 for security fixes
103,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/209,209,fix(server): remove mozdef integration,"Fixes #204 

@jbuck r?",vladikoff,128755,2017-07-04T20:23:33Z,CONTRIBUTOR,True,0,146,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0494c5a5d3dd54d29a5e0640d23d4a3977ed0bdb,"fix(server): remove mozdef integration

Fixes #204"
104,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/208,208,feat(node): upgrade to Node 6,,seanmonstar,51479,2017-06-28T00:20:51Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9373f8a4e0074c914d6ec80193868d23583a37c6,feat(node): upgrade to Node 6
105,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/207,207,(iprecord): ignore prior rate-limiting for account access actions,"Fixes #205. Supercedes #206.

When running the content server functional tests, lots of requests to `/check` originate from the same IP address. These cause the rate limit flag to be set in `IpRecord`, but the request itself is not blocked because the email address matches the test in `allowWhitelisted`.

This is all fine until requests to `/checkIpOnly` start turning up. Now, the `IpRecord` is still marked as rate-limited when it is fetched from memcached, but we have no email address to whitelist on. So those requests get blocked, even though the specific action they're checking is below its threshold.

This PR fixes the issue using @rfk's preferred fix from https://github.com/mozilla/fxa-customs-server/issues/205#issuecomment-310551201, returning zero from `IpRecord::update` if the `aa` array is not over its threshold. Effectively account access actions are counted in a separate bucket to everything else.

@mozilla/fxa-devs r?",philbooth,64367,2017-06-27T22:07:08Z,CONTRIBUTOR,True,101,7,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e1813d34473d8cd17d5613f48f187782ef6dc440,"(iprecord): ignore prior rate-limiting for account access actions

Requests to /check with allow-listed email addresses cause the IP record
to to be marked as rate-limited, even though those requests aren't
actually blocked. Any subsequent requests to /checkIpOnly will fetch the
rate-limited IP record from memcached and block the request incorrectly.
This is a problem for the content server functional tests.

The change here ignores any previous rate-limiting for account access
actions, effectively putting them into a separate rate-limiting bucket."
106,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/206,206,fix(iprecord): clear ip record rate limit after whitelisting,"Fixes #205.

Whitelisted email addresses were setting the rate limit flag on the cached ip record. This meant that `/checkIpOnly` was being rate-limited for earlier actions performed by whitelisted email addresses, because it didn't have an email address of its own to whitelist against.

This PR fixes that by clearing `IpRecord::rl` after whitelisting in `/check`.  To get there it required a little bit of jiggling about of the surrounding code. I tried to do that in the least disruptive way, because this is the customs server and I have no idea what I'm doing. :smile:

@mozilla/fxa-devs r?",philbooth,64367,2017-06-22T16:19:26Z,CONTRIBUTOR,False,99,31,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,385f63a4cebaf9ca6eb29f83ca2f7d8ccff9d8c3,fix(iprecord): clear ip record rate limit after whitelisting
107,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/203,203,feat(actions): add consumeSigninCode as an ACCOUNT_ACCESS_ACTION,"Fixes #201.

* Adds a new endpoint `/checkIpOnly` that rate-limits purely against an IP address, with no requirement for an email address or a uid.

* Adds a new class of action that I'm calling `ACCOUNT_ACCESS_ACTION`, with one eye on phase 4 of connect-another-device. I needed a new action because I have no email address to rate-limit against, so I can't use `CODE_VERIFYING_ACTION` for instance.

* Refactors some of the common code to make `email` an optional parameter. Doing this necessitated changing the order of some arguments and returned promises, but I think I covered all the calling code in my changes.

The intention is for the proposed auth server endpoint for consuming signinCodes (see mozilla/fxa-auth-server#1882) to hit `/checkIpOnly` with `{""action"":""consumeSigninCode""}` and the IP address.

This is the first time I've worked in the customs server and there's a fair bit of stuff I still don't understand, so this PR may have a little way to go. I'll add inline comments to call out the bits I'm most unsure of.

@mozilla/fxa-devs r?
",philbooth,64367,2017-05-18T08:54:33Z,CONTRIBUTOR,True,399,139,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0b048d65a937840561221566fc04f676a46e28af,feat(actions): add signinCode as a code-verifying action
108,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/203,203,feat(actions): add consumeSigninCode as an ACCOUNT_ACCESS_ACTION,"Fixes #201.

* Adds a new endpoint `/checkIpOnly` that rate-limits purely against an IP address, with no requirement for an email address or a uid.

* Adds a new class of action that I'm calling `ACCOUNT_ACCESS_ACTION`, with one eye on phase 4 of connect-another-device. I needed a new action because I have no email address to rate-limit against, so I can't use `CODE_VERIFYING_ACTION` for instance.

* Refactors some of the common code to make `email` an optional parameter. Doing this necessitated changing the order of some arguments and returned promises, but I think I covered all the calling code in my changes.

The intention is for the proposed auth server endpoint for consuming signinCodes (see mozilla/fxa-auth-server#1882) to hit `/checkIpOnly` with `{""action"":""consumeSigninCode""}` and the IP address.

This is the first time I've worked in the customs server and there's a fair bit of stuff I still don't understand, so this PR may have a little way to go. I'll add inline comments to call out the bits I'm most unsure of.

@mozilla/fxa-devs r?
",philbooth,64367,2017-05-18T08:54:33Z,CONTRIBUTOR,True,399,139,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5351490de53df1874789c06e80fc0cf18486ce2f,feat(actions): make consumeSigninCode an ACCOUNT_ACCESS_ACTION
109,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/202,202,feat(docker): add custom feature branch,@jrgm r?,vladikoff,128755,2017-05-16T20:57:23Z,CONTRIBUTOR,True,9,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6a7d6c71780d5919de27b4bdc3340b37b21ccba5,feat(docker): add custom feature branch
110,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/200,200,fix(settings): pushOnMissing no longer updates on unexpected errors,"This started as just adjusting the `pushOnMissing` code in `limits.js`, and then I noticed that this logic existed in several places. Instead of just injecting a fix into each of those locations, I've refactored all of this logic into a common `Settings` class.

The actual fix to the issue is that we will now only try to push if there was an explicit `PushOnMissing` error thrown, otherwise it's propagated back out, including a `log.error` message.

Closes #194 
",seanmonstar,51479,2017-04-20T22:17:30Z,MEMBER,True,417,335,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a72074993185d478bd2d5d968acd99e85af1a00f,"fix(settings): pushOnMissing no longer updates on unexpected errors

Closes #194"
111,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/199,199,feat(emails): Add `createEmail` to email sending endpoints,"This PR adds rate-limiting to all endpoints that send emails for the add secondary email feature. It is a one liner because we reuse the verify code and resend code endpoints in add secondary emails. The only other endpoint that sends an email is the create email operation.

Fixes #180 

@vladikoff r?",vbudhram,1295288,2017-04-20T15:22:34Z,CONTRIBUTOR,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7fc3645f0a2b63564dfb637a4a3b0fbc98bdfa47,feat(emails): Add `createEmail` to email sending endpoints
112,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/198,198,fix(sms): Add ability to rate-limit sms by email,"This PR adds ability to rate limit SMS actions by email.

Fixes #188 

@rfk @seanmonstar r?",vbudhram,1295288,2017-04-20T14:01:33Z,CONTRIBUTOR,True,112,9,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b2e2324b5c8b39709d483a2ee50dbf0f6826bf52,fix(sms): Add ability to throttle sms by email
113,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/198,198,fix(sms): Add ability to rate-limit sms by email,"This PR adds ability to rate limit SMS actions by email.

Fixes #188 

@rfk @seanmonstar r?",vbudhram,1295288,2017-04-20T14:01:33Z,CONTRIBUTOR,True,112,9,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b70d2bd8550ef5d3933ec5a5fdf36ccab395734,fix(sms): Fix typo
114,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/198,198,fix(sms): Add ability to rate-limit sms by email,"This PR adds ability to rate limit SMS actions by email.

Fixes #188 

@rfk @seanmonstar r?",vbudhram,1295288,2017-04-20T14:01:33Z,CONTRIBUTOR,True,112,9,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dfdad0d3d9c069fa294c6ca2587c88a318f2e9b5,feat(sms): Updates from @rfk
115,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/197,197,WIP refactor(check): Extract `updateBlocks` from the `/check` route.,"This is the beginning of the work to log a ""reason"" whenever a block
occurs.

Fixes #195",shane-tomlinson,848085,2017-04-19T12:51:36Z,MEMBER,False,22,14,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3d3cd843cc65b6b2f08fc81bbee64e0aec717cc4,"refactor(check): Extract `updateBlocks` from the `/check` route.

This is the beginning of the work to log a ""reason"" whenever a block
occurs."
116,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/196,196,chore(docker): Use official node image & update to Node.js v4.8.2,,jbuck,578466,2017-04-18T22:23:35Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c774b4e99aeecb9d0dc69c633f970e6648924f9b,chore(docker): Use official node image & update to Node.js v4.8.2
117,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/193,193,fix(security): escape json output,refs: bmo secure bug 1320211,g-k,226605,2017-04-06T23:14:18Z,CONTRIBUTOR,True,20,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,413c1320a75cf52f474b04768d1b327b93a34858,"fix(security): escape json output

refs: bmo secure bug 1320211"
118,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/191,191,fix(tests): Update rate limit sms by ip address,"This PR correctly rate limits when a user has sent more than 5 sms from an ip address. Previously, the the rate limiting was `rate-limit when 5 unique sms requests sent from this ip address`. Updated tests to be more reflective of this scenario.

Fixes #190

@rfk r?",vbudhram,1295288,2017-03-27T14:47:18Z,CONTRIBUTOR,True,26,26,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5f49655c76d85243b1b5b3f06d470ceab9ed44b2,fix(tests): Correctly rate limit sms by ip address
119,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/189,189,fix(tests): Update config and testing for sms,Fixes #185 and also add some supporting test cases.,vbudhram,1295288,2017-03-18T00:54:18Z,CONTRIBUTOR,True,41,10,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,03a38d0d95339f56816d48abcd5040d3a28e8e13,fix(tests): Update config and testing for sms
120,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/184,184,fix(docs): Add notes for sms,"Ref: https://github.com/mozilla/fxa/blob/ae28a78ef05241c0de8daceeadb0d42d92a41580/features/FxA-53-send-sms/README.md#customs-server-vbudhram

@shane-tomlinson r?",vbudhram,1295288,2017-03-08T15:39:48Z,CONTRIBUTOR,True,6,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,17c2dad620695435c4edc5acf4a8f0dca4cb7697,fix(docs): Add notes for sms
121,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/183,183,fix(shutdown): Fix deferred call of process.exit(code).,Fixes #182; @jrgm r?,rfk,34695,2017-02-27T00:57:23Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ef1dc420be82920d44d48a16c1df01174e5c02e,fix(shutdown): Fix deferred call of process.exit(code).
122,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/181,181,chore(package): Use ip-rep service client with keepalive enabled,"Bump IP Reputation JS client to version 2.1.1 which has keepalive enabled.

This should help fix some of the TCP RSTs and timeouts jrgm and I saw when we enabled a canary instance in prod last week.",g-k,226605,2017-02-24T22:21:42Z,CONTRIBUTOR,True,4,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,90cd09845287e6c8b846d1f95abd211b9912146d,chore(package): Use ip-rep service client with keepalive enabled
123,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/179,179,fix(reputation): add more (positive) logging to reputation service requests,"r? - @vbudhram, @g-k 

Add some more logging, so 200 vs. 400 responses can be seen in logs. 

May make more sense to review with `?w=1` due to whitespace changes.",jrgm,758162,2017-02-21T18:33:31Z,CONTRIBUTOR,True,15,6,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ccd3e1da1cb12eca4f30c557da9a8f563d3f6f72,fix(reputation): add more (positive) logging to reputation service requests
124,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/176,176,feat(docker): add Docker support,,seanmonstar,51479,2017-02-15T23:44:43Z,MEMBER,True,87,33,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,af727281d65fcb641827560c99bcf502c98e9dcd,chore(scripts): update test-local to error if tap fails
125,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/176,176,feat(docker): add Docker support,,seanmonstar,51479,2017-02-15T23:44:43Z,MEMBER,True,87,33,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2bb0cfdb0921cd2f0628ef0bd2765f1bc9f8931b,feat(docker): add Docker support
126,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/176,176,feat(docker): add Docker support,,seanmonstar,51479,2017-02-15T23:44:43Z,MEMBER,True,87,33,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,05a8dc2387358fc4c17a752ac141ad0e823bc1e4,test(ip-blocklist): use tmp dir for temporary netset file
127,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/174,174,WIP: Refactor all the things.  All of them.,"Connects to #128.  I'm opening this for visibility, but it's nowhere near ready.  Like, it's half-backed and doesn't even run.  It's going to be my scratch-pad for some Friday experiments in refactoring this service, disentangling our many rules into something that's easier to understand.",rfk,34695,2017-02-14T09:28:40Z,MEMBER,False,720,2055,28,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1e312bfd8bdbcb2618460fd09093eab88404eb48,WIP: Refactor all the things.  All of them.
128,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/173,173,fix(tests): remove old code coverage tool,Fixes #164,vladikoff,128755,2017-02-10T23:18:32Z,CONTRIBUTOR,True,133,324,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ef2718f3a9581f85709b57421dab3a16303d880,"fix(tests): remove old code coverage tool

Fixes #164"
129,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/172,172,Fix rep service config,"Refs: https://github.com/mozilla/fxa-customs-server/issues/166

Updates ip rep js client to 2.0.1 and makes the relevant test and server changes.

I didn't update the shrinkwrap.  Is that part of the release process or should it be in the PR?",g-k,226605,2017-02-10T21:14:17Z,CONTRIBUTOR,True,23,33,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,00190f224abf8af594b0f7d9a8aff0cb6973fb62,chore(packaging): Use ip-reputation-js-client 2.0.1
130,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/172,172,Fix rep service config,"Refs: https://github.com/mozilla/fxa-customs-server/issues/166

Updates ip rep js client to 2.0.1 and makes the relevant test and server changes.

I didn't update the shrinkwrap.  Is that part of the release process or should it be in the PR?",g-k,226605,2017-02-10T21:14:17Z,CONTRIBUTOR,True,23,33,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,52e70a59d35145709ee8333ba62eb523d1bc6ec4,fix(config): switch to reputation service base url param
131,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/172,172,Fix rep service config,"Refs: https://github.com/mozilla/fxa-customs-server/issues/166

Updates ip rep js client to 2.0.1 and makes the relevant test and server changes.

I didn't update the shrinkwrap.  Is that part of the release process or should it be in the PR?",g-k,226605,2017-02-10T21:14:17Z,CONTRIBUTOR,True,23,33,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1284ac33ced71ab64213c671a3e98a1949eead3c,chore(shrinkwrap): Update for ip-reputation-js-client and deps
132,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/172,172,Fix rep service config,"Refs: https://github.com/mozilla/fxa-customs-server/issues/166

Updates ip rep js client to 2.0.1 and makes the relevant test and server changes.

I didn't update the shrinkwrap.  Is that part of the release process or should it be in the PR?",g-k,226605,2017-02-10T21:14:17Z,CONTRIBUTOR,True,23,33,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4f7fa2662e566b4b8c66a3bc6d42f6386378f36f,"fix(test): fix send violations intermittant test failure in CI

test/remote/send_violations_tests.js sends violation /failedLoginAttempt results in lockout sends violation.

See:

https://travis-ci.org/mozilla/fxa-customs-server/builds/201635218
https://travis-ci.org/mozilla/fxa-customs-server/builds/201633219"
133,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/171,171,fix(config-set): Don't attempt to merge array-valued config items.,Fixes #168; @jrgm r?,rfk,34695,2017-02-09T05:41:26Z,MEMBER,True,147,118,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7e11304ad5efe747190fe3e7c23b49e7546fba04,fix(config-set): Don't attempt to merge array-valued config items.
134,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/170,170,fix(timers): Unref all the update-polling timers.,"These timers are all just for background polling for updates, they don't need to keep the event-loop alive.  Unref them.",rfk,34695,2017-02-08T19:53:43Z,MEMBER,True,6,0,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,10b314fc0e04e4c3db6f985a385da8b870c9a6b9,fix(timers): Unref all the update-polling timers.
135,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/169,169,fix(startup): Exit process on any startup error.,Fixes an issue where the custom server process didn't exit properly on startup errors.,vbudhram,1295288,2017-02-08T15:34:04Z,CONTRIBUTOR,True,3,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ae369242a2ced7b797db2c3e21a293b06a60da8b,fix(startup): Exit process on any startup error.
136,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4ac2d8e840ee7b3312bc61e9cda2ff559dae7f10,refactor(block): Use `logOnlyList`
137,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d337834ac9554b2b8ea7552ee9fe9c5ec932f067,refactor(block): Fix test case
138,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bb6ccf9679a37100c4897f55d1ed77615c4948be,refactor(block): Increase coverage
139,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d6b1ddf437e67699b196795ef711d45cf1caeea8,refactor(block): PR Fixes
140,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,45767482dc479f195cb899ff5af68b44397711af,Merge remote-tracking branch 'origin/master' into issue-165-override-blocklist-blocking
141,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/167,167,feat(blocklist): Add support to specify the block level for multiple blocklists,"I took a jab at how I thought this could be implemented. Since convict does not allow an array of objects as properties, we keep a separate list that should be log only.

Fixes #167 

@rfk Thoughts?
",vbudhram,1295288,2017-02-06T19:59:51Z,CONTRIBUTOR,True,108,98,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cf0bec5a6865583889e3f46c971601173b48957a,refactor(block): Fixed typo
142,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/162,162,refactor(tests): Add ability to debug child processes,"This PR adds support for debugging into child processes. Similar to auth-server PR, https://github.com/mozilla/fxa-auth-server/pull/1550",vbudhram,1295288,2017-02-01T20:42:23Z,CONTRIBUTOR,True,19,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,17632ea8b2345f15796f44991e70b35770299918,refactor(tests): Add ability to debug child processes
143,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c5224761dcdd011600f7e8fa373bd3db87111b09,feat(sms): Add support for rate limit sending to a specific sms number
144,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa06f29ecc18688950ed0ffe45ab372c56288199,Merge remote-tracking branch 'origin/master' into add-sms-support
145,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,606255fd5e74f2f13cf236fbf2613fcb7cb9a5dc,feat(sms): Add support for rate-limiting send X sms by ip
146,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b9d2ce4eb7aad489d6bfcbcc8c4dc7aa6c5fec39,feat(sms): PR Fixes
147,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e27438322faba426266be3886dab4f70d1f05288,feat(sms): Rename sms action to `connectDeviceSms`
148,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3ad26ccc7790fc3f0e44905cf7087785cac5dc84,feat(sms): Rename `smsNumber` to `phoneNumber` and accept value through payload
149,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/161,161,feat(sms): Add support for rate-limiting sms actions,"Fixes https://github.com/mozilla/fxa-customs-server/issues/160

This PR adds the following support to the custom's server:

- [x] Rate limit sending X amount of sms to a specific number
- [x] Rate limit an ip sending X total amount of sms

Connects with https://github.com/mozilla/fxa-features/issues/53, https://github.com/mozilla/fxa-auth-server/issues/1628",vbudhram,1295288,2017-01-31T18:59:47Z,CONTRIBUTOR,True,449,30,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d1b723bd88d34441dcd259e70e2c8cb53351b2c4,feat(sms): Rename xs to sms for consistency
150,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/159,159,fix(retryAfter): Round blocking periods up instead of down.,"Fixes #158; @vbudhram r?; /cc @g-k 

Previously, the code would round your ban period down to the
nearest integral number of seconds.  Since the ban duration in
tests is only 1 second, this would occasionally cause it to be
rounded down to zero, leading to flaky test failures.

We now round the ban priod *up* to the nearest integral number
of seconds, which shouldn't have any significant impact on users
in production, but makes the tests much simpler to reason about.",rfk,34695,2017-01-24T05:29:09Z,MEMBER,True,13,13,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f82bac0cb29721ec3c1248a38eb456687c897671,"fix(retryAfter): Round blocking periods up instead of down.

Previously, the code would round your ban period down to the
nearest integral number of seconds.  Since the ban duration in
tests is only 1 second, this would occasionally cause it to be
rounded down to zero, leading to flaky test failures.

We now round the ban priod *up* to the nearest integral number
of seconds, which shouldn't have any significant impact on users
in production, but makes the tests much simpler to reason about."
151,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/157,157,fix(test): increase rateLimitInterval for send_violation_tests,"to make the test less flaky

refs: https://github.com/mozilla/fxa-customs-server/issues/153

I pulled this out of https://github.com/mozilla/fxa-customs-server/pull/152 since something else is going on there with the `/check` changes.",g-k,226605,2017-01-11T16:34:34Z,CONTRIBUTOR,True,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f1d422d9de1f5a76b872fe2eaed8d7eb4fb9df98,"fix(test): increase rateLimitInterval for send_violation_tests

to make the test less flaky

refs: https://github.com/mozilla/fxa-customs-server/issues/153"
152,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/156,156,"fix(config): remove mockmyid rate limit, add second restmail",@rfk r?,vladikoff,128755,2017-01-10T21:03:53Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa19f94e34dab2b5aa82ae09d2047d55593182a1,"fix(config): remove mockmyid rate limit, add second restmail"
153,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/155,155,fix(docs): Add note about commit messages,Fixes #154 ,vbudhram,1295288,2017-01-10T15:12:37Z,CONTRIBUTOR,True,2,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ff468a6ea1fa0f4f1ce5b00406138b1f4d593aff,fix(docs): Add note about commit messages
154,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,810b184d36cf0a32e3cf60421b0d525fed4683ff,feat(ipreputation): Use IP reputation service from /check
155,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ad83d13f57c46f5d3236e7fbd52e12d48a242e65,"fix(test): clear all FxA keys in memcached slabs

So we don't need to keep tracking them down."
156,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,18c64efffca6e0c509fa757309b82439826a8d50,fix(test): bump up send violations test limits
157,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,350aa23269ccee66fbe273b1700ffbe1b4af7cef,fix(test): use spec reporter for CI to see which tests failed
158,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9a75cf6025c3fc30d5ac1b1534d802448a75594e,trigger 6th CI rebuild
159,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c38b5aa20c2da2b5ed4a9de048c0968aa099fb5d,trigger 7th CI rebuild
160,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,842520a78b5ce451de0e465aeedf6edf2dccfaae,trigger 8th CI rebuild
161,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c605039b976d3a9ea0f3f5d4d631c1c14aa5440,trigger 9th CI rebuild
162,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1dc856a2590d2be0a73f53eb95007686f456eada,trigger 10th CI rebuild
163,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4d554ab3dae5d91e345ab259163ce5e5d3c316cd,trigger 11th CI rebuild
164,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,127a70e7180703ba1184a0e8f9be106b8ab83695,trigger 12th CI rebuild
165,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b626b3efe5aa4d21cf522b4a2ee6278bef318e1b,trigger 13th CI rebuild
166,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,00dfdf73c8755e16922b4e5ab0124c249fab4ddc,trigger 14th CI rebuild
167,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/152,152,feat(ipreputation): Use IP reputation service from /check,"Add feature flag to check reputation IPs on the `/check` route and block requests below `REPUTATION_SERVICE_BLOCK_BELOW`.

Functional Tests:

setup:

* run memcached and postgres-ip4r docker container
* run tigerblood: `TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood`
* run customs server: `REPUTATION_SERVICE_ENABLE=true REPUTATION_SERVICE_ENABLE_CHECK=true REPUTATION_SERVICE_BLOCK_BELOW=50 node bin/customs_server.js`

Check `/check` against running tigerblood server:

```
# IP without reputation

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":900,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":20,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":""Reputation not found for IP."",""msg"":"""",""time"":""2016-12-16T17:46:33.268Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:46:33.272Z"",""v"":0}

# IP with unblocked reputation

## created by previous request
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
{""IP"":""192.0.2.1"",""Reputation"":100}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:50:19.133Z"",""v"":0}

# IP with blocked reputation

curl -X DELETE -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/192.0.2.1""
curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:8080/"" -d '{""ip"": ""192.0.2.1"", ""reputation"": 9}
'

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/check"" -d '{""email"": ""me@example.com"", ""ip
"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":true,""retryAfter"":0}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":true,""msg"":"""",""time"":""2016-12-16T17:51:37.680Z"",""v"":0}
```

Check `/check` when tigerblood server isn't running (but check is enable):


```
# stop tigerblood

curl -w '\n' -v -H ""Content-Type: application/json"" ""http://127.0.0.1:7000/c
heck"" -d '{""email"": ""me@example.com"", ""ip"": ""192.0.2.1"", ""action"": ""accountCreate""}'
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}

## customs server logs

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":50,""op"":""fetchIPReputation"",""ip"":""192.0.2.1"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-12-16T17:54:31.545Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":16752,""level"":30,""op"":""request.check"",""email"":""me@example.com"",""ip"":""192.0.2.1"",""action"":""accountCreate"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-12-16T17:54:31.548Z"",""v"":0}
```",g-k,226605,2016-12-16T17:56:00Z,CONTRIBUTOR,True,505,74,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ce1d7b1ffe04ff48b2abd9098a739a7d22f4b59b,trigger 15th CI rebuild
168,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/151,151,feat(config): Merge with existing config when writing to memcache.,This makes it easier to change a single setting while leaving all the others alone.  Fixes #127.  @jrgm r?,rfk,34695,2016-11-24T21:07:54Z,MEMBER,True,80,57,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f19957045de87729b60b6227adca3a0f6a96c45d,"feat(config): Merge with existing config when writing to memcache.

This makes it easier to change a single setting while leaving all
the others alone."
169,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/150,150,chore(shrinkwrap): add npm script for shrinkwrap,"This commit updates the npm script for generating shrinkwrap and moves the nsp into its own command.
Fixes #149 

Not sure why nsp was present in the first place, so moved it into its own command :)

@vladikoff @shane-tomlinson ",TDA,432707,2016-11-24T07:37:09Z,CONTRIBUTOR,True,5436,804,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b3c1aa54a1fbfd972e452e83cce44952e130fca1,"chore(shrinkwrap): add npm script for shrinkwrap

This commit updates the npm script for generating shrinkwrap and moves the nsp into its own command.
Fixes #149"
170,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/150,150,chore(shrinkwrap): add npm script for shrinkwrap,"This commit updates the npm script for generating shrinkwrap and moves the nsp into its own command.
Fixes #149 

Not sure why nsp was present in the first place, so moved it into its own command :)

@vladikoff @shane-tomlinson ",TDA,432707,2016-11-24T07:37:09Z,CONTRIBUTOR,True,5436,804,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46587d37bbf402df1ebcc6113f6d27bccece1543,fix(deps): update shrinkwrap
171,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5155cb596965e1b2d63389ecba855e11a3f57a2a,package: Add tigerblood client
172,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,098dd15d3e087650ceb0bbbf47a03472a9c64cfe,Add tigerblood config vars
173,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c2ebcbaa170f3190ec27efa579334f0ddeb3d794,construct tigerblood client when enabled
174,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8119074bcffb529bb6bd1d1600718278123edad6,send blocked IPs to tigerblood
175,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fac470ab10d6d2308056e2cf49b3ffcbc27f38f6,send actions blocked from /check to tigerblood
176,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1b4b05daed11a9f51481c69d88607b86b510a94a,send blocked actions from /checkAuthenticated
177,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7b4fd7d5fff9144e363e5f1646d04e6101cdcccc,send login lockouts from /failedLoginAttempt
178,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,abc996d975114d9705b47d3b1c579949b6504a1c,fix indent lints
179,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2ef75f1b4a780a3f3ce63ce6e71e7d08dd995f88,update violation sending for not getting lockout in failed logins
180,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7bf72951cfdaa0ff11f12b9efc2b7f764794de90,test sending violations
181,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5baa2fed61c4ca3db92a78a5b83724aaace077ac,"update shrinkwrap

Using v7.1.0 ran:

npm --ignore-script shrinkwrap
./node_modules/.bin/grunt nsp"
182,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a31c43782091d9379209c31f1b1f40f1756aaf89,bump up test timeouts
183,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b3444879f0828068fa8df6fa9fdf7a8fab784750,"Revert ""update shrinkwrap""

This reverts commit 5baa2fed61c4ca3db92a78a5b83724aaace077ac."
184,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c83d51d4e8fd0045edd6894c530fab47b6443ca7,"update shrinkwrap without dev deps

ran:

npm install --ignore-script --save ip-reputation-js-client@1.0.1"
185,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,26e704f4e3b1584c014f4f67547a1eef85b461ec,don't hardcode test check action violation
186,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d0a14c216bbb75672571cd26288d1d30ebdc4026,don't send violation for /check server errors
187,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,613b709bbc2a1fd5db5dd331b731f282fb205782,bump reputation service timeout to 50ms
188,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9b1327234680b907a358e8f5632a7f5b1bf62897,assert reputation test server killed
189,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8371797722c88f81878cf941eeb2e1cef28c000e,test /checkAuthenticated required params
190,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,75b30095f53db50bd5ee1172f7ee80150dbe34a3,test send violation errors
191,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,913d8cc96846c9b098ed76634dd4be26ea5409f8,trigger travis rebuild
192,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/148,148,Send violations to ip service,"Change: send violations to tigerblood using its [js client](https://github.com/mozilla-services/ip-reputation-js-client)

These are disabled by default, since I still need to get an updated version of tigerblood deployed. 

Functional Tests:

- [x] violations reported to tigerblood

```
# run tigerblood db
pg_ctl -D /usr/local/var/postgres stop # stop any running postgres instance
docker run --name postgres -p 127.0.0.1:5432:5432 -d postgres-ip4r # start tigerblood postgres in docker container
docker exec -ti postgres bash # and run through db setup steps

# run tigerblood in new tab
CGO_ENABLED=0 go build --ldflags '-extldflags ""-static""' ./cmd/tigerblood/
TIGERBLOOD_DSN=""user=tigerblood dbname=tigerblood sslmode=disable"" ./tigerblood

# run FxA customs server in new tab
REPUTATION_SERVICE_ENABLE=true node bin/customs_server.js

# make sure the endpoints still work in a new tab
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":85860}

# see some unknown violation types logged from tigerblood
2016/11/18 17:13:13 Could not find reputation to set for violation type: fxa:request.blockIp
2016/11/18 17:13:13 Request took 27.072282ms to process
...
2016/11/18 17:22:13 Could not find reputation to set for violation type: fxa:request.check.block.recoveryEmailVerifyCode
2016/11/18 17:22:13 Request took 14.203804ms to process
```

- [x] tigerblood being down does not take down fxa-customs-server

```
# stop tigerblood
# run through tests and verify the endpoints still return
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2""}' http://127.0.0.1:7000/blockIp
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@example.com""}' http://127.0.0.1:7000/failedLoginAttempt
{}
$ curl -w '\n' -X POST -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""uid"":""$RANDOM""}' http://127.0.0.1:7000/checkAuthenticated
{""block"":false,""retryAfter"":0}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""192.168.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":false,""retryAfter"":0,""unblock"":true,""suspect"":false}
$ curl -X POST -w '\n' -H 'Content-Type: application/json' -d '{""ip"":""2.2.2.2"",""email"":""test@test"",""action"":""recoveryEmailVerifyCode""}' http://127.0.0.1:7000/check
{""block"":true,""retryAfter"":86258}

# and see some errors logged from customs-server:

{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""handleBan.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.blockIp"",""ip"":""2.2.2.2"",""msg"":"""",""time"":""2016-11-18T22:25:00.030Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.blockIp.sendViolation"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:25:00.037Z"",""v"":0}
...
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""2.2.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":true,""msg"":"""",""time"":""2016-11-18T22:27:21.394Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":50,""op"":""request.check.sendViolation.block.recoveryEmailVerifyCode"",""ip"":""2.2.2.2"",""err"":{""cause"":{""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""isOperational"":true,""code"":""ECONNREFUSED"",""errno"":""ECONNREFUSED"",""syscall"":""connect"",""address"":""127.0.0.1"",""port"":8080},""msg"":"""",""time"":""2016-11-18T22:27:21.398Z"",""v"":0}
{""name"":""customs-server"",""hostname"":""gguthe-23818"",""pid"":60962,""level"":30,""op"":""request.check"",""email"":""test@test"",""ip"":""192.168.2.2"",""action"":""recoveryEmailVerifyCode"",""block"":false,""unblock"":true,""suspect"":false,""msg"":"""",""time"":""2016-11-18T22:27:32.937Z"",""v"":0}
```",g-k,226605,2016-11-18T22:25:57Z,CONTRIBUTOR,True,1035,62,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c7ea248c1427e8f3701c3bafa2de38adff2ce0c,fix mc keys persisting across test runs
193,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/146,146,Highly experimental re-implementation of ip blocklist datastructure,"My internet was down for like 4 hours today, so I took the opportunity to dust off a little side-project I've been working on whenever I need to clear my head.  It's a highly experimental re-write of the data-structure used to manage our IP blocklists, to try to make it faster and more memory-friendly.

I'm not really suggesting we merge this any time soon, as it's pretty complex and not well tested.  But I thought I'd put it up out of interest. 

Here's the fun part, some benchmarks.  First, the existing blocklist code:

```
$ node --expose-gc ./scripts/benchmark_ip_blocklist.js ./lib/ip_blocklist.js ~/Desktop/firehol_level4.netset
Base memory usage of this script: 25600000
Memory usage after loading the blocklist: 73777152
Checked 10000 ips, found 31 in the blocklist
Best time of 5 runs: 1065 ms
Memory usage after running the test: 74207232
```

That's not bad, although it uses a fair bit of memory for the large level4 list.  Here's the new version, which uses a densely-packed integer array with a radix-tree index for its lookups:

```
$ node --expose-gc ./scripts/benchmark_ip_blocklist.js ./lib/ip_blocklist_critbit.js ~/Desktop/firehol_level4.netset
Base memory usage of this script: 25878528
Memory usage after loading the blocklist: 62017536
Checked 10000 ips, found 31 in the blocklist
Best time of 5 runs: 29 ms
Memory usage after running the test: 62255104
```

That's significantly faster \o/

It also uses a smaller amount of steady-state memory to hold the list.  Interestingly, the *peak* memory usage is very similar, since both versions pull the whole list into memory and do a bunch of preprocessing on it:

```
$ /usr/bin/time -l node --expose-gc ./scripts/benchmark_ip_blocklist.js ./lib/ip_blocklist.js ~/Desktop/firehol_level4.netset 2>&1 | grep ""resident set size""
 105291776  maximum resident set size
```

Versus:

```
$ /usr/bin/time -l node --expose-gc ./scripts/benchmark_ip_blocklist.js ./lib/ip_blocklist_critbit.js ~/Desktop/firehol_level4.netset 2>&1 | grep ""resident set size""
 105107456  maximum resident set size
```

But the new version allows most of that to be GC'd, leaving behind just single ArrayBuffer with the search data in it.

If you cache this pre-processed form of the blocklist on disk, we can just slurp it straight into an ArrayBuffer and the peak memory usage is significantly lower:

```
rfk@tangello:fxa-customs-server(ip-blocklist-critbit *)$ /usr/bin/time -l node --expose-gc ./scripts/benchmark_ip_blocklist.js ./lib/ip_blocklist_critbit.js ~/Desktop/firehol_level4.netset 2>&1 | grep ""resident set size""
  32546816  maximum resident set size
```

Anyways, a fun experiment that I thought would be worth sharing.  And hey, if the blocklists turn out to be valuable but slow, it may be worth our while to try to make this production ready one day :-)",rfk,34695,2016-11-17T10:29:03Z,MEMBER,False,533,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a6111790a9cc71b8c80f30d9e14bc61dc66371a2,HIGHLY EXPERIMENTAL re-implementation of ip blocklist datastructure
194,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/145,145,fix(ip_record): Correctly total bad logins by unique email address.,"As noted in https://github.com/mozilla/fxa-content-server/issues/4324, the per-ip-address login rate-limiting is over-counting failed logins from a single email address.  This fixes it to only take the max-weighted errno from each unique email address.

Amusingly, this bug was causing the existing ""addBadLogins works per IP"" to pass, when it should have been failing.

@shane-tomlinson since this unblocks signin unblock, r?
",rfk,34695,2016-10-25T04:55:18Z,MEMBER,True,44,16,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4f20fadca6663e8313a4d4e3eb7d635ba283631c,fix(ip_record): Correctly total bad logins by unique email address.
195,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/144,144,fix(blocklist): Add latest firehol sample list,"Updates the sample Firehol level 1 list to the latest version.
",vbudhram,1295288,2016-10-18T23:34:26Z,CONTRIBUTOR,True,376,276,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6d2b066535a7af81ba944437c4111c11dc902c55,feat(blocklist): Add latest firehol sample list
196,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/143,143,fix(blocklist): Convert date to milliseconds for file comparison,"Per https://nodejs.org/api/fs.html#fs_class_fs_stats, uses `getTime()` on mtime, for use in comparisons.

Fixes #142 
",vbudhram,1295288,2016-10-18T23:31:22Z,CONTRIBUTOR,True,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,220ba20c0a9c698ca8ec44204cb8a4495ae962af,fix(blocklist): Convert date to milliseconds for file comparison
197,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/141,141,fix(logging): Don't attempt to log a 'msg' field.,"The logger used here (bunyan) treats 'msg' as a place to write its own formatted interpretation of the log message, so don't use it for our own purposes.  Instead let's log it under the name ""message"".  Bleh, I know, but simplest fix to get production logging up and running in the next train.  @jrgm r?

Fixes #140 
",rfk,34695,2016-10-18T04:47:33Z,MEMBER,True,2,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,01d8e3d2e2ce4461ea96b097d49e23a896719cee,"fix(logging): Don't attempt to log a 'msg' field.

The logger used here (bunyan) treats 'msg' as a place to
write its own formatted interpretation of the log message,
so don't use it for our own purposes."
198,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/138,138,chore(config): Don't set allow ALLOWED_IPS by default.,"Per conversation in https://github.com/mozilla-services/puppet-config/issues/2330, let's default this to an empty list to make life easier for Ops.  They were overriding these values in production anyway.
",rfk,34695,2016-10-17T01:56:37Z,MEMBER,True,5,6,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,15f6c1b70193bb02617b5d330314452fba0449c4,chore(config): Don't set allow ALLOWED_IPS by default.
199,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/137,137,"feat(requestChecks): Backport ""requestChecks"" framework from private repo","Fixes https://github.com/mozilla/fxa-customs-server/issues/126

@vbudhram r?
",rfk,34695,2016-10-14T02:02:18Z,MEMBER,True,261,28,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ddfcf170a2dca5c332b65b3b841264e5a77457e,"feat(requestChecks): Backport ""requestChecks"" framework from private repo."
200,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/137,137,"feat(requestChecks): Backport ""requestChecks"" framework from private repo","Fixes https://github.com/mozilla/fxa-customs-server/issues/126

@vbudhram r?
",rfk,34695,2016-10-14T02:02:18Z,MEMBER,True,261,28,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,623de15c807068269ca19ae349350ae116c934ab,chore(lint): Fix up some linty issues noticed in PR review.
201,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/136,136,fix(unblock): Return `unblock` value for IPs on a blocklist,"Return an explicit `unblock` key in more places; @seanmonstar r?
",rfk,34695,2016-10-05T03:51:00Z,MEMBER,True,4,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fa2c306d618846a17fd38b47c93834aa8b9a3dbd,fix(unblock): Return `unblock` value for IPs on a blocklist
202,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/135,135,fix(dependencies): update restify to 4.1.1,"Seems this was triggering an NSP warning: https://nodesecurity.io/advisories/106

The customs server isn't exposed to the public, but we should update anyways.
",seanmonstar,51479,2016-10-05T03:07:40Z,MEMBER,True,132,114,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9b5e67d2efb43dca860bd9552d5bebc6eaf255f2,fix(dependencies): update restify to 4.1.1
203,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/133,133,fix(settings): Fix reloading of nested settings from mecmached,"Previously this was not pushing the `uidRateLimit` settings object into memcached, so it was failing when it tried to load it back out.  @vbudhram r?
",rfk,34695,2016-09-29T01:52:05Z,MEMBER,True,40,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,18a1440dca9e0998e03fe83eaffef909c9e8221e,fix(settings): Fix reloading of nested settings from mecmached
204,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/132,132,Add rate-limiting of code verification attempts,"A quick attempt at rate-limiting email code verifications; WIP as tests not passing yet.
",rfk,34695,2016-09-26T05:15:48Z,MEMBER,True,264,4,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c1b0e615cc7d39065362dd715e27b9b944b22f3,feat(verify-code): Add rate-limiting of code verification attempts.
205,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/131,131,feat(unblock): add unblock rate limits,"cc https://github.com/mozilla/fxa-auth-server/pull/1471
",seanmonstar,51479,2016-09-25T17:33:04Z,MEMBER,True,167,13,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5a54f475a43bcebaea56cfb2b37237722790c2c9,feat(unblock): add unblock rate limits
206,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/129,129,feature(newrelic): add optional newrelic integration,"Now for customs-server...

svcops would like to make use of New Relic. This PR just makes it possible to load the module if explicitly configured. Further configuration will happen with puppet in the circusd environment (unless we have to set so many switches that a sane configuration file makes sense).

r? @rfk
",jrgm,758162,2016-09-07T01:14:10Z,CONTRIBUTOR,True,329,196,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bac4bbc5d3ad7b47960c50f0a51786a0776bf21a,feature(newrelic): add optional newrelic integration
207,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/125,125,Backport of several IP blocks and email rate limiting from private repo,,seanmonstar,51479,2016-08-03T16:54:36Z,MEMBER,True,15,4,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,112277fc85b6d62fbdfa9dd8c498b3e8e9e9cd9b,feat(block): ip record blocks trump all other conditions
208,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/125,125,Backport of several IP blocks and email rate limiting from private repo,,seanmonstar,51479,2016-08-03T16:54:36Z,MEMBER,True,15,4,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9a4eaf50f404656eb82e975a04a71e85437910e6,"fix(ip): Rate-limit all status-checking actions per IP.

Previously, email-sending actions had a special exemption
and were not rate-limited, even if they also allow status checking."
209,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/124,124,chore(server): Remove some left-over references to account lockout.,"A couple of stray references to account lockout that I noticed in passing; @shane-tomlinson r?
",rfk,34695,2016-08-02T04:00:43Z,MEMBER,True,5,15,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d26a012a1a47577bf7bf968af689074910a73f25,chore(server): Remove some left-over references to account lockout.
210,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/123,123,refactor(test): Modify test cases to use promises instead of callbacks,"fixes #97
",larissagaulia,7628440,2016-07-29T02:43:32Z,MEMBER,True,354,336,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,837d891bbec0f687ae2e0435a066c9dc47393c13,"refactor(test): Modify test cases to use promises instead of callbacks

fixes #97"
211,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/122,122,feat(server): Remove account lockout.,"fixes #120 

I made this into two commits. The first commit removes all references to `isWayOverBadLogins` and anywhere where `lockout` is referenced. The second commit also removes `lf` (loginFailures) from EmailRecord. I was less sure whether this would be used in the future for some feature, perhaps email captcha. I suppose we can always go back to this commit and update as needed.

@rfk and @seanmonstar - r?
",shane-tomlinson,848085,2016-07-27T09:40:05Z,MEMBER,True,14,268,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f409c6f3d63653106c81ad762be657a75459463b,"feat(server): Remove account lockout.

fixes #120"
212,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/122,122,feat(server): Remove account lockout.,"fixes #120 

I made this into two commits. The first commit removes all references to `isWayOverBadLogins` and anywhere where `lockout` is referenced. The second commit also removes `lf` (loginFailures) from EmailRecord. I was less sure whether this would be used in the future for some feature, perhaps email captcha. I suppose we can always go back to this commit and update as needed.

@rfk and @seanmonstar - r?
",shane-tomlinson,848085,2016-07-27T09:40:05Z,MEMBER,True,14,268,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,28343cb7aee17456a1e935e6379195855ce95915,feat(server): Remove `badLoginLockout` config and EmailRecord.lf (loginFailure) related code.
213,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/121,121,feat(server): Add Uid_Record and checkAuthenticated endpoint,,larissagaulia,7628440,2016-07-22T18:05:21Z,MEMBER,True,382,4,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1e6ca550117e9b2c839302e265a6db626be88857,"feat(server): Add uid_record and checkAuthenticated endpoint

docs: Add checkAuthenticated endpoint to api.md"
214,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/119,119,fix(deps): update dev dependencies,"@vbudhram r?
",vladikoff,128755,2016-07-20T22:04:55Z,CONTRIBUTOR,True,5117,1183,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f19ef9aa43b182c7bdd8b846e1c36053a70bb777,fix(deps): update dev dependencies
215,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/118,118,fix(tests): add coveralls and enforce coverage,"Fixes #12
",vladikoff,128755,2016-07-05T21:05:10Z,CONTRIBUTOR,True,6,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c236800ec90166f59e692ecf03d6a60a20793732,"fix(tests): add coveralls and enforce coverage

Fixes #12"
216,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f679e026b701b019069c3183422bada270e0f04e,feat(blocklist): Refactored blocklist based on feedback
217,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,af051b71adaeee80002171e1766b9839add094bf,feat(blocklist): Add log only support and update firehol blocklist
218,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d014148db365b6cac5c0ad0e87f699084e0db39e,"Merge branch 'master' into add-blocklist-module

# Conflicts:
#	npm-shrinkwrap.json"
219,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a74861de121535b04c4563dfd0ec5faab89dfb0f,feat(blocklist): Update shrinkwrap
220,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,09a1c13b941ea9e919c2894c8c5fa7ae0543a840,feat(blocklist): Add missing dependency and reshrinkwrap
221,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a6cee740f640ac20ec11af6d57c012fc17c89fa3,feat(blocklist): PR Fixs
222,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e573956419a8e6dcb488ebb2aed04af24ffc2398,feat(blocklist): Add ability to automatically reload blocklist whenever blocklist file has been updated
223,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,68e2bf9e4124de0d9a6dbeaa4307bc0cddcae82f,feat(blocklist): Add missing test cases for coverage
224,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f89b3c90f6969a93c9a25e93a7a2aac295f4430a,"feat(blocklist): Add support for multiple lists, updated firehol"
225,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fa6d11a8938c7ddbb374c820e7b5cea28d1a1724,feat(blocklist): Add test cases for multiple lists processing
226,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fff9c32894187bb86bd51e10dfed9448e1b20c45,feat(blocklist): Renamed to blockclass
227,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a70eee8979c268c7d8b7523aded1272ac568a32c,"Merge remote-tracking branch 'origin/master' into add-blocklist-module

# Conflicts:
#	npm-shrinkwrap.json"
228,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,316772ab2628ebfc76cedcb0103bccd09975da48,feat(blocklist): update shrinkwrap
229,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1d07d7974a1abe601f96568356f92089a8779e6d,feat(blocklist): PR Updates
230,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,200d7e97a88a478430ea59723886d48786205b00,feat(blocklist): PR Updates
231,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1a7661cb28d4139d5b00a23de73e77bb35de80e5,feat(blocklist): PR Updates
232,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/117,117,feat(blocklist): Add blocklist module,"This PR adds the ability to check a blocklist of ips and automatically block that request. Ref: https://github.com/mozilla/fxa/pull/156, https://github.com/mozilla/fxa-features/issues/6

Unanswered questions:
- [x] Retrieve valid Spamhaus BCL file
- [ ] ~~Determine path forward for retrieving updates of file~~
- [ ] ~~Create standalone module or service~~
- [x] Add metrics logging
- [x] Add feature flag and logOnly mode
- [x] Add automatic reload on blocklist file change
- [x] Add support for multiple blocklist
- [x] Add metrics for time taken to process
- [ ] ~~Add ability to update list~~ https://github.com/mozilla/fxa-customs-server/issues/130
- [x] Add firehol lists
",vbudhram,1295288,2016-06-21T20:15:51Z,CONTRIBUTOR,True,18298,4949,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,531f8d7c63d3f8e17f317b17064096a3a9bf92a9,feat(blocklist): PR Updates
233,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/115,115,chore(travis): drop node 0.12,,vladikoff,128755,2016-05-24T19:47:39Z,CONTRIBUTOR,True,0,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5bb758c19673e4ccdb8f76753eb422e08ddf6305,chore(travis): drop node 0.12
234,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/114,114,feat(recaptcha): support entry reset,"Connects to https://github.com/mozilla/fxa/issues/154
",vladikoff,128755,2016-05-24T19:43:10Z,CONTRIBUTOR,False,43,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,db48f4b8dc1db8b44a2eb8fe71fbf81cfc02bdcb,feat(recaptcha): support entry reset
235,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/112,112,feat(email): Add config option to avoid blocking certain email domains,"Similar to our existing `ALLOWED_IPS` setting, this PR gives us the ability to allowlist a set of email address domains, exempting them from rate-limits and blocks.  This is likely very handy for QA, both for ourselves (where we currently have to raise rate limits in stage) and for others (e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=1269425)

A couple of notes:
- The `allowed_email_domains.js` file is a copy-paste of the existing `allowed_ips.js` file; I considered a refactor to extract shared logic but decided not to invest in it at this time
- The checking of the allowlist is only done at the point where we are actually about to block an email, which means there should be no additional overhead for legitimate users

@seanmonstar r?
",rfk,34695,2016-05-03T04:47:39Z,MEMBER,True,168,3,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e578c26ea382ca6a1142cfded79a30903ced63c1,feat(email): Add config option to avoid blocking certain email domains
236,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/110,110,feat(scripts): added admin scripts: block-ip and customs-info,"fixes #102

@jrgm r?
",dannycoates,87619,2016-04-22T02:06:45Z,MEMBER,True,127,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5405ac5e4b3bf296772a860ae7a6d6f7b674ec68,feat(scripts): added admin scripts: block-ip and customs-info
237,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/109,109,some *sharp* tools for updating the configs in memcache,"@jrgm is this good enough or do you want more fancy?
",dannycoates,87619,2016-04-18T01:06:28Z,MEMBER,True,178,1,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,27d1ab93794cb8a0b9248c6713355f87803fbfea,some *sharp* tools for updating the configs in memcache
238,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/108,108,WIP: feat(admin): Add a simple script to execute admin commands.,"The script features a single command to start, allowing manual blocking of an IP address.
",rfk,34695,2016-04-12T06:24:14Z,MEMBER,False,101,13,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,82aeb3611661b9ac1259ab738349626e29dfaac3,"feat(admin): Add a simple script to execute admin commands.

The script features a single command to start, allowing manual
blocking of an IP address."
239,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/107,107,fix(check): Include more action names in various checks.,"This ensures we treat all actions with similar affects as equivalent and rate-limit them together.  It's especially relevant for the many different ways that one can discover whether a particular account exists or not.

Note that the rate-limiting for account status check now counts the number of unique emails accessed within the rate-limiting window, not the total number of checks performed.  This should help mitigate the risk of adding all these other actions into that category.  We may still find we need to raise the limit on that though.
",rfk,34695,2016-04-12T05:00:25Z,MEMBER,True,16,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a8f5892257671eeeb26db06a132099399e63901e,fix(check): Include more action names in various checks.
240,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cafe24577e01b5f43d32a005e31770d7c9459441,fix(style): Fix some typos
241,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,add5795f069933360ad58d4a2b608b275f52b3fa,WIP block bad logins per ip
242,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,30f8a5d1b4a967a9698095b3e399ed151765453f,fix(lock): add ip lock test
243,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f52d9130aaa21917f092505daeebfe9baddaa2a5,fix(config): add more config to ip rate limits
244,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,746e9d537b5741a1f986d61a38f806bc73f5cdd9,fix(tests): adjust config values for status check
245,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ca30521076cfe4ff506157155fc57a888579181,fix(handler): add new config values to handler.js
246,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,92a0008b3be727d2137bb6b828e4f4a329f15b2b,fix(config): update name values for ip ban
247,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e56bb5ad75f35a31a7dfebf143bd26fe39f0c55e,"Merge pull request #3 from mozilla/max_ip_bad_logins

Max ip bad logins"
248,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,47616536ee79ba5997387e7e2ccbc000a1dec1f5,feat(logins): Count rate-limited login attempts as failed logins.
249,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8d94c1c71e1eb0067ea15a07657470069be9e897,fix(logins): add test and adjust rate limit
250,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2f0aa17bd451746f5a5258c8d532ddc5feade4b6,fix(logins): combine limiting for bad logins and rate
251,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ed6790ff6ed69087b15ae6dca93cf00ebf18b863,fix(logins): add docs and simplify test
252,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7c4de25d07a63d908cbebb8f32c18ebf3ddc4c78,fix(tests): adjust login tests
253,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c73ec671a67dd8843b5bec6e574b9ef2eae4df3,"Merge pull request #11 from mozilla/count-rate-limited-logins-2

fix(logins): add test and adjust rate limit r=rfk,vladikoff"
254,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6955b6a0bfce7b6ca09d672dd70400e1b0933857,fix(blocking): Send block for all requests if memcache is down
255,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5aff49c8345d5da264e4b280f6d13fe71bd82772,fix(lifetime): Ensure records are written with sufficient ttls in memcache.
256,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c3c72271c83b6742dc4a9eb2bdc2d122a29360f,fix(lifetime): ensure memcache lifetime is set in more places
257,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,70d4c21d7affa62434c89aaf9998502718395eb8,"Merge pull request #13 from mozilla/memcached-ttl-duration

fix(lifetime): Ensure records are written with sufficient ttls in memcache"
258,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,721dffe97b8a091ba0037b2a7ee255528a929a68,fix(blocking): Send block for all requests if memcache is down
259,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,90ebc46ee9c4e914da6843acf677de11ac6dabe4,"Merge remote-tracking branch 'origin/issue-8-block-on-memcache-timeout' into issue-8-block-on-memcache-timeout

# Conflicts:
#	lib/server.js"
260,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,37b4a1a6cbce476f997f59828b5a5a7f26b56416,feat(iprecord): record errno and ratelimit when errno is 102
261,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,484ff0c28e08efa32e48ebbbc3d9c45779229ad4,fix(blocking): Merge and now blocks all request on server-side error
262,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d843c0f6d5ebb029ca0d1fa83b697c163e1b5f6b,"Merge pull request #12 from mozilla/issue-8-block-on-memcache-timeout

fix(blocking): Send block for all requests if memcache is down"
263,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,13c339a203a0ce11133f3f4a4f7b867ef9ea82f8,fix(iprecord): Fix calls to IpRecord.addBadLogin
264,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,72338f224ac6fa4101791d1d1e01d7e6e0084374,"Merge pull request #16 from mozilla/record-errno-tweaks

fix(iprecord): Fix calls to IpRecord.addBadLogin"
265,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,85b5ed7860d4034225497a471fb522cde18c6090,"Merge pull request #14 from mozilla/record-errno

feat(iprecord): record errno and ratelimit when errno is 102"
266,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2632ae78f0ade9e98cb731a208e871c27e4b4f13,feat(ip): Add config option for list of allowed ips.
267,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46cb91f7eee7ce7f70e2959aced039954512f024,"Merge pull request #18 from mozilla/allowed-ips

feat(ip): Add config option for list of allowed ips."
268,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4456e35ea34158e455b556475adc333e313e669b,fix(ips): Add ALLOWED_IPS environment variable for config.
269,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/104,104,Merge changes made in private fork,,rfk,34695,2016-04-12T04:10:43Z,MEMBER,True,561,61,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2d33ca3ee22363b6928401fd66f8c8b26d428b57,"Merge pull request #20 from mozilla/allowed-ips-env-var

fix(ips): Add ALLOWED_IPS environment variable for config."
270,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/100,100,"fix(config): restore top-level ""config"" dir for $(NODE_ENV).json files.","This was lost in #98 and broke new fxa-dev deployments.
",rfk,34695,2016-02-19T00:07:06Z,MEMBER,True,5,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b853875fa8fb4961f56eee082fb7062d37e771eb,"fix(config): restore top-level ""config"" dir for $(NODE_ENV).json files."
271,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/99,99,feat(api): Add account status check with rate limiting,"This PR adds a new route to the customs server, `POST /accountStatus`. This is used to rate-limit requests by ip address, for getting an account's status. This is a dependency for https://github.com/mozilla/fxa-auth-server/pull/1184

Fixes #96 

@rfk this is what you had in mind? r?
",vbudhram,1295288,2016-02-17T21:25:43Z,CONTRIBUTOR,True,215,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4df20b8d0728059c6b0ffb8da4bb33afbf9abd68,feat(api): Add check account status
272,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/98,98,"refactor(lib): Put all the code inside a ""lib"" subdirectory.","I was digging into the code here, and realized that it doesn't follow our convention of putting the app code inside a ""lib"" sub-directory.  This PR moves the code out of the top-level dir and into ""lib"", and creates a stub file in ./bin/ that imports and runs it.  Functionality it not modified.  @vbudhram r?
",rfk,34695,2016-02-17T04:44:17Z,MEMBER,True,299,283,18,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,493984a6a0548b403b0800e1d0fb5e699cb0ced6,"refactor(lib): Put all the code inside a ""lib"" subdirectory."
273,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/95,95,chore(docs): remove misleading reference to awsbox,"Just completing cleanup of awsbox removal.
",jrgm,758162,2015-12-22T01:55:06Z,CONTRIBUTOR,True,0,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8f9c06f0e83dd66ede7a610239ec7f7fc8ec62bf,chore(docs): remove misleading reference to awsbox
274,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/94,94,"fix(travis): build and test on 0.10, 0.12 and 4.x","just bumping from 'iojs' to '4'

r? - @rfk 
",jrgm,758162,2015-12-11T02:12:29Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4922a102d242ef32608790c1ad55c0001684d891,"fix(travis): build and test on 0.10, 0.12 and 4.x"
275,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/93,93,fix(build): add grunt-nsp,"Fixes https://github.com/mozilla/fxa-customs-server/issues/91
",vladikoff,128755,2015-11-10T21:36:08Z,CONTRIBUTOR,True,1705,1639,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,816ae95388207a335c869098f8e8fefb0c05af74,fix(build): add grunt-nsp
276,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/92,92,fix(travis): remove broken validate-shrinkwrap,"I tried to update to grunt-nsp but that spewed errors about extraneous modules under node_modules/grunt-nsp. So just removing this broken test to fix travis. 
",jrgm,758162,2015-11-09T18:54:30Z,CONTRIBUTOR,True,0,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f01517b5695a2753f6216902b1f0d0172d3e7922,fix(travis): remove broken validate-shrinkwrap
277,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/90,90,chore(version): generate legacy-format output for ./config/version.json,"Needed for stage/production builds.
",jrgm,758162,2015-09-09T05:05:39Z,CONTRIBUTOR,True,36,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,129d885207971fdff835b0643fc0c79219a385ec,chore(version): generate legacy-format output for ./config/version.json
278,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/88,88,chore(travis): Tell Travis to use #fxa-bots,,chilts,3048,2015-07-01T04:33:20Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f835276ee7dea411a5bfcdd75caa0408173d3c56,chore(travis): Tell Travis to use #fxa-bots
279,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/87,87,chore(build): Replace JSHint with ESLint,"Continuing the trend towards one-eslint-to-rule-them-all.

r? @TDA 
",pdehaan,557895,2015-06-29T23:21:00Z,CONTRIBUTOR,True,584,346,21,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dad97a5124b8c897ac41a23424b870d89d39e11a,chore(build): Replace JSHint with ESLint
280,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/86,86,chore(shrinkwrap): update ass to what other modules use; update shrinkwrap,"I went to update shrinkwrap, and the version of `ass` we use causes a weird error with shrinkwrap. So use the version we use in other repos. 

@chilts r? 
",jrgm,758162,2015-06-10T22:21:21Z,CONTRIBUTOR,True,115,125,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,06920e58f31f4e445c5ca12450bc4ad4712d9fc1,chore(shrinkwrap): update ass to what other modules use; update shrinkwrap
281,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/85,85,chore(config): Update convict and switch on strict validation.,"Fixes #84.

There's some dependency problem with restify and I didn't want to try to debug an upgrade to the new release, which is a major API version bump.  So I added a `--force` to the dependency checker.
",rfk,34695,2015-06-10T02:26:19Z,MEMBER,True,149,142,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d2168f9872c9c511022a4bb21e9747cc835b2e57,chore(config): Update convict and switch on strict validation.
282,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/82,82,chore(license): Update license to be SPDX compliant,"specifying the type and URL is deprecated:

https://docs.npmjs.com/files/package.json#license
",pdehaan,557895,2015-05-23T00:27:17Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,237f745805e4184a645eda826bc1bc755e886ced,chore(license): Update license to be SPDX compliant
283,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/81,81,Test travis 0.12 iojs,"Notes: 
1. this was failing on some security warnings that I think are a little over-rated, so quieted them
2. However, it is perhaps time to do a refresh of some modules, and I'll file a follow up issue for that.
",jrgm,758162,2015-04-17T00:58:55Z,CONTRIBUTOR,True,7,3,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2818e438b174d1cb2320df40d2a36627a82e7daf,"chore(travis): build/test on 0.10, 0.12, and iojs"
284,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/81,81,Test travis 0.12 iojs,"Notes: 
1. this was failing on some security warnings that I think are a little over-rated, so quieted them
2. However, it is perhaps time to do a refresh of some modules, and I'll file a follow up issue for that.
",jrgm,758162,2015-04-17T00:58:55Z,CONTRIBUTOR,True,7,3,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4b93b2b0e90fc3424c69cdcd776d44b00ca1824e,chore(travis): quiet validate-shrinkwrap failure on security warning on module
285,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/80,80,Train 34,"Forgot to put Changelog on master; bringing it back from train-34.
",jrgm,758162,2015-04-02T19:38:49Z,CONTRIBUTOR,True,7,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,37a6e4880ceb8be83fb5637e1f81f2182d48948b,Release v0.34.0
286,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/80,80,Train 34,"Forgot to put Changelog on master; bringing it back from train-34.
",jrgm,758162,2015-04-02T19:38:49Z,CONTRIBUTOR,True,7,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9f299cc73e44d9d0528e86716f6f14f4a7b41389,docs(changelog): changelog for train-34
287,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/79,79,Add task for tagging release and fix some jshint whining,"The first commit for test is to quiet a jshint warning for ""'obj' is defined but never used"". Previously jshint was passing since it was not linting these files. 

The second commit is just like fxa-auth-server and fxa-auth-db-mysql repos, but review the file matching patterns. r? @chilts @pdehaan 
",jrgm,758162,2015-04-01T01:42:13Z,CONTRIBUTOR,True,569,264,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,152b7f81c3e55fbed1325385d5c116cc5342d29f,"fix(tests): files were not being linted; so now, make jshint happy"
288,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/79,79,Add task for tagging release and fix some jshint whining,"The first commit for test is to quiet a jshint warning for ""'obj' is defined but never used"". Previously jshint was passing since it was not linting these files. 

The second commit is just like fxa-auth-server and fxa-auth-db-mysql repos, but review the file matching patterns. r? @chilts @pdehaan 
",jrgm,758162,2015-04-01T01:42:13Z,CONTRIBUTOR,True,569,264,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,532f8c2a533093bf02ecfd2aee35aec5d75e69e2,"fix(release): add tasks ""grunt version"" and ""grunt version:patch"" to create release tags"
289,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/79,79,Add task for tagging release and fix some jshint whining,"The first commit for test is to quiet a jshint warning for ""'obj' is defined but never used"". Previously jshint was passing since it was not linting these files. 

The second commit is just like fxa-auth-server and fxa-auth-db-mysql repos, but review the file matching patterns. r? @chilts @pdehaan 
",jrgm,758162,2015-04-01T01:42:13Z,CONTRIBUTOR,True,569,264,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e9c5d91b63c1c6f1cec77e016dbd26d4c8dc3b9d,chore(shrinkwrap): update shrinkwrap
290,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/78,78,feat(docs): Include a snipped about the memcached requirement.,"fixes #77

@dannycoates, @rfk or @chilts, could you give this a quick read?
",shane-tomlinson,848085,2015-02-26T13:27:24Z,MEMBER,True,12,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2446f1a79eaa3bb5e164cf2ad70154b6bbe4b6ce,"feat(docs): Include a snipped about the memcached requirement.

fixes #77"
291,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/76,76,feat(config): Add a badLoginLockoutIntervalSeconds configuration option.,"This is the time over which bad logins should be remembered for account lockout

fixes #75
",shane-tomlinson,848085,2015-02-25T18:07:37Z,MEMBER,True,26,13,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,429eec1a030b72e33fe417c3f4bdee9bfbe216bf,"feat(config): Add a badLoginLockoutIntervalSeconds configuration option.

This is the time over which bad logins should be remembered for account lockout

fixes #75"
292,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/74,74,More code cleanups,"This addresses a couple of nits we had left over from #71.  @chilts r?
",rfk,34695,2015-02-13T05:57:57Z,MEMBER,True,23,21,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0d978f0ece718b7584b0af5ac4011d44132df767,Rename isEmailAction to isEmailSendingAction
293,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/74,74,More code cleanups,"This addresses a couple of nits we had left over from #71.  @chilts r?
",rfk,34695,2015-02-13T05:57:57Z,MEMBER,True,23,21,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,61bc62e4999d04aaf73d7d59e3f228e6e954b6e4,Untangle some logic in email_record.js
294,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/74,74,More code cleanups,"This addresses a couple of nits we had left over from #71.  @chilts r?
",rfk,34695,2015-02-13T05:57:57Z,MEMBER,True,23,21,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d2c285a671f104a2e2a5206b02354790a3ee9fbd,Rename isIpEmailAction() to isPasswordCheckingAction()
295,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/73,73,Tweak logging output when processing sqs ban messages.,"This will give slightly more helpful log messages when we fail to process from the sqs ban queue.  @chilts r?
",rfk,34695,2015-02-10T23:32:02Z,MEMBER,True,773,84,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3d781e98cfab8d18d11cc9633149fc98c3a80e73,Tweak logging output when processing sqs ban messages.
296,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/73,73,Tweak logging output when processing sqs ban messages.,"This will give slightly more helpful log messages when we fail to process from the sqs ban queue.  @chilts r?
",rfk,34695,2015-02-10T23:32:02Z,MEMBER,True,773,84,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6ccf21e27deee398231c2c2db11a6c7b9d3d3524,Update old convict dependency
297,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/71,71,Add .shouldBlock() and .isRateLimited(); normalise .isBlocked(),,chilts,3048,2014-10-14T22:27:51Z,CONTRIBUTOR,True,112,80,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d1d6385c1b2fdd52fc7260e17f21838558c36d6c,Add .shouldBlock() and .isRateLimited(); normalise .isBlocked() and .update()
298,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/70,70,Block all actions for emails that are explicitly banned,"The `email_record.update` function is the final arbiter of whether an email address gets blocked from performing an action.  It currently short-circuits to allow any non-email-sending action through regardless of the state of the record.

This doesn't work well for explicit bans of email addresses (as might be generated through our SQS ban queue) which AFAICT should cause _all_ actions with that email address to be blocked.  For example, if I send a message to ban a particular email, I would expect to be blocked from logging in with that email despite it being a non-email-sending action.

This PR refactors the logic to distinguish these two cases of ""blocked"" and ""banned"".

@fmarier can you please sanity-check the behaviour here, and @chilts to r? since it's a good excuse to dig into this codebase.
",rfk,34695,2014-10-10T05:45:49Z,MEMBER,True,19,3,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9665f240eb2dd248f38a6748074466f98c430802,Block all actions for emails that are explicitly banned
299,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/68,68,Use 400 error code for missing parameters,"Includes Andy's fix in #67.
",fmarier,167821,2014-09-29T23:38:56Z,CONTRIBUTOR,True,24,20,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2f3818868f8e6364ee42ce835030ce26525d6f4e,Avoid normalizing undefined email addresses
300,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/68,68,Use 400 error code for missing parameters,"Includes Andy's fix in #67.
",fmarier,167821,2014-09-29T23:38:56Z,CONTRIBUTOR,True,24,20,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3fd870899c7b7d7f71b6e03900129c2189aa0612,"Validation errors should return 400 errors, not 500"
301,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/67,67,Fix toLowerCase() on undefined email,"If incoming email is not sent, then the .toLowerCase() inside
normalizedEmail() fails and gives an internal server error. Instead,
check that the param is provided first, then do the normalisation.
",chilts,3048,2014-09-29T22:31:51Z,CONTRIBUTOR,False,34,4,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,250caec25fd7ff5709e3ad46468cab5e57114a9f,"Fix toLowerCase() on undefined email

If incoming email is not sent, then the .toLowerCase() inside
normalizedEmail() fails and gives an internal server error. Instead,
check that the param is provided first, then do the normalisation."
302,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/65,65,Make the server executable,"This is so that I can just start it from some new tests in the fxa-auth-server - yes, it's a convenience thing only. :)
",chilts,3048,2014-09-18T20:55:51Z,CONTRIBUTOR,True,2,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0b53da1ad081fc7806dfd2c148dffb6cce61fe23,Make the server executable
303,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/63,63,Document all the things (fix #61),"@ckarlof Does that look like what you were after in #61?
",fmarier,167821,2014-09-11T06:02:09Z,CONTRIBUTOR,True,261,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3196e8d700f89bf5e3a33d7adc841fda852e49a5,Remove redundant info
304,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/63,63,Document all the things (fix #61),"@ckarlof Does that look like what you were after in #61?
",fmarier,167821,2014-09-11T06:02:09Z,CONTRIBUTOR,True,261,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dba022e094d2aaf9406929a37be6e6f4fe90d2aa,Document the code layout
305,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/63,63,Document all the things (fix #61),"@ckarlof Does that look like what you were after in #61?
",fmarier,167821,2014-09-11T06:02:09Z,CONTRIBUTOR,True,261,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5410778c4b45b1d811b5c64e438880df074cc05c,Document the API
306,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/63,63,Document all the things (fix #61),"@ckarlof Does that look like what you were after in #61?
",fmarier,167821,2014-09-11T06:02:09Z,CONTRIBUTOR,True,261,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,35d5c6035ca7f7798c0162302b5adc2892736cfd,Document the current blocking and rate-limiting policies
307,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/62,62,Normalize incoming emails (fix #59),"This is to prevent attackers from varying the case of their email
addresses to work-around rate-limiting.
",fmarier,167821,2014-09-11T05:04:54Z,CONTRIBUTOR,True,140,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7a795ebe8521ed31c54331006081424af584856c,"Normalize incoming emails (fix #59)

This is to prevent attackers from varying the case of their email
addresses to work-around rate-limiting."
308,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/60,60,Add support for account lockout (fix #58),"This adds the feature described in #58.
",fmarier,167821,2014-09-06T05:08:27Z,CONTRIBUTOR,True,315,68,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bf0f27679c06c390cac4f410f2976056b1038eca,Label the xs property properly in ip_email_record.js
309,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/60,60,Add support for account lockout (fix #58),"This adds the feature described in #58.
",fmarier,167821,2014-09-06T05:08:27Z,CONTRIBUTOR,True,315,68,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d423de01dd688d65ac5c5a96b6542e702c497098,"Rename the variable that keeps track of login failures

While it's similar in the way it's handled to the one keeping track
of emails sent, it keeps track of something different so it should
have a different name to avoid confusion."
310,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/60,60,Add support for account lockout (fix #58),"This adds the feature described in #58.
",fmarier,167821,2014-09-06T05:08:27Z,CONTRIBUTOR,True,315,68,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c726ce69e682ac86f11b3052f979ebba791a8cba,"Add an extra check in the middle of the bad login attempts

This is just to double-check that we're not blocking too early."
311,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/60,60,Add support for account lockout (fix #58),"This adds the feature described in #58.
",fmarier,167821,2014-09-06T05:08:27Z,CONTRIBUTOR,True,315,68,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,efa1f16a627f880f28805164030fbb1bbc966882,"Account lockout when there are way too many attempts for an email

This is a global limit which applies to a given email address
regardless of the user agent's IP address."
312,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/60,60,Add support for account lockout (fix #58),"This adds the feature described in #58.
",fmarier,167821,2014-09-06T05:08:27Z,CONTRIBUTOR,True,315,68,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bb308cbce3439331d2be13c5f6512600e0f5b803,Remove unnecessary (and incomplete) comment
313,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/57,57,Updating restify and request,"Updated **request@2.40.0** and **restify@2.8.2**.

Added an npm-shrinkwrap.json file and a few helpers:
- `npm run outdated`: lists outdated modules to console (or Travis log).
- `npm run shrinkwrap`: calls `npm shrinkwrap` and then calls `grunt validate-shrinkwrap`. This currently excludes `devDependencies` but it's an easy tweak if we decide to pin the version numbers instead of using semver range operators or `x`.
- `grunt validate-shrinkwrap`: validates the npm-shrinkwrap.json file against nodesecurity.io database.

Fixes #56
",pdehaan,557895,2014-08-07T17:40:11Z,CONTRIBUTOR,True,712,6,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2565c50eea906492f5f0cdb9d6ec09bcf6e1ce12,updating restify and request
314,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/57,57,Updating restify and request,"Updated **request@2.40.0** and **restify@2.8.2**.

Added an npm-shrinkwrap.json file and a few helpers:
- `npm run outdated`: lists outdated modules to console (or Travis log).
- `npm run shrinkwrap`: calls `npm shrinkwrap` and then calls `grunt validate-shrinkwrap`. This currently excludes `devDependencies` but it's an easy tweak if we decide to pin the version numbers instead of using semver range operators or `x`.
- `grunt validate-shrinkwrap`: validates the npm-shrinkwrap.json file against nodesecurity.io database.

Fixes #56
",pdehaan,557895,2014-08-07T17:40:11Z,CONTRIBUTOR,True,712,6,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c9e13a9396f458833506e28fa056f24595d9e767,run npm outdated and validate-shrinkwrap on travis
315,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/57,57,Updating restify and request,"Updated **request@2.40.0** and **restify@2.8.2**.

Added an npm-shrinkwrap.json file and a few helpers:
- `npm run outdated`: lists outdated modules to console (or Travis log).
- `npm run shrinkwrap`: calls `npm shrinkwrap` and then calls `grunt validate-shrinkwrap`. This currently excludes `devDependencies` but it's an easy tweak if we decide to pin the version numbers instead of using semver range operators or `x`.
- `grunt validate-shrinkwrap`: validates the npm-shrinkwrap.json file against nodesecurity.io database.

Fixes #56
",pdehaan,557895,2014-08-07T17:40:11Z,CONTRIBUTOR,True,712,6,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,30c71edf6eb98c8a85d61d0630b853ff5185a45f,moving dependencies to devDeps
316,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/55,55,fix invalid travis yaml,,jrgm,758162,2014-08-01T05:37:44Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b644074d59a01fdd882f556888ec15a962cab97,fix invalid travis yaml
317,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/54,54,Expose configuration settings and merge memcache.host & port,"This replaces @jrgm's #53.
",fmarier,167821,2014-08-01T05:09:21Z,CONTRIBUTOR,True,16,17,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c70ac0f9af9e1917040d7f2ca96897ef54bb347,expose all configuration settings to the environment; add option memcache.address to work with previous puppet settings
318,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/54,54,Expose configuration settings and merge memcache.host & port,"This replaces @jrgm's #53.
",fmarier,167821,2014-08-01T05:09:21Z,CONTRIBUTOR,True,16,17,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5c01ff4a06ca631567798d4c7b375c1e69b53a93,"Remove redundant memcache.host and memcache.port settings

These settings were made redundant by db4dbd04f9b23095403b4167fc9da82a76823c53."
319,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/53,53,expose all configuration settings to the environment; add option memcache.address to work with previous puppet settings,"In the previous production config of customs-server, we overrode settings for:

```
logLevel = info, 
maxBadLogins = 10, 
memcached = hostname:11211, 
port = 7000
```

In the switch to convict, two problems:
1. maxBadLogins was not made available to be configured in the environment (or by config file). Once I had to change that, I figured all of them should be exposed. 

(Note for convict feature requests : in `rc` _all_ config values are exposed to the environment).
1. the location of memcached was host:port, but in the port to convict, it is looking for a host and a port separately. I don't want to change the setting in puppet, so I just fix it here to look for a 'host:port' value first.
",jrgm,758162,2014-08-01T03:07:39Z,CONTRIBUTOR,False,21,6,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,935a5029dd4602790d975c07929788f3e3cbacc1,expose all configuration settings to the environment; add option memcache.address to work with previous puppet settings
320,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/52,52,removing npm spinner from travis logs,,pdehaan,557895,2014-08-01T00:09:34Z,CONTRIBUTOR,True,3,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7310e18bc985d5379de3c4a0822800f1521289cd,removing npm spinner from travis logs
321,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/51,51,0.1.0,"fixes #50 - @fmarier, @chilts - r?
",jrgm,758162,2014-07-31T21:56:59Z,CONTRIBUTOR,True,4,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,227ffdc4fc46c2a3f737a29c8f9c8a7ea776e2ba,0.1.0
322,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/49,49,Actually address the typo that Andy found,,fmarier,167821,2014-06-27T03:06:01Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,27d36e72ef89426e0f2aa606243fcae0e11a6f9b,Actually address the typo that Andy found
323,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/48,48,Fix SQS API,"This can be tested from the AWS web console like this:
1. create a test queue
2. give all permissions to everybody
3. send a manual message like this one:
   
   ```
   {""Message"":""{\""ban\"":{\""ip\"":\""192.168.0.2\""}}""}
   ```

Then run the customs server with the queue region and URL:

```
BANS_REGION=""ap-southeast-2"" BANS_QUEUE_URL=""https://sqs.ap-southeast-2.amazonaws.com/12345678/cs-sqs-test"" node bin/customs_server.js
```

and use the `check` API before and after sending the SQS message:

```
curl -H ""Content-Type: application/json"" -d '{""ip"":""192.168.0.2"",""action"":""accountLogin""}' http://127.0.0.1:7000/check
```
",fmarier,167821,2014-06-27T02:09:34Z,CONTRIBUTOR,True,3,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c63617609acfd52c4f5e1da757aef0ae57bab64,"Fix SQS API

This can be tested from the AWS web console like this:

1. create a test queue
2. give all permissions to everybody
3. send a manual message like this one:

        {""Message"":""{\""ban\"":{\""ip\"":\""192.168.0.2\""}}""}

Then run the customs server with the queue region and URL:

    BANS_REGION=""ap-southeast-2"" BANS_QUEUE_URL=""https://sqs.ap-southeast-2.amazonaws.com/12345678/cs-sqs-test"" node bin/customs_server.js

and use the `check` API before and after sending the SQS message:

    curl -H ""Content-Type: application/json"" -d '{""ip"":""192.168.0.2"",""action"":""accountLogin""}' http://127.0.0.1:7000/check"
324,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/47,47,Switch config management from rc to convict (fix #46),"I didn't really have to change the tests, but I thought it would be better if their config matched the real one to make it easier on the copy/paste.
",fmarier,167821,2014-06-25T10:33:56Z,CONTRIBUTOR,True,204,77,20,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7c78ac5bf43ce1d7db8585ce65af49b6d2b268eb,Switch config management from rc to convict (fix #46)
325,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/45,45,Awsbox support,,fmarier,167821,2014-06-25T09:20:53Z,CONTRIBUTOR,True,10,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,078bde7f3c36fca7ff2d089932f220dcf97330a0,Differentiate between fetching and parsing errors
326,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/45,45,Awsbox support,,fmarier,167821,2014-06-25T09:20:53Z,CONTRIBUTOR,True,10,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,89ee8e085402c5ca15f63dfb9baae2b31e1ebb0a,"Add awsbox config for easy dev testing

Requires a manual ""npm install awsbox"" since that's not in the
dev dependencies."
327,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/44,44,Update dependencies to match the versions used on the auth-server,,fmarier,167821,2014-06-24T04:42:47Z,CONTRIBUTOR,True,8,8,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,946bde1078b627df163c57a37557c5a454b38d2c,Update dependencies to match the versions used on the auth-server
328,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/43,43,Document what the config options do (fix #42),,fmarier,167821,2014-06-20T05:15:10Z,CONTRIBUTOR,True,5,5,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,abebc876cbe0f3d796ce85fccc3c8103646abdf4,Document what the config options do (fix #42)
329,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/41,41,Move blockIp and blockEmail to SQS messages (fix #27),,fmarier,167821,2014-06-12T11:02:44Z,CONTRIBUTOR,True,410,40,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b5520006bf5559a60dd3b01a1010e64c7f1fa8ae,Add an SQS-based API for blockIp and blockEmail (fix #27)
330,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/41,41,Move blockIp and blockEmail to SQS messages (fix #27),,fmarier,167821,2014-06-12T11:02:44Z,CONTRIBUTOR,True,410,40,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4378ae917581dfdf4a64da70113d8cb944fdd49e,Test that blockIp and blockEmail work by calling /check
331,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/38,38,Fix for password resets not clearing the bad login count,"Who would have thought that adding a test to increase the test coverage by a single line would lead to a bug fix :)

This patch depends on #37.
",fmarier,167821,2014-06-05T08:39:19Z,CONTRIBUTOR,True,106,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,33f8438531353b629ad713441c7239addab58ca4,Successful password resets need to clear bad logins (fix #35)
332,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/37,37,Refactor remote tests that peak into memcache,"Also includes a nitfix for @dannycoates (`catch` v. `caught`).
",fmarier,167821,2014-06-05T08:35:29Z,CONTRIBUTOR,True,177,304,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e197438f23e387e3d4836f595ccbd5986f5be749,"Use catch instead of caught

According to @dannycoates in #36, the community doesn't seem to
care about catch being a reserved word, so let's use the more
idiomatic function."
333,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/37,37,Refactor remote tests that peak into memcache,"Also includes a nitfix for @dannycoates (`catch` v. `caught`).
",fmarier,167821,2014-06-05T08:35:29Z,CONTRIBUTOR,True,177,304,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a9e2a29989e5e6c57ef1a4047103158f69a69cd0,Refactor common memcache operations into a helper
334,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/36,36,Add new blockIp and blockEmail API endpoints,"This will allow opsec to let us know about email or IP addresses that should be banned from FxA.
",fmarier,167821,2014-06-03T12:41:30Z,CONTRIBUTOR,True,426,73,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6f7e1ed55d79f281c60468dc7627670088a87813,"Distinguish between banning and rate-limiting

The current automatic blocking that we have only covers rate-limiting
to slow down abuse.

It should be distinguished from outright bans of bad IPs / emails
(which we have yet to implement)."
335,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/36,36,Add new blockIp and blockEmail API endpoints,"This will allow opsec to let us know about email or IP addresses that should be banned from FxA.
",fmarier,167821,2014-06-03T12:41:30Z,CONTRIBUTOR,True,426,73,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f8409fb6c6a0db33e996b4ad5967a533b46474cc,"Add a new blockEmail API endpoint

This allows a third-party to ban a given email address for a given
period of time."
336,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/36,36,Add new blockIp and blockEmail API endpoints,"This will allow opsec to let us know about email or IP addresses that should be banned from FxA.
",fmarier,167821,2014-06-03T12:41:30Z,CONTRIBUTOR,True,426,73,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,76dc3dc9da268038909dc2dfd1e4b6659209626b,"Add a new blockIp API endpoint

This allows a third-party to ban a given ip address for a given
period of time."
337,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/36,36,Add new blockIp and blockEmail API endpoints,"This will allow opsec to let us know about email or IP addresses that should be banned from FxA.
",fmarier,167821,2014-06-03T12:41:30Z,CONTRIBUTOR,True,426,73,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e6ee296f1362b661a670bdde5dc2c70e399b927e,"Always clear everything before the functional tests

We should always clear everything in memcache before running the
functional tests otherwise future unit tests may make them fail."
338,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/36,36,Add new blockIp and blockEmail API endpoints,"This will allow opsec to let us know about email or IP addresses that should be banned from FxA.
",fmarier,167821,2014-06-03T12:41:30Z,CONTRIBUTOR,True,426,73,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1991a223fe4021e2b8734bf2aafbe5aa70378a0b,Make IP and email addresses bans last for 24 hours
339,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/34,34,record coverage data from the main process,"Mostly the same as https://github.com/chilts/fxa-auth-db-server/pull/1/files to get full coverage of the daemon.
",jrgm,758162,2014-05-28T05:58:12Z,CONTRIBUTOR,True,10,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,032810254c06e21e1de06c8e55a2d92043ec69bf,record coverage data from the main process
340,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/31,31,Add README and CONTRIBUTING (fix #16),"This one is for @pdehaan!
",fmarier,167821,2014-05-21T04:52:29Z,CONTRIBUTOR,True,98,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d7ee39319c6f4a5aae895474798a23f9fb517546,Steal README and CONTRIBUTING from fxa-auth-server
341,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/31,31,Add README and CONTRIBUTING (fix #16),"This one is for @pdehaan!
",fmarier,167821,2014-05-21T04:52:29Z,CONTRIBUTOR,True,98,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2acc86fabd8d195048a7f157bac20bf2588fa05d,Customize README and CONTRIBUTING for this repo
342,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/30,30,Remove unused badAgent code,"This stuff was never actually implemented and it sounds like a
different approach should be taken (see #25).
",fmarier,167821,2014-05-20T04:50:37Z,CONTRIBUTOR,True,29,46,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2319e511127b2f6a724b5fb37b28ef99874de30d,"Remove unused badAgent code

This stuff was never actually implemented and it sounds like a
different approach should be taken (see #25)."
343,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/29,29,Add a few useful comments to describe what's going on,,fmarier,167821,2014-05-20T03:51:00Z,CONTRIBUTOR,True,10,7,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cfd5eb4b8d98a6ac629c13b5774787dc5af8e885,Add a few useful comments to describe what's going on
344,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/19,19,Use grunt to run jshint and check for copyright headers (fix #17),"This should address most of @pdehaan's suggestions in #17.
",fmarier,167821,2014-05-16T05:09:15Z,CONTRIBUTOR,True,74,89,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f95b7e257c574168adcdf09c5669b2058c582947,"Take `trailing` out since it got removed in jshint 2.5.0

https://github.com/jshint/jshint/releases/tag/2.5.0"
345,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/19,19,Use grunt to run jshint and check for copyright headers (fix #17),"This should address most of @pdehaan's suggestions in #17.
",fmarier,167821,2014-05-16T05:09:15Z,CONTRIBUTOR,True,74,89,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,194a1b97e32e7d81fbb443e9c4b4931ca39a9bae,"Add a few more jshint option suggested by @pdehaan

https://github.com/mozilla/fxa-customs-server/issues/17#issuecomment-43251627"
346,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/19,19,Use grunt to run jshint and check for copyright headers (fix #17),"This should address most of @pdehaan's suggestions in #17.
",fmarier,167821,2014-05-16T05:09:15Z,CONTRIBUTOR,True,74,89,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b29c44ff99fb22319ebf61b962ba4969ca8e2c6f,"Check for unused variables

Dirty hack to silence a warning that is already fixed in #18."
347,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/19,19,Use grunt to run jshint and check for copyright headers (fix #17),"This should address most of @pdehaan's suggestions in #17.
",fmarier,167821,2014-05-16T05:09:15Z,CONTRIBUTOR,True,74,89,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1648f1216a7dad80eb7b07d0cfb92c361a7def91,Get rid of reserved words
348,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/19,19,Use grunt to run jshint and check for copyright headers (fix #17),"This should address most of @pdehaan's suggestions in #17.
",fmarier,167821,2014-05-16T05:09:15Z,CONTRIBUTOR,True,74,89,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,38a12b1c5de88e7ef3b0bf3693df3f7046f3daa5,Use grunt to run jshint and check for copyright headers
349,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/18,18,Block IP addresses the second time they use a banned user agent,,fmarier,167821,2014-05-16T03:28:38Z,CONTRIBUTOR,False,21,8,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a05f81121310c7cb442651106b81d5ca0b6a29cd,Block IP addresses the second time they use a banned user agent
350,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/15,15,adding a few missing fields to package.json,"I'd also like to add something to ""description"" (especially before publishing to npm), but I'm not sure what this repo does or what to put there.
",pdehaan,557895,2014-05-15T17:00:02Z,CONTRIBUTOR,True,16,5,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f38d324e287e8d3b440056afdb6a9256d21b0474,adding a few missing fields to package.json
351,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/14,14,"Run the main server on ""npm start""",,fmarier,167821,2014-05-15T06:16:09Z,CONTRIBUTOR,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,278ee584a5f3d5d3b77ab1a773b0558b9f9e46a9,"Run the main server on ""npm start"""
352,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ebae35fee80f281e3c696cd3430b05931e6a1707,"Add basic framework for tests against the API

Unit tests are now in `test/local` and API tests in `test/remote`."
353,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1174f369dce00875e6f62300c14043a1cd1d904a,Full test of the / API endpoint
354,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6b2bb8b69a88ac364697b67d256d85774ebc6b8d,Add error checking to all API endpoints
355,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,17e302e48a8d5eab697d7371f262c5bffbec6b6b,Basic testing of the `/failedLoginAttempt` and `/passwordReset` endpoints
356,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9e319d2093e94cfd2f1d6f34cecd2bbb2d5ab949,Basic testing of the /check endpoint
357,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9732e563275b927dabc087ffd35eb22dbfdc1553,Include all parameters in the logging of /check
358,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8ea5ad03231656be0e8183e98768c2e002d1c686,Remove unreachable return statement
359,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6b2ce3674016a297aec8b4b4bc37acdd2eabb398,Travis needs to run memcached for the functional tests to work
360,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,92c462dd472034b969d6228a15031a7f17f1268c,"Functional test: blocking an email with too many failed logins

The test looks like this:

1. clear all bad logins
2. check that the account is not over the limit
3. use the /failedLoginAttempt endpoint to go over that limit
4. check that we are over the limit
5. wait until the bad logins expire
6. check that we're no longer over the limit"
361,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ce9840f738d0806da0fbe1d8b0495094e8be58bb,"Functional test: blocking an email that was sent too many messages

The test looks like this:

1. clear all blocked emails
2. check that the account is not blocked
3. use the /check endpoint to simulate password resets via email
4. check that the email gets blocked
5. wait until the block expires
6. check that we're no longer blocked"
362,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/13,13,Functional tests,,fmarier,167821,2014-05-14T10:57:58Z,CONTRIBUTOR,True,833,10,17,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,039457f98f4701a2ad85069b0c81c08f876aa455,"Functional test: simulating a few bad logins and emails

The test looks like this:

1. clear all blocked emails and bad logins
2. check that the account is not blocked or over the bad login limit
3. use the /check endpoint to simulate password resets via email
4. check that the email is not blocked
5. use the /failedLoginAttempt endpoint to go up to the limit
6. check that we're still under the limit
7. check that we can still login"
363,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/11,11,Ass coverage (fix #4),,fmarier,167821,2014-05-07T06:41:03Z,CONTRIBUTOR,True,98,3,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,adee385a5e160638f61dae3ed5a849a3e32a2bb2,"Enable test coverage analysis using ass (fix #4)

This script comes from fxa-auth-server but it is always run with
the test in this project."
364,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/11,11,Ass coverage (fix #4),,fmarier,167821,2014-05-07T06:41:03Z,CONTRIBUTOR,True,98,3,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,abd6ffe9910a67bd75d4fb05c2f6a1082ca88be2,Add more email_record unit tests to get 100% coverage
365,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/10,10,Add jshint to the tests (fix #6),"This is inspired by the test of the same name in browserid-local-verify
(https://github.com/mozilla/browserid-local-verify/blob/404bdcd158094aaaeb412b8eb0263243c79f8b92/tests/jshint.js) and enables all of the checks that pass.
",fmarier,167821,2014-05-06T11:36:58Z,CONTRIBUTOR,True,100,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ce6109aba2e756e98f15c19f4a3b4f62b62ae810,"Add jshint to the tests (fix #6)

This is inspired by the test of the same name in browserid-local-verify
(https://github.com/mozilla/browserid-local-verify/blob/404bdcd158094aaaeb412b8eb0263243c79f8b92/tests/jshint.js) and enables all of the checks that pass."
366,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/9,9,ip_email_record tests,"There's a lot of duplicated code between `email_record.js`, `ip_record.js` and `ip_email_record.js` which should be refactored, but I figured adding tests first would be helpful.
",fmarier,167821,2014-05-06T05:20:45Z,CONTRIBUTOR,True,212,13,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,34ade928a19655758ccc7369c58d7f025f326b28,Make the now() function configurable to facilitate testing
367,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/9,9,ip_email_record tests,"There's a lot of duplicated code between `email_record.js`, `ip_record.js` and `ip_email_record.js` which should be refactored, but I figured adding tests first would be helpful.
",fmarier,167821,2014-05-06T05:20:45Z,CONTRIBUTOR,True,212,13,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,57900f50eb7d6b28cbf865c2199b99ca932273fb,Copy the retryAfter function from email_record.js
368,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/9,9,ip_email_record tests,"There's a lot of duplicated code between `email_record.js`, `ip_record.js` and `ip_email_record.js` which should be refactored, but I figured adding tests first would be helpful.
",fmarier,167821,2014-05-06T05:20:45Z,CONTRIBUTOR,True,212,13,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,390c2db2acd7c07a442467417615ac79050cdbf6,"Move allowed actions to an array

This is similar to how it's done in `email_record.js`."
369,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/9,9,ip_email_record tests,"There's a lot of duplicated code between `email_record.js`, `ip_record.js` and `ip_email_record.js` which should be refactored, but I figured adding tests first would be helpful.
",fmarier,167821,2014-05-06T05:20:45Z,CONTRIBUTOR,True,212,13,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,669e077fc7d92386407eab35fcb0412dea0ed805,Add unit tests for ip_email_record.js
370,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/8,8,Add a copy of the MPL and put tests in Public Domain,"As suggested on https://www.mozilla.org/MPL/headers/
",fmarier,167821,2014-05-06T04:31:16Z,CONTRIBUTOR,True,376,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e36c0fc9f937ceea534f69247ef92a5be335393f,"Add a copy of the MPL and put tests in Public Domain

As suggested on https://www.mozilla.org/MPL/headers/"
371,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1c78781088f27207d907b036aab2eb386d5863,Make the InvalidAgentInterval configurable
372,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46c9df259ebcca37beb3c41ffbfaae2d39a8790b,Pass the missing BLOCK_INTERVAL_MS to the ip_record
373,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3cf9d873984cc9621197b0897cbd51520aab0847,Check for blocks against the right interval
374,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9f1f3843dc6cc6d6df20745e46654d3086f8f874,Make the now() function configurable to facilitate testing
375,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c54a908ffadd96d8771400a538c32df0d364f88f,Copy the retryAfter function from email_record.js
376,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/7,7,ip_record tests,"Big cleanup of `ip_record.js` while writing unit tests for it.
",fmarier,167821,2014-05-06T04:24:03Z,CONTRIBUTOR,True,93,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,96c4a4906ea1e88948f912a021ed2360f732a21b,Add unit tests for ip_record.js
377,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/5,5,Adds travis.yml,,vladikoff,128755,2014-05-05T22:59:51Z,CONTRIBUTOR,True,18,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,55d632dd2a0ea976f2fb20d830118eb706211ac9,Adds travis.yml
378,https://api.github.com/repos/mozilla/fxa-customs-server/pulls/1,1,Add tests for the rest of email_record.js,,fmarier,167821,2014-05-05T08:29:25Z,CONTRIBUTOR,True,108,6,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f057917f091af1d52fce8dfc1f810de7d72f3e71,Add tests for the rest of email_record.js
