,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/17,17,Add example to README with filter expression,,gene1wood,1134034,2020-03-19T02:42:30Z,MEMBER,True,12,0,1,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,840b790e143af0f4614e12fdccef8de5afb8e394,Add example to README with filter expression
1,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/16,16,Add an automatic template validation (based on the GuardDuty repo),"This PR adds:
- The dependencies to validate the CloudFormation template (using cfn-lint) 
- A Travis CI file to execute it on the PR
- A gitignore (for Python and macOS) ",NitriKx,1231438,2019-05-24T20:24:22Z,NONE,False,168,0,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,ae75da1b3f7cfd004f4debab4e5d5b60631bed0e,Add an automatic template validation (based on the GuardDuty repo)
2,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/15,15,Refactor the DynamoDB template to use CloudFormation parameters,"This PR will allow to change the DynamoDB names directly from the CloudFormation parameters. I see multiple advantages to that:
- The user will be able to comply with his own naming convention
- You can reference a central template in multiple deployments (you can before but not in the same account) 
- It is not breaking your actual deployment scripts (as the default values remain the same) 
",NitriKx,1231438,2019-05-24T20:03:32Z,NONE,False,219,119,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,073448cb0c48896391606c966f1e7534c6f2369e,Refactor the template to use CloudFormation parameters instead of hardcoded values
3,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/15,15,Refactor the DynamoDB template to use CloudFormation parameters,"This PR will allow to change the DynamoDB names directly from the CloudFormation parameters. I see multiple advantages to that:
- The user will be able to comply with his own naming convention
- You can reference a central template in multiple deployments (you can before but not in the same account) 
- It is not breaking your actual deployment scripts (as the default values remain the same) 
",NitriKx,1231438,2019-05-24T20:03:32Z,NONE,False,219,119,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,197b1442a69336954a8518e544a27de3e5793f35,Add the DynamoDB table name as an output to make it easier to include as a nested stack
4,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/15,15,Refactor the DynamoDB template to use CloudFormation parameters,"This PR will allow to change the DynamoDB names directly from the CloudFormation parameters. I see multiple advantages to that:
- The user will be able to comply with his own naming convention
- You can reference a central template in multiple deployments (you can before but not in the same account) 
- It is not breaking your actual deployment scripts (as the default values remain the same) 
",NitriKx,1231438,2019-05-24T20:03:32Z,NONE,False,219,119,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,693ab477a44be7037ce9be45e5164dfc4abe3bdf,Add parameters to the SNS creation stacks
5,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/14,14,Add Mozilla Code of Conduct,"Fixes #13


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-30T07:04:56Z,CONTRIBUTOR,True,15,0,1,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,d96d3b8ff867733b7ec0e3f6c61e0a117e9729f9,"Add Mozilla Code of Conduct file

Fixes #13.

_(Message COC002)_"
6,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/11,11,Update db schema and add category field back in,"This updates the DB schema to version 4.0.0
This changes the partition key and sort key and establishes an additional Global Secondary Index
These changes facilitate querying for either the items in a given AWS account
or the items with a given category value",gene1wood,1134034,2019-01-25T19:40:46Z,MEMBER,True,103,55,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,6ac569c715702973f1a6647aa1f996d1143975f0,Add more tests to the test emission
7,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/11,11,Update db schema and add category field back in,"This updates the DB schema to version 4.0.0
This changes the partition key and sort key and establishes an additional Global Secondary Index
These changes facilitate querying for either the items in a given AWS account
or the items with a given category value",gene1wood,1134034,2019-01-25T19:40:46Z,MEMBER,True,103,55,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,8d73c6cab6f0cc92cb6eac4b935845a4119d2564,"Update db schema and add category field back in

This updates the DB schema to version 4.0.0
This changes the partition key and sort key and establishes an additional Global Secondary Index
These changes facilitate querying for either the items in a given AWS account
or the items with a given category value"
8,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/10,10,Improve makefile,"* Break out all stack operations into separate make targets
* Add a second emission to the test ",gene1wood,1134034,2019-01-23T16:12:31Z,MEMBER,True,12,0,2,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,ad0ade9de82185106737fcd54b653f12466d6217,"Improve Makefile

Break out all stack operations into separate make targets"
9,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/10,10,Improve makefile,"* Break out all stack operations into separate make targets
* Add a second emission to the test ",gene1wood,1134034,2019-01-23T16:12:31Z,MEMBER,True,12,0,2,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,7e083273908fde2d42df5d73fe1eae7950451a31,Add a second emission to the test
10,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/10,10,Improve makefile,"* Break out all stack operations into separate make targets
* Add a second emission to the test ",gene1wood,1134034,2019-01-23T16:12:31Z,MEMBER,True,12,0,2,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,b5792b48c97d2d0eb6af23e71905fc683f77740f,Merge branch 'master' into improve-makefile
11,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/9,9,Change DynamoDB Schema,"This changes from using
* partition key : account id
* sort key : stack id

to

* partition key : stack id
* sort key : logical resource id

so that each resource within a given CloudFormation stack has unique rights to edit/delete the attributes it sets. This allows a stack to have multiple resources that emit data and for a single stack to produce multiple records in DynamoDB",gene1wood,1134034,2019-01-23T00:10:02Z,MEMBER,True,67,21,4,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,05af1329cae594f48bccd70b329a5f33e2153849,Update Makefile with new granular targets
12,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/9,9,Change DynamoDB Schema,"This changes from using
* partition key : account id
* sort key : stack id

to

* partition key : stack id
* sort key : logical resource id

so that each resource within a given CloudFormation stack has unique rights to edit/delete the attributes it sets. This allows a stack to have multiple resources that emit data and for a single stack to produce multiple records in DynamoDB",gene1wood,1134034,2019-01-23T00:10:02Z,MEMBER,True,67,21,4,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,f85c76115d0fdaf76197df8d7fdb775fa5dfe449,"Change DB Schema

This changes from using
* partition key : account id
* sort key : stack id

to

* partition key : stack id
* sort key : logical resource id

so that each resource within a given CloudFormation stack has unique rights to edit/delete the attributes it sets. This allows a stack to have multiple resources that emit data and for a single stack to produce multiple records in DynamoDB"
13,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/8,8,Setup public publishing of templates,"Update README with public locations
Create Makefile to publish templates
Move templates into cloudformation directory",gene1wood,1134034,2019-01-11T22:50:31Z,MEMBER,True,52,7,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,1aa5f5d067676564d48705a709408fa2a63f9895,"Setup public publishing of templates

Update README with public locations
Create Makefile to publish templates
Move templates into cloudformation directory"
14,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/7,7,Fix stack updates causing deletion,"Previously, the PhysicalResourceId was generated each time the Lambda function
was called. This was causing stack updates to result in
* update event
* response back to AWS with a new PhysicalResourceId
* delete event
* deletion of the record in DynamoDB

This is because AWS checks to see if the PhysicalResourceId has changed and if
it has it triggers a Delete : https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#w2ab1c21c10c51c19c19

Now the Lambda function checks for the presense of a PhysicalResourceId in the
message and uses that if it's present instead of generating one",gene1wood,1134034,2018-12-29T19:48:01Z,MEMBER,True,24,12,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,ea8f91c7dcad2dfce6d83668a2f7ce43c809b42d,"Fix stack updates causing deletion

Previously, the PhysicalResourceId was generated each time the Lambda function
was called. This was causing stack updates to result in
* update event
* response back to AWS with a new PhysicalResourceId
* delete event
* deletion of the record in DynamoDB

This is because AWS checks to see if the PhysicalResourceId has changed and if
it has it triggers a Delete : https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html#w2ab1c21c10c51c19c19

Now the Lambda function checks for the presense of a PhysicalResourceId in the
message and uses that if it's present instead of generating one"
15,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/6,6,Decompose infrastructure stacks and change DynamoDB schema,"The original design did not account for emitting stacks in regions
other than the region in which the infrastructure was deployed.

This is fixed by
* Separating the Lambda function IAM role into it's own stack
* Moving to a model where the ""consumer"" stack which contains the
  SNS topic and Lambda function are deployed in each region that
  you want to support receiving emissions in

The DynamoDB schema was also changed to prevent multiple stacks
in the same account from overwriting each other. Originally this
was intentional in the design but after working through trying to
use it, it became apparent that it wasn't ideal.

The new schema continues to use the account id as the partition key
but changes the sort key from ""category"" to the GUID of the
CloudFormation stack that emitted the record.

Additional cleanup includes
* Deleting the ServiceToken attribute so it's not stored in the DyanmoDB
  record
* Adding an attribute with the region of the emitting stack
* Removing the table provsioning from the Lambda function as this is
  handled in the dedicated DynamoDB CloudFormation template
* Added documentation and examples of how to constrain emitting stacks
  to only regions in which you've deployed the consuming infrastructure

Fixes #5",gene1wood,1134034,2018-12-29T00:09:24Z,MEMBER,True,148,135,6,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,0a7798d77250e60c1986a383216aede57cf413c9,"Decompose infrastructure stacks and change DynamoDB schema

The original design did not account for emitting stacks in regions
other than the region in which the infrastructure was deployed.

This is fixed by
* Separating the Lambda function IAM role into it's own stack
* Moving to a model where the ""consumer"" stack which contains the
  SNS topic and Lambda function are deployed in each region that
  you want to support receiving emissions in

The DynamoDB schema was also changed to prevent multiple stacks
in the same account from overwriting each other. Originally this
was intentional in the design but after working through trying to
use it, it became apparent that it wasn't ideal.

The new schema continues to use the account id as the partition key
but changes the sort key from ""category"" to the GUID of the
CloudFormation stack that emitted the record.

Additional cleanup includes
* Deleting the ServiceToken attribute so it's not stored in the DyanmoDB
  record
* Adding an attribute with the region of the emitting stack
* Removing the table provsioning from the Lambda function as this is
  handled in the dedicated DynamoDB CloudFormation template
* Added documentation and examples of how to constrain emitting stacks
  to only regions in which you've deployed the consuming infrastructure"
16,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/4,4,Add last updated field,"* Add new last-updated field
* Add documentation
* Add template to create the DynamoDB table",gene1wood,1134034,2018-12-19T00:06:11Z,MEMBER,True,101,5,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,f827877ffdb34023bd84918ceff03c5b96907dfc,Add last-updated field
17,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/4,4,Add last updated field,"* Add new last-updated field
* Add documentation
* Add template to create the DynamoDB table",gene1wood,1134034,2018-12-19T00:06:11Z,MEMBER,True,101,5,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,ac58aab9d4db3be2e525df1b47f01a87330c3e8c,Add template to create DynamoDB table
18,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/4,4,Add last updated field,"* Add new last-updated field
* Add documentation
* Add template to create the DynamoDB table",gene1wood,1134034,2018-12-19T00:06:11Z,MEMBER,True,101,5,5,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,e780658bc0423fd241491f271bc8c5d7dd20306a,Add documentation
19,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/2,2,Initial commit of the tool,,gene1wood,1134034,2018-11-14T21:25:16Z,MEMBER,True,301,0,3,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,22cae4a9e57d04943420ee9ff48ef20af48dcc50,Initial commit of the tool
20,https://api.github.com/repos/mozilla/cloudformation-cross-account-outputs/pulls/1,1,Add DynamoDB schema description,,gene1wood,1134034,2018-11-14T15:20:16Z,MEMBER,True,13,0,1,System to enable AWS CloudFormation stacks to emit data into other AWS accounts,Makefile,86294a2b46f520c56516c4a6f9e98b64e02b7e0f,Add DynamoDB schema description
