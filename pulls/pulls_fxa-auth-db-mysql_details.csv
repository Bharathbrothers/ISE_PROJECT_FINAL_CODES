,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/498,498,chore(docs): Point readme at monorepo,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2019-04-03T05:50:47Z,MEMBER,True,2,180,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1bb2e1bba040fa3e2badab4a8a7dd9bd7e2eef65,chore(docs): Point readme at monorepo
1,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/497,497,Add Mozilla Code of Conduct,"Fixes #496


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T05:03:22Z,NONE,False,15,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cb12bd77063969dae39844498cdf21074888b04b,"Add Mozilla Code of Conduct file

Fixes #496.

_(Message COC002)_"
2,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/495,495,Uplift Train 133 to master,,vladikoff,128755,2019-03-19T14:47:16Z,CONTRIBUTOR,True,631,114,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1123e32805d4efbdc773eb73776b2e11cd97885d,feat(devices): Add ability to associate a device record with a refesh token.
3,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/495,495,Uplift Train 133 to master,,vladikoff,128755,2019-03-19T14:47:16Z,CONTRIBUTOR,True,631,114,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c3aec801f57750cf79f19021ee1bd247b348c154,"Merge pull request #483 from mozilla/feature.devices2

feat(devices): Add ability to associate a device record with a refesh token"
4,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/495,495,Uplift Train 133 to master,,vladikoff,128755,2019-03-19T14:47:16Z,CONTRIBUTOR,True,631,114,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9d335cfcb368fc84ed65daaf759bb7a6aeef1854,Release v1.133.1
5,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/495,495,Uplift Train 133 to master,,vladikoff,128755,2019-03-19T14:47:16Z,CONTRIBUTOR,True,631,114,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,69e3d4048d4eef65a1a5c76b9dd7f674bf87382b,"Merge pull request #494 from mozilla/train-133-1

Release v1.133.1"
6,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/494,494,Release v1.133.1,,vladikoff,128755,2019-03-19T14:30:19Z,CONTRIBUTOR,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9d335cfcb368fc84ed65daaf759bb7a6aeef1854,Release v1.133.1
7,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/493,493,Merge train-133 into master,@mozilla/fxa-devs r?,philbooth,64367,2019-03-19T11:35:59Z,CONTRIBUTOR,True,63,57,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f6297040c12309f8b46cbb721d882d9cb4c2a1ad,chore(package): update shrinkwrap
8,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/493,493,Merge train-133 into master,@mozilla/fxa-devs r?,philbooth,64367,2019-03-19T11:35:59Z,CONTRIBUTOR,True,63,57,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,169825948c7b7414f0294425e549929335d82afb,Release v1.133.0
9,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/492,492,chore(devices): Add explicit deletes to replace `ON DELETE CASCADE`.,"Per https://github.com/mozilla/fxa-auth-db-mysql/pull/483/files#r265148343 this is a preparatory migration that should allow us to fix https://github.com/mozilla/fxa-auth-db-mysql/issues/485 without missing any deletes.

This will need to be deployed before #483 in order to get the desired affect.",rfk,34695,2019-03-14T05:34:01Z,MEMBER,True,113,7,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,75aba96bd74fb1fc359f0a24526cfaad4a6508a3,"chore(devices): Add explicit deletes to replace `ON DELETE CASCADE`.

This is a preparatory migration that will allow us to drop the FK
constraints on the device table without missing an deletions."
10,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/486,486,Release v1.132.0,,vbudhram,1295288,2019-03-05T14:57:58Z,CONTRIBUTOR,True,23,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6b51e6fa66efbe69ac7c9959570c50d23566a2b9,Release v1.132.0
11,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/484,484,chore(routes): Remove last vestiges of `sessionWithDevice` route.,"The default `sessionToken` route now returns device info all the time, this this extra route is unnecessary.  Goes with https://github.com/mozilla/fxa-auth-server/pull/2934, and IIRC we can ship them in the same train due to the way that auth and auth-db are always deployed as a pair.",rfk,34695,2019-02-27T09:16:51Z,MEMBER,True,2,71,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0e5115b3cb3e7df8b15e476f86a6d38ccbcf679a,"chore(routes): Remove last vestiges of `sessionWithDevice` route.

The default `sessionToken` route now returns device info all the time,
this this extra route is unnecessary."
12,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/483,483,feat(devices): Add ability to associate a device record with a refesh token,"~~Extremely WIP, but sharing early for context.  PR is currently targetting #482 since it builds on that db migration chain, we'll have to get that merged and rebase this PR before we can merge to master.~~

~~This is now ready for testing and review, but I'm going to leave it as ""draft"" until we've tried it end-to-end with the corresponding auth-server changes.~~

This is ready for merge, but IIUC we want to do it as a point-release after #492 has hit production.

Fixes #480, Fixes #485; /cc @vladikoff @shane-tomlinson @eoger ",rfk,34695,2019-02-27T05:50:50Z,MEMBER,True,619,112,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1123e32805d4efbdc773eb73776b2e11cd97885d,feat(devices): Add ability to associate a device record with a refesh token.
13,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/482,482,feat(account): Add `profileChangedAt` and `keysChangedAt` columns,"Fixes #481.

This undoes the backout in https://github.com/mozilla/fxa-auth-db-mysql/pull/417, and adds some very minimal code for reading the new `keysChangedAt` column which was added as part of the same production migration.  The `keysChangedAt` column will always be null for now, until we add code in the auth-server to know when to set it.",rfk,34695,2019-02-27T03:42:56Z,MEMBER,True,316,28,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,02e944cabad186187e8aaa3897634352f59f11b8,feat(account): Add `profileChangedAt` and `keysChangedAt` to the `accounts` table.
14,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/477,477,chore(deploy): upgrade to node 10,"Fixes #476.

Updates the dockerfile and circle to use node 10 images. Also updates nyc because of the handlebars nsp advisory. Didn't get any problems updating, so not sure what I did differently to @shane-tomlinson after he mentioned something in the meeting yesterday.

I figured we could try this for train 131? Otherwise there's nothing in master that merits tagging a new release.

@mozilla/fxa-devs r?",philbooth,64367,2019-02-20T11:16:09Z,CONTRIBUTOR,True,265,364,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f3bc95407a26b2c39a0fce63172db12feff8fc19,chore(deploy): upgrade to node 10
15,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/477,477,chore(deploy): upgrade to node 10,"Fixes #476.

Updates the dockerfile and circle to use node 10 images. Also updates nyc because of the handlebars nsp advisory. Didn't get any problems updating, so not sure what I did differently to @shane-tomlinson after he mentioned something in the meeting yesterday.

I figured we could try this for train 131? Otherwise there's nothing in master that merits tagging a new release.

@mozilla/fxa-devs r?",philbooth,64367,2019-02-20T11:16:09Z,CONTRIBUTOR,True,265,364,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,db987c347a08bc05117e65d2de9a752ae7eb96b0,chore(deps): update nyc
16,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/475,475,test(demo): set up triggers like pt-osc and check,"This sets up a ""mirror"" accounts table, and triggers to keep it up-to-date with the real accounts table as tests create/delete/update data. Simple demo for how a pt-online works (the ""mutations while the copy is in progress"" part.

Doesn't need to merge, it's mostly for demo/doc purposes.

ref mozilla/fxa-bugzilla-mirror#560",jrgm,758162,2019-02-07T22:48:25Z,CONTRIBUTOR,True,206,0,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ecb87b3433c1c1940c19463a7faaa440afed218d,test(demo): set up triggers like pt-osc and check
17,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/475,475,test(demo): set up triggers like pt-osc and check,"This sets up a ""mirror"" accounts table, and triggers to keep it up-to-date with the real accounts table as tests create/delete/update data. Simple demo for how a pt-online works (the ""mutations while the copy is in progress"" part.

Doesn't need to merge, it's mostly for demo/doc purposes.

ref mozilla/fxa-bugzilla-mirror#560",jrgm,758162,2019-02-07T22:48:25Z,CONTRIBUTOR,True,206,0,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c85cc7a4b0044e66648c9f386a72b6690e38936c,test(demo): add some comments to pt-osc demo
18,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/474,474,Release v1.130.0,,vbudhram,1295288,2019-02-05T18:38:38Z,CONTRIBUTOR,True,16,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a805ec601ce7c0bb75d2bd95bd9801ddb6a6ae16,Release v1.130.0
19,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/473,473,fix(tests): pass tests in node 10,"This came up in a meeting last week so I took a moment to dig into it. The approach I took was to move `scrypt-hash` to an optional dependency then use `crypto.scrypt` as a fallback implementation. The magic number math was required to prevent `memory limit exceeded` errors occurring with our value for `N`.

Equivalent PR for the auth server is also incoming, using the same approach.

@mozilla/fxa-devs r?",philbooth,64367,2019-02-01T18:21:51Z,CONTRIBUTOR,True,61,29,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,932f2dd755b0d6c1df2aba23cb2fec8c05e91b49,refactor(crypto): fall back to node's scrypt implementation
20,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/473,473,fix(tests): pass tests in node 10,"This came up in a meeting last week so I took a moment to dig into it. The approach I took was to move `scrypt-hash` to an optional dependency then use `crypto.scrypt` as a fallback implementation. The magic number math was required to prevent `memory limit exceeded` errors occurring with our value for `N`.

Equivalent PR for the auth server is also incoming, using the same approach.

@mozilla/fxa-devs r?",philbooth,64367,2019-02-01T18:21:51Z,CONTRIBUTOR,True,61,29,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5467e2fcb577c0e7f98c7acb4dd172fe4f15f12b,chore(ci): run tests on node 10
21,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/472,472,Release v1.129.0,,vbudhram,1295288,2019-01-24T03:35:41Z,CONTRIBUTOR,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,509e015d345974366781cab03be1581aea04c86c,Release v1.129.0
22,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/471,471,fix(test): add a test script to add account rows,"I wrote this script a while ago to create account rows for db migration testing. Might as well check it in.

It's extracted from other test code. It could be more efficient but it's good enough for its purpose.

r? - @mozilla/fxa-devs ",jrgm,758162,2019-01-12T05:02:47Z,CONTRIBUTOR,True,89,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3aa09cd05798ae472674b0eadaa719410812870e,fix(test): add a test script to add account rows
23,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/470,470,chore(deps): reshrink to get ramda deps,"Ran shrinkwrap to get the latest deps, fixes https://github.com/mozilla/fxa-auth-db-mysql/pull/469#issuecomment-452550967.

Target train-128, will create a point release after merge.",vbudhram,1295288,2019-01-09T15:15:02Z,CONTRIBUTOR,True,66,41,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,260063bd5ff39118cc07e51c195ac9326401d2f9,chore(deps): reshrink to get ramda deps
24,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/469,469,Release v1.128.0,,vbudhram,1295288,2019-01-09T02:36:31Z,CONTRIBUTOR,True,93,43,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f4e5e3555b758bd66b6380a5bc328f0481ec6d67,Release v1.128.0
25,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/469,469,Release v1.128.0,,vbudhram,1295288,2019-01-09T02:36:31Z,CONTRIBUTOR,True,93,43,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,260063bd5ff39118cc07e51c195ac9326401d2f9,chore(deps): reshrink to get ramda deps
26,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/469,469,Release v1.128.0,,vbudhram,1295288,2019-01-09T02:36:31Z,CONTRIBUTOR,True,93,43,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,93be27d3e803129d40bc3e960f844ac8d6b647e3,"Merge pull request #470 from mozilla/update-shrink

chore(deps): reshrink to get ramda deps"
27,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/469,469,Release v1.128.0,,vbudhram,1295288,2019-01-09T02:36:31Z,CONTRIBUTOR,True,93,43,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c34f63585e6dc4622fd26b1bb2a3d23233829a22,Release v1.128.1
28,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/468,468,fix(query): update set primary email query to not check if email is verified,"With the introduction of https://github.com/mozilla/fxa-auth-db-mysql/pull/445, I caused some breakage in set primary email. That PR added the check to ensure the new primary email is verified in db-server before setting it. The goal was to eventually remove it from the [auth-server](https://github.com/mozilla/fxa-auth-server/blob/master/lib/routes/emails.js#L763).

However, the new procedure isn't quite working as expected and content-server tests are failing. To help unblock content-server, this PR removes the check from the db-server and uses the auth-server check.

@mozilla/fxa-devs r?",vbudhram,1295288,2018-12-21T18:45:34Z,CONTRIBUTOR,True,40,20,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b9bc3c7b49bdec232e5b19211149089e93465c38,fix(query): update set primary email query to not check if email is verified
29,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/450,450,feat(npm): update shrink script,Connects to https://github.com/mozilla/fxa/issues/325,vladikoff,128755,2018-12-18T21:45:34Z,CONTRIBUTOR,True,308,380,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,96b3ce59a4904cfa19cc505ae1a6845400e47b3b,"feat(npm): update shrink script

Connects to https://github.com/mozilla/fxa/issues/325"
30,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/449,449,"Implement ""client instances"" and deprecate ""devices""","Fixes #444.

This isn't yet ready for review, but I had the WIP branch so figured I may as well push it for visibility.",rfk,34695,2018-12-17T07:15:49Z,MEMBER,False,1571,340,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,45f83d9a8a659d918e5fac0c03aad7225a4e9aad,"feat(instances): Implement ""client instances"" API, deprecating ""devices""."
31,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/446,446,Release v1.127.0,,vbudhram,1295288,2018-12-11T17:30:48Z,CONTRIBUTOR,True,22,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b4776fcee31c48f00621fde20b5254e70e637f1,Release v1.127.0
32,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/445,445,fix(query): remove `ROW_COUNT()` from remaining procedures,"Fixes #411 

This PR removes the use of `ROW_COUNT()` from our remaining procedures. Below is a summary of our use of `ROW_COUNT()` and when they were fixed.

- setPrimaryEmail
  - Fixed in setPrimaryEmail_4 (this PR)
- consumeRecoveryCode
  - Fixed in consumeRecoveryCode_3 (this PR)
- verifyTokensWithMethod
  - Fixed in verifyTokensWithMethod_3
- deleteEmail
  - Fixed in deleteEmail_2
- verifyTokenCode
  - Fixed in verifyTokenCode_2
- verifyEmail
  - Fixed in verifyEmail_4",vbudhram,1295288,2018-11-30T18:11:50Z,CONTRIBUTOR,True,138,10,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4e8b058384a016edcbb6a7c8692429265382a924,fix(query): remove `ROW_COUNT()` from remaining procedures
33,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/443,443,feat(scripts): a bunch of changes to the lint script,"Fixes #434. Fixes #440.

Pulled into a single PR because they're all related and it didn't seem like too great a burden for a single reviewer. But I'm happy to break them apart if you'd rather review them independently.

* In 82170eb, I add a lint for `FOREIGN KEY` constraints in `CREATE TABLE` statements.

* In daf2677, I add a lint for email arguments of stored procedures, checking that they're declared with the expected `CHARACTER SET`.

* In 6065fe8, I refactor the `ROW_COUNT` checking stuff, so that it fits in with the pattern that has evolved with the preceding lints.

* In edf0bb4, I ignore a bunch of existing stored procedures that fail the new lints.

* In 3aeca8e, I develop the ignore format so that it can include both procedure and table names.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-28T11:32:57Z,CONTRIBUTOR,True,171,69,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,82170ebf450e837a67dcb0185c0c634d7d5d5b11,feat(scripts): check for FOREIGN KEY in migration lint script
34,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/443,443,feat(scripts): a bunch of changes to the lint script,"Fixes #434. Fixes #440.

Pulled into a single PR because they're all related and it didn't seem like too great a burden for a single reviewer. But I'm happy to break them apart if you'd rather review them independently.

* In 82170eb, I add a lint for `FOREIGN KEY` constraints in `CREATE TABLE` statements.

* In daf2677, I add a lint for email arguments of stored procedures, checking that they're declared with the expected `CHARACTER SET`.

* In 6065fe8, I refactor the `ROW_COUNT` checking stuff, so that it fits in with the pattern that has evolved with the preceding lints.

* In edf0bb4, I ignore a bunch of existing stored procedures that fail the new lints.

* In 3aeca8e, I develop the ignore format so that it can include both procedure and table names.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-28T11:32:57Z,CONTRIBUTOR,True,171,69,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,daf267713c2e237969c5644529bcac1818332cf9,feat(scripts): check for missing expected encodings on procedure args
35,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/443,443,feat(scripts): a bunch of changes to the lint script,"Fixes #434. Fixes #440.

Pulled into a single PR because they're all related and it didn't seem like too great a burden for a single reviewer. But I'm happy to break them apart if you'd rather review them independently.

* In 82170eb, I add a lint for `FOREIGN KEY` constraints in `CREATE TABLE` statements.

* In daf2677, I add a lint for email arguments of stored procedures, checking that they're declared with the expected `CHARACTER SET`.

* In 6065fe8, I refactor the `ROW_COUNT` checking stuff, so that it fits in with the pattern that has evolved with the preceding lints.

* In edf0bb4, I ignore a bunch of existing stored procedures that fail the new lints.

* In 3aeca8e, I develop the ignore format so that it can include both procedure and table names.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-28T11:32:57Z,CONTRIBUTOR,True,171,69,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6065fe8ee39c195cd3ee4fafe4f70af5804aaa73,refactor(scripts): harmonise row count stuff with rest of lint script
36,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/443,443,feat(scripts): a bunch of changes to the lint script,"Fixes #434. Fixes #440.

Pulled into a single PR because they're all related and it didn't seem like too great a burden for a single reviewer. But I'm happy to break them apart if you'd rather review them independently.

* In 82170eb, I add a lint for `FOREIGN KEY` constraints in `CREATE TABLE` statements.

* In daf2677, I add a lint for email arguments of stored procedures, checking that they're declared with the expected `CHARACTER SET`.

* In 6065fe8, I refactor the `ROW_COUNT` checking stuff, so that it fits in with the pattern that has evolved with the preceding lints.

* In edf0bb4, I ignore a bunch of existing stored procedures that fail the new lints.

* In 3aeca8e, I develop the ignore format so that it can include both procedure and table names.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-28T11:32:57Z,CONTRIBUTOR,True,171,69,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,edf0bb4d2afddcb6a006992ca64a3aba3abc336e,chore(scripts): ignore newly failing stored procedures
37,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/443,443,feat(scripts): a bunch of changes to the lint script,"Fixes #434. Fixes #440.

Pulled into a single PR because they're all related and it didn't seem like too great a burden for a single reviewer. But I'm happy to break them apart if you'd rather review them independently.

* In 82170eb, I add a lint for `FOREIGN KEY` constraints in `CREATE TABLE` statements.

* In daf2677, I add a lint for email arguments of stored procedures, checking that they're declared with the expected `CHARACTER SET`.

* In 6065fe8, I refactor the `ROW_COUNT` checking stuff, so that it fits in with the pattern that has evolved with the preceding lints.

* In edf0bb4, I ignore a bunch of existing stored procedures that fail the new lints.

* In 3aeca8e, I develop the ignore format so that it can include both procedure and table names.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-28T11:32:57Z,CONTRIBUTOR,True,171,69,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3aeca8e0fb207851a69da27f34759f6171037371,feat(scripts): lint-ignore tables that already have foreign keys
38,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/442,442,Release v1.126.0,,vbudhram,1295288,2018-11-27T19:39:52Z,CONTRIBUTOR,True,14,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54eb5ba191003c1ef37ddbc88eec8e697365c8c8,Release v1.126.0
39,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/441,441,"fix(account): don't use `LOWER(uid)` in account query, update `accountRecord`","Fixes #438 
Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/440

Opted to pull these two issues into one migration since they were both fairly small and not to introduce too much headache with merge conflicts for https://github.com/mozilla/fxa-auth-db-mysql/pull/436.

First commit:
Removes the `LOWER(uid)` from the `account_` stored procedure since it doesn't really change the query.

Second commit:
From https://github.com/mozilla/fxa-auth-db-mysql/issues/440, it specifies the charact set for `inEmail` as utf8 for the `accountRecord_` procedure. It also re enables coalescing in SQL rather than in code.",vbudhram,1295288,2018-11-27T17:44:19Z,CONTRIBUTOR,True,76,15,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d2cfe49cdeb4c8c6de82b9e7eab0c061fa59d2b1,fix(account): don't use `LOWER(uid)` in account query
40,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/441,441,"fix(account): don't use `LOWER(uid)` in account query, update `accountRecord`","Fixes #438 
Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/440

Opted to pull these two issues into one migration since they were both fairly small and not to introduce too much headache with merge conflicts for https://github.com/mozilla/fxa-auth-db-mysql/pull/436.

First commit:
Removes the `LOWER(uid)` from the `account_` stored procedure since it doesn't really change the query.

Second commit:
From https://github.com/mozilla/fxa-auth-db-mysql/issues/440, it specifies the charact set for `inEmail` as utf8 for the `accountRecord_` procedure. It also re enables coalescing in SQL rather than in code.",vbudhram,1295288,2018-11-27T17:44:19Z,CONTRIBUTOR,True,76,15,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a45c8a0f9565b096dde44a12d098bfa8fa3fcaeb,fix(account): update accountRecord to specify charset for inEmail
41,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/439,439,fix(tests): Don't put binary data into fake email addresses.,"Fixes #428.

I happened to be running a local MySQL with latin1 as the default encoding, and the sporadic token-pruning test failure from #428 triggered every single time on my machine.  It turns out that this test was trying to create an account for an email address of the form `<16 random bytes>@example.com`.

My theory is that on our CI machines where MySQL is using utf8 by default, such a string can *almost always* be stored correctly and allow the tests to pass.  But if the 16 random bytes happen to produce, say, the surrogate pair encoding of an emoji, then MySQL will do its fun utf8-versus-utf8mb4 thing and truncate the string, triggering a strict-mode failure.

On my local machine with latin1 encoding, such a string can *almost never* be stored correctly and hence I was able to reproduce the issue.'

Anyway, using hex rather than bytes appears to fix the issue.",rfk,34695,2018-11-22T03:55:44Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5c83dec91da9280da43c1f2e26c45ed4fcd4a0cb,"fix(tests): Don't put binary data into fake email addresses.

This avoids some sporadic test failures which would trigger
if the binary data happened to make a string that MySQL refused
to store."
42,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/437,437,Release v1.125.0,,vbudhram,1295288,2018-11-14T13:50:07Z,CONTRIBUTOR,True,21,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7fbcbc7d208523fdafbe524d7190e65479b2d848,Release v1.125.0
43,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/436,436,OAuth instance metadata DB changes,Connects to https://github.com/mozilla/fxa-auth-server/issues/2547,eoger,6424575,2018-11-08T01:14:30Z,CONTRIBUTOR,False,415,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7a44f97e586b9de6f9357425f25303f03ccf2ef7,wip
44,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/435,435,feat(mysql): test run on mysql 5.7,Connects to https://github.com/mozilla/fxa/issues/320,vladikoff,128755,2018-11-07T20:15:11Z,CONTRIBUTOR,False,10,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,79fd7224fbcb7bf23edcf95806f236b6ceec1f5f,feat(mysql): test run on mysql 5.7
45,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/435,435,feat(mysql): test run on mysql 5.7,Connects to https://github.com/mozilla/fxa/issues/320,vladikoff,128755,2018-11-07T20:15:11Z,CONTRIBUTOR,False,10,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,18c88cef4270391de625a283bfb9f833de10fb24,fix(mysql): fix travis mysql env
46,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/432,432,feat(test): Test on node 10,,shane-tomlinson,848085,2018-11-05T16:11:08Z,MEMBER,False,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,de36d52b5805dfccf65e02e969ccf7d0cc15dab6,feat(test): Test on node 10
47,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/431,431,chore(db): use mariadb-friendly drop index syntax,"Fixes #393.

Sometimes we get self-hosters or contributors showing up who want to use MariaDB. Even though the official line is that we don't support it, it happens often enough that we may as well just fix the places where we're incompatible. Afaik, that is just the `DROP INDEX` syntax in a couple of places.

Note there are also occurrences in the reverse migrations, which I haven't bothered to fix. Seeing as they're not invoked in normal running and need to be manually uncommented before running anyway, it seems reasonable for them to be manually edited if anyone needs to do so.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-02T14:24:20Z,CONTRIBUTOR,True,6,6,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f01b520a4be34ce0df686805ae5a0e097229314c,"chore(db): use mariadb-friendly drop index syntax

Sometimes we get self-hosters or contributors showing up who want to use
MariaDB. Even though the official line is that we don't support it, it
happens often enough that we may as well just fix the places where we're
incompatible. Afaik, that is just the `DROP INDEX` syntax in a couple of
places.

Note there are also occurrences in the reverse migrations, which I
haven't bothered to fix. Seeing as they're not invoked in normal running
and need to be manually uncommented before running anyway, it seems
reasonable for them to be manually edited if anyone needs to do so."
48,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/430,430,Merge train-124 into master,@mozilla/fxa-devs r?,philbooth,64367,2018-11-02T12:34:31Z,CONTRIBUTOR,True,272,262,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d44e10f397173f1d5f6ff2566a20440d6efa71c8,fix(package): update deps
49,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/430,430,Merge train-124 into master,@mozilla/fxa-devs r?,philbooth,64367,2018-11-02T12:34:31Z,CONTRIBUTOR,True,272,262,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7ff80b244e14501cbe88c768a03eac28ac14aa6b,"Merge pull request #429 from mozilla/pb/deps

https://github.com/mozilla/fxa-auth-db-mysql/pull/429
r=shane-tomlinson"
50,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/430,430,Merge train-124 into master,@mozilla/fxa-devs r?,philbooth,64367,2018-11-02T12:34:31Z,CONTRIBUTOR,True,272,262,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e8498a84ef641e7e63499c65a55ff9d093078988,Release v1.124.1
51,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/429,429,fix(package): update deps,"Needed for auth server patch, ref: mozilla/fxa-auth-server#2713.

@mozilla/fxa-devs r?",philbooth,64367,2018-11-02T07:21:48Z,CONTRIBUTOR,True,260,260,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d44e10f397173f1d5f6ff2566a20440d6efa71c8,fix(package): update deps
52,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/426,426,Merge train-124 into master,"Only just noticed I needn't have cut this, looks like nothing's happened on `master` other than merges from the train-123 branch. But I've started now so...

@mozilla/fxa-devs r?",philbooth,64367,2018-10-30T14:22:02Z,CONTRIBUTOR,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2dd33a14945d0d1bdc4db59086b116d76ba56575,Release v1.124.0
53,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/425,425,fix(scripts): stop the explain script tripping over git grep colours,"The explain script was using `cut` to split paths from git grep before the colon character. This fails on systems where control characters such as colours are emitted before the colon.

A more robust approach is to use a regex to pull out the specific text we're looking for. The script is already hard-coded with other paths like `lib/db/mysql.js`, so matching against the expected migration path doesn't seem like too much of a stretch to me.

@mozilla/fxa-devs r? (but mostly @shane-tomlinson r? because he has the system where we know it fails)",philbooth,64367,2018-10-30T13:28:05Z,CONTRIBUTOR,True,7,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ff0ac5c4a3f8719772567ef9798ccd594a7b6f90,"fix(scripts): stop the explain script tripping over git grep colours

The explain script was using `cut` to split paths from git grep before
the colon character. This fails on system where control characters such
as colours are emitted before the colon.

A more robust approach is to use a regex to pull out the specific text
we're looking for. The script is already hard-coded with other paths
like `lib/db/mysql.js`, so matching against the expected migration path
doesn't seem like too much of a stretch to me."
54,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/424,424,Uplift train-123 point-releases to master.,Fixes #422; @mozilla/fxa-devs r?,rfk,34695,2018-10-30T02:51:28Z,MEMBER,True,27,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,034b3b04d24622c0dadf25a3708f5774571163bf,fix(accountRecord): Rollback `accountRecord_4` due to unexplained performance issues.
55,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/424,424,Uplift train-123 point-releases to master.,Fixes #422; @mozilla/fxa-devs r?,rfk,34695,2018-10-30T02:51:28Z,MEMBER,True,27,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5b08dbae6b6f2f9704180686c81d7ccd77378763,fix(migration): Fix typo in SP name in reverse migration for 91.
56,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/424,424,Uplift train-123 point-releases to master.,Fixes #422; @mozilla/fxa-devs r?,rfk,34695,2018-10-30T02:51:28Z,MEMBER,True,27,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b2cd5f3d351541e554a3b6f9499ff0d6a941cc64,"Merge pull request #421 from mozilla/train-123-rollback-accountRecord_4; r=jrgm

fix(accountRecord): Rollback `accountRecord_4` due to unexplained performance issues"
57,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/424,424,Uplift train-123 point-releases to master.,Fixes #422; @mozilla/fxa-devs r?,rfk,34695,2018-10-30T02:51:28Z,MEMBER,True,27,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a87ea9a92648f4598de21e1c05e986204310f6ad,Release v1.123.3
58,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/423,423,fix(accountRecord): Improve query performance by avoiding a subselect.,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/433.  For your consideration @jrgm, does avoiding the subselect help create a performant version of this query?

(This can wait until after train-123 deployment has been resolved)",rfk,34695,2018-10-30T02:47:05Z,MEMBER,False,47,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5567aada869d70c24622b69f1d02039e32d0b8d1,fix(accountRecord): Improve query performance by avoiding a subselect.
59,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/421,421,fix(accountRecord): Rollback `accountRecord_4` due to unexplained performance issues,Connects to https://github.com/mozilla/fxa-content-server/issues/6655.  This reverts back to the previous `accountRecord_2` SP in order to unblock train-123.  @jrgm r?,rfk,34695,2018-10-30T01:42:21Z,MEMBER,True,14,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,034b3b04d24622c0dadf25a3708f5774571163bf,fix(accountRecord): Rollback `accountRecord_4` due to unexplained performance issues.
60,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/421,421,fix(accountRecord): Rollback `accountRecord_4` due to unexplained performance issues,Connects to https://github.com/mozilla/fxa-content-server/issues/6655.  This reverts back to the previous `accountRecord_2` SP in order to unblock train-123.  @jrgm r?,rfk,34695,2018-10-30T01:42:21Z,MEMBER,True,14,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5b08dbae6b6f2f9704180686c81d7ccd77378763,fix(migration): Fix typo in SP name in reverse migration for 91.
61,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/419,419,feat(scripts): add ROW_COUNT() checks to the procedure-linting script,"Related to #411.

In [bug 1499819](https://bugzilla.mozilla.org/show_bug.cgi?id=1499819), it was found that `ROW_COUNT()` causes db replication to lag. As such, it makes sense to grep for `ROW_COUNT()` in our stored procedure lint script. The script was called `scripts/explain-warn.js` before, but in light of the new functionality added here I've renamed it to the more generic `scripts/procedure-lint.js`.

Two procedures fall foul of the new checks, but I couldn't see an obvious way to work round them. In the case of `consumeRecoveryCode_2`, `ROW_COUNT()` is used as an interim signal for aborting the remainder of the procedure. In the case of `setPrimaryEmail_3`, the `UPDATE` is in a transaction which causes `affectedRows` to be zero upon returning.

But still, better to enable linting and ignore those two procedures for now than to not enable linting at all. They'd still remain in the tree without the linting there, all this does is ensure that we'll be warned in the future about any new occurrences of `ROW_COUNT()`, including in subsequent versions of those two procedures.

@mozilla/fxa-devs r?",philbooth,64367,2018-10-29T13:58:15Z,CONTRIBUTOR,True,75,25,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0eb01425ef3663413fe95c9620a9158032646871,"feat(scripts): add ROW_COUNT() checks to the procedure-linting script

In https://bugzilla.mozilla.org/show_bug.cgi?id=1499819, it was found
that `ROW_COUNT()` causes db replication to lag. As such, it makes sense
to grep for `ROW_COUNT()` in our stored procedure lint script.

The script was called `explain-warn.js` before, but in light of the new
functionality it's renamed here to the more generic `procedure-lint.js`."
62,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/419,419,feat(scripts): add ROW_COUNT() checks to the procedure-linting script,"Related to #411.

In [bug 1499819](https://bugzilla.mozilla.org/show_bug.cgi?id=1499819), it was found that `ROW_COUNT()` causes db replication to lag. As such, it makes sense to grep for `ROW_COUNT()` in our stored procedure lint script. The script was called `scripts/explain-warn.js` before, but in light of the new functionality added here I've renamed it to the more generic `scripts/procedure-lint.js`.

Two procedures fall foul of the new checks, but I couldn't see an obvious way to work round them. In the case of `consumeRecoveryCode_2`, `ROW_COUNT()` is used as an interim signal for aborting the remainder of the procedure. In the case of `setPrimaryEmail_3`, the `UPDATE` is in a transaction which causes `affectedRows` to be zero upon returning.

But still, better to enable linting and ignore those two procedures for now than to not enable linting at all. They'd still remain in the tree without the linting there, all this does is ensure that we'll be warned in the future about any new occurrences of `ROW_COUNT()`, including in subsequent versions of those two procedures.

@mozilla/fxa-devs r?",philbooth,64367,2018-10-29T13:58:15Z,CONTRIBUTOR,True,75,25,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ddf8631a386e13f7d0bd7e8667ff5379809bac5,"chore(scripts): lint-ignore consumeRecoveryCode_2 and setPrimaryEmail_3

These two scripts use ROW_COUNT() but I couldn't see an obvious way to
work round them. In the case of consumeRecoveryCode_2, ROW_COUNT() is
used as an interim signal for aborting the remainder of the procedure.
In the case of setPrimaryEmail_3, the UPDATE is in a transaction which
causes affectedRows to be zero upon returning."
63,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/418,418,Uplift train 123,,vbudhram,1295288,2018-10-26T19:04:06Z,CONTRIBUTOR,True,297,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4b4f7d490eeabe22315a6a19880ae2defeefd697,fix(account): rollback `profileChangedAt` migration
64,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/418,418,Uplift train 123,,vbudhram,1295288,2018-10-26T19:04:06Z,CONTRIBUTOR,True,297,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bc32a0e5a92b27986d413224c76532b55010c833,"Merge pull request #417 from mozilla/train-123-rollback-profilechangedat, r=@rfk"
65,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/418,418,Uplift train 123,,vbudhram,1295288,2018-10-26T19:04:06Z,CONTRIBUTOR,True,297,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a68bfa6aca234de6a08601a4da88427da2c82672,Release v1.123.2
66,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/418,418,Uplift train 123,,vbudhram,1295288,2018-10-26T19:04:06Z,CONTRIBUTOR,True,297,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa3f94dbe5a0961d336d6bbf34b6f2a783f4ff8c,Merge branch 'train-123' into master-uplift-train-123
67,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/417,417,Train 123 rollback profilechangedat,"From meeting earlier this PR rollbacks the `profileChangedAt` migration on the accounts table. Below are some notes I found while creating this

  * Opted to create new stored procedures instead of dropping procedures in migration 87. There was only once instance where a `DROP PROCEDURE` was performed in a forward migration and that was very early on.
  * Opted to colasce `profileChangedAt` when it is return from the `veriferSetAt` and `createdAt` timestamps since it seemed to reduce code churn in auth-server. I'm not opposed to dropping this value entirely since it doesn't 100% reflect last updated time.
* I haven't fully tested with auth-server, but remote tests seem to work (minus profileChangedAt asserts).

@rfk @jrgm Thoughts on this approach?",vbudhram,1295288,2018-10-26T04:01:04Z,CONTRIBUTOR,True,285,24,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4b4f7d490eeabe22315a6a19880ae2defeefd697,fix(account): rollback `profileChangedAt` migration
68,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
69,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c36f97b9aa14b177986e90a30c71025cc37dd7a,"Merge pull request #410 from mozilla/train-121-fix-replication, r=@jrgm

fix(account): update stored procedures to be more replication friendly"
70,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54bc2ed7cdf7ace9a44dbd684734709792753bf9,Release v1.121.1
71,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f64b4cb861f51c0ac339787dccb4f94d12819bf9,Merge branch 'train-121' into train-122-lift-121
72,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ab6cc7b7369122b07fa11b3551b7403763b34dbd,"Merge pull request #412 from mozilla/train-122-lift-121, r=@rfk"
73,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3dd46a1030f4ad297c8235b046633c4c2087b6bc,Release v1.122.1
74,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6272bcc1ef2e751579673094effb48ffed27c219,Merge branch 'train-122' into train-123-uplift-122
75,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,39bdd1609c16ce712ef1f1c196cdf585d1339360,"Merge pull request #414 from mozilla/train-123-uplift-122, r=@philbooth"
76,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d4c87f56b7f63ff32e60b246676adc3601efdfb5,Release v1.123.1
77,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/416,416,Master uplift train 123 v2,Since https://github.com/mozilla/fxa-auth-db-mysql/pull/415 was created through the Github UI I couldn't use `--amend` to clean up the changelog. This PR has the requested changes.,vbudhram,1295288,2018-10-23T13:34:43Z,CONTRIBUTOR,True,109,13,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f439515d6e7942666d9ee7f41c8433d35dbba861,Merge branch 'train-123' into master-uplift-train-123-v2
78,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
79,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c36f97b9aa14b177986e90a30c71025cc37dd7a,"Merge pull request #410 from mozilla/train-121-fix-replication, r=@jrgm

fix(account): update stored procedures to be more replication friendly"
80,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54bc2ed7cdf7ace9a44dbd684734709792753bf9,Release v1.121.1
81,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f64b4cb861f51c0ac339787dccb4f94d12819bf9,Merge branch 'train-121' into train-122-lift-121
82,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ab6cc7b7369122b07fa11b3551b7403763b34dbd,"Merge pull request #412 from mozilla/train-122-lift-121, r=@rfk"
83,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3dd46a1030f4ad297c8235b046633c4c2087b6bc,Release v1.122.1
84,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6272bcc1ef2e751579673094effb48ffed27c219,Merge branch 'train-122' into train-123-uplift-122
85,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,39bdd1609c16ce712ef1f1c196cdf585d1339360,"Merge pull request #414 from mozilla/train-123-uplift-122, r=@philbooth"
86,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/415,415,Master uplift Train 123,Last uplift to get database replication fix everywhere!,vbudhram,1295288,2018-10-22T18:37:28Z,CONTRIBUTOR,False,129,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d4c87f56b7f63ff32e60b246676adc3601efdfb5,Release v1.123.1
87,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
88,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c36f97b9aa14b177986e90a30c71025cc37dd7a,"Merge pull request #410 from mozilla/train-121-fix-replication, r=@jrgm

fix(account): update stored procedures to be more replication friendly"
89,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54bc2ed7cdf7ace9a44dbd684734709792753bf9,Release v1.121.1
90,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f64b4cb861f51c0ac339787dccb4f94d12819bf9,Merge branch 'train-121' into train-122-lift-121
91,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ab6cc7b7369122b07fa11b3551b7403763b34dbd,"Merge pull request #412 from mozilla/train-122-lift-121, r=@rfk"
92,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3dd46a1030f4ad297c8235b046633c4c2087b6bc,Release v1.122.1
93,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/414,414,Train 123 uplift 122,"Uplifts train-122 to train-123 and makes the replication fixes the last migration on the train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224",vbudhram,1295288,2018-10-22T13:56:17Z,CONTRIBUTOR,True,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6272bcc1ef2e751579673094effb48ffed27c219,Merge branch 'train-122' into train-123-uplift-122
94,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
95,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c36f97b9aa14b177986e90a30c71025cc37dd7a,"Merge pull request #410 from mozilla/train-121-fix-replication, r=@jrgm

fix(account): update stored procedures to be more replication friendly"
96,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54bc2ed7cdf7ace9a44dbd684734709792753bf9,Release v1.121.1
97,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f64b4cb861f51c0ac339787dccb4f94d12819bf9,Merge branch 'train-121' into train-122-lift-121
98,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ab6cc7b7369122b07fa11b3551b7403763b34dbd,"Merge pull request #412 from mozilla/train-122-lift-121, r=@rfk"
99,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3dd46a1030f4ad297c8235b046633c4c2087b6bc,Release v1.122.1
100,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/413,413,Train 123 uplift 122,"This PR uplifts train-122 and makes the stored procedure replication fix the last procedure ran on this train, ref https://github.com/mozilla/fxa-auth-db-mysql/pull/412#issuecomment-431235224.",vbudhram,1295288,2018-10-22T13:53:47Z,CONTRIBUTOR,False,105,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6272bcc1ef2e751579673094effb48ffed27c219,Merge branch 'train-122' into train-123-uplift-122
101,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/412,412,Train 122 lift 121,This PR uplifts train-121 to train-122. It appends migration from https://github.com/mozilla/fxa-auth-db-mysql/pull/410 as migration 88.,vbudhram,1295288,2018-10-19T03:02:14Z,CONTRIBUTOR,True,100,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
102,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/412,412,Train 122 lift 121,This PR uplifts train-121 to train-122. It appends migration from https://github.com/mozilla/fxa-auth-db-mysql/pull/410 as migration 88.,vbudhram,1295288,2018-10-19T03:02:14Z,CONTRIBUTOR,True,100,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c36f97b9aa14b177986e90a30c71025cc37dd7a,"Merge pull request #410 from mozilla/train-121-fix-replication, r=@jrgm

fix(account): update stored procedures to be more replication friendly"
103,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/412,412,Train 122 lift 121,This PR uplifts train-121 to train-122. It appends migration from https://github.com/mozilla/fxa-auth-db-mysql/pull/410 as migration 88.,vbudhram,1295288,2018-10-19T03:02:14Z,CONTRIBUTOR,True,100,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,54bc2ed7cdf7ace9a44dbd684734709792753bf9,Release v1.121.1
104,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/412,412,Train 122 lift 121,This PR uplifts train-121 to train-122. It appends migration from https://github.com/mozilla/fxa-auth-db-mysql/pull/410 as migration 88.,vbudhram,1295288,2018-10-19T03:02:14Z,CONTRIBUTOR,True,100,9,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f64b4cb861f51c0ac339787dccb4f94d12819bf9,Merge branch 'train-121' into train-122-lift-121
105,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/410,410,fix(account): update stored procedures to be more replication friendly,"This PR updates our stored procedures to be more replication friendly and is targeted against train-121.

- [x] verifyTokensWithMethod_2
- [x] verifyTokenCode_1",vbudhram,1295288,2018-10-18T17:48:27Z,CONTRIBUTOR,True,90,9,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c1dd5a5ed1f49f53f584ef715db13af7c6710d7,fix(account): update stored procedures to be more replication friendly
106,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/409,409,Release v1.123.0,,vbudhram,1295288,2018-10-16T19:32:36Z,CONTRIBUTOR,True,46,26,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,830f9b4885602d8ff0032d81a9227e48c1af3dcb,Release v1.123.0
107,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/408,408,fix(mem): ensure emailBounces are stored most-recent first,"The memory backend was appending to the bounce/complaint array, which meant it was returning items in the opposite order to the MySQL backend. The order of those items is significant to our bounce and complaint handling logic.

@mozilla/fxa-devs r?",philbooth,64367,2018-10-16T13:03:07Z,CONTRIBUTOR,True,18,12,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ccf6c3c7d524abdee7d5e7591624e79adbe29f28,fix(mem): ensure emailBounces are stored most-recent first
108,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/407,407,chore(tests): add test coverage for ORDER BY clause of fetchEmailBounces,"While debugging what seems like it may be a bug in fxa-email-service, I noticed there was no test coverage in this repo for the order of results returned by `fetchEmailBounces`. Since the ordering is a pre-requisite for our bounce logic to work sanely, it seems like something we should test for here. (there is some coverage in the auth server too)

@mozilla/fxa-devs r?",philbooth,64367,2018-10-16T12:30:46Z,CONTRIBUTOR,False,17,11,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6d27a0e7f8976b114dc75de5d67a21de4de9c2ad,chore(tests): add test coverage for ORDER BY clause of fetchEmailBounces
109,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/406,406,fix(performance): Add index for scanning signinCodes by uid.,Fixes #405,rfk,34695,2018-10-16T02:10:14Z,MEMBER,True,19,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,905e716136e6ad4777ce36ef6c30008a31e4ab6d,fix(performance): Add index for scanning signinCodes by uid.
110,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/404,404,"chore(deps): Update deps to fix security warnings, remove nsp","* Remove grunt-nsp, it's no longer supported.
* Update grunt-conventional-changelog, base64url, mocha

@mozilla/fxa-devs - r?",shane-tomlinson,848085,2018-10-08T12:02:17Z,MEMBER,True,1604,1601,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5581297bb2803fa12cb03058ff343dd90396aa01,"chore(deps): Update deps to fix security warnings, remove nsp

* Remove grunt-nsp, it's no longer supported.
* Update grunt-conventional-changelog, base64url, mocha"
111,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/402,402,"fix(account): delete recovery codes/keys, security events on account delete",Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/400,vbudhram,1295288,2018-10-03T14:19:24Z,CONTRIBUTOR,True,89,3,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a8d0467f17e3692e50e8f29377cd983ba7eaa9ed,"fix(account): delete recovery codes, recovery keys, security events on account delete"
112,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/401,401,Release v1.122.0,,vladikoff,128755,2018-10-02T21:49:47Z,CONTRIBUTOR,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8bce033aa44f9d311fd96bf8b62321e8331a4993,Release v1.122.0
113,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/399,399,feat(account): add `profileChangedAt` property to account table,"Connects to https://github.com/mozilla/fxa-auth-server/issues/2490
Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/397

- [x] Add memory implementation
- [x] Update account procedures to return new value
- [x] Update unit test

This PR adds the `profileChangedAt` property to the accounts table. The property currently updated when a successful call to these methods are made

* setPrimaryEmail
* verifyEmail
* deleteEmail
* deleteTotpToken
* updateTotpToken
* deletePasswordChangeToken (password changed)
* resetAccount

I opted not to update the value when changes were made to recovery keys since that didn't feel like a core profile change (can be convinced otherwise).

The property is returned when using these methods
* sessionToken
* account
* accountRecord",vbudhram,1295288,2018-09-19T20:54:43Z,CONTRIBUTOR,True,352,20,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,24917b7f4989999b05ec4b93c1327fe7b093c4d4,feat(account): add `profileChangedAt` property to account table
114,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/398,398,Release v1.121.0,,vbudhram,1295288,2018-09-18T15:00:28Z,CONTRIBUTOR,True,18,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,76a4fdd5b2e70df8e5a38e05a33194c3123f4143,Release v1.121.0
115,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/396,396,Release v1.120.0,,vladikoff,128755,2018-09-06T02:28:14Z,CONTRIBUTOR,True,19,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a239d3b9ae55912a40b40c7a01d4d221585d0799,Release v1.120.0
116,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/395,395,fix(recovery): hash recovery key id,"Fixes #366 

~~WIP, need to confirm how many users enabled recovery key in production.~~

Confirmed that no one has enabled this in production yet.",vbudhram,1295288,2018-08-29T20:57:49Z,CONTRIBUTOR,True,249,21,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fe12332ef6b78ff9d505cf4ae0584dd33a19ba7d,fix(recovery): hash recovery key
117,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/394,394,fix(scripts): remove nonsense (but harmless) comparison of bool to -1,"Spotted this in the [lgtm alerts](https://lgtm.com/projects/g/mozilla/fxa-auth-db-mysql/alerts), presumably these `!== -1` tests are left over from an old `indexOf` test. Let's get rid of them.

@mozilla/fxa-devs r?",philbooth,64367,2018-08-28T16:18:02Z,CONTRIBUTOR,True,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,727cafd65af64274ec3c793e4d3d05593af1177b,fix(scripts): remove nonsense (but harmless) comparison of bool to -1
118,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/392,392,feat(scripts): add script to automate EXPLAIN checks,"Last night in the incident post-mortem, I suggested we might be able automate the `EXPLAIN` checking of our stored procedures in CI to some extent. I think I detected a bit of doubt about how feasible that might be in some of the responses, so I decided to spend today seeing what I could come up with.

The (unfinished) result of that effort is 2 scripts, `explain-warn.sh` and `explain-queries.js` (the names are still open for debate):

* `explain-warn.sh` starts by creating a bunch of dummy accounts, session tokens and devices to populate the db. Then it greps `lib/db/mysql.js` for stored procedure names, loops through the list and finds which SQL file they're defined in. It passes the file path and the procedure name for each one to `explain-queries.js`.

* `explain-queries.js` does some very crude parsing of the SQL source and pulls out any `SELECT` queries from the procedures we're interested in. It then does some substitution to eliminate comments and arguments, and prefixes the query string with `EXPLAIN`. This works surprisingly well, I was able to generate valid EXPLAIN statements for all but a handful of queries.

* Back to `explain-assert.sh`, it then runs the generated EXPLAINs through mysql and greps the output for bad smells, logging whatever it finds to the console.

Here is some example output from one of our stored procedures that it flags currently:

```
Warning: full table scan detected in fetchEmailBounces_1!
Warning: filesort detected in fetchEmailBounces_1!
EXPLAIN SELECT email, bounceType, bounceSubType, createdAt FROM emailBounces WHERE email = 0 ORDER BY createdAt DESC LIMIT 20;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	emailBounces	NULL	ALL	PRIMARY	NULL	NULL	NULL	1	100.00	Using where; Using filesort
```

Now, I'm not too hot on databases/MySQL/EXPLAIN, so hopefully with some expert advice from you guys we can improve on this some more. But the current version of the script hopefully serves as a useful example of where we could take it.

Predictably, there are some procedures that don't parse cleanly. Mostly that is because I assumed their arguments would all be named `inXxx` or `xxxArg` for simplicity. Although that covers most cases there are a few non-conformists, which we could just edit so they can be parsed too if we wanted (i.e. something like b3ecb90). I tried using a proper parser as well, but all the SQL parsers in npm seem to handle only very simple query syntax and fell over when fed the majority of our stored procedures.

The population step still needs work too, if we want to do this for real I guess it would probably be worth populating every table with data.

None of this is perfect of course, but then it doesn't need to be. If it's good enough to provide some value then it's worth considering I reckon. Currently we have no automated checks for this at all, so having something that mostly works is an improvement. And we could easily add something like a `.explainignore` file to stop it bothering us about procedures we know are fine.

Thoughts?",philbooth,64367,2018-08-24T17:24:05Z,CONTRIBUTOR,True,446,29,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,31fff596b7fb23c60a41f18d5b875a3ce2b6e1bf,"feat(scripts): add script to automate MySQL EXPLAIN checks

Adds a script that pulls out SELECT queries from our stored procedures
and then runs EXPLAINs for them in MySQL. Warnings are emitted for any
bad smells that are found in the EXPLAIN results, e.g. `filesort`."
119,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/392,392,feat(scripts): add script to automate EXPLAIN checks,"Last night in the incident post-mortem, I suggested we might be able automate the `EXPLAIN` checking of our stored procedures in CI to some extent. I think I detected a bit of doubt about how feasible that might be in some of the responses, so I decided to spend today seeing what I could come up with.

The (unfinished) result of that effort is 2 scripts, `explain-warn.sh` and `explain-queries.js` (the names are still open for debate):

* `explain-warn.sh` starts by creating a bunch of dummy accounts, session tokens and devices to populate the db. Then it greps `lib/db/mysql.js` for stored procedure names, loops through the list and finds which SQL file they're defined in. It passes the file path and the procedure name for each one to `explain-queries.js`.

* `explain-queries.js` does some very crude parsing of the SQL source and pulls out any `SELECT` queries from the procedures we're interested in. It then does some substitution to eliminate comments and arguments, and prefixes the query string with `EXPLAIN`. This works surprisingly well, I was able to generate valid EXPLAIN statements for all but a handful of queries.

* Back to `explain-assert.sh`, it then runs the generated EXPLAINs through mysql and greps the output for bad smells, logging whatever it finds to the console.

Here is some example output from one of our stored procedures that it flags currently:

```
Warning: full table scan detected in fetchEmailBounces_1!
Warning: filesort detected in fetchEmailBounces_1!
EXPLAIN SELECT email, bounceType, bounceSubType, createdAt FROM emailBounces WHERE email = 0 ORDER BY createdAt DESC LIMIT 20;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	emailBounces	NULL	ALL	PRIMARY	NULL	NULL	NULL	1	100.00	Using where; Using filesort
```

Now, I'm not too hot on databases/MySQL/EXPLAIN, so hopefully with some expert advice from you guys we can improve on this some more. But the current version of the script hopefully serves as a useful example of where we could take it.

Predictably, there are some procedures that don't parse cleanly. Mostly that is because I assumed their arguments would all be named `inXxx` or `xxxArg` for simplicity. Although that covers most cases there are a few non-conformists, which we could just edit so they can be parsed too if we wanted (i.e. something like b3ecb90). I tried using a proper parser as well, but all the SQL parsers in npm seem to handle only very simple query syntax and fell over when fed the majority of our stored procedures.

The population step still needs work too, if we want to do this for real I guess it would probably be worth populating every table with data.

None of this is perfect of course, but then it doesn't need to be. If it's good enough to provide some value then it's worth considering I reckon. Currently we have no automated checks for this at all, so having something that mostly works is an improvement. And we could easily add something like a `.explainignore` file to stop it bothering us about procedures we know are fine.

Thoughts?",philbooth,64367,2018-08-24T17:24:05Z,CONTRIBUTOR,True,446,29,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9e9457c39afd6888aaaa7b13a8684db667819e5c,"chore(scripts): tweak some old migrations to fix explain errors

Some of our old migrations don't conform to assumptions made by the
explain script. This change just tweaks some of the argument names so
that they stop showing up as errors in that script. There are no logical
changes to the stored procedures."
120,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/392,392,feat(scripts): add script to automate EXPLAIN checks,"Last night in the incident post-mortem, I suggested we might be able automate the `EXPLAIN` checking of our stored procedures in CI to some extent. I think I detected a bit of doubt about how feasible that might be in some of the responses, so I decided to spend today seeing what I could come up with.

The (unfinished) result of that effort is 2 scripts, `explain-warn.sh` and `explain-queries.js` (the names are still open for debate):

* `explain-warn.sh` starts by creating a bunch of dummy accounts, session tokens and devices to populate the db. Then it greps `lib/db/mysql.js` for stored procedure names, loops through the list and finds which SQL file they're defined in. It passes the file path and the procedure name for each one to `explain-queries.js`.

* `explain-queries.js` does some very crude parsing of the SQL source and pulls out any `SELECT` queries from the procedures we're interested in. It then does some substitution to eliminate comments and arguments, and prefixes the query string with `EXPLAIN`. This works surprisingly well, I was able to generate valid EXPLAIN statements for all but a handful of queries.

* Back to `explain-assert.sh`, it then runs the generated EXPLAINs through mysql and greps the output for bad smells, logging whatever it finds to the console.

Here is some example output from one of our stored procedures that it flags currently:

```
Warning: full table scan detected in fetchEmailBounces_1!
Warning: filesort detected in fetchEmailBounces_1!
EXPLAIN SELECT email, bounceType, bounceSubType, createdAt FROM emailBounces WHERE email = 0 ORDER BY createdAt DESC LIMIT 20;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	emailBounces	NULL	ALL	PRIMARY	NULL	NULL	NULL	1	100.00	Using where; Using filesort
```

Now, I'm not too hot on databases/MySQL/EXPLAIN, so hopefully with some expert advice from you guys we can improve on this some more. But the current version of the script hopefully serves as a useful example of where we could take it.

Predictably, there are some procedures that don't parse cleanly. Mostly that is because I assumed their arguments would all be named `inXxx` or `xxxArg` for simplicity. Although that covers most cases there are a few non-conformists, which we could just edit so they can be parsed too if we wanted (i.e. something like b3ecb90). I tried using a proper parser as well, but all the SQL parsers in npm seem to handle only very simple query syntax and fell over when fed the majority of our stored procedures.

The population step still needs work too, if we want to do this for real I guess it would probably be worth populating every table with data.

None of this is perfect of course, but then it doesn't need to be. If it's good enough to provide some value then it's worth considering I reckon. Currently we have no automated checks for this at all, so having something that mostly works is an improvement. And we could easily add something like a `.explainignore` file to stop it bothering us about procedures we know are fine.

Thoughts?",philbooth,64367,2018-08-24T17:24:05Z,CONTRIBUTOR,True,446,29,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b90688cbc08e2bfc943c6eb608831c4cb97cccbb,"feat(scripts): add an ignore file for the explain script

Some of our existing stored procedures fail in the explain script but we
don't want those failures to show up. In the future we may have reasons
for wanting to ignore other procedures too. This change lets us ignore
them while still running the script in CI."
121,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/392,392,feat(scripts): add script to automate EXPLAIN checks,"Last night in the incident post-mortem, I suggested we might be able automate the `EXPLAIN` checking of our stored procedures in CI to some extent. I think I detected a bit of doubt about how feasible that might be in some of the responses, so I decided to spend today seeing what I could come up with.

The (unfinished) result of that effort is 2 scripts, `explain-warn.sh` and `explain-queries.js` (the names are still open for debate):

* `explain-warn.sh` starts by creating a bunch of dummy accounts, session tokens and devices to populate the db. Then it greps `lib/db/mysql.js` for stored procedure names, loops through the list and finds which SQL file they're defined in. It passes the file path and the procedure name for each one to `explain-queries.js`.

* `explain-queries.js` does some very crude parsing of the SQL source and pulls out any `SELECT` queries from the procedures we're interested in. It then does some substitution to eliminate comments and arguments, and prefixes the query string with `EXPLAIN`. This works surprisingly well, I was able to generate valid EXPLAIN statements for all but a handful of queries.

* Back to `explain-assert.sh`, it then runs the generated EXPLAINs through mysql and greps the output for bad smells, logging whatever it finds to the console.

Here is some example output from one of our stored procedures that it flags currently:

```
Warning: full table scan detected in fetchEmailBounces_1!
Warning: filesort detected in fetchEmailBounces_1!
EXPLAIN SELECT email, bounceType, bounceSubType, createdAt FROM emailBounces WHERE email = 0 ORDER BY createdAt DESC LIMIT 20;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	emailBounces	NULL	ALL	PRIMARY	NULL	NULL	NULL	1	100.00	Using where; Using filesort
```

Now, I'm not too hot on databases/MySQL/EXPLAIN, so hopefully with some expert advice from you guys we can improve on this some more. But the current version of the script hopefully serves as a useful example of where we could take it.

Predictably, there are some procedures that don't parse cleanly. Mostly that is because I assumed their arguments would all be named `inXxx` or `xxxArg` for simplicity. Although that covers most cases there are a few non-conformists, which we could just edit so they can be parsed too if we wanted (i.e. something like b3ecb90). I tried using a proper parser as well, but all the SQL parsers in npm seem to handle only very simple query syntax and fell over when fed the majority of our stored procedures.

The population step still needs work too, if we want to do this for real I guess it would probably be worth populating every table with data.

None of this is perfect of course, but then it doesn't need to be. If it's good enough to provide some value then it's worth considering I reckon. Currently we have no automated checks for this at all, so having something that mostly works is an improvement. And we could easily add something like a `.explainignore` file to stop it bothering us about procedures we know are fine.

Thoughts?",philbooth,64367,2018-08-24T17:24:05Z,CONTRIBUTOR,True,446,29,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,52447bb08bec6b4949abd4390cd19d47063b9cd1,chore(scripts): disable the explain script in production
122,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/391,391,chore(docs): update mysql docs,,vladikoff,128755,2018-08-23T16:58:56Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2cb78c5cc498fc4e625b4fa6ddf29e197f701b59,chore(docs): update mysql docs
123,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/390,390,Release v1.119.1,,vladikoff,128755,2018-08-23T15:13:39Z,CONTRIBUTOR,True,16,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,17912f8f9a4261852a2853e905a4ad76877423b2,Release v1.119.1
124,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/389,389,"fix(devices): Reinstate device commands, with performance fixes.","Fixes #384, based on analysis from https://github.com/mozilla/fxa-auth-db-mysql/issues/384#issuecomment-414565389.

I believe we plan to do this as a point release of train-119, but since there aren't any other commits on master yet, perhaps it's simpler to land it on master and then cut the point release from there?

@philbooth @jrgm r?",rfk,34695,2018-08-22T03:14:51Z,MEMBER,True,248,44,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,28e7f19403823613903d94dc129cca3d1d46ea11,"fix(devices): Reinstate device commands, with performance fixes."
125,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/388,388,Release v1.119.0,,vladikoff,128755,2018-08-21T15:08:53Z,CONTRIBUTOR,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46050fc98805538b442d5a1b572924972da0f3ad,Release v1.119.0
126,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/386,386,chore(db): ensure mem db behaves like mysql db,"In #383, we temporarily disabled insertion of device commands into the MySQL db. We didn't do the same with the memory db though, which means the auth server tests see different behaviour depending on which backend they're running against. This change forces the memory backend to behave the same way.

@mozilla/fxa-devs r?",philbooth,64367,2018-08-21T13:36:54Z,CONTRIBUTOR,True,6,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8d5d55f21fb6c776133e4d73f6979e7cc6e9c22e,"chore(db): ensure mem db behaves like mysql db

In 06554f5599fb167bcdf79c8586f2d7c9ab87643e, we temporarily disabled
insertion of device commands into the MySQL db. We didn't do the same
with the memory db though, which means the auth server tests see
different behaviour depending on which backend they're running against.
This change forces the memory backend to behave the same."
127,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/385,385,Merge train-118 into master,,philbooth,64367,2018-08-19T07:33:48Z,CONTRIBUTOR,True,55,23,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d89343194c1389d1957a09faa1fa89dae6844e4a,Release v1.118.0
128,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/385,385,Merge train-118 into master,,philbooth,64367,2018-08-19T07:33:48Z,CONTRIBUTOR,True,55,23,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,06554f5599fb167bcdf79c8586f2d7c9ab87643e,"chore(db): stop calling the upsertAvailableCommands procedure

https://github.com/mozilla/fxa-auth-db-mysql/pull/383
r=jbuck,eoger,vladikoff"
129,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/385,385,Merge train-118 into master,,philbooth,64367,2018-08-19T07:33:48Z,CONTRIBUTOR,True,55,23,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46edc8516a8fde1c850a20c48dff4ea3794a45cc,Release v1.118.1
130,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/383,383,chore(db): stop calling the upsertAvailableCommands procedure,"Temporary hack to stop writing to the `deviceCommands` table. Since we're tagging a release I figured it made sense to leave the stored procedure in place and make `makeStatementsToAddAvailableCommands` a nop in the js code instead. And of course, a bunch of tests needed to change too.

@jbuck @jrgm @eoger r?",philbooth,64367,2018-08-18T18:10:25Z,CONTRIBUTOR,True,32,21,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,682db2f329cb0880d2429524ed61f579448028f3,chore(db): stop calling the upsertAvailableCommands procedure
131,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/381,381,fix(restify): set keepAliveTimeout correctly on api.server object,"(Same as fxa-customs-server):

Hey @vladikoff. I biffed setting this on my first try. This is the correct object location, and I've verified by watching tcpdump/netstat in stage with this fix that connections are held open until idle for 2 minutes.",jrgm,758162,2018-08-10T23:15:08Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b1a4dd53432805a93bf38bda78780e662c6c6e30,fix(restify): set keepAliveTimeout correctly on api.server object
132,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/380,380,"fix(restify): set server.keepAliveTimeout to 120s, similar to in node6",Same deal as https://github.com/mozilla/fxa-customs-server/pull/266#issue-207169665. Don't be so eager to close down keep-alive connections from auth-server.,jrgm,758162,2018-08-09T01:26:23Z,CONTRIBUTOR,True,7,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,39c46fd81774d45a424487288854e98ee8c95c38,"fix(restify): set server.keepAliveTimeout to 120s, similar to in node6"
133,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/379,379,Release v1.117.0,,vladikoff,128755,2018-07-24T13:59:13Z,CONTRIBUTOR,True,17,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1daf68acc11255b06fe825751bed7a2181526876,Release v1.117.0
134,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/377,377,fix(tests): move local utils tests so they get run by npm t,"Fixes #376.

The tests in `test/lib/utils.js` weren't being exercised by `npm t`. Moving them into `test/local` fixes that.

Because they weren't being exercised, one of the tests had got into a failing state. Looking at it, I think it's a redundant test now because there is no keyspace argument to `generateRecoveryCodes`. Hence it's deleted here.

@mozilla/fxa-devs r?",philbooth,64367,2018-07-20T14:08:21Z,CONTRIBUTOR,True,0,7,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f161fc3067be27b96af7ab5e21daf71e71702dd7,fix(tests): move local utils tests so they get run by npm t
135,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/375,375,feat(ci): update to circle 2,,vladikoff,128755,2018-07-18T02:08:40Z,CONTRIBUTOR,True,89,58,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b8c7978964ce2ff5a716faf8d35e4ebc189ec027,feat(ci): update to circle 2
136,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/375,375,feat(ci): update to circle 2,,vladikoff,128755,2018-07-18T02:08:40Z,CONTRIBUTOR,True,89,58,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d127b0362301044cdaf0e9fbd8a8373675a5b7d5,Fixes
137,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/374,374,feat(recovery): update account recovery GET/DEL to not accept recoveryKeyId,"While building out https://github.com/mozilla/fxa-content-server/pull/6203, it has become more apparent that we don't need to pass the `recoveryKeyId` to get/delete a user's recovery data. `recoveryKeyId` can only be generated from the recovery key, which would cause us to prompt for it in order to get/delete the recovery data.

Additionally, user's can currently only have one recovery key so. In the future, we could re-look at removing the unique contraint.

This PR will cause some breakage in auth-server. WIP until auth-server PR is ready.",vbudhram,1295288,2018-07-11T14:23:06Z,CONTRIBUTOR,True,140,94,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,da8b8b2550283cf35595a87c715ad1398577bbea,feat(recovery): update account recovery GET/DEL to not accept recoveryKeyId
138,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/373,373,Release v1.116.0,,philbooth,64367,2018-07-11T05:41:04Z,CONTRIBUTOR,True,1062,1029,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,98755f7eec58dda1ec83628c8d5e008230b01c5e,chore(package): update shrinkwrap
139,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/373,373,Release v1.116.0,,philbooth,64367,2018-07-11T05:41:04Z,CONTRIBUTOR,True,1062,1029,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,305fde2fad2d037398634383a03fd70ddbacd882,Release v1.116.0
140,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d7026ab3a4926ac116d4d52cedc2a65c0f0969b2,refactor(recovery): Fixes #367 base32 for recovery code generation
141,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0c9b8006f8b1d44aa04380219ca0665b8e5a2963,refactor(recovery): base32 for recovery code generation
142,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1e16d0517ee03556e244556d11c007ea75a50462,refactor(recovery): Use base32 for recovery code generation
143,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b48766a403b9edaa35efd7cf6866c59b3bb58c7a,refactor(recovery): base32 for recovery code generation lowercase
144,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,127111aedfc96602e1071c63538011483b109277,refactor(recovery): base32 for recovery code generation lowercase comment
145,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/372,372,refactor(recovery): Use base32 for recovery code generation,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/367,deeptibaghel,448609,2018-06-29T09:37:01Z,CONTRIBUTOR,True,58,28,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6225aa2e63e4bda500a9bb0ac9f2a3947981e3f0,use base32 for recovery code generation test fix
146,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/371,371,Release v1.115.0,"This appears to actually just tag a merge commit from the previous release, but it seemed worthwhile for consistency.",rfk,34695,2018-06-27T05:28:34Z,MEMBER,True,8,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,92a40ad04b50f8ac86acfa8386ecf7452f45dbb4,Release v1.115.0
147,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/370,370,feat(scripts): add boilerplate to detect missing migrations,"Fixes #328.

While I was pootling around in this repo just now I realised we never got this implemented, so here's my stab at it. It just checks the current patch level matches what it should be before proceeding with the rest of the migration.

~~I had to wrap that check in a temporary stored procedure because MySQL complains if I try to do `IF` outside of one. The preceding `DROP` is so that we clean up in the presence of repeated failures. I've named the procedure specifically to the current patch level to make it hopefully more self-documenting.~~

If you want to test it out, create a fresh migration using the script and then manually change the patch level to a different value. When you run `node bin/db_patcher` it should fail like so:

```
~/c/fxa-auth-db-mysql (pb/detect-missing-migrations) $ node bin/db_patcher
{""Timestamp"":1530029634691000000,""Logger"":""fxa-auth-db-server"",""Type"":""bin.db_patcher.patch-error"",""Severity"":2,""Pid"":43591,""EnvVersion"":""2.0"",""Fields"":{""err"":""Error: ER_SIGNAL_NOT_FOUND: Missing migration detected""}}
```

@mozilla/fxa-devs, @jrgm, @jbuck r?",philbooth,64367,2018-06-26T16:23:28Z,CONTRIBUTOR,True,51,5,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2679228949087f440867805b4a4e53b7eb0bf09c,feat(scripts): add boilerplate to detect missing migrations
148,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/364,364,chore(merge): Merge train-114 into master,@jrgm - r?,shane-tomlinson,848085,2018-06-13T21:26:05Z,MEMBER,True,15,3,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c66d3f035b76ca5c2e57df9a5f7dbf0c314e3cca,fix(docker): base image node:8-alpine and upgrade to npm6
149,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/364,364,chore(merge): Merge train-114 into master,@jrgm - r?,shane-tomlinson,848085,2018-06-13T21:26:05Z,MEMBER,True,15,3,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,24ac57c3349bf723914cbba32b208380c3e3535d,"Merge pull request #363 from mozilla/fix-generic-node8-and-update-npm6 r=@shane-tomlinson

fix(docker): base image node:8-alpine and upgrade to npm6"
150,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/364,364,chore(merge): Merge train-114 into master,@jrgm - r?,shane-tomlinson,848085,2018-06-13T21:26:05Z,MEMBER,True,15,3,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f2a72626ad91bbd1d63df369630393eabd726840,Release v1.114.1
151,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/363,363,fix(docker): base image node:8-alpine and upgrade to npm6,r? - @vladikoff ,jrgm,758162,2018-06-13T20:49:57Z,CONTRIBUTOR,True,3,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8621627e704e0302ed00c2d40e0d959aee6f3948,"Merge pull request #362 from mozilla/train-114 r=@rfk

Release v1.114.0"
152,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/363,363,fix(docker): base image node:8-alpine and upgrade to npm6,r? - @vladikoff ,jrgm,758162,2018-06-13T20:49:57Z,CONTRIBUTOR,True,3,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c66d3f035b76ca5c2e57df9a5f7dbf0c314e3cca,fix(docker): base image node:8-alpine and upgrade to npm6
153,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/362,362,Release v1.114.0,@mozilla/fxa-devs - r?,shane-tomlinson,848085,2018-06-13T16:30:37Z,MEMBER,True,12,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,789296d377c4906ccab54a36b82e201089d9c529,Release v1.114.0
154,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/361,361,"feat(devices): Allow devices to register ""available commands"". (#354); r=philbooth,eoger","A device's set of availalbe commands is a simple name:value mapping
that can be used by other devices to discover and invoke commands.
We make no particular commitment toward to format of the names or
values.

Re-applying this to master after backing it out in train-113.",rfk,34695,2018-05-30T23:37:34Z,MEMBER,True,825,259,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ec62e161c25967ea3c6b959e4ad07a4ad82544d4,"feat(devices): Allow devices to register ""available commands"". (#354); r=philbooth,eoger

A device's set of availalbe commands is a simple name:value mapping
that can be used by other devices to discover and invoke commands.
We make no particular commitment toward to format of the names or
values."
155,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/360,360,"revert(devices): Revert ""available commands"" for train-113.","This reverts commit 69816f69c7f77732725f0a7e632967be5f1c5a54, which was not compatible with auth-server train-113.",rfk,34695,2018-05-30T22:58:44Z,MEMBER,True,259,825,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8006d4e30a06e2ef3f3e3bdab064cb4482a374c5,"revert(devices): Revert ""available commands"" for train-113.

This reverts commit 69816f69c7f77732725f0a7e632967be5f1c5a54."
156,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/358,358,fix(mysql): Set strict mode on all new db migrations.,"We've stored enforcing strict-mode on all connections to
MySQL from the app at runtime.  However, stored procedures
remember the sql_mode that was in effect at the time they
were created, and we create our stored procedures through
an out-of-band connection that doesn't force strict mode.

This change adds an explicit ""enable strict mode"" preamble
to new migrations, and re-creates on of the existing stored
procedures to make use of it.  Once we're confident this will
work on OK in practice, we'll need to re-create all stored
procedures that might have been created without strict mode.

This is a trial-baloon PR to see if it works in CI.",rfk,34695,2018-05-25T02:45:01Z,MEMBER,False,101,3,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3c96a6310760d33bf829723a317d924b393a45e4,"fix(mysql): Set strict mode on all new db migrations.

We've stored enforcing strict-mode on all connections to
MySQL from the app at runtime.  However, stored procedures
remember the sql_mode that was in effect at the time they
were created, and we create our stored procedures through
an out-of-band connection that doesn't force strict mode.

This change adds an explicit ""enable strict mode"" preamble
to new migrations, and re-creates on of the existing stored
procedures to make use of it.  Once we're confident this will
work on OK in practice, we'll need to re-create all stored
procedures that might have been created without strict mode."
157,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/357,357,feat(recovery): Add initial account recovery key support,Fixes #346 ,vbudhram,1295288,2018-05-23T15:21:53Z,CONTRIBUTOR,True,490,8,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d579349f03af987354fa2df1debadae4ca855180,feat(recovery): Add initial account recovery support
158,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/355,355,chore(ci): Remove coveralls from travis config.,Per https://bugzilla.mozilla.org/show_bug.cgi?id=1455339,rfk,34695,2018-05-23T00:16:49Z,MEMBER,True,2,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,938381deab2d2304b22352adc5f6e3407ef6398c,chore(ci): Remove coveralls from travis config.
159,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/354,354,"Let devices register ""available commands"" with associated metadata.","This is a revision of the ""device capabilities"" feature, to allow devices to associate a metadata blob with each advertised capability.  I've taken the liberty of renaming them from ""capabilities"" to ""commands"" for reasons that will become clear in a forthcoming auth-server PR.

WIP for now. /cc @eoger 

Connects to https://github.com/mozilla/fxa-auth-server/issues/2318",rfk,34695,2018-05-22T05:23:33Z,MEMBER,True,825,259,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4d017b5fd04b01d9451b2444045b0777f5f077cd,"feat(devices): Allow devices to register ""available commands"".

A device's set of availalbe commands is a simple name:value mapping
that can be used by other devices to discover and invoke commands.
We make no particular commitment toward to format of the names or
values."
160,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/352,352,fix(restify): set a sane max param length value for restify,"The new restify uses `find-my-way` router module which defaults to max param size of [100](https://github.com/delvedor/find-my-way/blob/15b6e94667fae12a35f6eccc5f0670428dec4a20/index.js#L35). When using email routes, they could be over 100 characters after being hexed and potentially produce a 404.

Connects to https://github.com/mozilla/fxa-auth-server/issues/2433",vbudhram,1295288,2018-05-10T21:27:45Z,CONTRIBUTOR,True,4,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d84c8274962e7258a6d9e4c6a8e23a850645802e,fix(restify): set a sane max param length value for restify
161,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/352,352,fix(restify): set a sane max param length value for restify,"The new restify uses `find-my-way` router module which defaults to max param size of [100](https://github.com/delvedor/find-my-way/blob/15b6e94667fae12a35f6eccc5f0670428dec4a20/index.js#L35). When using email routes, they could be over 100 characters after being hexed and potentially produce a 404.

Connects to https://github.com/mozilla/fxa-auth-server/issues/2433",vbudhram,1295288,2018-05-10T21:27:45Z,CONTRIBUTOR,True,4,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bb78be215ce51a1eb2020be5f2026b2a808d46f9,fix(restify): update param size
162,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/351,351,fix(deps): update restify and mysql,"Fixes #348 
Fixes #349 ",vbudhram,1295288,2018-05-09T20:41:50Z,CONTRIBUTOR,True,238,296,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5f5ef23faa42c528cf1614868bffdd303f7d51df,fix(deps): update to restify 7.1 and mysql 2.15
163,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/350,350,"feat(changelog): Add an ""acknowledgements"" section to some changelog entries.",,rfk,34695,2018-05-09T01:45:15Z,MEMBER,True,5,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,68c08209b944816999365d3f055b631bcf127548,"feat(changelog): Add an ""acknowledgements"" section to some changelog entries."
164,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/347,347,Update newrelic version,r? - @vladikoff ,jrgm,758162,2018-05-07T23:51:05Z,CONTRIBUTOR,True,150,88,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cb0692f8d9355264d5f80cb7b187aa27454b10a7,fix(newrelic): update newrelic version
165,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/347,347,Update newrelic version,r? - @vladikoff ,jrgm,758162,2018-05-07T23:51:05Z,CONTRIBUTOR,True,150,88,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bd959ea8d989fd696f13833d6e3a16c78fc5f256,fix(nsp): todo exceptions for mysql and tunnel-agent
166,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/344,344,fix(npm): update shrinkwrap to npm 5.8,"Promotes mysql-patcher to prod dep, after chatting with @jrgm ",vladikoff,128755,2018-04-24T18:53:36Z,CONTRIBUTOR,True,5202,5178,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f2c2cf012b2cc4b910cf6281b4712ad87a4660ab,fix(npm): update shrinkwrap to npm 5.8
167,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/342,342,refactor(db): Fixes #340 Remove  column createdAt on recoveryCode table,,deeptibaghel,448609,2018-04-24T16:03:11Z,CONTRIBUTOR,True,26,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,992b561c7d29c251f4ef850b4821226c4025dd7e,refactor(db): Fixes #340 Remove column createdAt on recoveryCode table
168,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/341,341,feat(node): update to node 8,,vladikoff,128755,2018-04-24T00:53:25Z,CONTRIBUTOR,True,1,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ef1b0780bb31bb5da7bfac63c43105a5e74d484e,feat(node): update to node 8
169,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/339,339,fix(tests): increase timeout on recovery code tests,"This PR increases timeout for recovery code related tests and fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/338. Doing recovery code comparisons (with scrypt) was taking longer than the default 2 second timeout for tests.

```
    recovery codes
      ✓ should generate new recovery codes (1469ms)
      ✓ should fail to consume unknown recovery code
      ✓ should consume recovery code (3193ms)
```

@mozilla/fxa-devs r?",vbudhram,1295288,2018-04-19T01:46:29Z,CONTRIBUTOR,True,10,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3f67ebd38698b1f9e245d85ce60aa3ec3b43cc5e,fix(tests): increase timeout on recovery code tests
170,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/337,337,fix(codes): remove current recovery codes before applying migration 79,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/336,vbudhram,1295288,2018-04-17T23:42:48Z,CONTRIBUTOR,True,4,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,24c5e278022a6b77b03523ea3086110fe38e1c4e,fix(codes): remove current recovery codes before applying migration
171,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/335,335,fix(devices): Rename pushbox capability to messages,This is safe as we have no existing clients using capabilities yet and capabilities are stored as integers.,eoger,6424575,2018-04-10T18:40:58Z,CONTRIBUTOR,True,18,16,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d7d475223e9c9914c375e04b139ce94628d0526e,fix(devices): Rename pushbox capability to messages
172,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/335,335,fix(devices): Rename pushbox capability to messages,This is safe as we have no existing clients using capabilities yet and capabilities are stored as integers.,eoger,6424575,2018-04-10T18:40:58Z,CONTRIBUTOR,True,18,16,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,211f8b6fc7c1da5c54fe85de81b140d7fd59978d,chose(devices): Add messages.sendtab capability
173,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/334,334,feat(mysql): Add config option for REQUIRED_SQL_MODES.,"This also tweaks the implementation to preserve any existing mode flags on the connection, rather than overwriting them with just the modes from the required list.  That's in line with how profile-server and oauth-server approach it.

@vladikoff r?",rfk,34695,2018-04-04T01:19:56Z,MEMBER,True,77,27,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fa6d130a30a2536dcf5c04a907d4d91fb7637d40,"feat(mysql): Add config option for REQUIRED_SQL_MODES.

This also tweaks the implementation to preserve any existing mode
flags on the connection, rather than overwriting them with just the
modes from the required list."
174,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/333,333,fix(codes): update to latest recovery codes requirements,"I was going through and reviewing requirements for recovery codes and found that there are some differences in implementation

* Should be 10 characters vs current 8
* Should be alphanumeric vs hex
* Should use scrypt/bcrypt vs sha

Ref https://docs.google.com/document/d/1m4D_7DZAfXt4e-bEbfI-5s_x2XFO7TEQo1a_SQcj1O8/edit#heading=h.yzz637baqr7a",vbudhram,1295288,2018-04-03T19:22:52Z,CONTRIBUTOR,True,896,270,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fbce6080a2887f479165654fd087b4b050e5eebf,fix(codes): use lowercase alphanumeric recovery codes
175,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/332,332,fix(node): Use Node.js v6.14.0,,jbuck,578466,2018-03-29T14:54:09Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6dd7082d20a54cd2cba578665ffb979c3deaad6e,fix(node): Use Node.js v6.14.0
176,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/331,331,fix(migration): Only run a migration if the previous migration has been run,"Fixes #328 
@philbooth please review
",hritvi,32164618,2018-03-29T12:57:47Z,NONE,False,6,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cbc8b6da537f1b9827af59f6f3b1c4714b156416,fix(migration): Only run a migration if the previous migration has been run
177,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/331,331,fix(migration): Only run a migration if the previous migration has been run,"Fixes #328 
@philbooth please review
",hritvi,32164618,2018-03-29T12:57:47Z,NONE,False,6,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,722e543feb60a9a3a0ba4ae839783975cc70ac89,fix(migrations): made the required changes
178,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/330,330,fix(unblock): delete unblock codes only when successfully consumed code,"This was previously deleting all unblock codes whenever it called the `consumeUnblockCode` procedure, regardless if it consumed the code or not.

@vladikoff r?",vbudhram,1295288,2018-03-28T16:05:44Z,CONTRIBUTOR,True,53,2,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0fcd90edaa4a635277e8588002de9fe563b793a3,fix(unblock): update consume unblock code
179,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/329,329,fix(verify): `verifyTokenWithMethod` should update already verified session status,"From debugging https://github.com/mozilla/fxa-auth-server/issues/2351, I found that the `verifyTokenWithMethod` stored procedure was not correctly updating an already verified session's verificationMethod. This could help explain why https://github.com/mozilla/fxa-auth-server/pull/2346#discussion_r175366433 happened.

Either way, this PR fixes the issue and matches how the mem db's method works.

",vbudhram,1295288,2018-03-23T22:18:51Z,CONTRIBUTOR,True,69,3,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d91ffbd75c9587889edc39b7f9fbd3aabe7e6552,fix(verify): update verifyWithMethod to update a session verification status
180,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/327,327,feat(mysql): #277 STRICT_ALL_TABLES required sql mode support,"Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/277

- Added the query to set the sql_mode
- Added unit test to disallow any other sql_mode",deeptibaghel,448609,2018-03-21T15:43:23Z,CONTRIBUTOR,True,48,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ef00218f8a46e5fb775bd6bbd4458694a1f5aaa4,feat(mysql): #277 STRICT_ALL_TABLES required sql mode support
181,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/326,326,fix(codes): drop all codes when one is consumed,@rfk r?,vladikoff,128755,2018-03-20T22:10:39Z,CONTRIBUTOR,True,52,5,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9eda4138ea4bd6aaec37b953d85a295f07746200,fix(codes): drop all codes when one is consumed
182,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/325,325,fix(test): #321 Correct promises error handling,Fixed and tested all problematic promised error handling calls. One modified non-existing api call was getting caught at incorrect place due to the issue. Fixed the api call at two places.,deeptibaghel,448609,2018-03-20T11:45:24Z,CONTRIBUTOR,True,132,107,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9734db256e6340b1c3f711b253e3431bb14b6b82,fix(test): #321 Correct promises error handling
183,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/325,325,fix(test): #321 Correct promises error handling,Fixed and tested all problematic promised error handling calls. One modified non-existing api call was getting caught at incorrect place due to the issue. Fixed the api call at two places.,deeptibaghel,448609,2018-03-20T11:45:24Z,CONTRIBUTOR,True,132,107,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,af14c29ccd7a245d76d98c2a6ce146dbd185a6b4,fix(test): #321 Correct promises error handling..
184,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/324,324,feat(node): update to node v6.13.1,Ref https://github.com/mozilla/fxa-auth-server/pull/2353,vladikoff,128755,2018-03-19T18:24:38Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d6c30214fb20d0eb647ef2b861cda1f60a755da6,"feat(node): update to node v6.13.1

Ref https://github.com/mozilla/fxa-auth-server/pull/2353"
185,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/323,323,chore(api): #318 remove bufferization from db layer,"Changes done :

1. Added new function in bufferize to utf8 encode the hex email parameter
2. Modified unit test for bufferize to handle new function
3. Removed utf8 conversion from both database files
4. Modified local db tests to pass unhexed email parameter
",deeptibaghel,448609,2018-03-17T15:29:28Z,CONTRIBUTOR,True,24,30,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,52978b51a741e2d9b2bedff196d9cb05c6447e0e,chore(api): #318 remove bufferization from db layer
186,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/320,320,feat(devices): Devices capabilities,"Connects to mozilla/fxa-auth-server#2320 (please read for context).

- When fetching a device infos, we want to query `devices` and `devicesCapabilities` at the same time.
Since MySQL doesn't have an Array type, we pull the device capabilities using a `GROUP_CONCAT` and convert them to an array in JS.
- For creating or updating a device, we have no choice but to make multiple queries in the same transaction (see the new `writeMultiple` method).
- We maintain a ""capability name"" <> ""capability id"" mapping. In practice this is the `CAPABILITIES` array in `mysql.js`.
- If `device.capabilities` is supplied in `updateDevice`, it is implied that we are replacing the current device capabilities.",eoger,6424575,2018-03-16T04:11:12Z,CONTRIBUTOR,True,483,63,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9577f83c1d56069f1ef694fcb26bfb98a5a67cbe,"feat(devices): Devices capabilities

Connects to mozilla/fxa-auth-server#2320"
187,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/319,319,feat(totp): initial recovery codes,Fixes #302 ,vbudhram,1295288,2018-03-15T13:20:32Z,CONTRIBUTOR,True,560,51,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f39a2f48017d488850e51425cec9d2b095f04838,feat(totp): initial recovery codes
188,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/317,317,Fixes issue #316 Convert remaining '= Buffer(stuff)' to 'Buffer.from(…,"Fixes issue #316 Convert remaining Buffer ..
Found only one file needing fixes.",deeptibaghel,448609,2018-03-11T08:25:48Z,CONTRIBUTOR,True,3,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,30e4b0838dfca5fe551f6ba724d564b18c0fac4a,"Fixes issue #316 Convert remaining '= Buffer(stuff)' to 'Buffer.from(stuff,...)'"
189,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/315,315,Fixes issue #311 Use email buffer for DEL ‘/email/:email’ route,"Made changes to fix issue #311 Use email buffer for DEL ‘/email/:email’ route.
Also fixed Buffer function call to take care of deprecated format.",deeptibaghel,448609,2018-03-09T05:26:20Z,CONTRIBUTOR,True,38,28,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,82073d71ad0187b55f7a3a6edf559f2345acbe8b,Fixes issue #311 Use email buffer for DEL ‘/email/:email’ route
190,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/315,315,Fixes issue #311 Use email buffer for DEL ‘/email/:email’ route,"Made changes to fix issue #311 Use email buffer for DEL ‘/email/:email’ route.
Also fixed Buffer function call to take care of deprecated format.",deeptibaghel,448609,2018-03-09T05:26:20Z,CONTRIBUTOR,True,38,28,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3fe5328063f6f74dadfd3cc1b7d94abad3c49fb9,Fixes issue #311 Use email buffer for DEL..setPrimaryEmail api call
191,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/314,314,"Fixes issue #290 Remove database configuration option, hardcode 'fxa' ",Made changes in config and test files.,deeptibaghel,448609,2018-03-07T17:24:37Z,CONTRIBUTOR,True,28,14,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,93adf100279805e4f0c33efc5c41d4b7be11cc47,"Fixes issue #290 Remove database configuration option, hardcode 'fxa' "
192,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/314,314,"Fixes issue #290 Remove database configuration option, hardcode 'fxa' ",Made changes in config and test files.,deeptibaghel,448609,2018-03-07T17:24:37Z,CONTRIBUTOR,True,28,14,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,525574a6f08c7a531b594f65ba4a89d1905f7f17,Fixed eslint errors
193,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/314,314,"Fixes issue #290 Remove database configuration option, hardcode 'fxa' ",Made changes in config and test files.,deeptibaghel,448609,2018-03-07T17:24:37Z,CONTRIBUTOR,True,28,14,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cc6fa2466f4d6d53cd6861533b71ddd0e0505537,Fixes issue #290 Remove database conf.. minor changes
194,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/313,313,feat(totp): vlad updates for totp,Missed review comments from https://github.com/mozilla/fxa-auth-db-mysql/pull/309.,vbudhram,1295288,2018-02-28T04:09:29Z,CONTRIBUTOR,True,6,6,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4902db845d844f0b3f69ec86e5b72f32760e8351,feat(totp): vlad updates for totp
195,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/312,312,feat(totp): totp updates from vlad,Was a little trigger happy and merged before resolving comments from vlad. This PR contains all updates that was requested in https://github.com/mozilla/fxa-auth-db-mysql/pull/309.,vbudhram,1295288,2018-02-28T03:55:49Z,CONTRIBUTOR,False,684,34,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e55f331a773d4a2f84d647f768caf141dc344cfd,feat(totp): vlad totp PR fixes
196,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/310,310,chore(tests): remove `sessionToken` and `sessionTokenWithVerification`,This PR fixes #306 and will hopefully simplify https://github.com/mozilla/fxa-auth-db-mysql/pull/309.,vbudhram,1295288,2018-02-21T20:55:50Z,CONTRIBUTOR,True,111,312,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fda7296edd37364638e9666105dee03171071f03,chore(tests): remove `sessionToken` and `sessionTokenWithVerificationStatus` references
197,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/309,309,feat(totp): Add initial totp session verification logic,"This PR is the next stage for TOTP tokens. It adds the ability to verify TOTP tokens and sessions.

* Adds the `verified, enabled` property to TOTP tokens.
* Adds the `verificationMethod, verifiedAt` property to session tokens.
* Adds the `mustVerify` property to the session table. This property is in sync with the property on the unverified tokens table, ref: https://github.com/mozilla/fxa-auth-db-mysql/issues/301#issuecomment-366051763.
* Can be tested against https://github.com/mozilla/fxa-auth-server/pull/2321

Fixes #301 ",vbudhram,1295288,2018-02-21T20:04:45Z,CONTRIBUTOR,True,684,34,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c22e19df6ba0eb6cd5f9f42121f8076ebfb6162f,feat(totp): Add initial totp session verification logic
198,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/308,308,"chore(deps): update deps, fix nsp",@mozilla/fxa-devs r?,vladikoff,128755,2018-02-16T21:44:02Z,CONTRIBUTOR,True,252,240,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a371cc612bd2003c23ed046b00dc60fd15d15cc0,"chore(deps): update deps, fix nsp"
199,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/305,305,feat(sessions): Add support for reauth on an existing session.,"Connects to mozilla/fxa-auth-server#2212.

This adds supporting code for mozilla/fxa-auth-server#2288, allowing us to re-authenticate against an existing sessionToken rather than creating a new one whenever we need the user to re-enter their password.

It's currently implemented on top of #299 to avoid migration conflicts; let's aim to get that merged first and then we can re-open this PR against master. WIP for now.",rfk,34695,2018-02-12T11:17:32Z,MEMBER,True,293,26,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4f98c929e890f0b8b65cc5d4d0dba966b7eb73db,feat(sessions): Add support for reauth on an existing session.
200,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/304,304,feat(sessions): Add support for reauth on an existing session.,"Connects to https://github.com/mozilla/fxa-auth-server/issues/2212.

This adds supporting code for https://github.com/mozilla/fxa-auth-server/pull/2288, allowing us to re-authenticate against an existing sessionToken rather than creating a new one whenever we need the user to re-enter their password.

It's currently implemented on top of #299 to avoid migration conflicts; let's aim to get that merged first and then we can re-open this PR against master.  WIP for now.",rfk,34695,2018-02-12T03:08:21Z,MEMBER,False,293,26,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a9380b04ad9576e3b7135f37dda6eeb63c4f01f1,feat(sessions): Add support for reauth on an existing session.
201,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/303,303,fix(token): Fix mem verifyTokenCode,"The PR matches the functionality of the mysql `verifyTokenCode` operation and verifies both session and keyFetch tokens. If a valid `tokenCode` is found, verifies the session and keyFetchToken matching its `tokenVerificationId`.

Connects to https://github.com/mozilla/fxa-content-server/issues/5886

",vbudhram,1295288,2018-02-08T02:23:12Z,CONTRIBUTOR,True,36,50,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,12f6706c94a6b4427aff9cd1e436d35b5d7dd584,fix(token): Fix mem verifyTokenCode
202,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/299,299,feat(totp): Add totp management api,"For the first phase of TOTP, this PR adds all procedures and endpoints needed to create, get and delete a user's token. The API definition can be found in #300.

Fixes #300 ",vbudhram,1295288,2018-02-04T16:34:23Z,CONTRIBUTOR,True,421,3,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0e941e9c657e43782c722daf0fbad1baa70eca70,feat(totp): Add totp support
203,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/298,298,feat(devices): return session token id from deleteDevice,"Related to mozilla/fxa-auth-server#2260.

Currently, the auth server doesn't delete session tokens from Redis in its `db.deleteDevice` method. In order to fix that, the auth server needs to know the session token id for the deleted device. I figured the easiest way to do that would be just to return it from this repo's `deleteDevice` method. Although perhaps it isn't the ""correct"" way in API terms, I don't know.

Anyway, here it is. If this approach does seem okay, it would be great if we could include this in train 104, so that train 105 can contain the equivalent auth server changes. No dramas if it doesn't make it though.

@mozilla/fxa-devs r?",philbooth,64367,2018-01-22T16:12:36Z,CONTRIBUTOR,True,170,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e96c6f1385013a4d5dc7a51a2bb0314b0141bd0c,feat(devices): return session token id from deleteDevice
204,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/298,298,feat(devices): return session token id from deleteDevice,"Related to mozilla/fxa-auth-server#2260.

Currently, the auth server doesn't delete session tokens from Redis in its `db.deleteDevice` method. In order to fix that, the auth server needs to know the session token id for the deleted device. I figured the easiest way to do that would be just to return it from this repo's `deleteDevice` method. Although perhaps it isn't the ""correct"" way in API terms, I don't know.

Anyway, here it is. If this approach does seem okay, it would be great if we could include this in train 104, so that train 105 can contain the equivalent auth server changes. No dramas if it doesn't make it though.

@mozilla/fxa-devs r?",philbooth,64367,2018-01-22T16:12:36Z,CONTRIBUTOR,True,170,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,95d66916282c179bf17e16e9c8dcd0c13c3bed58,fix(docs): add missing device docs to docs/DB_API.md
205,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/298,298,feat(devices): return session token id from deleteDevice,"Related to mozilla/fxa-auth-server#2260.

Currently, the auth server doesn't delete session tokens from Redis in its `db.deleteDevice` method. In order to fix that, the auth server needs to know the session token id for the deleted device. I figured the easiest way to do that would be just to return it from this repo's `deleteDevice` method. Although perhaps it isn't the ""correct"" way in API terms, I don't know.

Anyway, here it is. If this approach does seem okay, it would be great if we could include this in train 104, so that train 105 can contain the equivalent auth server changes. No dramas if it doesn't make it though.

@mozilla/fxa-devs r?",philbooth,64367,2018-01-22T16:12:36Z,CONTRIBUTOR,True,170,26,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,31b3f6e9675e2e1435aa8c2eb6cefd99557ded7c,fix(devices): eliminate redundant join from deleteDevice
206,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/296,296,fix(scripts): add SET NAMES to reverse migration boilerplate,"Realised this was missing while reviewing #295.

@mozilla/fxa-devs r?",philbooth,64367,2018-01-19T08:19:16Z,CONTRIBUTOR,True,2,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3d3408188d061eb2d6602f910b57e9106f310e44,fix(scripts): add SET NAMES to reverse migration boilerplate
207,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/295,295,fix(pruning): Avoid accidentally full-table scans when pruning session tokens,"This adjusts the session-pruning logic to address two observations from #294.

First, it adds an explicit check for whether `@pruneUntil` is `NULL`, and short-circuits if so.  This indicates that no expired tokens are available to prune.

Second, it changes the way that `@pruneUntil` is calculated, by dropping the filter on ""does this session have a decide record?"".  This is to help us deal better with a database that's already been partly pruned, and hence has a session token timeline like:

```
|--- millions of device sessions ---|--- a mix of device- and non-device sessions ---|
```

The previous version would calculate `@pruneUntil` to be *after* the millions of unexpirable tokens in the early part of the timeline, forcing the subsequent `DELETE` statement to wastefully examine them all.  The new version should incrementally work its way through these millions of tokens, not deleting any of them, but just slowly catching back up to the point where we find expirable tokens.

Fixes #294; @philbooth r?

I couldn't think of any terribly useful tests to add here sorry; if you can suggest some I'm happy to add them.",rfk,34695,2018-01-19T03:30:57Z,MEMBER,True,114,3,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,163ceb646e1d9f4da061a290a7e7c249ecfd1ed2,fix(pruning): Avoid accidental full-table scans when pruning session tokens.
208,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/293,293,feat(tests): make tests more independent,"This PR updates the db tests to use more features of mocha. This is cleanup work that will make working with this repo more manageable.

- Tests can run independently of each other
- Testing blocks are much smaller with same coverage
- Expanded some tests and removed duplicate tests
- Removed checking email on change password token https://github.com/mozilla/fxa-auth-db-mysql/pull/293/commits/9cc30b1ca88547a933d255b7b44dbc658489ffda. Turns out that mysql was not returning this but the mem db was. Looking at the auth-server the email was not being used so I think it is fair to remove from mem.

The easiest way I think this could be reviewed is doing a side by side comparison of original db tests. Sorry in advance for including some styling changes :(

Fixes #246 ",vbudhram,1295288,2018-01-16T20:09:20Z,CONTRIBUTOR,True,1265,2143,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d0a95a3edf497db97e647b4459578e6b60569717,feat(tests): make tests more independent
209,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/293,293,feat(tests): make tests more independent,"This PR updates the db tests to use more features of mocha. This is cleanup work that will make working with this repo more manageable.

- Tests can run independently of each other
- Testing blocks are much smaller with same coverage
- Expanded some tests and removed duplicate tests
- Removed checking email on change password token https://github.com/mozilla/fxa-auth-db-mysql/pull/293/commits/9cc30b1ca88547a933d255b7b44dbc658489ffda. Turns out that mysql was not returning this but the mem db was. Looking at the auth-server the email was not being used so I think it is fair to remove from mem.

The easiest way I think this could be reviewed is doing a side by side comparison of original db tests. Sorry in advance for including some styling changes :(

Fixes #246 ",vbudhram,1295288,2018-01-16T20:09:20Z,CONTRIBUTOR,True,1265,2143,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9cc30b1ca88547a933d255b7b44dbc658489ffda,feat(tests): fix tests
210,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/293,293,feat(tests): make tests more independent,"This PR updates the db tests to use more features of mocha. This is cleanup work that will make working with this repo more manageable.

- Tests can run independently of each other
- Testing blocks are much smaller with same coverage
- Expanded some tests and removed duplicate tests
- Removed checking email on change password token https://github.com/mozilla/fxa-auth-db-mysql/pull/293/commits/9cc30b1ca88547a933d255b7b44dbc658489ffda. Turns out that mysql was not returning this but the mem db was. Looking at the auth-server the email was not being used so I think it is fair to remove from mem.

The easiest way I think this could be reviewed is doing a side by side comparison of original db tests. Sorry in advance for including some styling changes :(

Fixes #246 ",vbudhram,1295288,2018-01-16T20:09:20Z,CONTRIBUTOR,True,1265,2143,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7fab7a16aed08ca7edd64cc3075a22bfe8b1edce,fix(tests): merge and resolve conflicts
211,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/293,293,feat(tests): make tests more independent,"This PR updates the db tests to use more features of mocha. This is cleanup work that will make working with this repo more manageable.

- Tests can run independently of each other
- Testing blocks are much smaller with same coverage
- Expanded some tests and removed duplicate tests
- Removed checking email on change password token https://github.com/mozilla/fxa-auth-db-mysql/pull/293/commits/9cc30b1ca88547a933d255b7b44dbc658489ffda. Turns out that mysql was not returning this but the mem db was. Looking at the auth-server the email was not being used so I think it is fair to remove from mem.

The easiest way I think this could be reviewed is doing a side by side comparison of original db tests. Sorry in advance for including some styling changes :(

Fixes #246 ",vbudhram,1295288,2018-01-16T20:09:20Z,CONTRIBUTOR,True,1265,2143,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,efa1b16bc433d23ba01a9d60de6a2954023879fd,fix(tests): PR fixes
212,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/292,292,feat(logs): add Sentry for errors,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/288,vladikoff,128755,2018-01-04T22:40:22Z,CONTRIBUTOR,True,143,89,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dc176864a9dd103c98e8fa6f889293be7846adfe,feat(logs): add sentry for errors
213,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/292,292,feat(logs): add Sentry for errors,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/288,vladikoff,128755,2018-01-04T22:40:22Z,CONTRIBUTOR,True,143,89,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8d2f40b1353afce86943a9001cab06e1977b6995,fix(wrap): dep wrap
214,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/291,291,fix(node): use node 6.12.3,use node 6.12.3. r? - @vladikoff ,jrgm,758162,2018-01-04T00:56:11Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7a21708c9571565cc6031784112ceed614428e31,fix(node): use node 6.12.3
215,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/289,289,refactor(dbserver): clean up the db server package,"While investigating adding Sentry for this the double `package.json` finally got to me

@rfk r?",vladikoff,128755,2017-11-28T00:13:40Z,CONTRIBUTOR,True,2591,3095,37,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,39fa5cadfbaaf5107fd1482eaeda00033e26ee20,refactor(dbserver): clean up the db server package
216,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/287,287,feat(codes): add support for verifying token short code,"This PR exposes new APIs to create and verify sessionTokens using a short code. Couple notes

- Each code has an expiration date
- Codes are stored as hashes in database
- Support for resending (aka regenerating) a code to come in later PR.
- New endpoint `verifyTokensShortCode` used to explicitly verify shortCodes. 

Connects with https://github.com/mozilla/fxa-auth-server/pull/2218

Feature doc: https://docs.google.com/document/d/1xQtCGBJ9XZuF1q9faZV3YIiOnxomQMHKiTP62YSf3v8/edit

@mozilla/fxa-devs r?

",vbudhram,1295288,2017-11-20T16:30:24Z,CONTRIBUTOR,True,465,28,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,238e6e315ca154e20b2e86178dea6e9f5ab0bfef,feat(codes): add initial support for using verify token short codes
217,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/287,287,feat(codes): add support for verifying token short code,"This PR exposes new APIs to create and verify sessionTokens using a short code. Couple notes

- Each code has an expiration date
- Codes are stored as hashes in database
- Support for resending (aka regenerating) a code to come in later PR.
- New endpoint `verifyTokensShortCode` used to explicitly verify shortCodes. 

Connects with https://github.com/mozilla/fxa-auth-server/pull/2218

Feature doc: https://docs.google.com/document/d/1xQtCGBJ9XZuF1q9faZV3YIiOnxomQMHKiTP62YSf3v8/edit

@mozilla/fxa-devs r?

",vbudhram,1295288,2017-11-20T16:30:24Z,CONTRIBUTOR,True,465,28,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,70728a57051dd920ddc24334ddec1745714f830b,feat(tests): use spread syntax
218,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/286,286,"fix(newrelic): newrelic native requires make, python, gyp, c++; update node 6.12.0",r? - @vladikoff ,jrgm,758162,2017-11-13T21:14:40Z,CONTRIBUTOR,True,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a9dde2e6fbd59b8011fc00a455b83064542b7be0,"fix(newrelic): newrelic native requires make, python, gyp, c++; update node 6.12.0"
219,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/285,285,futureproofing comment and up to newrelic@2.3.2 with npm run shrink,"This PR supersedes https://github.com/mozilla/fxa-auth-db-mysql/pull/284 which just added a futureproofing comment, to update the newrelic module to latest 2.3.2, with an `npm run shrink` using npm@2.15.1

r? - @vladikoff ",jrgm,758162,2017-11-12T07:14:24Z,CONTRIBUTOR,True,412,449,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7c1ef433e803d44bbfb266af92b892ca7232a805,fix(newrelic): be clear that newrelic must be required first
220,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/285,285,futureproofing comment and up to newrelic@2.3.2 with npm run shrink,"This PR supersedes https://github.com/mozilla/fxa-auth-db-mysql/pull/284 which just added a futureproofing comment, to update the newrelic module to latest 2.3.2, with an `npm run shrink` using npm@2.15.1

r? - @vladikoff ",jrgm,758162,2017-11-12T07:14:24Z,CONTRIBUTOR,True,412,449,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9f309c0f1db1c052bdffb94816e589880915d929,fix(newrelic): update to newrelic@2.3.2 and `npm run shrink`
221,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/284,284,fix(newrelic): be clear that newrelic must be required first,"Just adding a comment to try to future proof against including other modules before newrelic (which would mean they would not be instrumented)

r? - @vladikoff ",jrgm,758162,2017-11-12T04:46:50Z,CONTRIBUTOR,False,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7c1ef433e803d44bbfb266af92b892ca7232a805,fix(newrelic): be clear that newrelic must be required first
222,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/283,283,fix(travis): run tests with 6 and current stable (failure not allowed anymore),"run on 6 and 8, and removes the matrix that allowed ""stable"" to fail. Both must pass.

This repo was running `npm outdated`. With npm < 5, it would exit 0; with npm >= 5, it now exits 1. I just made it behave like before, but not sure what it's trying to do (just show what is outdated?).

r? - @rfk ",jrgm,758162,2017-10-31T22:47:05Z,CONTRIBUTOR,True,2,7,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c4e0e9840b709470875285b5092f951a691ba0fa,fix(travis): run tests with 6 and current stable (failure not allowed anymore)
223,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/282,282,feat(db): prune session tokens (again),"Fixes #263.

Earlier on, @rfk was kind enough to point out that simply including `uid` in the `devices` join would allow MySQL to use the existing index on `devices` and make session token pruning fast. I tried it just now and, of course, he was dead right.

But don't take my word for it, here are the numbers:

```
mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  6000016 |
+----------+
1 row in set (1.49 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1333348 |
+----------+
1 row in set (20.92 sec)

mysql> call prune_6(1505929326193);
+------------------------------------------------------------+
| @lockAcquired := GET_LOCK('fxa-auth-server.prune-lock', 3) |
+------------------------------------------------------------+
|                                                          1 |
+------------------------------------------------------------+
1 row in set (0.00 sec)

+----------------------+
| @pruneFrom := value  |
+----------------------+
| 0                    |
+----------------------+
1 row in set (0.00 sec)

+-------------------------------+
| @pruneUntil := MAX(createdAt) |
+-------------------------------+
|                 1505906643327 |
+-------------------------------+
1 row in set (4.45 sec)

+--------------------------------------------+
| RELEASE_LOCK('fxa-auth-server.prune-lock') |
+--------------------------------------------+
|                                          1 |
+--------------------------------------------+
1 row in set (6.52 sec)

Query OK, 0 rows affected (6.52 sec)

mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  5990016 |
+----------+
1 row in set (1.49 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1323348 |
+----------+
1 row in set (20.92 sec)
```

(so using almost an identical set-up to https://github.com/mozilla/fxa-auth-db-mysql/pull/279#issuecomment-329853042)

And then, just to prove it wasn't a fluke, the next iteration:

```
mysql> call prune_6(1505929326193);
+------------------------------------------------------------+
| @lockAcquired := GET_LOCK('fxa-auth-server.prune-lock', 3) |
+------------------------------------------------------------+
|                                                          1 |
+------------------------------------------------------------+
1 row in set (0.00 sec)

+----------------------+
| @pruneFrom := value  |
+----------------------+
| 1505906643327        |
+----------------------+
1 row in set (0.00 sec)

+-------------------------------+
| @pruneUntil := MAX(createdAt) |
+-------------------------------+
|                 1505906675789 |
+-------------------------------+
1 row in set (0.99 sec)

+--------------------------------------------+
| RELEASE_LOCK('fxa-auth-server.prune-lock') |
+--------------------------------------------+
|                                          1 |
+--------------------------------------------+
1 row in set (2.79 sec)

Query OK, 0 rows affected (2.79 sec)

mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  5980016 |
+----------+
1 row in set (1.93 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1313348 |
+----------+
1 row in set (15.45 sec)
```

@mozilla/fxa-devs r?",philbooth,64367,2017-09-20T19:04:45Z,CONTRIBUTOR,True,126,6,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e4c251776fec98e328c84905d83a99647796c78c,feat(db): prune session tokens
224,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/282,282,feat(db): prune session tokens (again),"Fixes #263.

Earlier on, @rfk was kind enough to point out that simply including `uid` in the `devices` join would allow MySQL to use the existing index on `devices` and make session token pruning fast. I tried it just now and, of course, he was dead right.

But don't take my word for it, here are the numbers:

```
mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  6000016 |
+----------+
1 row in set (1.49 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1333348 |
+----------+
1 row in set (20.92 sec)

mysql> call prune_6(1505929326193);
+------------------------------------------------------------+
| @lockAcquired := GET_LOCK('fxa-auth-server.prune-lock', 3) |
+------------------------------------------------------------+
|                                                          1 |
+------------------------------------------------------------+
1 row in set (0.00 sec)

+----------------------+
| @pruneFrom := value  |
+----------------------+
| 0                    |
+----------------------+
1 row in set (0.00 sec)

+-------------------------------+
| @pruneUntil := MAX(createdAt) |
+-------------------------------+
|                 1505906643327 |
+-------------------------------+
1 row in set (4.45 sec)

+--------------------------------------------+
| RELEASE_LOCK('fxa-auth-server.prune-lock') |
+--------------------------------------------+
|                                          1 |
+--------------------------------------------+
1 row in set (6.52 sec)

Query OK, 0 rows affected (6.52 sec)

mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  5990016 |
+----------+
1 row in set (1.49 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1323348 |
+----------+
1 row in set (20.92 sec)
```

(so using almost an identical set-up to https://github.com/mozilla/fxa-auth-db-mysql/pull/279#issuecomment-329853042)

And then, just to prove it wasn't a fluke, the next iteration:

```
mysql> call prune_6(1505929326193);
+------------------------------------------------------------+
| @lockAcquired := GET_LOCK('fxa-auth-server.prune-lock', 3) |
+------------------------------------------------------------+
|                                                          1 |
+------------------------------------------------------------+
1 row in set (0.00 sec)

+----------------------+
| @pruneFrom := value  |
+----------------------+
| 1505906643327        |
+----------------------+
1 row in set (0.00 sec)

+-------------------------------+
| @pruneUntil := MAX(createdAt) |
+-------------------------------+
|                 1505906675789 |
+-------------------------------+
1 row in set (0.99 sec)

+--------------------------------------------+
| RELEASE_LOCK('fxa-auth-server.prune-lock') |
+--------------------------------------------+
|                                          1 |
+--------------------------------------------+
1 row in set (2.79 sec)

Query OK, 0 rows affected (2.79 sec)

mysql> select count(*) from sessionTokens;
+----------+
| count(*) |
+----------+
|  5980016 |
+----------+
1 row in set (1.93 sec)

mysql> select count(*)
    -> from sessionTokens as t
    -> left join devices as d
    -> on t.tokenId = d.sessionTokenId and t.uid = d.uid
    -> where d.id is null;
+----------+
| count(*) |
+----------+
|  1313348 |
+----------+
1 row in set (15.45 sec)
```

@mozilla/fxa-devs r?",philbooth,64367,2017-09-20T19:04:45Z,CONTRIBUTOR,True,126,6,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d210c9b602fe514c74f74cf9a59c9aeaac26d3b6,fix(db): prune unverifiedTokens in join with sessionTokens
225,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/281,281,fix(db): call latest version of the prune stored procedure,"When I reverted session token pruning, I failed to update the procedure version in `lib/db/mysql.js`. This went undetected by the tests because nothing was there to assert that session tokens *weren't* being pruned. I've added that test here to go with the fix.

@mozilla/fxa-devs r?",philbooth,64367,2017-09-20T18:17:04Z,CONTRIBUTOR,True,10,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,71d5e1044a695747a7e40bc1c385a37559abb4e3,fix(db): call latest version of the prune stored procedure
226,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/280,280,fix(tokens): revert session-token pruning,"Fixes #278 (in a manner of speaking).

Reinstates the old behaviour from `prune_3`, so that token pruning can be enabled for train 96. See #279 for discussions of the failed attempt(s) to fix session-token pruning. The original problematic code was introduced by #275.

@mozilla/fxa-devs r?",philbooth,64367,2017-09-18T05:57:00Z,CONTRIBUTOR,True,26,18,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ad8ff50277e14deda70869d4f2698a4fc0089935,fix(tokens): revert session-token pruning
227,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/279,279,fix(db): prune session tokens without using filesort,"Fixes #278.

Once again, please let me know if there is a better way to do this.

Essentially this PR attempts to implement the approach outlined by @rfk in https://github.com/mozilla/fxa-auth-db-mysql/issues/278#issuecomment-329104531. To wit:

* The missing index on `createdAt` is added. This prevents the prune stored procedure from using a filesort on `sessionTokens`.

* A new value called `sessionTokensPrunedUntil` is added to `dbMetadata`. This signals how far previous iterations of the prune loop have got through the `sessionTokens` table and prevents the subquery from needlessly running against a whole bunch of records that were already processed.

* ~~Pruned `sessionTokens` are added to a temporary table before being deleted. This is so we can set `dbMetadata::sessionTokensPrunedUntil` to `MAX(createdAt)` after the delete has happened.~~

I also expanded the prune tests a little bit to include assertions against a session token that should not be pruned because its `createdAt` is less than `dbMetadata::sessionTokensPrunedUntil`.

What do you guys think, am I on the right track or is there a better way?

@mozilla/fxa-devs r?

/cc @jbuck @jrgm",philbooth,64367,2017-09-13T14:29:23Z,CONTRIBUTOR,False,115,6,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fcdd82457f1a3c80aa6fee924fb044c47d2edf08,fix(db): prune session tokens without using filesort
228,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/279,279,fix(db): prune session tokens without using filesort,"Fixes #278.

Once again, please let me know if there is a better way to do this.

Essentially this PR attempts to implement the approach outlined by @rfk in https://github.com/mozilla/fxa-auth-db-mysql/issues/278#issuecomment-329104531. To wit:

* The missing index on `createdAt` is added. This prevents the prune stored procedure from using a filesort on `sessionTokens`.

* A new value called `sessionTokensPrunedUntil` is added to `dbMetadata`. This signals how far previous iterations of the prune loop have got through the `sessionTokens` table and prevents the subquery from needlessly running against a whole bunch of records that were already processed.

* ~~Pruned `sessionTokens` are added to a temporary table before being deleted. This is so we can set `dbMetadata::sessionTokensPrunedUntil` to `MAX(createdAt)` after the delete has happened.~~

I also expanded the prune tests a little bit to include assertions against a session token that should not be pruned because its `createdAt` is less than `dbMetadata::sessionTokensPrunedUntil`.

What do you guys think, am I on the right track or is there a better way?

@mozilla/fxa-devs r?

/cc @jbuck @jrgm",philbooth,64367,2017-09-13T14:29:23Z,CONTRIBUTOR,False,115,6,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,53ee3e8c94d03b6fbed4adc9a2eef2f3deecd9d8,fix(db): prune session tokens without using temporary table
229,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/279,279,fix(db): prune session tokens without using filesort,"Fixes #278.

Once again, please let me know if there is a better way to do this.

Essentially this PR attempts to implement the approach outlined by @rfk in https://github.com/mozilla/fxa-auth-db-mysql/issues/278#issuecomment-329104531. To wit:

* The missing index on `createdAt` is added. This prevents the prune stored procedure from using a filesort on `sessionTokens`.

* A new value called `sessionTokensPrunedUntil` is added to `dbMetadata`. This signals how far previous iterations of the prune loop have got through the `sessionTokens` table and prevents the subquery from needlessly running against a whole bunch of records that were already processed.

* ~~Pruned `sessionTokens` are added to a temporary table before being deleted. This is so we can set `dbMetadata::sessionTokensPrunedUntil` to `MAX(createdAt)` after the delete has happened.~~

I also expanded the prune tests a little bit to include assertions against a session token that should not be pruned because its `createdAt` is less than `dbMetadata::sessionTokensPrunedUntil`.

What do you guys think, am I on the right track or is there a better way?

@mozilla/fxa-devs r?

/cc @jbuck @jrgm",philbooth,64367,2017-09-13T14:29:23Z,CONTRIBUTOR,False,115,6,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,20e314323eff7502296d8665887896382711af08,fix(db): don't prune unverifiedTokens that belong to keyFetchTokens
230,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6fd74881f71507edddb573e57c50e3207450f9a9,fix(mysql): update all device procedures to use utf8mb4
231,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0dbb5eed67109f2e97c652753bd7224180ddd4ea,fix(mysql): add migration scripts
232,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,36a9fa92980df4d6a1e540c829a2ad3a06012e53,fix(mysql): add drop proc
233,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5b60cebcf6c2bce29e98a1d4c5c43279e338215a,fix(mysql): update name query
234,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,70615dbec5435daa5a4f9574984c380d195512be,fix(mysql): update create proc
235,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6e742eb25e4ad2dc36c34d71bdfd0162397f9a08,fix(mysql): add missing field
236,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/276,276,fix(mysql): update all device procedures to use utf8mb4,"
@jbuck @rfk r?",vladikoff,128755,2017-09-11T22:54:38Z,CONTRIBUTOR,True,210,10,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3ea106f49a0500991c0d8ff12ba208f59365626a,fix(db): add name migration for column
237,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/275,275,fix(tokens): prune old session tokens that have no device record,"Fixes #263. Supercedes #274.

Please let me know if there is a better way to do this.

Initially I tried to do it all in one query, with a `LEFT JOIN` between `sessionTokens` and `devices` and an `INNER JOIN` between `sessionTokens` and `unverifiedTokens`. But that doesn't work because, [as per the docs](https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm140189111263328):

> You cannot use `ORDER BY` or `LIMIT` in a multiple-table `DELETE`.

So instead, I've broken it down to two queries. The first uses `NOT EXISTS` and a subquery to deselect session tokens with device records, which allows us to sanely delete from `sessionTokens` with `ORDER BY` and `LIMIT`. Then the second one just mops up any zombies left behind in `unverifiedTokens`, which we don't/shouldn't need to worry about limiting.

I wasn't sure whether the two queries should be run together in a transaction. I've put them in one to be on the safe side but fwiw I don't *think* they need to be. `unverifiedTokens` is only ever used as the rhs of a `LEFT JOIN` with `sessionTokens`, so it should never matter if they exist after their associated session token has been deleted. And they're getting pruned regularly so it's not like they're going to pile up.

@mozilla/fxa-devs r?

/cc @jrgm, @jbuck",philbooth,64367,2017-09-06T17:25:17Z,CONTRIBUTOR,True,70,7,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0025401d4008ac2a098fc93e39ddc97b41fd0c17,fix(tokens): prune old session tokens that have no device record
238,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/275,275,fix(tokens): prune old session tokens that have no device record,"Fixes #263. Supercedes #274.

Please let me know if there is a better way to do this.

Initially I tried to do it all in one query, with a `LEFT JOIN` between `sessionTokens` and `devices` and an `INNER JOIN` between `sessionTokens` and `unverifiedTokens`. But that doesn't work because, [as per the docs](https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm140189111263328):

> You cannot use `ORDER BY` or `LIMIT` in a multiple-table `DELETE`.

So instead, I've broken it down to two queries. The first uses `NOT EXISTS` and a subquery to deselect session tokens with device records, which allows us to sanely delete from `sessionTokens` with `ORDER BY` and `LIMIT`. Then the second one just mops up any zombies left behind in `unverifiedTokens`, which we don't/shouldn't need to worry about limiting.

I wasn't sure whether the two queries should be run together in a transaction. I've put them in one to be on the safe side but fwiw I don't *think* they need to be. `unverifiedTokens` is only ever used as the rhs of a `LEFT JOIN` with `sessionTokens`, so it should never matter if they exist after their associated session token has been deleted. And they're getting pruned regularly so it's not like they're going to pile up.

@mozilla/fxa-devs r?

/cc @jrgm, @jbuck",philbooth,64367,2017-09-06T17:25:17Z,CONTRIBUTOR,True,70,7,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4b63660609c41aff5a60c76f792e5ed03ef3dc06,fix(tokens): prune session tokens inside a transaction
239,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/275,275,fix(tokens): prune old session tokens that have no device record,"Fixes #263. Supercedes #274.

Please let me know if there is a better way to do this.

Initially I tried to do it all in one query, with a `LEFT JOIN` between `sessionTokens` and `devices` and an `INNER JOIN` between `sessionTokens` and `unverifiedTokens`. But that doesn't work because, [as per the docs](https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm140189111263328):

> You cannot use `ORDER BY` or `LIMIT` in a multiple-table `DELETE`.

So instead, I've broken it down to two queries. The first uses `NOT EXISTS` and a subquery to deselect session tokens with device records, which allows us to sanely delete from `sessionTokens` with `ORDER BY` and `LIMIT`. Then the second one just mops up any zombies left behind in `unverifiedTokens`, which we don't/shouldn't need to worry about limiting.

I wasn't sure whether the two queries should be run together in a transaction. I've put them in one to be on the safe side but fwiw I don't *think* they need to be. `unverifiedTokens` is only ever used as the rhs of a `LEFT JOIN` with `sessionTokens`, so it should never matter if they exist after their associated session token has been deleted. And they're getting pruned regularly so it's not like they're going to pile up.

@mozilla/fxa-devs r?

/cc @jrgm, @jbuck",philbooth,64367,2017-09-06T17:25:17Z,CONTRIBUTOR,True,70,7,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,195efc014a27b7c7cf6b069b0904b3e0d1c3a540,fix(tests): add missing tests for pruning session tokens
240,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/274,274,Phil/263,"Fixes #263.

Please let me know if there is a better way to do this.

Initially I tried to do it all in one query, with a `LEFT JOIN` between `sessionTokens` and `devices` and an `INNER JOIN` between `sessionTokens` and `unverifiedTokens`. But that doesn't work because, [as per the docs](https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm140189111263328):

> You cannot use `ORDER BY` or `LIMIT` in a multiple-table `DELETE`.

So instead, I've broken it down to two queries. The first uses `NOT EXISTS` and a subquery to deselect session tokens with device records, which allows us to sanely delete from `sessionTokens` with `ORDER BY` and `LIMIT`. Then the second one just mops up any zombies left behind in `unverifiedTokens`, which we don't/shouldn't need to worry about limiting.

I wasn't sure whether the two queries should be run together in a transaction. I've put them in one to be on the safe side but fwiw I don't *think* they need to be. `unverifiedTokens` is only ever used as the rhs of a `LEFT JOIN` with `sessionTokens`, so it should never matter if they exist after their associated session token has been deleted. And they're getting pruned regularly so it's not like they're going to pile up.

@mozilla/fxa-devs r?

/cc @jrgm, @jbuck",philbooth,64367,2017-09-06T17:19:19Z,CONTRIBUTOR,False,49,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,11cf5018d1e548c45b0954fc7e2e486c711a6201,fix(tokens): prune old session tokens that have no device record
241,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/274,274,Phil/263,"Fixes #263.

Please let me know if there is a better way to do this.

Initially I tried to do it all in one query, with a `LEFT JOIN` between `sessionTokens` and `devices` and an `INNER JOIN` between `sessionTokens` and `unverifiedTokens`. But that doesn't work because, [as per the docs](https://dev.mysql.com/doc/refman/5.7/en/delete.html#idm140189111263328):

> You cannot use `ORDER BY` or `LIMIT` in a multiple-table `DELETE`.

So instead, I've broken it down to two queries. The first uses `NOT EXISTS` and a subquery to deselect session tokens with device records, which allows us to sanely delete from `sessionTokens` with `ORDER BY` and `LIMIT`. Then the second one just mops up any zombies left behind in `unverifiedTokens`, which we don't/shouldn't need to worry about limiting.

I wasn't sure whether the two queries should be run together in a transaction. I've put them in one to be on the safe side but fwiw I don't *think* they need to be. `unverifiedTokens` is only ever used as the rhs of a `LEFT JOIN` with `sessionTokens`, so it should never matter if they exist after their associated session token has been deleted. And they're getting pruned regularly so it's not like they're going to pile up.

@mozilla/fxa-devs r?

/cc @jrgm, @jbuck",philbooth,64367,2017-09-06T17:19:19Z,CONTRIBUTOR,False,49,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,64dbf703b3d325b1e83b6e3437e4bcb954c842ed,fix(tokens): prune session tokens inside a transaction
242,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/272,272,feat(schema): add a pushEndpointExpired column to devices,"This connects to https://github.com/mozilla/fxa-auth-server/issues/1873.
The `createDevices` procedure is not modified, `pushEndpointExpired` is set by default to `FALSE`.",eoger,6424575,2017-08-24T19:28:26Z,CONTRIBUTOR,True,227,27,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9c93ad88ed5f090873beb7c48b84a70a337194df,feat(schema): add a pushEndpointExpired column to devices
243,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/271,271,feat(schema): add a uaFormFactor column to sessionTokens,"This is the same as #259, but with different patch level. There should be no surprises, it just adds a `uaFormFactor` column to `sessionTokens` again, as we may be able to run migrations against that table in prod now.

@mozilla/fxa-devs r?",philbooth,64367,2017-08-17T13:53:31Z,CONTRIBUTOR,True,307,22,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b644b319eca396997160f40062ca480f0202dfa9,"feat(schema): add a uaFormFactor column to sessionTokens

Second attempt to add this column, after the migration caused problems
in prod last time round. Originally attempted in e99bc19, then reverted
in f23098a."
244,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/270,270,chore(ci): remove node4 test targets from travis-ci,,seanmonstar,51479,2017-08-15T18:09:22Z,MEMBER,True,1,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,91c301175c323300c45de12a0ab922b19a6dbd84,chore(package): rename shrinkwrap script to shrink
245,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/270,270,chore(ci): remove node4 test targets from travis-ci,,seanmonstar,51479,2017-08-15T18:09:22Z,MEMBER,True,1,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0b758e6e8be3e757467312f5587c289238a25914,chore(ci): remove node4 test targets from travis-ci
246,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/269,269,chore(email): Remove emailRecord depreciation,"Fixes https://github.com/mozilla/fxa-auth-server/issues/1999.

Unfortunately, I don't have any solid plans to get this method depreciated and it might not be possible to do without breaking backwards compatibility on user's accounts. This PR drops the deprecation warnings.

@mozilla/fxa-devs r?",vbudhram,1295288,2017-08-11T15:41:29Z,CONTRIBUTOR,True,4,9,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,11a68731e44c16916b889bd92b308c6b4db70201,chore(email): Remove emailRecord depreciation
247,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/268,268,fix(sql): fix sql syntax,"Fixes https://github.com/mozilla/fxa-auth-server/issues/2030

@jrgm r?",vladikoff,128755,2017-08-03T16:53:38Z,CONTRIBUTOR,False,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9adff5d677981d9734e787fa937f8d70519e4b70,fix(sql): fix sql syntax
248,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/267,267,feat(db): add utf8mb4 support,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/229
",vladikoff,128755,2017-08-03T15:00:28Z,CONTRIBUTOR,True,220,35,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,de2266aca16503971d9f0824bc1d7b9847d87180,feat(db): add utf8mb4 support
249,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/267,267,feat(db): add utf8mb4 support,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/229
",vladikoff,128755,2017-08-03T15:00:28Z,CONTRIBUTOR,True,220,35,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5a7e1f5227346cbc519d3a352c35d15d931155dd,fix(db): update procedure name
250,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/267,267,feat(db): add utf8mb4 support,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/229
",vladikoff,128755,2017-08-03T15:00:28Z,CONTRIBUTOR,True,220,35,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,69c1515b01834a87e864b601364ea122fc074fb7,feat(utf8): add tests and dual write
251,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/267,267,feat(db): add utf8mb4 support,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/229
",vladikoff,128755,2017-08-03T15:00:28Z,CONTRIBUTOR,True,220,35,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1f790b15119229cf7c8e2248f2b3d487e4503ee6,fix(style): style fixes
252,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/267,267,feat(db): add utf8mb4 support,"Connects to https://github.com/mozilla/fxa-auth-db-mysql/issues/229
",vladikoff,128755,2017-08-03T15:00:28Z,CONTRIBUTOR,True,220,35,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a1013a262550a8b3be6d8855c4efde91457fcfda,fix(mysql): update based on feedback
253,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/266,266,feat(docker): update to node 6,,vladikoff,128755,2017-08-02T21:24:20Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2488eea3a232566686bfe7310ef9b6cd9c0dc867,feat(docker): update to node 6
254,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/266,266,feat(docker): update to node 6,,vladikoff,128755,2017-08-02T21:24:20Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b3aa38c6da383db6c0b97180a7060424f1cac7e0,feat(docker): update to 6.11.2
255,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/266,266,feat(docker): update to node 6,,vladikoff,128755,2017-08-02T21:24:20Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f4efda8b4a8e04dff50673d0757675854cd3a037,feat(docker): switch to fxa-node:6-alpine
256,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/266,266,feat(docker): update to node 6,,vladikoff,128755,2017-08-02T21:24:20Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,779d32eb8c7e31ba2981d8947d1a59b3827373b9,feat(docker): use mozilla/fxa-node
257,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/265,265,feat(unblockCode): add attempts left to unblock code,for https://github.com/mozilla/fxa-auth-server/issues/1998,udaraweerasinghege,9160471,2017-07-27T19:35:54Z,MEMBER,False,159,11,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7bc5af6035d82439bef9adffaa35b61416d21f89,feat(unblockCode): add attempts left to unblock code
258,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/262,262,feat(schema): drop the uaFormFactor column from sessionTokens,"As per discussion in the deployment bug, we have too many records in the `sessionTokens` table to add a new column in prod. This PR reverts train-91 to the previous state, but done as a forward migration with incremented stored procedures for the benefit of the patcher script.

An auth server patch will also be required, I'll write that one in a jiffy.

@vbudhram r?
",philbooth,64367,2017-07-17T07:10:21Z,CONTRIBUTOR,True,106,55,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,88f5a03351d8dc965020672bb84db6dc053034b7,"feat(schema): drop the uaFormFactor column from sessionTokens

We have too many sessionTokens to run this in prod."
259,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/262,262,feat(schema): drop the uaFormFactor column from sessionTokens,"As per discussion in the deployment bug, we have too many records in the `sessionTokens` table to add a new column in prod. This PR reverts train-91 to the previous state, but done as a forward migration with incremented stored procedures for the benefit of the patcher script.

An auth server patch will also be required, I'll write that one in a jiffy.

@vbudhram r?
",philbooth,64367,2017-07-17T07:10:21Z,CONTRIBUTOR,True,106,55,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,16d37d269a086f57b32ff57d21872815f5be77b5,fix(schema): call old sproc versions from session token sprocs
260,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/261,261,chore(scripts): add a script to generate migration boilerplate,"Fixes #202.

I noticed this issue for the first time yesterday, hadn't spotted it before. A script that generates migration boilerplate seems like a handy addition, so here is my first stab at one. It creates forward and reverse migration scripts and updates `lib/db/patch.js`.

@mozilla/fxa-devs r?",philbooth,64367,2017-07-13T08:00:24Z,CONTRIBUTOR,True,46,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c03f7e353e0e4e7a9a7c1c281f71e98a16a3176,chore(scripts): add a script to generate migration boilerplate
261,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/260,260,fix(nodejs): upgrade to 4.8.4 for security fixes,This needs to be in a 1.91.1 tag.,seanmonstar,51479,2017-07-12T18:49:30Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,450e931e82a6f79163c82f601e978777e9a4cc0d,fix(nodejs): upgrade to 4.8.4 for security fixes
262,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/259,259,feat(schema): add a uaFormFactor column to sessionTokens,"Fixes #239, adding a `uaFormFactor` column to `sessionTokens`. This is so that we can include information like `iPhone 6S` in the devices view, once all the pieces are in place. Overloading the `uaDeviceType` column with this information is not possible because we already have logic hanging off the `mobile` / `tablet` distinction that we make there.

I didn't bother updating the stored procedure for `updateSessionToken` because we don't use it and are hopefully going to delete it for #255. But the stored procedures for creating and reading session tokens are changed accordingly.

@mozilla/fxa-devs r?",philbooth,64367,2017-07-12T10:39:08Z,CONTRIBUTOR,True,315,32,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,443dd28f86e6e7bcaa0c767d1cf4134c884d1c37,feat(schema): add a uaFormFactor column to sessionTokens
263,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/258,258,chore(tests): don't make eslint a prerequisite for the tests,"Fixes #257.

I should be able to run the tests locally without eslint getting in my grill about `console.log` or whatever. This does that.

@mozilla/fxa-devs r?",philbooth,64367,2017-07-12T09:43:37Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,21cb66ad7a373a2465b9693440626cb50c321691,chore(tests): don't make eslint a prerequisite for the tests
264,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/256,256,feat(email): correctly return `createdAt` when using accountRecord,"Slight oversight in the mysql implementation for `accountRecord`, it didn't not return `createdBy` which caused https://travis-ci.org/mozilla/fxa-auth-server/jobs/252105845 to fail. Unfortunately, I did not catch this early enough and I'm guessing the migration has already run?

The tests now correctly pass on auth-server, https://travis-ci.org/mozilla/fxa-auth-server/builds/252500226.

@philbooth Sorry about that 😢, mind an r?

",vbudhram,1295288,2017-07-11T17:30:00Z,CONTRIBUTOR,True,38,2,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1b4737fd4b62ec8ae676394c2b3659250235d1b8,feat(email): correctly return `createdAt` when using accountRecord
265,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/254,254,feat(email): Add change email,"Adds support for changing email.

Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/236",vbudhram,1295288,2017-06-29T22:14:47Z,CONTRIBUTOR,True,358,10,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1430410d948ccaaa0b6b65bfc9a835b6f69542d3,feat(email): Updated change email
266,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/254,254,feat(email): Add change email,"Adds support for changing email.

Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/236",vbudhram,1295288,2017-06-29T22:14:47Z,CONTRIBUTOR,True,358,10,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,694ceeea30e7e1cc085bcef56cf4ac7549e88d53,feat(email): PR Fixes
267,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/253,253,Train 89 uplift,Trains 89.1 and 89.3 contained updates to the `accountEmails` and `forgotPasswordVerified`. This PR uplifts those changes and increments all the preceding migrations.,vbudhram,1295288,2017-06-28T00:04:34Z,CONTRIBUTOR,True,475,368,16,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e25057b7cade879e5eaaaa8acb78170da2db9296,chore(train): uplift train 89
268,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/252,252,chore(eslint): update to latest eslint,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/216,vladikoff,128755,2017-06-23T15:14:46Z,CONTRIBUTOR,True,238,262,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0e75b321b883e433b8aeb2d4ba4868e45768b551,chore(eslint): update to latest eslint
269,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/252,252,chore(eslint): update to latest eslint,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/216,vladikoff,128755,2017-06-23T15:14:46Z,CONTRIBUTOR,True,238,262,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6e29b9a2200760ebaa00ea956107d7d47b8169a8,chore(eslint): update package.json ref
270,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/252,252,chore(eslint): update to latest eslint,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/216,vladikoff,128755,2017-06-23T15:14:46Z,CONTRIBUTOR,True,238,262,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3e222d483070c92ff2123c7d144e45fed7ed4dc1,chore(eslint): update shrinkwrap
271,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/252,252,chore(eslint): update to latest eslint,Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/216,vladikoff,128755,2017-06-23T15:14:46Z,CONTRIBUTOR,True,238,262,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,edf6a0046eab59892d5f1114004e7485cb810fa7,chore(eslint): add git to docker file
272,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/251,251,feat(email): Don't use subquery update in forgotPasswordVerify,"From deployment, noticed that the `forgotPasswordVerify` SP was taking extra long to run. Turns out that the updated procedure was performing a table scan

`UPDATE emails SET isVerified = true WHERE email = (SELECT email FROM accounts WHERE uid = inUid); `

This PR updates SP to use index `normalizedEmail` on the WHERE clause and SELECT `normalizedEmail` from account table.

SQL Explain

<img width=""595"" alt=""screen shot 2017-06-21 at 2 01 17 pm"" src=""https://user-images.githubusercontent.com/1295288/27400558-726aa42e-568e-11e7-9a95-4d5ab474a029.png"">
<img width=""634"" alt=""screen shot 2017-06-21 at 2 00 55 pm"" src=""https://user-images.githubusercontent.com/1295288/27400559-72881acc-568e-11e7-807e-0e7481add2b9.png"">

Not sure if this will 100% remove all timeouts, but should increase speed of query.

@jbuck @jrgm Thoughts? r?",vbudhram,1295288,2017-06-21T18:35:11Z,CONTRIBUTOR,True,51,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,49519bdfad712723c56cbcd367d1fe3d2539ee72,feat(email): Don't use subquery on email verify update
273,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/250,250,feat(email): Remove temporary table from `accountEmails` query,"The PR removes the use of a temporary table in favor of using a select statement. This is the exact query that was planned for next [train](https://github.com/mozilla/fxa-auth-db-mysql/blob/c5a4ad50d412dc0dd4e3e53a24aeda3ee85b9fde/lib/db/schema/patch-051-052.sql#L1).

 Using this query assumes that all email data has been migrated to the emails table. I believe we would still have to merge this back into master, to ensure it correctly matches state of database.

@jbuck @rfk r?",vbudhram,1295288,2017-06-20T22:15:31Z,CONTRIBUTOR,True,40,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,017a2d3059c145fe5a2395c466d43a590e44d856,feat(email): remove temporary table from `accountEmails` query
274,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/250,250,feat(email): Remove temporary table from `accountEmails` query,"The PR removes the use of a temporary table in favor of using a select statement. This is the exact query that was planned for next [train](https://github.com/mozilla/fxa-auth-db-mysql/blob/c5a4ad50d412dc0dd4e3e53a24aeda3ee85b9fde/lib/db/schema/patch-051-052.sql#L1).

 Using this query assumes that all email data has been migrated to the emails table. I believe we would still have to merge this back into master, to ensure it correctly matches state of database.

@jbuck @rfk r?",vbudhram,1295288,2017-06-20T22:15:31Z,CONTRIBUTOR,True,40,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ca40bc618b3753f65612056ecaf58b5d3b8ea980,feat(email): Use select and union distinct
275,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/249,249,feat(tokens): Add ability to reset accounts tokens,"From secondary emails RRA, we need the ability to reset just an accounts tokens. This adds an endpoint that removes `passwordChangeTokens`, `passwordForgotTokens` and `accountResetTokens`.

Ref: https://github.com/mozilla/fxa-auth-server/issues/1948

Lets merge https://github.com/mozilla/fxa-auth-db-mysql/pull/248 before this one, @philbooth my turn to resolve conflicts 😄 ",vbudhram,1295288,2017-06-18T14:53:12Z,CONTRIBUTOR,True,234,2,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bec86750369d2212389b34e8466586757b544827,feat(tokens): Add ability to reset accounts tokens
276,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/249,249,feat(tokens): Add ability to reset accounts tokens,"From secondary emails RRA, we need the ability to reset just an accounts tokens. This adds an endpoint that removes `passwordChangeTokens`, `passwordForgotTokens` and `accountResetTokens`.

Ref: https://github.com/mozilla/fxa-auth-server/issues/1948

Lets merge https://github.com/mozilla/fxa-auth-db-mysql/pull/248 before this one, @philbooth my turn to resolve conflicts 😄 ",vbudhram,1295288,2017-06-18T14:53:12Z,CONTRIBUTOR,True,234,2,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c67a95a4188da4ef2d736fd813bf29612d4eb01c,"Merge remote-tracking branch 'origin/master' into reset-account-tokens

# Conflicts:
#	lib/db/schema/patch-052-053.sql
#	lib/db/schema/patch-053-052.sql"
277,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/249,249,feat(tokens): Add ability to reset accounts tokens,"From secondary emails RRA, we need the ability to reset just an accounts tokens. This adds an endpoint that removes `passwordChangeTokens`, `passwordForgotTokens` and `accountResetTokens`.

Ref: https://github.com/mozilla/fxa-auth-server/issues/1948

Lets merge https://github.com/mozilla/fxa-auth-db-mysql/pull/248 before this one, @philbooth my turn to resolve conflicts 😄 ",vbudhram,1295288,2017-06-18T14:53:12Z,CONTRIBUTOR,True,234,2,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,60dc6cca8e4ecf52845d12bf28b30dd1a8d143f4,feat(tokens): Add docs and resolve conflicts
278,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/249,249,feat(tokens): Add ability to reset accounts tokens,"From secondary emails RRA, we need the ability to reset just an accounts tokens. This adds an endpoint that removes `passwordChangeTokens`, `passwordForgotTokens` and `accountResetTokens`.

Ref: https://github.com/mozilla/fxa-auth-server/issues/1948

Lets merge https://github.com/mozilla/fxa-auth-db-mysql/pull/248 before this one, @philbooth my turn to resolve conflicts 😄 ",vbudhram,1295288,2017-06-18T14:53:12Z,CONTRIBUTOR,True,234,2,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,44e43303edcb117d4ab328ca7c59febe9af06946,feat(tokens): Add missing comment
279,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/248,248,feat(db): store flowIds with signinCodes,"Related to mozilla/fxa-auth-server#1945.

Stores `flowId` in the `signinCodes` table so that we can emit a `flow.continued` event in the auth server, which enables us to link up the flows at either end of connect another device.

@mozilla/fxa-devs r?

(and @vbudhram, sorry for yet another merge conflict in this repo, maybe you will merge ahead of me this time :smile:)",philbooth,64367,2017-06-15T10:43:18Z,CONTRIBUTOR,True,98,31,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,44d2354c31781db85dc049cb3fe42884c72cb112,feat(db): store flowIds with signinCodes
280,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/247,247,feat(email): Add email table migration script,"New and improved email table migration script. Copies all emails on the account table into the emails table.

Replaces https://github.com/mozilla/fxa-auth-db-mysql/pull/243. This will be a point release for the next train.",vbudhram,1295288,2017-06-13T15:34:00Z,CONTRIBUTOR,True,28,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,654d836d9a13ebc12acc7d7a582555dd177085ee,feat(email): Add email table migration script
281,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/245,245,feat(email): Update procedures to use email table,"This updates all mysql queries to use the emails table over the account table.

Part 3 of https://github.com/mozilla/fxa-auth-db-mysql/issues/244",vbudhram,1295288,2017-06-06T19:29:09Z,CONTRIBUTOR,True,351,49,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,04989d5d3024b30deb185a688d2428d06293693a,feat(email): Update procedures to use emails table
282,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/245,245,feat(email): Update procedures to use email table,"This updates all mysql queries to use the emails table over the account table.

Part 3 of https://github.com/mozilla/fxa-auth-db-mysql/issues/244",vbudhram,1295288,2017-06-06T19:29:09Z,CONTRIBUTOR,True,351,49,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c5a4ad50d412dc0dd4e3e53a24aeda3ee85b9fde,feat(email): PR fixes
283,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/243,243,feat(emails): Add account.email -> email table migration,"This is an PR adds the migration script to copy the account's email into the emails table. This will allow us simplify some of the SQL needed for changing a user's email. The commit of interest is https://github.com/mozilla/fxa-auth-db-mysql/commit/dc3ada6175b4274fcad5b106c9e9a03322508783, which just contains the migration.

@rfk @jbuck does this seem reasonable?",vbudhram,1295288,2017-06-05T17:19:34Z,CONTRIBUTOR,False,336,22,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3d377d8123fc77f4e88513f01c32573d01ac4ec0,"feat(email): Keep account email and emails table in sync (#241), r=@rfk, @philbooth"
284,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/243,243,feat(emails): Add account.email -> email table migration,"This is an PR adds the migration script to copy the account's email into the emails table. This will allow us simplify some of the SQL needed for changing a user's email. The commit of interest is https://github.com/mozilla/fxa-auth-db-mysql/commit/dc3ada6175b4274fcad5b106c9e9a03322508783, which just contains the migration.

@rfk @jbuck does this seem reasonable?",vbudhram,1295288,2017-06-05T17:19:34Z,CONTRIBUTOR,False,336,22,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cc6399efae3b74efb06b15a8186a8c1e55868a9a,feat(email): squash branch
285,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/242,242,feat(db): enable signinCode expiry,"Fixes mozilla/fxa-auth-server#1898.

I opened that issue in the auth server because I thought I'd stick the responsibility for it in an auth server process and call the existing endpoint for expiring sign-in codes. @rfk subsequently pointed out that we already have logic for expiring stuff in this repo so I should lean on that, which is what I've done here.

One side-effect of leaning on that code is that `signinCodes` will hang around in the table for 3 months before they're physically deleted. There's no harm in that of course, and it could even be useful if we ever decide to lengthen the expiry period. But 3 months does seem a bit unnecessary so if people want, I could tweak the logic so that `signinCodes` gets a different max-age to the token tables.

Other than that this should hopefully be unsurprising.

@mozilla/fxa-devs r?",philbooth,64367,2017-06-02T19:06:45Z,CONTRIBUTOR,True,169,173,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,60d28b2483728715ad554cb573b375f0336831fc,feat(db): enable signinCode expiry
286,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,845f7ca62e85f42ca648843f58318eb07e9e4e37,feat(email): On account creation add email to emails table
287,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,30a76d06ec6f1c3a84de038dbbb3df463a2483a1,feat(email): Update email on emails table when account is verified
288,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,213a73fa33bcfaca55ca67ceafe0a4167877baae,"Merge remote-tracking branch 'origin/master' into add-emails-account-create

# Conflicts:
#	fxa-auth-db-server/test/backend/db_tests.js"
289,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,438251aca67cc430f465d519a0cc6b423ede2049,feat(email): Add migration script
290,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f3e6e87bfcc435c01253413dac2a25a4074a3e06,"feat(email): Remove migration, pull into separate PR"
291,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6be3797cd9fbddeb803702f8d343b1cb3b5f6e9a,feat(email): Add extra check for email when setting account verified
292,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9bf7af5697ad2fa6b0c7b29aac854865e4795228,feat(email): Update to use correct procedures
293,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,10f08ea174f1495bda06e3db0a65041ce2245c3f,"Merge remote-tracking branch 'origin/master' into add-emails-account-create

# Conflicts:
#	lib/db/schema/patch-048-049.sql
#	lib/db/schema/patch-049-048.sql"
294,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/241,241,feat(email): Keep account email and emails table in sync,"As part of changing emails we want to move away from using the email on the account table as much as possible. To support this, this PR does the following

* On account create, adds the same email to emails table with same verification status
* On account verify, verifies the email on emails table
* Updates `accountEmails` to correctly handle primary email on emails table
* On password reset complete, verifies both account and emails table

By doing this first, the SQL to change a user emails can be simplified.",vbudhram,1295288,2017-05-31T20:58:50Z,CONTRIBUTOR,True,310,22,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,92ca1cfe821b4eed046f48b886029aedd409fe3a,feat(email): Update mysql to not sure account email
295,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/240,240,refactor(test): refactor our tests to use Mocha instead of TAP,"We use Mocha for testing in all our other servers, and prefer it for the easier stack traces and debugging. Let's be consistent!

Fixes #232",seanmonstar,51479,2017-05-31T00:20:45Z,MEMBER,True,6312,7556,20,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,80c69d55d878e121915361d535871980a2e233a0,"refactor(test): refactor our tests to use Mocha instead of TAP

Closes #232"
296,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bc8b58ad762e9dd765e938f59d688b52d86aa07b,feat(email): Added initial change email sql
297,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2a611fddbf2ec431144b9a8105b27101d0c68571,feat(email): Added initial change email mem
298,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,16c4c2248f5bae8bb0efe81f3bea569c87eb1232,feat(email): Update change email logic
299,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,57bec30ccaaffab3540faca3579e065a8ed248ba,feat(email): Update endpoint name
300,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7422bc610487c8ce531dacd536cc53eeff513e78,feat(email): Update mem db change email
301,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0daa6526e9b039d08067af494196c7ef8ce5726c,feat(email): Update unit tests
302,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/238,238,feat(email): Add support for changing user primary email,,vbudhram,1295288,2017-05-18T22:40:10Z,CONTRIBUTOR,False,464,23,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bece04272e10ec3c34b01d14d36c2b06eb8e63cb,feat(email): Code cleanup
303,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/237,237,feat(docker): add custom feature branch,@jrgm r?,vladikoff,128755,2017-05-16T20:51:26Z,CONTRIBUTOR,True,9,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,42a3a0bd47a8fd028dd0489d72746d864b21ee4b,feat(docker): add custom feature branch
304,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa3be92b298074fa4b864f1fbcd587e642021e74,feat(signinCodes): migration and endpoints for signinCodes table
305,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,12cb6fba213a811649e555db74d71169877b91fc,chore(db): rename useSigninCode to consumeSigninCode
306,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a49e1d8d562d150950fd5f5e6095705354d1e561,fix(docs): fix incorrect signinCodes docs
307,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,807d2241ee94df70e69f2bc8688988dd85840e71,fix(db): ensure signinCodes are deleted with accounts
308,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,39cbe52d0a036d103635207aefde04a82d3caee2,fix(docs): fix incorrect hex length comment
309,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0ec28f99bf7a446e32aa9697f2da83c95f48a3bb,fix(docs): remove specifiec length references from signinCodes docs
310,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d3f0e036dac5cf9789756cea6a3b5e2d101a3dec,chore(server): change consumeSigninCode endpoint from DELETE to POST
311,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6ad769a7169d468542b52c44fbe4e3a9c26690b9,fix(db): add missing stored proc to rollback migration
312,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/235,235,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230. Replaces #234, implementing some of the suggested feedback from that PR.

Unresolved questions from that PR, copied over so we can continue the discussion here.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r115950898

  > @philbooth: I'm deeply uncertain about the name of this endpoint, if anyone has better suggestions hit me!
  > @vbudhram: Going to go out a limb and suggest `/code/signin/:code`. This might give us a little flexibility later on if we get different types of codes, ex 2FA.
  > @philbooth: I quite like `signinCodes` in the path because it matches the name of the underlying table and shows up when grepping for it.

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116005508

  > @vbudhram: The use of `DELETE` here seems a little strange to me, since it is going to use the code and not just delete it.
  > @philbooth: I opted for `DELETE` because it reflects the change in database state. What do you think it should be instead?

* https://github.com/mozilla/fxa-auth-db-mysql/pull/234#discussion_r116132208

  > @rfk: FWIW having a `DELETE` request that returns a response body seems super weird to me.
  > @philbooth: Same question I asked @vbudhram, what should I change it to? Fwiw, a `GET` request that deletes items from the database seems super weird to me. 😄

Thanks for your feedback, I think I addressed all the other points.",philbooth,64367,2017-05-15T10:42:22Z,CONTRIBUTOR,True,526,18,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ff8d081ef4ac4cf2c81df07eb3700d873089ecd3,fix(docs): remove errant tab
313,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/234,234,feat(signinCodes): migration and endpoints for signinCodes table,"Fixes #230.

This implements the `signinCodes` table described in the feature doc here:

https://docs.google.com/document/d/1ObM7gZn0zt1NL4-3enBugZjJrxoD0ODthmuoaoEe7c0/edit#heading=h.pygogb30plwl

I'm in a bit of a rush as the cleaners want to come and clean my hotel room, so apologies for the lack of more detailed description. Feel free to hit me with questions!

@mozilla/fxa-devs r?
",philbooth,64367,2017-05-11T09:59:49Z,CONTRIBUTOR,False,512,16,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa3be92b298074fa4b864f1fbcd587e642021e74,feat(signinCodes): migration and endpoints for signinCodes table
314,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/233,233,MySQL old_passwords compatibility: Add 'insecureAuth' config parameter.,"This allows to use mysql databases that for some reason cannot change to old_passwords = 0.

It adds the insecureAuth param to the MySQL config and allows to set it using an ENV variable to make it easy to change it from the servers.json file.

Its default value is false, so if not set, everything should behave like up until now.
",jua-mp,22029795,2017-05-10T15:48:25Z,NONE,False,10,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3fb95fdf07822189c345c5ae6ea28c288654bede,"MySQL old_passwords compatibility: Add 'insecureAuth' config
parameter for mysql connections. Adds backwards compatibility for
pre 4.1 databases. insecureAuth is set to false per default so
it should not change the behaviour up until now."
315,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/231,231,fix(email): Use correct delete account procedure,"This PR fixes the issue where secondary emails were not being deleted from the emails table when the account was delete. This caused new account creation to fail if they attempted to use an email in the secondary table. The procedure was [created](https://github.com/mozilla/fxa-auth-db-mysql/blob/master/lib/db/schema/patch-045-046.sql#L152) but the call in mysql was not updated it use it >.<

@mozilla/fxa-devs r?

Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1362589.",vbudhram,1295288,2017-05-08T01:17:16Z,CONTRIBUTOR,True,82,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,19e31859d8d2ee552442a442f44bcbf6cb7d41e3,fix(email): Use correct delete account procedure
316,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/231,231,fix(email): Use correct delete account procedure,"This PR fixes the issue where secondary emails were not being deleted from the emails table when the account was delete. This caused new account creation to fail if they attempted to use an email in the secondary table. The procedure was [created](https://github.com/mozilla/fxa-auth-db-mysql/blob/master/lib/db/schema/patch-045-046.sql#L152) but the call in mysql was not updated it use it >.<

@mozilla/fxa-devs r?

Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1362589.",vbudhram,1295288,2017-05-08T01:17:16Z,CONTRIBUTOR,True,82,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d3e367c397d8a7fa7131275548a0a6dacd524800,fix(email): Add check to create email
317,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/231,231,fix(email): Use correct delete account procedure,"This PR fixes the issue where secondary emails were not being deleted from the emails table when the account was delete. This caused new account creation to fail if they attempted to use an email in the secondary table. The procedure was [created](https://github.com/mozilla/fxa-auth-db-mysql/blob/master/lib/db/schema/patch-045-046.sql#L152) but the call in mysql was not updated it use it >.<

@mozilla/fxa-devs r?

Fixes https://bugzilla.mozilla.org/show_bug.cgi?id=1362589.",vbudhram,1295288,2017-05-08T01:17:16Z,CONTRIBUTOR,True,82,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c288c685cdcc7e246316c61755b35bc55b313954,fix(email): Add check that secondary emails can be reused after an account is deleted
318,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/228,228,Release v1.86.0,,vladikoff,128755,2017-05-01T16:19:30Z,CONTRIBUTOR,True,188,159,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6d89d30c5c224c9c7fac176e44638f493ffdf336,fix(docs): update authors and node.js version in README
319,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/228,228,Release v1.86.0,,vladikoff,128755,2017-05-01T16:19:30Z,CONTRIBUTOR,True,188,159,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,038e64405e06ad754ee4fb644e4ded859db0d6e9,Release v1.86.0
320,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/227,227,feat(email): Add get email endpoint,"This PR adds the `getEmail` endpoint. It will be used only by the auth-server to get a single email on the secondary table, which will then let the it intelligently choose how to proceed on login (display correct error message) or account create (display email unavailable).

Fixes #226 

@mozilla/fxa-devs r?",vbudhram,1295288,2017-04-25T03:57:57Z,CONTRIBUTOR,True,98,3,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0c4bfb5f0d26b66d7fbb2bb48e2fb4d5d75e2061,feat(email): Add get email endpoint
321,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/227,227,feat(email): Add get email endpoint,"This PR adds the `getEmail` endpoint. It will be used only by the auth-server to get a single email on the secondary table, which will then let the it intelligently choose how to proceed on login (display correct error message) or account create (display email unavailable).

Fixes #226 

@mozilla/fxa-devs r?",vbudhram,1295288,2017-04-25T03:57:57Z,CONTRIBUTOR,True,98,3,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,542a332ea4b39a7fd9d71aef5c566b4e69c6eefa,feat(email): Update to use `emailBuffer`
322,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/227,227,feat(email): Add get email endpoint,"This PR adds the `getEmail` endpoint. It will be used only by the auth-server to get a single email on the secondary table, which will then let the it intelligently choose how to proceed on login (display correct error message) or account create (display email unavailable).

Fixes #226 

@mozilla/fxa-devs r?",vbudhram,1295288,2017-04-25T03:57:57Z,CONTRIBUTOR,True,98,3,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,80badfc8f2a7562f95a703fb43d3f3d4b5121c3c,feat(email): Updates from @vladikoff review
323,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/227,227,feat(email): Add get email endpoint,"This PR adds the `getEmail` endpoint. It will be used only by the auth-server to get a single email on the secondary table, which will then let the it intelligently choose how to proceed on login (display correct error message) or account create (display email unavailable).

Fixes #226 

@mozilla/fxa-devs r?",vbudhram,1295288,2017-04-25T03:57:57Z,CONTRIBUTOR,True,98,3,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a8a6bd028d23dc26082427987d2d05df9d91de3f,feat(email): Updates from @rfk review
324,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/225,225,chore(docker): Use official node image & update to Node.js v4.8.2,,jbuck,578466,2017-04-18T22:19:44Z,MEMBER,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,eec54a141d52d738d9ab45bb359e0e5d905a8e7b,chore(docker): Use official node image & update to Node.js v4.8.2
325,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/224,224,feat(tokens): prune tokens older than 3 months,"Fixes #219

@jrgm @jbuck r?",vladikoff,128755,2017-04-18T19:04:31Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8f3ce555d18762b92cf8ef8f5cbcf2b18ff2c753,"feat(tokens): prune tokens older than 3 months

Fixes #219"
326,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/223,223,Release v1.85.0,,vladikoff,128755,2017-04-18T15:42:25Z,CONTRIBUTOR,True,17,3,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,61053493b8308bb8859264b3bbaa69d191b7caf3,Release v1.85.0
327,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/222,222,fix(install): add formatter to main package.json,,vladikoff,128755,2017-04-12T17:52:44Z,CONTRIBUTOR,True,3,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,706cc17b7b53c82a28511ec8bad00e2dbccee175,fix(install): add formatter to main package.json
328,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/220,220,fix(security): escape json output,refs: bmo bug 1320211,g-k,226605,2017-04-06T23:45:01Z,CONTRIBUTOR,True,20,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b876d951071753e1d581c974ef58514054cf9bda,"fix(security): escape json output

refs: bmo bug 1320211"
329,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/218,218,chore(dependencies):  add eslint-plugin-fxa,fixes #216 ,morrme,26514778,2017-04-04T23:10:25Z,NONE,False,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,33d82ebfed379b5b2df4c72302196dd5be11b3d4,Added eslint-plugin-fxa per issue #216
330,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/218,218,chore(dependencies):  add eslint-plugin-fxa,fixes #216 ,morrme,26514778,2017-04-04T23:10:25Z,NONE,False,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f60526bdc420167a5f300c4c1f6787ef1ee4cd0d,"chore (dependencies): remove old eslint reference

fixes #215"
331,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/217,217,chore(dependencies): update all our production dependencies,,seanmonstar,51479,2017-03-30T18:19:22Z,MEMBER,True,452,588,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fbd835022fcb1a3c7ff9692ccde238adb0617bf3,chore(dependencies): update all our production dependencies
332,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/215,215,fix(security-events): Correctly handle tokenless security events in mem backend,"The 'account.reset' security event may not be associated with a session token, but we didn't have sufficient test coverage for this.  The mem and mysql backends were handling it differently, and the mem backout would error out in some cases.  This PR:

* Fixes a bug in the mem backend where it might try to dereference an undefined tokenId
* Adds a test that events without a token are *verified* by default, and changes the mem backend to match this behaviour, which was already present in the mysql backend.
* Makes the mem backend return results most-recent-first, matching how the mysql backend does it.

@seanmonstar does this sound correct?",rfk,34695,2017-03-20T02:57:43Z,MEMBER,True,33,21,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,85122df15e9234e2b53b30ca269b68ebcd457cf1,fix(security-events): Correctly handle tokenless security events in mem backend
333,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/214,214,fix(config): Add environment variable for ipHmacKey,,jbuck,578466,2017-03-16T00:59:37Z,MEMBER,True,2,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,65f6d7800d3ff6539cce6127599e53df166765f0,fix(config): Add environment variable for ipHmacKey
334,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/213,213,fix(emailBounces): receive the email parameter in the url as hex,"The auth server hasn't used this route yet, so no coordination dance required. This makes it match `/emailRecord/:id`.",seanmonstar,51479,2017-03-08T01:41:00Z,MEMBER,True,4,4,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e1c078bef39c380d2fb32210ef68d57d40a63831,fix(emailBounces): receive the email parameter in the url as hex
335,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/212,212,feat(docker): add docker via Circle CI,@jbuck could you please add the build creds to https://circleci.com/gh/mozilla/fxa-auth-db-mysql/edit#env-vars ?,vladikoff,128755,2017-03-01T19:51:41Z,CONTRIBUTOR,True,74,31,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,24c48900411420275bf1dc6ca88ead83f66e8742,feat(docker): add docker via Circle CI
336,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/212,212,feat(docker): add docker via Circle CI,@jbuck could you please add the build creds to https://circleci.com/gh/mozilla/fxa-auth-db-mysql/edit#env-vars ?,vladikoff,128755,2017-03-01T19:51:41Z,CONTRIBUTOR,True,74,31,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d15c9ed13b3f7dd80adcb2bc3b3e4e4aab8a12cd,fix(docs): remove old docker docs
337,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c92b5bdea63a4a7a62fdcf166de02127a7e66c78,feat(email): Add mysql support for adding additional emails
338,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,47cc38cdcee9ba8c6000edbf409702b4408c4f5a,feat(email): Add more tests and mem support
339,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,15af74bcdb670b12a92948da3169e66dba257cc8,feat(email): Fix sql typo
340,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b5ffb365b3890bd772bc975f4c7ccd752e1f99cc,"Merge remote-tracking branch 'origin/master' into add-mor-user-emails

# Conflicts:
#	lib/db/schema/patch-044-045.sql
#	lib/db/schema/patch-045-044.sql"
341,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ea45762e20bd54de3affed7e4483bb7b905b5587,feat(email): Resolve merge conflicts
342,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,af8b5dc959f5383ad61e322477fd9c3a1dd30d6a,feat(email): PR Fixes
343,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,38444ad712f2f691854e6d82ba0b19ece53c7aff,feat(email): Update `deleteEmail` to take uid
344,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6782e7f9b5e44d925857e1da4dd410c5eda53cee,feat(email): Add more test coverage
345,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fef2d95e4f620f6ca10aef9c2cd63165a3a92753,Merge remote-tracking branch 'origin/master' into add-mor-user-emails
346,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,be2888683f9ccdc698958dc1a712bc7085d476f8,"feat(email): Fixed busted test cases, added docs"
347,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d1638990ff3d913bebc7376360bc63324eefc641,Merge remote-tracking branch 'origin/master' into add-mor-user-emails
348,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4083ef574681f295293f74459804db679ac0c662,feat(email): Return reject errors
349,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7a25e5780205ceff66a82abde9bffad316ec9ed1,feat(email): PR Fixes
350,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,85c683f3aa91d2e19728564112fea52b961b8483,feat(email): PR Fixes
351,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/211,211,feat(email): Add support for adding additional emails,"Fixes #210, https://github.com/mozilla/fxa-features/issues/27",vbudhram,1295288,2017-02-24T04:39:27Z,CONTRIBUTOR,True,807,19,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,46e333b5bb38ceac6529c9355ae13fa99effc006,Merge remote-tracking branch 'origin/master' into add-mor-user-emails
352,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/209,209,fix(email): Return `createdAt` when calling mysql db.emailRecord,"The PR updates the `emailRecord` mysql db call to return its `createdAt` value as well. This matches what the mem db call returns.

Connects with https://github.com/mozilla/fxa-auth-server/issues/1671

@rfk r?
",vbudhram,1295288,2017-02-23T03:58:11Z,CONTRIBUTOR,True,78,3,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d7eec269267518b52fbf0a05f508bb4be9b2acc3,fix(email): Return `createdAt` when calling db.emailRecord
353,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/207,207,fix(style): replace tab char with a space,,vladikoff,128755,2017-02-15T20:11:56Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3ed1a3f68200fa75fe15ab784500a080fc85c1b0,fix(style): replace tab char with a space
354,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/206,206,feat(tokens): add prune token maxAge and update pruning,Fixes #201,vladikoff,128755,2017-02-11T01:37:34Z,CONTRIBUTOR,True,101,18,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4ed5226f73e5cdc6335b671dc76f0c04a0dd8621,"feat(tokens): add prune token maxAge and update pruning

Fixes #201"
355,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/206,206,feat(tokens): add prune token maxAge and update pruning,Fixes #201,vladikoff,128755,2017-02-11T01:37:34Z,CONTRIBUTOR,True,101,18,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fa09248dbfc2357f3a7482d4041e98916d7abc28,fix(tests): add more tests to prune_token
356,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/206,206,feat(tokens): add prune token maxAge and update pruning,Fixes #201,vladikoff,128755,2017-02-11T01:37:34Z,CONTRIBUTOR,True,101,18,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,74586747531335a526cf6151690f755142f10b0a,"fix(prune): add index to unblock codes, update variable name"
357,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/205,205,feat(account): add Account Preferences,"- Adds `GET /account/:id/preferences`
- Adds `POST /account/:id/preferences`

The first ""preference"" is `signinConfirmation`, which we can use to
determine if a user wants to always receive signinConfirmation no matter
what.

The design of the `signinConfirmation` column is an integer, so it can
easily be expanded upon, such that other numerical values can be used to
signal that a user desires different kinds of confirmation, like Push
Notifications or a mobile authenticator code.

Current values:

0 = don't force signin confirmation
1 = force email signin confirmation",seanmonstar,51479,2017-02-09T23:38:16Z,MEMBER,False,148,17,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,223a490669a70332d2a7f7b78f29ec1c35683b73,"feat(account): add Account Preferences

- Adds `GET /account/:id/preferences`
- Adds `POST /account/:id/preferences`

The first ""preference"" is `signinConfirmation`, which we can use to
determine if a user wants to always receive signinConfirmation no matter
what.

The design of the `signinConfirmation` column is an integer, so it can
easily be expanded upon, such that other numerical values can be used to
signal that a user desires different kinds of confirmation, like Push
Notifications or a mobile authenticator code.

Current values:

0 = don't force signin confirmation
1 = force email signin confirmation"
358,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/204,204,feat(tokens): get the device associated with a tokenVerificationId,Connects to mozilla/fxa-auth-server#1651,eoger,6424575,2017-02-09T20:39:43Z,CONTRIBUTOR,True,206,2,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c72e326b69240f1d6197be4541c4ba6cb6c8d9b0,feat(tokens): get the device associated with a tokenVerificationId
359,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/203,203,feat(sessions): update the sessions query to include device information,Connects to mozilla/fxa-content-server#4585,vladikoff,128755,2017-02-08T23:11:12Z,CONTRIBUTOR,True,126,19,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,912e10609b19ba8613e8ed718aced4198adff291,feat(sessions): update the sessions query to include device information
360,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/203,203,feat(sessions): update the sessions query to include device information,Connects to mozilla/fxa-content-server#4585,vladikoff,128755,2017-02-08T23:11:12Z,CONTRIBUTOR,True,126,19,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ffd9d0a979bacef30964c25c6db68a4f2402fa0d,feat(sessions): add memory db updates
361,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/203,203,feat(sessions): update the sessions query to include device information,Connects to mozilla/fxa-content-server#4585,vladikoff,128755,2017-02-08T23:11:12Z,CONTRIBUTOR,True,126,19,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,eec6cbba2eafa6bb19eeccca365bed9705e9b6c5,fix(tests): fix up the tests
362,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/203,203,feat(sessions): update the sessions query to include device information,Connects to mozilla/fxa-content-server#4585,vladikoff,128755,2017-02-08T23:11:12Z,CONTRIBUTOR,True,126,19,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b1850a797773c7947ac362f31efe7953443c4288,fix(tests): make sure mem db matches mysql results
363,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/203,203,feat(sessions): update the sessions query to include device information,Connects to mozilla/fxa-content-server#4585,vladikoff,128755,2017-02-08T23:11:12Z,CONTRIBUTOR,True,126,19,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d363a8f025d37d65f594dfe8a9c84e0695fe3d61,fix(db): update patch levels
364,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/200,200,fix(reminders): adjust mysql procedures,Fixes #196,vladikoff,128755,2017-02-02T23:09:09Z,CONTRIBUTOR,True,178,5,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c8c016a0f5294664d1bc223ff6cf7d4f6f525e4,"fix(reminders): optimize mysql procedures for verification reminders

Fixes #200"
365,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/200,200,fix(reminders): adjust mysql procedures,Fixes #196,vladikoff,128755,2017-02-02T23:09:09Z,CONTRIBUTOR,True,178,5,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,278f0ae16357f9b51f03ad22bc9479ab33e823e5,fix(reminders): make sure to drop the new create procedure
366,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/200,200,fix(reminders): adjust mysql procedures,Fixes #196,vladikoff,128755,2017-02-02T23:09:09Z,CONTRIBUTOR,True,178,5,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,228b7b2216db8eeff984af62373086351e8da145,fix(reminders): add a multi fetch test case
367,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/200,200,fix(reminders): adjust mysql procedures,Fixes #196,vladikoff,128755,2017-02-02T23:09:09Z,CONTRIBUTOR,True,178,5,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dac04b2a85e244dbf7630b6f0a7061b70562bbbe,fix(style): no semicolons
368,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/199,199,feat(db): add emailBounces table,"I have some code to also add `fetchEmailBounces(email)`, but was left with an implementation detail I wanted to talk out.

This is currently changed `bounceType` and `bounceSubType` into integers, since it is more efficient to store ints than varchars, and also more efficient to query on them if want to make specific queries.

This means that returning the rows, the raw values are different than what is stored in the `memory` version. Does it seem nice to just universally store them as integral ""type"" codes, or should they be mapped to a string version coming out of the DB? I feel like having them be integers makes it harder to typo names if we start filtering on types down the road, and so I'm leaning towards having the same mapping in the `memory` db... I'll mull on it over night, and should have something ready tomorrow morning.

Fixes #197",seanmonstar,51479,2017-01-24T02:02:18Z,MEMBER,True,227,11,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4fe29fa379fd24319ee76894478a44b94ded7505,"feat(db): add emailBounces table

Add a table to record all hard and soft bounces, and complaints, to a
given email address. Also add `POST /emailBounces` and `GET
/emailBounces/:email` to query for them."
369,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/198,198,feat(websessions): add database support for Web Sessions,Connects to https://github.com/mozilla/fxa-content-server/issues/4585,vladikoff,128755,2017-01-17T02:01:28Z,CONTRIBUTOR,False,36,1,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5bc4d6599ce63f2084593025e142f6399366e42e,feat(websessions): add database support for Web Sessions
370,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/193,193,chore(deps): add new shrinkwrap command,Fixes #189,vladikoff,128755,2016-12-13T16:23:59Z,CONTRIBUTOR,True,795,413,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,01afdcd53d0ace6ee5c97bebc6d292f3fd6d3794,"chore(deps): add new shrinkwrap command

Fixes #189"
371,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/191,191,fix(schema): Complete final phase of several previous migrations.,"Fixes #178, Fixes #181; @mozilla/fxa-devs r?",rfk,34695,2016-12-01T04:58:02Z,MEMBER,True,50,2,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bb899e465f1b9d5b962f418044cd15c4242807e1,fix(schema): Complete final phase of several previous migrations.
372,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/187,187,fix(bufferize): Only bufferize params we explicitly want as buffers.,"We had to back out the version of this from #182, due to test bustage in auth-server.  Here's another stab at it incorporating the error cases @vladikoff identified over in #184.

Let's not merge this until we have an auth-server branch with tests fixes, passing against this branch of auth-db-mysql.

@vladikoff r?
",rfk,34695,2016-11-16T03:33:35Z,MEMBER,True,128,41,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,343914d7d7df013ef803a035dadfe09de72635c4,"fix(bufferize): Only bufferize params we explicitly want as buffers.

The previous behaviour was to automagically bufferize anything that
looked like a hex string, unless it was on an explicit list of
""things we don't want as buffers"".  A list we've failed to keep
up to date.

This changes it to use an explicit list of things that we expect
to be buffers, and leave everything else alone.  It removes the
guesswork and the associated potential for unexpected foot/bullet
interactions."
373,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/185,185,revert(bufferize): Only bufferize params we explicitly want as buffers.,Reverts mozilla/fxa-auth-db-mysql#182,vladikoff,128755,2016-11-15T23:40:35Z,CONTRIBUTOR,True,43,67,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b235482e041aca12612a04de3d65ac281557887b,"Revert ""fix(bufferize): Only bufferize params we explicitly want as buffers."""
374,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/184,184,fix(buffer): only bufferize set values,"@vbudhram r?

One thing at a time... ",vladikoff,128755,2016-11-15T21:23:59Z,CONTRIBUTOR,False,28,5,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,366ce3ae19f3d00f1528206ce0ace5a541894c60,fix(buffer): only bufferize set values
375,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/182,182,fix(bufferize): Only bufferize params we explicitly want as buffers.,"The previous behaviour was to automagically bufferize anything that looked like a hex string, unless it was on an explicit list of ""things we don't want as buffers"".  A list we've failed to keep up to date.

This changes it to use an explicit list of things that we expect to be buffers, and leave everything else alone.  It removes the guesswork and the associated potential for unexpected foot/bullet
interactions.

To nobody's surprise, this was masking a couple of (thankfully harmless) bugs in our test suite.

@philbooth r?",rfk,34695,2016-11-15T06:03:14Z,MEMBER,True,67,43,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c638f619eef20cac49089443c9a9a68f5af2ed20,"fix(bufferize): Only bufferize params we explicitly want as buffers.

The previous behaviour was to automagically bufferize anything that
looked like a hex string, unless it was on an explicit list of
""things we don't want as buffers"".  A list we've failed to keep
up to date.

This changes it to use an explicit list of things that we expect
to be buffers, and leave everything else alone.  It removes the
guesswork and the associated potential for unexpected foot/bullet
interactions."
376,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/180,180,chore(securityEvents): Stop writing to the `securityEvents.tokenId` column,Fixes #179; @seanmonstar r?,rfk,34695,2016-11-08T04:41:06Z,MEMBER,True,52,2,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1e3763dbe47a88c9ce41ee0796b2083c50b898c8,"chore(securityEvents): Stop writing to the `securityEvents.tokenId` column.

It's no longer used, we were only writing to it for backwards
compatibility reasons."
377,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/177,177,"feat(eventLog): Remove the unused ""eventLog"" feature.","A long time ago, we had this idea that we'd send out account lifecycle notifications to relying services, e.g. telling basket about accounts that are created, verified and deleted.  We do _some_ of this already via SQS in the auth-server, but we had a plan to make a more generic and reliable stream of such events.  We added code to the db to record these events, with the intention of eventually publishing them somewhere.

But we've never got around to doing the publishing part, and I have no reason to believe we ever will.

So let's stop paying the additional DB write overhead of recording these events.  @jrgm @philbooth r?

**NB**: we can't merge this as-is, because it conflicts with another PR that's also using migration number 35; I'll fix that up once the other one lands.
",rfk,34695,2016-10-17T02:43:34Z,MEMBER,True,153,586,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c8eebab73cea88beff5d3207c80b5b485f22c6d,chore(lint): Include ./bin/*.js in eslint coverage
378,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/177,177,"feat(eventLog): Remove the unused ""eventLog"" feature.","A long time ago, we had this idea that we'd send out account lifecycle notifications to relying services, e.g. telling basket about accounts that are created, verified and deleted.  We do _some_ of this already via SQS in the auth-server, but we had a plan to make a more generic and reliable stream of such events.  We added code to the db to record these events, with the intention of eventually publishing them somewhere.

But we've never got around to doing the publishing part, and I have no reason to believe we ever will.

So let's stop paying the additional DB write overhead of recording these events.  @jrgm @philbooth r?

**NB**: we can't merge this as-is, because it conflicts with another PR that's also using migration number 35; I'll fix that up once the other one lands.
",rfk,34695,2016-10-17T02:43:34Z,MEMBER,True,153,586,15,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a138e76d79f56e59e08e9886a1b5007d59fb56d8,"feat(eventLog): Remove the unused ""eventLog"" feature."
379,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/176,176,fix(securityEvents): Tweak securityEvents db queries based on @jrgm feedback,"Here's some proposed tweaks to the DB queries for security events, based on feedback/concerns from @jrgm in https://bugzilla.mozilla.org/show_bug.cgi?id=1304287#c8
- Add `createdAt` to the index we use for fetching the events
- Store the tokenVerificationId on the event, so that we can directly look it up to verify it rather than indirecting through the tokenId.

The fetch query no longer threatens to use a filesort:

```
mysql> explain     SELECT         n.name,         e.verified,         e.createdAt     FROM         securityEvents e     LEFT JOIN securityEventNames n         ON e.nameId = n.id     WHERE         e.uid = unhex('000000111')     AND         e.ipAddr
+----+-------------+-------+------------+--------+-----------------------------------------------------------------------------------------------------------+-----------------------------------------+---------+--------------+------+----------+-------------+
| id | select_type | table | partitions | type   | possible_keys                                                                                             | key                                     | key_len | ref          | rows | filtered | Extra       |
+----+-------------+-------+------------+--------+-----------------------------------------------------------------------------------------------------------+-----------------------------------------+---------+--------------+------+----------+-------------+
|  1 | SIMPLE      | e     | NULL       | ref    | securityEvents_uid_tokenId,securityEvents_uid_tokenVerificationId,securityEvents_uid_ipAddrHmac_createdAt | securityEvents_uid_ipAddrHmac_createdAt | 48      | const,const  |    1 |    10.00 | Using where |
|  1 | SIMPLE      | n     | NULL       | eq_ref | PRIMARY                                                                                                   | PRIMARY                                 | 4       | fxa.e.nameId |    1 |   100.00 | NULL        |
+----+-------------+-------+------------+--------+-----------------------------------------------------------------------------------------------------------+-----------------------------------------+---------+--------------+------+----------+-------------+
```

@seanmonstar r?
",rfk,34695,2016-10-14T06:31:10Z,MEMBER,True,135,3,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ffa5561feb33bc654948f4d64d599bad401cc4d9,fix(securityEvents): Tweak securityEvents db queries based on @jrgm feedback
380,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/175,175,chore(travis): add node 6 explicitly to travis,,seanmonstar,51479,2016-09-29T18:39:16Z,MEMBER,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8264d64dd004afb18dc2fa01486bf54ebf3538a2,chore(travis): add node 6 explicitly to travis
381,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/174,174,fix(travis): drop node 0.10 test config,,seanmonstar,51479,2016-09-28T02:02:39Z,MEMBER,True,0,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a808c5d32ce6c7aab2013086ba6f0343c79fff18,fix(travis): drop node 0.10 test config
382,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/173,173,fix(security): Fix the endpoints for /securityEvents.,"There were problems with the auth-server integration.
- convert GET /securityEvents to GET /securityEvents/:id/ip/:ipAddr
  to be more RESTful and work with the auth-server's pool get API
- for POST /securityEvents, pass the body and query parameters, fixing the
  former attempt to pass the param's id and body.
- in fxa-auth-db-server/index.js, add 3 helper functions so it's easy to know
  what data is passed to the db methods.

fixes #171 

@rfk, @seanmonstar - r? 
",shane-tomlinson,848085,2016-09-22T12:47:14Z,MEMBER,True,68,61,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5dfd5f8ccfa7dd6b1968b1beefc73e892e164bd7,"fix(security): Fix the endpoints for /securityEvents.

There were problems with the auth-server integration.
* convert GET /securityEvents to GET /securityEvents/:id/ip/:ipAddr
  to be more RESTful and work with the auth-server's pool get API
* for POST /securityEvents, pass the body and query parameters, fixing the
  former attempt to pass the param's id and body.
* in fxa-auth-db-server/index.js, add 3 helper functions so it's easy to know
  what data is passed to the db methods.

fixes #171"
383,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/172,172,fix(security): use replyNoParams for securityEvent routes,"Closes #171 
",seanmonstar,51479,2016-09-21T16:40:59Z,MEMBER,False,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3fffbf9a9928b275b153350f34b9cbf3aebcad67,fix(security): use replyNoParams for securityEvent routes
384,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/170,170,feat(db): return account.email from accountDevices,"This enables us to sample users by email address for the feature flag I'm adding for `device.lastAccessTime` in the auth server (see https://github.com/mozilla/fxa-auth-server/issues/1460).

@vladikoff or @vbudhram, r?
",philbooth,64367,2016-09-20T12:09:07Z,CONTRIBUTOR,True,51,8,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,257eb9dc6d9c5f9f45e4cdcc4fcf624b3902f8a3,feat(db): return account.email from accountDevices
385,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/169,169,feat(unblock): add unblockCode support,"Before merging, still needs to check a deadline, similar to password reset tokens.
",seanmonstar,51479,2016-09-19T21:16:55Z,MEMBER,True,270,23,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,12fb9df1a13d7a493acdf85c51d17214fc8aae0a,feat(unblock): add unblockCode support
386,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/168,168,Make db_patcher.js compatible with mysql 5.5 (current debian jessie version),"It removes `ALGORITHM = INPLACE, LOCK = NONE` from `lib/db/schema/patch-022-023.sql` and from `lib/db/schema/patch-028-029.sql`.

I am far from being a mysql expert -  I don't even consider myself a mysql newbie :wink:. This allows me to execute `node bin/db_patcher.js` to create the necessary _fxa_ database using mysql 5.5. As far as I understand, this just makes the whole thing slower. If this is so, I don't believe it is a great deal, as this only gets executed once when creating the database.

Of course, I might be wrong and this might break all kinds of stuff. So please, somebody who knows something take a look at this :smile:. That is, if you consider this a nice ""feature"".

Thank you!

P.S.- This is not needed from 5.6 onwards, but I'd personally prefer not having to install it.

P.P.S- Is it possible to create different statements depending on the mysql version, which could be nice in order to optimise it when a newer version of mysql is available? I haven't been able to find relevant information on the Internet.
",jua-mp,22029795,2016-09-12T09:58:06Z,NONE,False,4,8,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,280743ddd9297e0b57549deab7ba72b938cae342,"Make db_patcher.js compatible with mysql 5.5 (current debian
jessie version).

Remove ALGORITHM = INPLACE, LOCK = NONE from
lib/db/schema/patch-022-023.sql
and from lib/db/schema/patch-028-029.sql"
387,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/167,167,Add optional newrelic,"Aaannnd.... fxa-auth-db-mysql

svcops would like to make use of New Relic. This PR just makes it possible to load the module if explicitly configured. Further configuration will happen with puppet in the circusd environment (unless we have to set so many switches that a sane configuration file makes sense).

r? @rfk
",jrgm,758162,2016-09-07T01:53:11Z,CONTRIBUTOR,True,287,165,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,83d94d43cd050955fead0258bcba83c9498e8c96,fix(shrinkwrap): refresh shrinkwrap
388,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/167,167,Add optional newrelic,"Aaannnd.... fxa-auth-db-mysql

svcops would like to make use of New Relic. This PR just makes it possible to load the module if explicitly configured. Further configuration will happen with puppet in the circusd environment (unless we have to set so many switches that a sane configuration file makes sense).

r? @rfk
",jrgm,758162,2016-09-07T01:53:11Z,CONTRIBUTOR,True,287,165,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fca7e2ec7d4c0b2c8095fd5893daa86e36af9d18,feature(newrelic): add optional newrelic integration
389,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/166,166,refactor(db): Remove account unlock related code.,"@jrgm thinks that the `lockedAt` column on the account table does not take
up enough space to warrant the effort needed to remove it.

@philbooth - mind having an initial look at this to see if I'm in the right track?
",shane-tomlinson,848085,2016-09-05T09:52:34Z,MEMBER,True,143,12,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,340e2994762ddf346497128d331b9e20aec0f3fd,"refactor(db): Remove account unlock related code.

@jrgm thinks that the `lockedAt` column on the account table does not take
up enough space to warrant the effort needed to remove it."
390,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/166,166,refactor(db): Remove account unlock related code.,"@jrgm thinks that the `lockedAt` column on the account table does not take
up enough space to warrant the effort needed to remove it.

@philbooth - mind having an initial look at this to see if I'm in the right track?
",shane-tomlinson,848085,2016-09-05T09:52:34Z,MEMBER,True,143,12,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,616602a2875b8dbcab87eb504ae5fed7ee651904,"fix(db): Update resetAccount to not delete from accountUnlockCodes

All the tests pass now!"
391,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/166,166,refactor(db): Remove account unlock related code.,"@jrgm thinks that the `lockedAt` column on the account table does not take
up enough space to warrant the effort needed to remove it.

@philbooth - mind having an initial look at this to see if I'm in the right track?
",shane-tomlinson,848085,2016-09-05T09:52:34Z,MEMBER,True,143,12,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7bfdf9195d1f8e09d8a3d2ca74a0de5ccd447861,fix(db): Fix the typo
392,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/165,165,fix(db): don't return zombie devices from accountDevices,"Fixes #162.

Possibly this is wrong because I've ploughed the `INNER JOIN` furrow raised in https://github.com/mozilla/fxa-auth-db-mysql/issues/162#issuecomment-243435229, without waiting for feedback. I figured I may as well offer something concrete to discuss.

(and sorry about #164, ignore everything I said there!)
",philbooth,64367,2016-08-30T15:05:11Z,CONTRIBUTOR,True,116,17,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b89d4b8466eac0358725cd09f6b0715b1072afca,fix(db): don't return zombie devices from accountDevices
393,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/164,164,fix(db): don't return zombie devices from accountDevices,"Fixes #162.

Possibly this is wrong because I've ploughed the `INNER JOIN` furrow raised in https://github.com/mozilla/fxa-auth-db-mysql/issues/162#issuecomment-243435229, without waiting for feedback. I figured I may as well offer something concrete to discuss.

But more importantly, in implementing it I've realised that this is a tricky feature to test. The problem is that there's no way for the tests to create zombie device records any more.

At first I thought that was fine, it's enough to know that the existing tests aren't broken. But of course it isn't fine AT ALL, because the whole point of making this change is that we need to be sure these zombie records aren't returned to the caller. Even if we opt for returning a `NULL` session token id instead of what I did here, we still won't be able to test it unless we add some special magic for inserting zombie devices.

All I can think of is to create some sort of back-channel stored procedure, _which is not allowed to be invoked by the production code!_ That sounds scary but maybe it's fine really because, after all, we have lots of other tests to test what the rest of the code is or isn't doing, so we just need to add some more that assert nothing calls the back-channel.

Anyway, this was weird enough to make me stop, slap the `WIP` label on it and come here to ask the question. @rfk, what do you reckon?
",philbooth,64367,2016-08-30T14:26:31Z,CONTRIBUTOR,False,52,14,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2eca87cbb810c340488af950121d4ac8b372848f,fix(db): don't return zombie devices from accountDevices
394,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/163,163,fix(scripts): add process.exit to populate script,"Sorry @vbudhram!
",philbooth,64367,2016-08-19T14:50:54Z,CONTRIBUTOR,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7820fdc2f531be90e7bcbf508aaaf9a12e61bab4,fix(scripts): add process.exit to populate script
395,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/161,161,feat(scripts): add device records to the populate script,"Not sure whether anyone else has used this script or might benefit from it in the future, but it's what I use when I need a load of accounts and session tokens to run performance tests against.

Before this change, it didn't create any device records. With this change, it does.

@vbudhram, r?
",philbooth,64367,2016-08-18T21:47:27Z,CONTRIBUTOR,True,46,10,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2e719966e80b5e4f050b391d7246ca0868ec33eb,feat(scripts): add device records to the populate script
396,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/160,160,fix(db): ensure that devices get deleted with session tokens,"Fixes mozilla/fxa-auth-server#1423 (although I've found another related problem that we also need to fix, see mozilla/fxa-content-server#4060).

The fix itself is straightforward, just ensuring that we delete any device records inside `deleteSessionToken`. However there is also another change in the migration that may be contentious: I'm explicitly purging all session-less device records.

This is because any such records only exist in our db because of earlier problems with our implementation of device registration. I can think of no legitimate reason for them to exist and we definitely don't want them to show up in anyone's device list.

@rfk, I'm tagging you for the review because of the contentious bit, are you comfortable with us doing that? I know we discussed earlier on about only doing it for placeholder devices but, having given it some further thought, I think we should be more ruthless.
",philbooth,64367,2016-08-17T14:51:30Z,CONTRIBUTOR,True,108,9,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,840dda63c62e9cd44405aa6474f5cf866f843f73,fix(db): ensure that devices get deleted with session tokens
397,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/160,160,fix(db): ensure that devices get deleted with session tokens,"Fixes mozilla/fxa-auth-server#1423 (although I've found another related problem that we also need to fix, see mozilla/fxa-content-server#4060).

The fix itself is straightforward, just ensuring that we delete any device records inside `deleteSessionToken`. However there is also another change in the migration that may be contentious: I'm explicitly purging all session-less device records.

This is because any such records only exist in our db because of earlier problems with our implementation of device registration. I can think of no legitimate reason for them to exist and we definitely don't want them to show up in anyone's device list.

@rfk, I'm tagging you for the review because of the contentious bit, are you comfortable with us doing that? I know we discussed earlier on about only doing it for placeholder devices but, having given it some further thought, I think we should be more ruthless.
",philbooth,64367,2016-08-17T14:51:30Z,CONTRIBUTOR,True,108,9,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f5bbb60e1de89ca7ec23894247d2c13387666c06,fix(db): use an index when deleting device records by sessionToken id.
398,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/159,159,fix(scripts): ensure changelog is updated sanely,"Fixes #156, previously attempted at #158.

This repo didn't have the change log stuff the other repos do, so I've included it and call out to it from the version script. I've also moved the change log back to the old file name of `CHANGELOG.md` and included the missing commit details from the interim releases. The old `fxa-auth-db-server` change log is still available as `CHANGELOG-server.md`. And shrinkwrap is updated.

@vbudhram, actually tested this time, can I get an r?
",philbooth,64367,2016-08-17T11:35:22Z,CONTRIBUTOR,True,1361,520,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ba977ac181b0c3a9e56bf70ed98689059861a52f,fix(scripts): ensure changelog is updated sanely
399,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/158,158,fix(scripts): ensure changelog is updated sanely,"Fixes #156.

The version script looks for the change log in `CHANGELOG.md`, but it was moved to `CHANGELOG-db.md` as part of #74. This change moves it back to the old file name and updates the history for missing releases. The old `fxa-auth-db-server` change log is still available as `CHANGELOG-server.md`.

@vbudhram, r?
",philbooth,64367,2016-08-16T14:21:16Z,CONTRIBUTOR,False,25,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dc197b429644f45396e01801df063b7bc87c414c,fix(scripts): ensure changelog is updated sanely
400,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/155,155,feat(db): Record whether unverified tokens must be verified before use.,"Fixes #151.

@pb @vbudhram here's my sketch for how we might explicitly track whether an unverified sessionToken wanted keys or not.  It will require a corresponding change in the auth-server to send over the new state, which I've added in https://github.com/mozilla/fxa-auth-server/pull/1376.  In particular, see here for how I think we'd want to use it:

  https://github.com/mozilla/fxa-auth-server/pull/1376/files#diff-ab87c506e682e952973178a41792df12R1158

Does this seem like a reasonable path forward?
",rfk,34695,2016-08-08T05:04:38Z,MEMBER,True,204,17,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c6d0004db648cc8939b1102e198c8dbc62e4829c,"feat(db): Record whether we *must* verify each unverified token.

Some tokens can't be used until verified, for some it's intended
to be optional."
401,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/154,154,fix(db): remove createAccountResetToken stored procedure and endpoint,"Fixes #150. Will need to be rebased after #153 is merged.

I'm not 100% certain that we actually want to do this, although there wasn't any disagreement on the issue.

Anyway, this removes the endpoint and stored procedure for `createAccountResetToken`. They're never called and the corresponding auth server code was removed in https://github.com/mozilla/fxa-auth-server/pull/1384. Account reset tokens are exclusively created through the `forgotPasswordVerified` stored procedure.

Both me and @rfk had a look in Kibana for requests to this endpoint, none were found.

However, given my track record in this repo, it's quite possible that I've missed some crucial unforeseen operational effect on the production db.

@rfk, @jrgm r?
",philbooth,64367,2016-08-05T14:02:53Z,CONTRIBUTOR,True,115,153,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f5ecc75485a2c11954eab991b4e3de499a9cd54a,fix(db): remove createAccountResetToken stored procedure and endpoint
402,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/153,153,refactor(db): remove openId,"Fixes #142
",vladikoff,128755,2016-08-04T15:44:49Z,CONTRIBUTOR,True,269,62,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5b9596f3fbab6e775bed4380b1fb6952ffe4c947,"refactor(db): remove openId

Fixes #142"
403,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/148,148,chore(deps): update to latest request and sinon,"@vbudhram r?

This fixes nsp issues with the old request version 
",vladikoff,128755,2016-07-27T14:31:11Z,CONTRIBUTOR,True,67,67,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8c205bddfc3bba478bec604d3fe7dea9f66272d3,chore(deps): update to latest request and sinon
404,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/147,147,feat: Remove account lockout,"With signin confirmation and email caphta we have more targeted
meant to keep bad people at bay while minimizing friction for valid
users, account lockout no longer seems particularly elegant.

fixes #146

Should be merged after https://github.com/mozilla/fxa-auth-server/pull/1360
",shane-tomlinson,848085,2016-07-21T10:25:44Z,MEMBER,True,10,385,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,821e3f9f3dc2f958424c266e5c7d3030e5ef93f3,"feat: Remove account lockout

With signin confirmation and email recaphta we have more targeted
meant to keep bad people at bay while minimizing friction for valid
users, account lockout no longer seems particularly elegant.

fixes #146"
405,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/147,147,feat: Remove account lockout,"With signin confirmation and email caphta we have more targeted
meant to keep bad people at bay while minimizing friction for valid
users, account lockout no longer seems particularly elegant.

fixes #146

Should be merged after https://github.com/mozilla/fxa-auth-server/pull/1360
",shane-tomlinson,848085,2016-07-21T10:25:44Z,MEMBER,True,10,385,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e76871a2eb69c1edcfcb7c09d6096c09f2e2f65a,fix(mem-db): Remove the dangling comma.
406,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/145,145,"fix(tests): switch coverage tool, add coveralls",,vladikoff,128755,2016-07-19T19:50:16Z,CONTRIBUTOR,True,20,250,21,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,def9c729026e7c2f88be7940535e248085c74299,"fix(tests): switch coverage tool, add coveralls"
407,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/144,144,fix(deps): update prod dependencies,"@vbudhram r?
",vladikoff,128755,2016-07-19T19:35:54Z,CONTRIBUTOR,True,502,349,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2f2e4d2b85ab60e260dddf91d3b1e4b1d016714e,fix(deps): update prod dependencies
408,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/143,143,fix(deps): update dev dependencies,"@vbudhram r?
",vladikoff,128755,2016-07-19T17:52:46Z,CONTRIBUTOR,True,2996,1954,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f77a76bc22fbf3e307c51214e3ad47a7187b67e5,fix(deps): update dev dependencies
409,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/141,141,feat(security): add security events,,seanmonstar,51479,2016-07-05T21:30:39Z,MEMBER,True,409,3,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cc31172428d37a1a2fec429d993b852d9e055fe4,feat(security): add security events
410,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/140,140,Update mozlog 2.0.3 2.0.5,"- update mozlog@2.0.3 to 2.0.5 for a couple of error logging fixes
- sort npm scripts
- add 'npm run shrinkwrap' script

r? - @philbooth 
",jrgm,758162,2016-06-21T02:37:36Z,CONTRIBUTOR,True,256,342,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,81c739aff15f34a4f97f58251e5b3ba11ddabd63,chore(mozlog): update from mozlog@2.0.3 to 2.0.5
411,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/140,140,Update mozlog 2.0.3 2.0.5,"- update mozlog@2.0.3 to 2.0.5 for a couple of error logging fixes
- sort npm scripts
- add 'npm run shrinkwrap' script

r? - @philbooth 
",jrgm,758162,2016-06-21T02:37:36Z,CONTRIBUTOR,True,256,342,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a9ce5ddc2e2ded770a276fb7338219646977ba0f,chore(scripts): sort scripts alphabetically
412,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/140,140,Update mozlog 2.0.3 2.0.5,"- update mozlog@2.0.3 to 2.0.5 for a couple of error logging fixes
- sort npm scripts
- add 'npm run shrinkwrap' script

r? - @philbooth 
",jrgm,758162,2016-06-21T02:37:36Z,CONTRIBUTOR,True,256,342,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e91064811f7ed255b84abe32cd38a2b8490a0bc8,"chore(shrinkwrap): add ""npm run shrinkwrap"" script"
413,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/139,139,chore(travis): drop node 0.12 support,"@vbudhram r?
",vladikoff,128755,2016-06-07T16:58:25Z,CONTRIBUTOR,True,0,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,834ed5c14cec52f85c279818fb12c561fc7f708d,chore(travis): drop node 0.12 support
414,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/138,138,feat(db): implement verification state for key fetch tokens,"This PR enables us to work round the problem of Fennec using the `/account/keys` auth server endpoint to check account status. It does so by reinstating the verification state for key fetch tokens, which is set by the presence of `tokenVerificationId` in the request payload to `PUT /keyFetchToken/:id`.

For this to work correctly with the sign-in confirmation stuff, the auth server must:
- Be updated to make requests to the plural `/tokens/:tokenVerificationId/verify`.
- Only create unverified key fetch tokens from `/account/signup` and `/account/login` (i.e. not on password change).
- Specify the same `tokenVerificationId` as it does for the equivalent session token.
- Reject requests to `/account/keys` that use an unverified token, with `errno` 104.

@vbudhram @rfk r?

/cc @shane-tomlinson 
",philbooth,64367,2016-06-01T17:36:12Z,CONTRIBUTOR,True,526,108,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,263c2ee73c9aa722b749dd39027b2f3efdd01635,feat(db): implement verification state for key fetch tokens
415,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/138,138,feat(db): implement verification state for key fetch tokens,"This PR enables us to work round the problem of Fennec using the `/account/keys` auth server endpoint to check account status. It does so by reinstating the verification state for key fetch tokens, which is set by the presence of `tokenVerificationId` in the request payload to `PUT /keyFetchToken/:id`.

For this to work correctly with the sign-in confirmation stuff, the auth server must:
- Be updated to make requests to the plural `/tokens/:tokenVerificationId/verify`.
- Only create unverified key fetch tokens from `/account/signup` and `/account/login` (i.e. not on password change).
- Specify the same `tokenVerificationId` as it does for the equivalent session token.
- Reject requests to `/account/keys` that use an unverified token, with `errno` 104.

@vbudhram @rfk r?

/cc @shane-tomlinson 
",philbooth,64367,2016-06-01T17:36:12Z,CONTRIBUTOR,True,526,108,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d33b0540d64dc8924395d02f5fe53e040a1f4ec0,fix(tests): assert that verifyTokens 404s if token verified
416,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/138,138,feat(db): implement verification state for key fetch tokens,"This PR enables us to work round the problem of Fennec using the `/account/keys` auth server endpoint to check account status. It does so by reinstating the verification state for key fetch tokens, which is set by the presence of `tokenVerificationId` in the request payload to `PUT /keyFetchToken/:id`.

For this to work correctly with the sign-in confirmation stuff, the auth server must:
- Be updated to make requests to the plural `/tokens/:tokenVerificationId/verify`.
- Only create unverified key fetch tokens from `/account/signup` and `/account/login` (i.e. not on password change).
- Specify the same `tokenVerificationId` as it does for the equivalent session token.
- Reject requests to `/account/keys` that use an unverified token, with `errno` 104.

@vbudhram @rfk r?

/cc @shane-tomlinson 
",philbooth,64367,2016-06-01T17:36:12Z,CONTRIBUTOR,True,526,108,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,07be1bed9004cdf96aeb23767ecdef6e15776c0f,fix(tests): assert that verifyTokens verifies multiple tokens
417,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/137,137,DO NOT MERGE; feat(db): store push keys according to the current spec,"Connects #135; assuming we like #136 then this is the second half of the fix, but we shouldn't merge it until we've cut a release including #136.

This reinstates commit b1261bcf11a81a94ea93ed2f913b6c1e83cff21d using a fresh, hopefully-easier-to-deploy-in-production database migration.

@eoger, I made this by cherry-picking and tweaking your existing commit, if you could take a look to confirm I haven't missed anything that would be awesome.
",rfk,34695,2016-05-10T04:03:28Z,MEMBER,False,732,273,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6bde88ebd3e45552b6d335c7bffab0106847c1aa,"feat(db): store push keys according to the current spec

This reinstates commit b1261bcf11a81a94ea93ed2f913b6c1e83cff21d
using a fresh, hopefully-easier-to-deploy-in-production database
migration."
418,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/136,136,fix(device): remove storage of push key data on device records.,"Connects to #135, although not a complete fix.

This reverts most of commit b1261bcf11a81a94ea93ed2f913b6c1e83cff21d, and replaces it with an explicit refusal to store any push key data on the device record.  The idea is as follows:
- Patch number 24 reverts the schema changes introduced previously, and is intended to clean up on dev boxes that may already have patch number 23 applied.  It's not necessary in production.
- Patch number 25 creates new device-related stored procedures that do not handle key data.  This is the patch we'd apply in production.
- After this is deployed, we're no longer touching the `callbackPublicKey` column at all, so we should be safe to drop/modify it in the next deployment.

@jrgm/@jbuck does this seem like a good approach?

@vladikoff r?
",rfk,34695,2016-05-10T03:45:42Z,MEMBER,False,408,574,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c4b58df9a9c9983ca6041208533eb290b122fa50,"fix(device): remove storage of push key data on device records.

This reverts most of commit b1261bcf11a81a94ea93ed2f913b6c1e83cff21d,
and replaces it with an explicit refusal to store any push key data
on the device record."
419,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/134,134,feat(mx-stats):  Add a script to print stats on popular mail providers.,"Here's broadly what I had in mind for https://github.com/mozilla/fxa-auth-server/issues/1237 - a script that takes a random sample of emails from the accounts table, figures out their canonical mail host, and prints some stats on the most popular ones.

Sample output from running it on stable.dev.lcip.org:

```
Of 949 email addresses:

69.1% of emails use google.com
  including 26.9% requiring dynamic lookup to resolve to google.com

26.2% of emails use googlemail.com
  including 26.2% requiring dynamic lookup to resolve to googlemail.com

10.3% of emails use messagingengine.com
  including 0% requiring dynamic lookup to resolve to messagingengine.com

3.8% of emails use mailinator.com
  including 0.5% requiring dynamic lookup to resolve to mailinator.com

3.5% of emails use yahoodns.net
  including 0% requiring dynamic lookup to resolve to yahoodns.net

2.1% of emails use hotmail.com
  including 1.2% requiring dynamic lookup to resolve to hotmail.com
```

In this environment, google-hosted domain email is second only to gmail itself in popularity.  But that may have something to do with @mozilla.com being hosted by google.

Anyways, @jrgm, what do you think about something like this to help inform product decisions about provider-specific UX affordances?

Fixes https://github.com/mozilla/fxa-auth-server/issues/1237
",rfk,34695,2016-04-22T04:55:59Z,MEMBER,True,170,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b27b784fa2214a6ed627adfc76be57dba2322295,feat(mx-stats):  Add a script to print stats on popular mail providers.
420,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/133,133,feat(db): store push keys according to the current implementation,"This PR:
- Stores the Public Key according to the current (probably last) browser implementation
- Adds support for the Auth Key

We store:
- The Public Key as a urlsafe base 64 string (65 bytes array = string of 88 chars max)
- The Auth Key as a urlsafe base 64 string (16 bytes array = string of 24 chars max)

I would love to have some feedback on this.

Resources used for implementation:
https://www.w3.org/TR/push-api/
https://jrconlin.github.io/WebPushDataTestPage/
",eoger,6424575,2016-04-13T20:47:04Z,CONTRIBUTOR,True,727,287,13,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b1261bcf11a81a94ea93ed2f913b6c1e83cff21d,feat(db): store push keys according to the current implementation
421,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7dcff3b853c363df098c128b204a04ce743a10c4,feat(db): implement new token verification logic
422,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c5de2600420fdd1c988503aba4bdc941933cf968,fix(db): reinstate the 404 response from verifyToken
423,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0f0f206cbf5e93c777353856597dc4457c1c54be,fix(db): rename verifyToken to verifyTokens
424,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,34b7a3382b40aeb8198491ef3e86e28e7dbae60a,fix(docs): typo
425,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d8e7188539df43c7ac04c09b4bcf268410004c47,fix(db): rename ...TokenVerified methods to ...TokenWithVerificationState
426,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9c9661af7b2bbec64d770ac8bcac89d40b8f3054,fix(db): rename data argument to verifyTokens
427,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,62efecc01a849ccc243bd211f6059cebf3e49156,fix(db): store uid as buffer instead of string in memory db
428,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2c44a3722cc5faa253f8862376bbd7fe3a177081,fix(db): remove token verification from keyFetchTokens
429,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6ce060c3236858fbd1e665a9f4105f3741ab6ee9,fix(db): allow creation of verified session tokens
430,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aaedd87e6c58fa64722588c9e979749e70cfa920,fix(tests): replace native Promise with bluebird implementation
431,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4d6064d998c7183b080f2a5d8a2f04ff9c61a50c,"fix(docs): tokenVerificationId is 16 bytes, not 32"
432,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b58396c201a37e5dcf38f68c7f014bbeb9c57873,fix(tests): assert errno and code when token verification fails
433,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/132,132,feat(db): implement new token verification logic,"This covers all of the database changes for FxA-83, sign-in confirmation. I realise the feature document isn't actually finished yet but, as I'd already made a start on this, I wanted to get it into review so that nobody is blocked from working on other parts of the feature.

The approach taken is based on (my understanding of) @dannycoates' recommendation from the Google Doc:
- A new table is added, `unverifiedTokens`, and the create/delete stored procedures for `sessionTokens` and `keyFetchTokens` maintain it appropriately. ~~Fwiw, as things stand, the first cut of the auth server changes may not utilise the `keyFetchTokens` part of this, but a second version that does so should follow pretty rapidly.~~
- New endpoints, `GET /sessionToken/:id/verified` and `GET keyFetchToken/:id/verified`, are added for checking a token's verification state, which is returned in a field called `tokenVerified`. This has changed from `isVerified` in the original document, to better disambiguate it from the `emailVerified` field.
- A third new endpoint, `POST /token/:tokenVerificationId/verify` is added for verifying tokens. I briefly toyed with the idea of implementing this as `DELETE /unverifiedToken/:tokenVerificationId`, in an effort to fit what actually happens in the database. But I figured the extra table is just an implementation detail and naming the stored procedure `verifyToken` better reflects what is happening from the caller's point of view.

@vbudhram @dannycoates @rfk, feedback appreciated.

/cc @shane-tomlinson
",philbooth,64367,2016-04-13T13:52:11Z,CONTRIBUTOR,True,1104,70,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,218c5c01779b13dede91c967a964d0b9587f7a59,fix(db): implement rfk code review feedback
434,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/131,131,fix(logging): log connection config and charset info at startup,"A little info of interest.

r? - @philbooth @rfk
",jrgm,758162,2016-03-23T17:55:46Z,CONTRIBUTOR,True,140,0,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9272831ad498657be769b6e0d2d2f1451a2dccc1,fix(logging): log connection config and charset info at startup
435,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/130,130,Really use mozlog everywhere in this module,"It turns out that not all of the logging calls in this repo had been converted to call mozlog according to mozlog calling conventions. Mostly this was on error paths, and, for example, when I had to do db upgrades, I'd get the highly informative `server.bin.[Object object]` with no error details. 

PR is in 3 parts:
1. Since most of the tests stub out the logging, I added mozlog-like assertions. This detected a fair share of the bad call sites, but not all. (Although, I had to run the tests with `node test/local/foo.js`, since within the test harness, you'd just get hard-to-grok test failures). 
2. Fix all the bad calls to `log.foo` or `logger.foo`. Please review that I don't have any typos, since there isn't complete coverage on some of these error paths.
3. Adjust the notifier tests to expect mozlog format error messages.

r? @philbooth @rfk
",jrgm,758162,2016-03-17T04:14:51Z,CONTRIBUTOR,True,39,21,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,db5d95149cefebb3307f7a7fbd7019658d369345,fix(tests): enforce mozlog rules in test logger
436,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/130,130,Really use mozlog everywhere in this module,"It turns out that not all of the logging calls in this repo had been converted to call mozlog according to mozlog calling conventions. Mostly this was on error paths, and, for example, when I had to do db upgrades, I'd get the highly informative `server.bin.[Object object]` with no error details. 

PR is in 3 parts:
1. Since most of the tests stub out the logging, I added mozlog-like assertions. This detected a fair share of the bad call sites, but not all. (Although, I had to run the tests with `node test/local/foo.js`, since within the test harness, you'd just get hard-to-grok test failures). 
2. Fix all the bad calls to `log.foo` or `logger.foo`. Please review that I don't have any typos, since there isn't complete coverage on some of these error paths.
3. Adjust the notifier tests to expect mozlog format error messages.

r? @philbooth @rfk
",jrgm,758162,2016-03-17T04:14:51Z,CONTRIBUTOR,True,39,21,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,587b46448e7cb7de6c125f73dee2b9b9cff82119,fix(logging): adjust logging method calls to use mozlog signature
437,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/130,130,Really use mozlog everywhere in this module,"It turns out that not all of the logging calls in this repo had been converted to call mozlog according to mozlog calling conventions. Mostly this was on error paths, and, for example, when I had to do db upgrades, I'd get the highly informative `server.bin.[Object object]` with no error details. 

PR is in 3 parts:
1. Since most of the tests stub out the logging, I added mozlog-like assertions. This detected a fair share of the bad call sites, but not all. (Although, I had to run the tests with `node test/local/foo.js`, since within the test harness, you'd just get hard-to-grok test failures). 
2. Fix all the bad calls to `log.foo` or `logger.foo`. Please review that I don't have any typos, since there isn't complete coverage on some of these error paths.
3. Adjust the notifier tests to expect mozlog format error messages.

r? @philbooth @rfk
",jrgm,758162,2016-03-17T04:14:51Z,CONTRIBUTOR,True,39,21,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,564fe0e44433956d4da25bb10d645e983124b916,fix(tests): adjust notifier tests monkeypatching to accept mozlog signature
438,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/128,128,fix(db): expunge devices in resetAccount sproc,"Fixes the root cause of the recent 500 errors that have been occurring on the `/devices` endpoint by ensuring that device records are expunged during account reset. They are already expunged during account delete.

The existing `resetAccount` test was already asserting there are no devices after the reset, it just needed tweaking to actually create a device first.

@jrgm, @rfk r?
",philbooth,64367,2016-03-15T14:37:49Z,CONTRIBUTOR,True,73,4,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4c51b544b757cdf363119f0f21fd9aa3191c2043,fix(db): expunge devices in resetAccount sproc
439,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8bf72d29bab3560a450a720513174f70d4ae5af1,feat(reminders): add verification reminders
440,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,88fe7444ac95318b0ea10d595a9f5f236af4e0be,feat(reminders): update tests and api endpoints
441,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4269289d1524c5c2b3133f577093c60822d67ef8,"fix(reminders): add new tests, fix memory tests"
442,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ed6b58e9d19b80cf12bac9978dadd6b4cee514dc,fix(docs): adjust test doc
443,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e3aa7daa5a414346e53247ce57af8b92d170cf34,fix(db): wrap reminder errors
444,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,330b7653b6b88eae4e20cf11b46686424c66382c,feat(reminders): add new api docs
445,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/127,127,feat(reminders): add verification reminders,"Connects to https://github.com/mozilla/fxa/issues/138
",vladikoff,128755,2016-02-27T05:15:35Z,CONTRIBUTOR,True,406,1,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9c3a69eecace8e2d8e1bef52ecd835e419f478dd,fix(docs): adjust API doc order
446,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/126,126,chore(dependencies): upgrade mozlog to 2.0.3,"Picks up this fix for exception logging - https://github.com/mozilla/mozlog/commit/e11def164c2a8cf2578930227815bea01c90b799
",jrgm,758162,2016-02-14T02:53:11Z,CONTRIBUTOR,True,485,292,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cc95ddc6ed9724ca4674be150a43951373fb0014,chore(dependencies): upgrade mozlog to 2.0.3
447,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/125,125,/sessionToken/:id/device endpoint,"Supports https://github.com/mozilla/fxa-auth-server/pull/1168
",dannycoates,87619,2016-01-28T23:58:32Z,MEMBER,True,119,2,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7ff6edf34cb998c21fdcce96dcf1fa5df6614a23,feat(devices): added sessionWithDevice endpoint
448,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/124,124,feat(devices): added device lookup by session,"Supports https://github.com/mozilla/fxa-auth-server/pull/1166
",dannycoates,87619,2016-01-28T20:37:47Z,MEMBER,False,71,2,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0daa0463e24b87bdb805300535b71803cf837ac9,feat(devices): added device lookup by session
449,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/122,122,docs(contributing): Mention git commit guidelines,"As enforced by GitCop.
",michielbdejong,408412,2016-01-21T11:30:58Z,NONE,True,2,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1aa5313f402bf57b8887eaeea38f62ac329b4bdc,docs(contributing): Mention git commit guidelines
450,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/121,121,Additional Dockerfile for self-hosting,"The existing Dockerfile in the repo root is meant for local development. This additional Dockerfile (not sure if the `docs/` folder would be the right location) is meant for use by the self-hosting guide I'm working on (currently at https://github.com/michielbdejong/fxa-self-hosting).

I guess it could be improved by setting a mysql password, but just generating a password and then saving it to a text file inside the container probably doesn't help much; have to think about the threat model for that.
",michielbdejong,408412,2016-01-13T15:32:34Z,NONE,True,19,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4bfe4e527bc0ab200734f1e22f37d680db270ec1,feat(docker): Additional Dockerfile for self-hosting
451,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/120,120,chore(shrinkwrap): update npm-shrinkwrap.json,,jrgm,758162,2015-12-14T19:39:47Z,CONTRIBUTOR,True,82,82,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5f7baa9184e2d1e3b3890b15108c42562cdc0580,chore(shrinkwrap): update npm-shrinkwrap.json
452,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/119,119,"fix(travis): build and test on 0.10, 0.12 and 4.x, and allow failure on >= 5.x","Test on 4.x, and failures no longer ok on 0.12 (or 4.x)
",jrgm,758162,2015-12-11T03:18:04Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b64aa3271059276ba5f793e4c7288ead46d95ceb,"fix(travis): build and test on 0.10, 0.12 and 4.x, and allow failure on >= 5.x"
453,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/118,118,fix(version): print out constructor class name; adds /__version__ alias,"`/` and `/__version__` will now show the constructor class name, like so:

```
{""version"":""0.48.0"",""implementation"":""MySql""}
```

Not sure how I'm going to use it yet, but seems like a useful thing to be able to query.
",jrgm,758162,2015-11-20T20:56:29Z,CONTRIBUTOR,True,32,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,20fe933890623192f608b564ae1d550db82a9f1c,fix(version): print out constructor class name; adds /__version__ alias
454,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/117,117,fix(db): fix memory-store initialisation of device fields to null,"The memory-store backend was not initialising missing device fields to `null`. I didn't notice because there was (another) gap in my test coverage. Fixing https://github.com/mozilla/fxa-auth-server/issues/1123 in the auth server uncovered this problem.
",philbooth,64367,2015-11-20T15:41:21Z,CONTRIBUTOR,True,57,26,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c526bd4d815f61817a3416aeba3dbf314d9bbece,fix(db): fix memory-store initialisation of device fields to null
455,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/116,116,feat(db): update devices to match new requirements,"There are ~~two~~ three changes here:
1. Fixes #114, adding a column for the push callback public key.
2. [Return an error if a device attempts to register a session token that is already registered to another device](https://github.com/mozilla/fxa/tree/master/features/FxA-45-device-registration-api#registered-device-1).
3. [Return an error from the `POST` and `DELETE` endpoints if an unrecognised device id is received](https://github.com/mozilla/fxa/issues/78).

I put them ~~both~~ all into the same commit because I wanted to limit database changes to a single migration and I figured one migration should always be one atomic commit.

~~My approach to `2`, especially, may be (is probably?) wrong. It performs two extra queries in the worst case and then aborts the stored procedure using `SIGNAL SQLSTATE`~~. I look forward to the next stage of my on-the-job databases education in your comments. :grin:

@dannycoates && @rfk, r?
",philbooth,64367,2015-11-11T15:55:52Z,CONTRIBUTOR,True,478,63,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8dda01d63f92d1d4f919befddfe08681fe81db38,"feat(db): update devices to match new requirements

1. Add a column to store the push callback public key.

2. Return an error if a device attempts to register a session
   token that is already registered to another device.

3. Return an error if an unknown device id is POSTed or DELETEd."
456,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/115,115,fix(server): fix bad route parameter name,"Spotted this while testing out the device registration stuff, there's a mismatched parameter name on the `upsertDevice` route.

@dannycoates or @rfk, r?
",philbooth,64367,2015-11-10T17:48:23Z,CONTRIBUTOR,True,97,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,42d66d55d9259b0d0d42bcb1c6da6dda8c2e1bcc,fix(server): fix bad route parameter name
457,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/112,112,chore(deps): Update mysql package dependency to latest version.,"Because AFAICT it's got some changes to how pools are handled, and we want to eliminate variables while digging into #108.
",rfk,34695,2015-10-30T05:27:21Z,MEMBER,True,3823,674,21,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,19b333f1aec6a6c3d6a96a93877944a301be3584,fix(tests): Upgrade test runner and fix some test declarations.
458,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/112,112,chore(deps): Update mysql package dependency to latest version.,"Because AFAICT it's got some changes to how pools are handled, and we want to eliminate variables while digging into #108.
",rfk,34695,2015-10-30T05:27:21Z,MEMBER,True,3823,674,21,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,328026850057255730451c87a831b9387078e299,chore(deps): Update mysql package dependency to latest version.
459,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aec406661ed8bceacee53d5b1c83d12376a8e567,wip on device api
460,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6e50197bd33ee050d58c9745e0a1fb852647252a,use unique device ids
461,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c7ce08bf408e6a21e35f1d36542cf9488a387735,updated api.md for devices
462,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fc3d701940fa7530463b0ec20a9c8532018aea47,updated deps
463,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,514789a72be23e59b6d5215dc256681e2b3aa8cc,added patch-019-018.sql
464,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3e7c673c92b058a343d44bd6de7f983e642aaf13,extended device test to include update
465,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/110,110,device api endpoints,"new endpoints for the device api

(stealth edit by @rfk to link things in waffle: Fixes #104)
",dannycoates,87619,2015-10-05T21:55:51Z,MEMBER,True,739,1883,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,285085bb954de66d072a156b3fdd3511b8fc8f67,non-key fields must be nullable for upsert to work
466,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/107,107,WIP: batch session token updates to reduce database load,"This concerns https://github.com/mozilla/fxa-auth-server/issues/1044, which isn't actually in `waffle:now`; I started to play around with it between trains yesterday and wanted to get it in front of somebody else before parking it.

The approach I took was to preserve the existing API around `updateSessionToken` and try to implement the batching in SQL. Hence there is a new `ENGINE=MEMORY` table, `batchSessionTokenUpdates`, that receives updates.

At the moment, that table is purged to update the real `sessionTokens` table when it reaches 10,000 records. Another approach would be to do something time-based by writing a timestamp to the `dbMetadata` table. I haven't done any actual perf-testing with it yet, I just wanted to see what you guys thought of the general approach.

@jrgm & @rfk, any thoughts? (scroll to the bottom of the diff for the interesting stuff)
",philbooth,64367,2015-09-22T16:12:00Z,CONTRIBUTOR,False,216,21,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,24e1c2410c6d915572716bbc143b8256346f8e32,wip: batch session token updates
467,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/106,106,Update package metadata for stand-alone server lib.,"For publishing to npm.
",rfk,34695,2015-09-21T23:23:28Z,MEMBER,True,4,4,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a326bbd644d717c545f8df8b2e03854c56fda177,Update package metadata for stand-alone server lib.
468,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/105,105,feat(db): return accountCreatedAt from sessionToken stored procedure,"This change enables https://github.com/mozilla/fxa-auth-server/pull/1056 to work without making an extra query against the `accounts` table to get the value of `createdAt`.

There is already a migration ([016-017](https://github.com/mozilla/fxa-auth-db-mysql/pull/102)) in this train, but I figured it was probably too late in the day to mess about adding to it here. So I've added an 017-018 migration too, but let me know if you'd rather fold this into that first one.
",philbooth,64367,2015-09-21T09:55:38Z,CONTRIBUTOR,True,51,6,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,861283836630705482b5014b1a976bf35a42227d,feat(db): return accountCreatedAt from sessionToken stored procedure
469,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/102,102,feat(db): add endpoint to return a user's sessions,"Fixes #98, although technically that issue is assigned to @dannycoates.

I figured I'd open this PR because I needed to implement it locally to test my work on https://github.com/mozilla/fxa-auth-server/issues/1038 anyway. Go ahead and close this though, if something better/different is on its way.
",philbooth,64367,2015-09-11T13:01:43Z,CONTRIBUTOR,True,215,5,10,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,141c8dac818960115cf9550d43b671598391e3d5,feat(db): add endpoint to return a user's sessions
470,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/101,101,chore(version): generate legacy-format output for ./config/version.json,"Needed for stage/production builds.
",jrgm,758162,2015-09-09T05:04:55Z,CONTRIBUTOR,True,36,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,894b420bde25ecb685d697deebf268c4d7a625d1,chore(version): generate legacy-format output for ./config/version.json
471,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/100,100,chore(metrics): add script for creating dummy session tokens,"Not sure whether or not this is worth adding to the repo but, just in case we want it again in the future, this is the script I used to create session tokens in my local database for the perf tests. Running four of these in parallel on my machine, it created 10 million new accounts with various numbers of linked session tokens in about 2 hours or so.

The ratios for number-of-session-tokens-per-account are completely arbitrary, they can probably be tweaked for realism (currently 1/6th of the new accounts are given 3 sessions, 1/6th are given 2 sessions and 2/3rds are given 1 session).

@rfk r?
",philbooth,64367,2015-09-07T12:59:44Z,CONTRIBUTOR,True,93,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,30027431a2c3663ed9dbbb85b3d2d6a967de7617,chore(metrics): add script for creating dummy session tokens
472,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/99,99,chore(metrics): report latency in performance tests,"As per https://github.com/mozilla/fxa-auth-db-mysql/issues/81#issuecomment-138139305.
",philbooth,64367,2015-09-07T11:30:03Z,CONTRIBUTOR,True,5,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a17d7e17729b8d7dbe124789551ecb64f3f042cf,chore(metrics): report latency in performance tests
473,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/97,97,fix(metrics): measure request count and time in perf tests,"My previous attempt at this script was just an epic fail, sorry. I should not have merged it into `master`.

The main problem fixed in this PR is my desperately foolish attempt to use the duration of a fixed-period load test as a benchmark/comparison. Now it reports the number of requests and the average requests per second instead.

Another problem it fixes is a variable name that I mystifyingly changed in one place but not the other. That condition isn't entered when the load tests are run on a separate machine to the metrics queries, so I didn't spot it when I was running in EC2.

The final change is to fix the path name to the script in the comments.
",philbooth,64367,2015-09-03T10:38:42Z,CONTRIBUTOR,True,15,9,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,99ecfc6c42893a4ec9401e0e94e6cffbccda814c,fix(metrics): measure request count and time in perf tests
474,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/96,96,chore(eslint): change complexity rule,"Fixes #95 
@jrgm 
@rfk 
@vladikoff 
",TDA,432707,2015-09-02T21:07:34Z,CONTRIBUTOR,True,1,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,288e1212fb8804448ef5b4969d04b86b01565c79,chore(eslint): change complexity rule
475,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/94,94,fix(metrics): append delimiter to metrics output,"Fixes #93.
",philbooth,64367,2015-09-01T09:55:02Z,CONTRIBUTOR,True,6,3,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6a0edeb4b3a7f1029305a6b92292148afbc43154,fix(metrics): append delimiter to metrics output
476,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/92,92,"fix(tests): used a randomized openid url, fixes #91","is this sufficient? - r? @dannycoates 
",jrgm,758162,2015-08-27T16:02:44Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5008bafbacc3d2a12d612712ea3f1027f4c4cf76,"fix(tests): used a randomized openid url, fixes #91"
477,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/90,90,fix(db): default user-agent fields to null in memory backend,"This change goes towards fixing the remaining test failures reported in https://github.com/mozilla/fxa-auth-server/issues/1028.

It makes the memory backend return null for unset user-agent fields, which harmonises with the MySQL backend behaviour.

After this has been merged, ~~https://github.com/mozilla/fxa-auth-server/pull/1030~~ https://github.com/mozilla/fxa-auth-server/pull/1031 can be merged and will fix the other failing tests, which are caused by this `null`/`undefined` discrepancy.
",philbooth,64367,2015-08-27T13:27:21Z,CONTRIBUTOR,True,6,5,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0cd48d110f718785636058fefb001d76e5268c70,fix(db): default user-agent fields to null in memory backend
478,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/89,89,fix(server): prevent insane bufferization of non-hex parameters,"This fixes one of the failing tests reported in https://github.com/mozilla/fxa-auth-server/issues/1028, by ensuring values which come out of the auth-server UA parser are never inappropriately treated as hex-encoded data.

It's pretty ugly, but it mirrors a [similar fix](https://github.com/mozilla/fxa-auth-server/blob/master/lib/crypto/butil.js#L52) that we applied elsewhere.

I've also added a bunch of tests for the rest of the `bufferize` module, as there weren't any before.
",philbooth,64367,2015-08-27T12:48:57Z,CONTRIBUTOR,True,101,8,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2635923f885ab9391c6882143e4c42c49667091f,fix(server): prevent insane bufferization of non-hex parameters
479,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/88,88,chore(metrics): add scripts for perf-testing metrics queries,"These are a couple of shell scripts I'm using to measure the performance impact of the metrics queries. They don't do a great deal themselves, they just stand on the shoulders of [`fxa-auth-server/test/load`](https://github.com/mozilla/fxa-auth-server/tree/master/test/load) and [`bin/metrics.js`](https://github.com/mozilla/fxa-auth-db-mysql/blob/master/bin/metrics.js).

I figured it was worth committing them to this repo so that we can easily re-use them as more metrics queries get added in the future.

@jrgm or @rfk r?
",philbooth,64367,2015-08-26T09:40:57Z,CONTRIBUTOR,True,94,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,be19b482786d0754cef9e2b2cfc7d26b9b3bc1a5,chore(metrics): add scripts for perf-testing metrics queries
480,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/82,82,chore(coverage): exclude fxa-auth-db-server/node_modules from coverage checks,"The coverage report was impossible to read because of a bunch of long `node_modules` paths that were no longer being excluded after the repo merge.
",philbooth,64367,2015-08-24T14:15:27Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f76832d38900b0d80690b8dec4a0e64adc1b2c9a,chore(coverage): exclude fxa-auth-db-server/node_modules from coverage checks
481,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/80,80,feat(db): add script for reporting metrics,"Fixes #72.

This is essentially a like-for-like replacement for [`puppet-config/.../gather_basic_metrics.py`](https://github.com/mozilla-services/puppet-config/blob/master/fxa/modules/fxa_admin/files/gather_basic_metrics.py), except written for node.js and covered by tests.

Although it is part of this repo, the plan is for it to run from the same context as the Python script, hence the file paths and the [non-JSON config format](https://github.com/mozilla-services/puppet-config/blob/master/fxa/modules/fxa_admin/templates/gather_basic_metrics.conf.erb). By having it in this repo, we get the benefit of the tests running automatically against future schema changes.

I plan to commit some more tests tomorrow, but wanted to get feedback on it sooner than that because we're so close to the end of this train.

There are a few things in particular that I was unsure about:
- Am I passing the correct options to `mysql.connect`?
- Is it right or wrong to call `log.error` from this context?
- Is the `readUncommitted` parameter too hackish?

@jrgm and @rfk, feedback wanted! :smile: 
",philbooth,64367,2015-08-20T19:03:04Z,CONTRIBUTOR,True,687,0,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,076735fa8aa237ce0a5199413b428c725180b286,feat(db): add script for reporting metrics
482,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/79,79,feat(db): add queries for metrics reporting,"Fixes #72.

I was unsure about a couple of things:
1. Naming. Both generally, the `count...` convention, and specifically, `countMultiDeviceAccounts` / `countThreePlusDeviceAccounts`. Changing `Multi` to `TwoPlus` would make those two more consistent but I _hate_ the name of the `ThreePlus` procedure anyway, so it would only make them consistently bad imho. Suggestions?
2. Tests. I'm testing that the procedures don't fail and that they return a non-negative count. But I'm not testing that the queries actually work, because I don't know the state of the database that they'll be run against. Do we do any database testing against known fixture data like that?
",philbooth,64367,2015-08-13T11:10:35Z,CONTRIBUTOR,False,259,2,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8a72557a346b19dd8b87ae956a00dc1422d1c82f,feat(db): add queries for metrics reporting
483,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/78,78,Preliminary support for authenticating with OpenID,"This adds an endpoint for getting account info with an OpenID identifier and updates account create/delete for an optional OpenID.

A new table `openids` stores the relation between OpenID identifier and uid. Since these identifiers can be fairly long I added a sha256 hash as the primary key. I'm not 100% sure whether that's a good idea or not.
",dannycoates,87619,2015-08-09T21:42:48Z,MEMBER,True,280,49,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,df8810f694700a6290e39c2b3c4655e6a445c05d,"Added OpenID relation

extract test account creation"
484,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/77,77,reshuffle package.json,"The npm 'file' trick doesn't work when this package is required by another, i.e. fxa-auth-server. Instead, directly require files in the fxa-auth-db-server dir and duplicate the restify dep.

@philbooth @jrgm 
",dannycoates,87619,2015-08-06T18:56:48Z,MEMBER,True,693,356,14,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fa643f7d3dfe11e47c38cb333590f894133ca56e,"reshuffle package.json

the npm 'file' trick doesn't work when this package is required
by another, i.e. fxa-auth-server. Instead, directly require files
in the fxa-auth-db-server dir and duplicate the restify dep."
485,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/76,76,chore(docs): update readme and api docs for merged repos,"Fixes #73.

Not sure how much use the diff is here, you might find it easier to review by just reading the docs themselves.
",philbooth,64367,2015-08-05T12:30:02Z,CONTRIBUTOR,True,176,150,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bf061ebef412fa71042d90d54158f21c5ca46ce1,chore(docs): update readme and api docs for merged repos
486,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/74,74,chore(project): merge db-server project admin/config stuff to top level,"Fixes #67, eliminating cruft from the `fxa-db-server` sub-directory. This is a toned-down version of the less intrusive changes from #70.

What I've done, in detail:
- Removed jshint dependencies, grunt task and config.
- Moved eslint dependencies, grunt task and config from `fxa-auth-db-server` up to the top level.
- Updated the `eslint` grunt task to lint the whole of the repo.
- Fixed assorted lint errors.
- Updated the `copyright` grunt task to work for the whole of the repo.
- Moved `CHANGELOG` to `CHANGELOG-db.md`.
- Moved `fxa-auth-db-server/CHANGELOG` to `CHANGELOG-server.md`.
- Updated the `bump` grunt task to work with the moved change logs.
- Removed `fxa-auth-db-server/grunttasks`.
- Moved `fxa-auth-db-server` test command into the top-level `package.json`.
- Removed `devDependencies` from `fxa-auth-db-server/package.json`.
- Moved `fxa-auth-db-server/AUTHORS` to `AUTHORS`.
- Removed duplicate `fxa-auth-db-server/scripts/tap-coverage.js`.

What I haven't done:
- Updated the readme files and other documentation. I thought about it for a bit but I don't think I have all of the knowledge to do a good job right now. I've raised #73 to cover that.

There should be no behavioural changes from the above. `npm install && npm test` still runs fine.

@dannycoates this is a pretty boring changeset to review, but you may be the best person to do it.
",philbooth,64367,2015-08-04T15:12:53Z,CONTRIBUTOR,True,54,406,27,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b17f4779729b068eae45d59203f8ad3fa69a2901,chore(project): merge db-server project admin/config stuff to top level
487,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/71,71,chore(package): expose scripts for running and testing db-mem,"Fixes #66.

@dannycoates or @jrgm, any chance of an r?

I know there is duplication of boilerplate test code here but I was hoping we could refactor that out down the line. In the meantime, this gets us working and allows me to point `db-server` at this repo instead of `db-mem`.
",philbooth,64367,2015-07-30T14:46:02Z,CONTRIBUTOR,True,55,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,27ec9b9cc6c20af2a2c2341943fd84d960a81672,chore(package): expose scripts for running and testing db-mem
488,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/70,70,chore(repo): make server code a sibling of the db code,"@dannycoates @rfk @seanmonstar @jrgm

This is my attempt to fix the remainder of #67 (remove cruft) and also do all of the preparatory work for #68 (rename repo).

I appreciate that I'm definitely the least-qualified person to make these changes, but I also have the time to do them right now and a high tolerance for boring project-admin schlep. I've noticed in the past that these kind of changes tend to get less likely with time, as people's working practices start to accommodate the in-place structure.

There are a lot of changes so perhaps I've done it wrong, or differently to how you guys think it should be. Consider this a first stab.

From a high-level, these changes should make the project a drop-in replacement for the `fxa-auth-db-server` npm dependency, while retaining all of the `db-mysql` and `db-mem` stuff as it was before.

In detail, this is what I've done:
1. Moved `lib` to `lib/db`.
2. Moved `fxa-auth-db-server/lib` to `lib/server`.
3. Moved `fxa-auth-db-server/index.js` to `lib/server/index.js`.
4. Fixed any relative paths that were broken by those moves.
5. Changed `main` in `package.json` to point to `lib/server/index.js`.
6. Updated all calls to `require('fxa-auth-db-server')` to the relative path to `lib/server`.
7. Moved `test/backend` to `test/db`.
8. Moved `fxa-auth-db-server/test/backend` to `test/server`.
9. Moved `fxa-auth-db-server/test/local/error.js` in to `test/local`.
10. Fixed any relative paths that were broken by those moves.
11. Updated `npm test` so that it points to `test/db`.
12. Ditched jshint, used the eslint stuff from `fxa-auth-db-server`.
13. Fixed some lint errors.
14. Moved `README.md` to `README-db.md`.
15. Moved `fxa-auth-db-server/README.md` to `README-server.md`.
16. `ln -s README-server.md README.md` (we can properly merge the readme files some other time).
17. Moved `fxa-auth-db-server/docs` to `docs`.
18. Added a note to `docs/Developing_with_Backend_Repos.md` that it is now wrong (we can update it properly some other time).
19. Moved `CHANGELOG` to `CHANGELOG-db.md`.
20. Moved `fxa-auth-db-server/CHANGELOG` to `CHANGELOG-server.md`.
21. Update the bump grunt task so that it updates the version in the new change logs.
22. Removed `fxa-auth-db-server` from `package.json` and `npm-shrinkwrap.json`.
23. Deleted what was left of `fxa-auth-db-server`.
24. Changed the package name and repo links from `fxa-auth-db-mysql` to `fxa-auth-db-server`.
25. Changed a documentation link to `fxa-auth-db-server` to `fxa-auth-db-server-old`.
26. Added myself to the `AUTHORS` file. :smile:

In terms of testing it out, I blitzed my `node_modules` then did `npm install` and `npm test`. Those seem to work fine. What else do I need to try out?

I know nothing about deployments / production environments, is there other stuff I should take into account on that front?
",philbooth,64367,2015-07-29T11:35:46Z,CONTRIBUTOR,False,361,1316,53,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,de30af0c1c27289a5452df9084792080fe2af7f4,chore(repo): make server code a sibling of the db code
489,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/69,69,chore(configs): eliminate sub-directory dotfiles,"Addresses some, but not all, of #67.

Things I have done:
- Removed `fxa-auth-db-server/.gitignore`.
- Removed `fxa-auth-db-server/.travis.yml`.
- Added the `notifications.email` addresses from `fxa-auth-db-server/.travis.yml` to `.travis.yml`. Was this right or wrong?

Things I have not done:
- Removed `fxa-auth-db-server/.eslintrc`, because the parent is still using jshint but will, presumably, be migrating to eslint at some point in the future.
- Messed with `fxa-auth-db-server/package.json`, because of the whole sub-directory / npm-dependency duality (which I find kind of weird btw).
- Messed with any grunt tasks, because of both the eslint thing and the npm thing.
",philbooth,64367,2015-07-28T12:00:56Z,CONTRIBUTOR,True,5,44,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,441cde3857cc91541b27ae675b0c595165687c3e,chore(configs): eliminate sub-directory dotfiles
490,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/65,65,feat(db): store user agent and last-access time in sessionTokens,"Partially addresses https://github.com/mozilla/fxa-auth-server/issues/983.

Related to https://github.com/mozilla/fxa-auth-server/pull/997.

Contains the following changes:
- Adds `userAgent`, `os`, `deviceType` and `lastAccessTime` fields to the `sessionTokens` entity.
- Adds `updateSessionToken` stored procedure.
- Updates the `createSessionToken` and `sessionToken` stored procedures.

~~Some things I was unsure about, so probably need changing:~~
- ~~How to handle truncation of long UA strings? In the stored procedure or in the JS function or in `fxa-auth-db-server`? I'm not doing it anywhere yet.~~
- ~~I haven't retired the old stored procedures yet. Is that right or wrong?~~
",philbooth,64367,2015-07-27T17:16:15Z,CONTRIBUTOR,True,352,17,11,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bd77bb0499b2d0f5236356ab247de14d023ddadd,feat(db): store user agent and last-access time in sessionTokens
491,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/64,64,chore(git): Add config/dev.js to .gitignore,"I'm surprised this hasn't annoyed anyone else enough to have been done already.

Anyway, the readme tells me to create `config/dev.js` but it isn't in the ignore file, so I'm constantly afeared of accidentally committing it to the repo.
",philbooth,64367,2015-07-27T08:38:29Z,CONTRIBUTOR,True,1,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,21f4cde63b44e733aaf36726aeba87f133da72fe,chore(git): Add config/dev.js to .gitignore
492,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/63,63,fix(tests): pass server object to backend tests (and update shrinkwrap to latest),"This updates `test/backend/remote.js` to match the change in https://github.com/mozilla/fxa-auth-db-mem/commit/122bc686b9b45f9a9886f19a23b880d9a0291232

It also updates shrinkwrap to pick up current HEAD of fxa-auth-db-server, which revealed this broken test. Uugghhh. 

Clearly we need to fold these repos together - https://github.com/mozilla/fxa-auth-db-mysql/pull/56

May I propose that no further changes to fxa-auth-db\* be made, until that change can happen (modulo, of course, any changes that absolutely cannot be deferred).
",jrgm,758162,2015-07-23T07:11:38Z,CONTRIBUTOR,True,53,48,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ce7ef2f2da7076deec76212ac43fa6d1bacf922b,fix(tests): pass server object to backend tests
493,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/63,63,fix(tests): pass server object to backend tests (and update shrinkwrap to latest),"This updates `test/backend/remote.js` to match the change in https://github.com/mozilla/fxa-auth-db-mem/commit/122bc686b9b45f9a9886f19a23b880d9a0291232

It also updates shrinkwrap to pick up current HEAD of fxa-auth-db-server, which revealed this broken test. Uugghhh. 

Clearly we need to fold these repos together - https://github.com/mozilla/fxa-auth-db-mysql/pull/56

May I propose that no further changes to fxa-auth-db\* be made, until that change can happen (modulo, of course, any changes that absolutely cannot be deferred).
",jrgm,758162,2015-07-23T07:11:38Z,CONTRIBUTOR,True,53,48,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,53733c5ecd9de96f71103f4166122416d704aca9,"chore(shrinkwrap): update shrinkwrap, principally to head of fxa-auth-db-server"
494,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/62,62,refactor(config): Use human-readable duration values in config,"Ref: https://github.com/mozilla/fxa-oauth-server/issues/296
",pdehaan,557895,2015-07-14T16:57:02Z,CONTRIBUTOR,True,5,5,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0ee836d5196d77ce316c8c56453cb6fc4091828a,refactor(config): Use human-readable duration values in config
495,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/61,61,Update shrinkwrap for verifyHash removal,,chilts,3048,2015-07-08T03:36:11Z,CONTRIBUTOR,True,132,48,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,338cf02bae44c7172c9e8dc63c995477db28d40b,Update shrinkwrap for verifyHash removal
496,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/60,60,chore(travis): Tell Travis to use #fxa-bots,,chilts,3048,2015-07-01T04:31:40Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f56f38536f3c2e126339e17189d251c298fd0028,chore(travis): Tell Travis to use #fxa-bots
497,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/59,59,feat(api): Return the account email address on passwordChangeToken,"Fixes #58
",chilts,3048,2015-07-01T04:09:56Z,CONTRIBUTOR,True,31,3,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,3767948a2d5a81c61c60c0c970f63cebc5cee45a,"feat(api): Return the account email address on passwordChangeToken

Fixes #58"
498,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/57,57,refactor(db): Remove old stored procedures that are no longer used,"Even though these old stored procedures don't really take up much space
in the database, they could be mis-used if left around.

Fixes #22
",chilts,3048,2015-06-18T10:04:50Z,CONTRIBUTOR,True,556,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b54ea43a62533d87cfede6739f3afe9f22a3cb6d,"refactor(db): Remove old stored procedures that are no longer used

Even though these old stored procedures don't really take up much space
in the database, they could be mis-used if left around.

Fixes #22"
499,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/56,56,assemble all db repos,"fixes #54

New layout:

The db-server dep is moved in at the root level and required as a dependency by package.json and the mem bits are now intermixed in bin and lib. This allows everything to be in sync while allowing us to publish fxa-auth-db-server as a module to npm for 3rd party implementations. 

Eventually we might want to rename this repo to reflect that its not just mysql, but its no big deal to leave it, and nothing will need to change for fxa-dev or prod. I've already got this running locally with fxa-auth-server with only a few minor changes.

```
├── CHANGELOG
├── Dockerfile
├── Gruntfile.js
├── LICENSE
├── README.md
├── bin
│   ├── db_patcher.js
│   ├── mem.js
│   └── server.js
├── config
│   ├── config.js
│   └── index.js
├── coverage.html
├── fxa-auth-db-server
│   ├── AUTHORS
│   ├── CHANGELOG
│   ├── CONTRIBUTING.md
│   ├── Gruntfile.js
│   ├── LICENSE
│   ├── README.md
│   ├── coverage.html
│   ├── docs
│   ├── grunttasks
│   ├── index.js
│   ├── lib
│   ├── package.json
│   ├── scripts
│   └── test
├── index.js
├── lib
│   ├── db
│   ├── logging.js
│   ├── notifier.js
│   └── promise.js
├── npm-shrinkwrap.json
├── package.json
```

Note, this requires npm >= 2.0 for the ""file"" type dependency.
",dannycoates,87619,2015-06-18T00:14:15Z,MEMBER,True,5439,23,36,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4dea075ffd176980cfb9c6ae95466109ef52144e,assemble all db repos
500,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/56,56,assemble all db repos,"fixes #54

New layout:

The db-server dep is moved in at the root level and required as a dependency by package.json and the mem bits are now intermixed in bin and lib. This allows everything to be in sync while allowing us to publish fxa-auth-db-server as a module to npm for 3rd party implementations. 

Eventually we might want to rename this repo to reflect that its not just mysql, but its no big deal to leave it, and nothing will need to change for fxa-dev or prod. I've already got this running locally with fxa-auth-server with only a few minor changes.

```
├── CHANGELOG
├── Dockerfile
├── Gruntfile.js
├── LICENSE
├── README.md
├── bin
│   ├── db_patcher.js
│   ├── mem.js
│   └── server.js
├── config
│   ├── config.js
│   └── index.js
├── coverage.html
├── fxa-auth-db-server
│   ├── AUTHORS
│   ├── CHANGELOG
│   ├── CONTRIBUTING.md
│   ├── Gruntfile.js
│   ├── LICENSE
│   ├── README.md
│   ├── coverage.html
│   ├── docs
│   ├── grunttasks
│   ├── index.js
│   ├── lib
│   ├── package.json
│   ├── scripts
│   └── test
├── index.js
├── lib
│   ├── db
│   ├── logging.js
│   ├── notifier.js
│   └── promise.js
├── npm-shrinkwrap.json
├── package.json
```

Note, this requires npm >= 2.0 for the ""file"" type dependency.
",dannycoates,87619,2015-06-18T00:14:15Z,MEMBER,True,5439,23,36,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b5518a3a65e046c0d38e8b72037de728e05740f7,chore(deps): Include latest updates from fxa-auth-db-* repos.
501,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/55,55,chore(cleanup): Fixed some syntax errors reported by ESLint,,pdehaan,557895,2015-06-12T06:53:45Z,CONTRIBUTOR,True,18,18,8,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,98e23a83c9402823dd1e35cdfaac1edf8a60c941,chore(cleanup): Fixed some syntax errors reported by ESLint
502,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/53,53,fix(db): Return 400 on incorrect password,,chilts,3048,2015-06-11T04:13:15Z,CONTRIBUTOR,True,473,471,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8bf0671f59ef837c4526d49616b04a8e0d8feeb0,fix(db): Return 400 on incorrect password
503,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/52,52,"fix(notifications): always return a promise from db.processUnpublishedEvents, fixes #49","r? anyone. Is this the best way to do this. Not needed for production, but would be nice to remove this spew in fxa-dev log asap.
",jrgm,758162,2015-06-05T05:55:51Z,CONTRIBUTOR,True,16,1,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,dc5b307df6f5eb31a30e18911ae6dac946e3ebf0,"fix(notifications): always return a promise from db.processUnpublishedEvents, fixes #49"
504,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/50,50,fix(npm): Update npm-shrinkwrap to include the last version of fxa-auth-db-server,"Fixes https://github.com/mozilla/fxa-content-server/issues/2511, part of https://github.com/mozilla/fxa-auth-server/pull/943
",eoger,6424575,2015-06-04T00:05:53Z,CONTRIBUTOR,True,3,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e8a0f161b247d647a7a5e6a6f353ccb0e95232e3,fix(npm): Update npm-shrinkwrap to include the last version of fxa-auth-db-server
505,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/48,48,refactor(db): remove verifyHash from responses,"Fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/47
",eoger,6424575,2015-06-03T20:57:07Z,CONTRIBUTOR,True,62,5,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ad4fa2000de743554114c921152dea67944c7302,refactor(db): remove verifyHash from responses
506,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/46,46,chore(license): Update license to be SPDX compliant,"specifying the type and URL is deprecated:

https://docs.npmjs.com/files/package.json#license
",pdehaan,557895,2015-05-23T00:09:04Z,CONTRIBUTOR,True,1,4,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,40c7bdd0e017efbffb5945bc5b196dcb5b7f4183,chore(license): Update license to be SPDX compliant
507,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/45,45,Added checkPassword_1 stored procedure,"Part of https://github.com/mozilla/fxa-auth-db-server/issues/88
",eoger,6424575,2015-05-20T23:39:36Z,CONTRIBUTOR,True,47,19,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7f9c2a5b0075bd52bdd5713f6f39f4130266cd0d,Use array for Mysql read() bound parameters
508,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/45,45,Added checkPassword_1 stored procedure,"Part of https://github.com/mozilla/fxa-auth-db-server/issues/88
",eoger,6424575,2015-05-20T23:39:36Z,CONTRIBUTOR,True,47,19,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f33c00cf7be54cea60cbdb950026e1fa2e917ff6,Added checkPassword_1 stored procedure
509,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/44,44,chore(shrinkwrap): update shrinkwrap picking up lib changes in fxa-auth-db-server,,jrgm,758162,2015-05-13T20:37:43Z,CONTRIBUTOR,True,385,392,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,9eb8fceb9efe2626ca050ed03d84615d45e7dea4,chore(shrinkwrap): update shrinkwrap picking up lib changes in fxa-auth-db-server
510,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/43,43,refactor(lib): move most things into lib/,"All top level *.js files have been moved into lib/. However everything
in bin/ and config/ has been left where it is. Only two minor fixes for
the path to test/local/test-secret.pem were also made.
",chilts,3048,2015-05-13T00:21:46Z,CONTRIBUTOR,True,24,24,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,50f7e6829cd62ad96481611aa61ce8415489a4bb,"refactor(lib): move most things into lib/

All top level *.js files have been moved into lib/. However everything
in bin/ and config/ has been left where it is. Only two minor fixes for
the path to test/local/test-secret.pem were also made."
511,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/42,42,build(travis): Test on both io.js v1 and v2,,chilts,3048,2015-05-05T03:54:36Z,CONTRIBUTOR,True,4,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,2cf73895b97b141454ad1f119663a3d5a3dde0f7,build(travis): Test on both io.js v1 and v2
512,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/41,41,"chore(test): Test on node.js v0.10, v0.12 and the latest io.js",,chilts,3048,2015-04-21T05:08:08Z,CONTRIBUTOR,True,8,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,ad7134515f4dd9fc4446efd2e87956ea09616967,"chore(test): Test on node.js v0.10, v0.12 and the latest io.js"
513,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/40,40,chore(copyright): Update to grunt-copyright v0.2.0,"When doing an `npm install` using node v0.12, it complains since grunt-copyright
v0.1 has a `""node"": ""0.10.x""` in it's `engines` section. v0.2 has been updated
to be `""node"": "">= 0.10.0""` which is satisfied with either v0.10 or v0.12.
",chilts,3048,2015-04-21T04:39:22Z,CONTRIBUTOR,True,4,4,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,210b6a6781a4a91b33a7c61efce2df4a5c00d108,"chore(copyright): Update to grunt-copyright v0.2.0

When doing an `npm install` using node v0.12, it complains since grunt-copyright
v0.1 has a `""node"": ""0.10.x""` in it's `engines` section. v0.2 has been updated
to be `""node"": "">= 0.10.0""` which is satisfied with either v0.10 or v0.12."
514,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/39,39,chore(package): Update to mysql-patcher@0.7.0,"To be able to add other files to the db/schema/ directory we need to update
to mysql-patcher@0.7.0 so that it will ignore non-sql patch files. It also
has a few minor updates too.
",chilts,3048,2015-04-20T04:58:57Z,CONTRIBUTOR,True,111,46,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,b2c00d58f97a7ca7d8841d4909f8a6bfa1bfdb8e,"chore(package): Update to mysql-patcher@0.7.0

To be able to add other files to the db/schema/ directory we need to update
to mysql-patcher@0.7.0 so that it will ignore non-sql patch files. It also
has a few minor updates too."
515,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/38,38,fix(db): Fix reverse patches 8->7 and 9->8,"When upgrading to a new mysql-patcher and testing old patches, these were
failing on the reverse patches. Fixed both a syntax error and a non-existant
stored procedure.
",chilts,3048,2015-04-20T04:52:41Z,CONTRIBUTOR,True,1,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,1c4262245feeed2dc9e40ea10891a25f875dc845,"fix(db): Fix reverse patches 8->7 and 9->8

When upgrading to a new mysql-patcher and testing old patches, these were
failing on the reverse patches. Fixed both a syntax error and a non-existant
stored procedure."
516,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/37,37,fix(package): Remove uuid completely since no longer needed,"Since node-uuid / uuid has been removed from fxa-auth-db-server, we no
longer have to install it here. Having it here used to upset shrinkwrap
if conflicting versions were being used and/or installed (e.g. uuid v1 to
uuid v2 - the APIs were incompatible).
",chilts,3048,2015-04-19T23:41:45Z,CONTRIBUTOR,True,355,357,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f72d897a4ce1d0949cdef6cb907161f3b7f1b00f,"fix(package): Remove uuid completely since no longer needed

Since node-uuid / uuid has been removed from fxa-auth-db-server, we no
longer have to install it here. Having it here used to upset shrinkwrap
if conflicting versions were being used and/or installed (e.g. uuid v1 to
uuid v2 - the APIs were incompatible)."
517,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/36,36,refactor(db): Change table access in stored procedures to be consistent,"Every now and again, we get a deadlock in the database. Whilst these are
expected from time to time we may be able to mitigate it further by making
sure we access our tables in a consistent order. This may not always be
possible but we can do it with these three stored procedures.

Fixes #28
",chilts,3048,2015-04-09T05:18:08Z,CONTRIBUTOR,True,171,4,5,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,11dc22cd83d625433a3f4cc8471826d6c625ee6e,"refactor(db): Change table access in stored procedures to be consistent

Every now and again, we get a deadlock in the database. Whilst these are
expected from time to time we may be able to mitigate it further by making
sure we access our tables in a consistent order. This may not always be
possible but we can do it with these three stored procedures.

Fixes #28"
518,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/35,35,refactor(db): Remove old stored procedures that are no longer used,"Even though these old stored procedures don't really take up much space
in the database, they could be mis-used if left around.

Fixes #22
",chilts,3048,2015-04-01T02:39:28Z,CONTRIBUTOR,False,554,1,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,edd99440fe9f03843886c85cf5b9101dee726605,"refactor(db): Remove old stored procedures that are no longer used

Even though these old stored procedures don't really take up much space
in the database, they could be mis-used if left around.

Fixes #22"
519,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/34,34,"fix(release): add tasks ""grunt version"" and ""grunt version:patch"" to create release tags","Same as fxa-auth-server; similar to fxa-content-server but doesn't write the CHANGELOG for you from 'fix(foo): yoop' comments. @chilts @pdehaan r?
",jrgm,758162,2015-03-31T23:56:38Z,CONTRIBUTOR,True,111,29,7,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4a3cca52e413f1ad2754da688a8a85d46c9f1b38,"fix(release): add tasks ""grunt version"" and ""grunt version:patch"" to create release tags"
520,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/33,33,chore(shrinkwrap): update shrinkwrap,"My life is one never ending series of fun!
",jrgm,758162,2015-03-31T22:12:22Z,CONTRIBUTOR,True,252,586,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,edc31ea631e1779483ecd2dc66c4159ffa7a1b2d,chore(shrinkwrap): update shrinkwrap
521,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/32,32,fix(logging): load the logger from the new location,,chilts,3048,2015-03-31T21:34:51Z,CONTRIBUTOR,True,2,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,befacad6fa3790d7a95ec10eb1be7c8d0ddc7c50,fix(logging): load the logger from the new location
522,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/31,31,"fix(db): do not set createdAt, verifierSetAt or normalizedEmail here","Since the fxa-auth-server always sends these fields, then we shouldn't
set them to anything in this backend.

Fixes #12 - Be consistent about how timestamps are generated.
",chilts,3048,2015-03-26T22:45:30Z,CONTRIBUTOR,True,21,24,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0174a2869955c49bd3cc5356febd5055bbe4138d,"fix(db): do not set createdAt, verifierSetAt or normalizedEmail here

Since the fxa-auth-server always sends these fields, then we shouldn't
set them to anything in this backend.

Fixes #12 - Be consistent about how timestamps are generated."
523,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/30,30,chore(package.json): add extra fields related to the repo,"Things like homepage, bugs and keywords.
",chilts,3048,2015-03-23T02:55:09Z,CONTRIBUTOR,True,10,2,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,57bf8a620a0dfb2bb8a3461cfb5035b443ebd907,"chore(package.json): add extra fields related to the repo

Things like homepage, bugs and keywords."
524,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/29,29,allow json secret key file,"This will allow us to use the json secret key from the auth-server directly for the notifier.

r? @rfk 
",dannycoates,87619,2015-03-22T23:30:06Z,MEMBER,True,57,32,3,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,fac6e983fd9f8132a9d89090335adbee7fa5c3e4,allow json secret key file
525,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/27,27,Some test cleanups.,"This fixes a couple of small things I noticed while running the tests.  @chilts r?
",rfk,34695,2015-03-20T04:08:19Z,MEMBER,True,3,93,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,be5e600b04f3fc71ff6e7117467c0beda9293f04,chore(tests): Remove console logging during test run.
526,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/27,27,Some test cleanups.,"This fixes a couple of small things I noticed while running the tests.  @chilts r?
",rfk,34695,2015-03-20T04:08:19Z,MEMBER,True,3,93,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,73f4e1d1df1efcefecce1e3c01f6fecfd1d4c22b,chore(tests): Don't assume log.info message order during tests.
527,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/27,27,Some test cleanups.,"This fixes a couple of small things I noticed while running the tests.  @chilts r?
",rfk,34695,2015-03-20T04:08:19Z,MEMBER,True,3,93,4,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,82acea29b75a26b9b4f4e4b023bbf973bdf46e73,chore(tests): Remove some apparently-unused files in 'test' directory.
528,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/25,25,Publish account events to notification server,"@dannycoates here's an upcoming counterpart to your https://github.com/mozilla/fxa-notification-server/pull/19/files, which will slurp the events out of the db and publish them into the notification server.

Untested.  In fact I haven't even run it yet.  But I wanted to show you the proposed re-use of `jwtool.js`.  I'll pick this up again tomorrow.
",rfk,34695,2015-03-19T10:16:06Z,MEMBER,True,755,202,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,be5e600b04f3fc71ff6e7117467c0beda9293f04,chore(tests): Remove console logging during test run.
529,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/25,25,Publish account events to notification server,"@dannycoates here's an upcoming counterpart to your https://github.com/mozilla/fxa-notification-server/pull/19/files, which will slurp the events out of the db and publish them into the notification server.

Untested.  In fact I haven't even run it yet.  But I wanted to show you the proposed re-use of `jwtool.js`.  I'll pick this up again tomorrow.
",rfk,34695,2015-03-19T10:16:06Z,MEMBER,True,755,202,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,73f4e1d1df1efcefecce1e3c01f6fecfd1d4c22b,chore(tests): Don't assume log.info message order during tests.
530,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/25,25,Publish account events to notification server,"@dannycoates here's an upcoming counterpart to your https://github.com/mozilla/fxa-notification-server/pull/19/files, which will slurp the events out of the db and publish them into the notification server.

Untested.  In fact I haven't even run it yet.  But I wanted to show you the proposed re-use of `jwtool.js`.  I'll pick this up again tomorrow.
",rfk,34695,2015-03-19T10:16:06Z,MEMBER,True,755,202,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,82acea29b75a26b9b4f4e4b023bbf973bdf46e73,chore(tests): Remove some apparently-unused files in 'test' directory.
531,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/25,25,Publish account events to notification server,"@dannycoates here's an upcoming counterpart to your https://github.com/mozilla/fxa-notification-server/pull/19/files, which will slurp the events out of the db and publish them into the notification server.

Untested.  In fact I haven't even run it yet.  But I wanted to show you the proposed re-use of `jwtool.js`.  I'll pick this up again tomorrow.
",rfk,34695,2015-03-19T10:16:06Z,MEMBER,True,755,202,12,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,623fa48e4726ec842f15e94bcf7d7f4a27291c51,feat(events): Publish account events to notification server in a backgroud loop.
532,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/24,24,Log the memory stats,,chilts,3048,2015-03-13T01:59:40Z,CONTRIBUTOR,True,3,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a527d37ba0e17a9b78465a767545cc18c33a0dea,Log the memory stats
533,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/23,23,Fixes #19 - Pass the pool name onto getClusterConnection() correctly,,chilts,3048,2015-03-11T03:47:05Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e246ce69e636ecda5a23b8a355d598afc6f6446d,Fixes #19 - Pass the pool name onto getClusterConnection() correctly
534,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/21,21,Fixes #5 : Change logging to mozlog from bunyan,,chilts,3048,2015-03-10T06:46:04Z,CONTRIBUTOR,True,189,133,9,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,25eda660a019f784514487221abfd7b5e08ecb74,Fixes #5 : Change logging to mozlog from bunyan
535,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/20,20,Explicitly track account lifecycle events in the db,"Here's an idea that @dannycoates and I have been kicking around, for how the auth-server might interact with the upcoming notification server (https://github.com/mozilla/fxa-notification-server).

The idea here is to transactionally track our major account-lifecycle events in the database.  There's a simple ""eventLog"" table to which we append create, verify, reset and delete events as they happen, with an auto-increment sequence number to ensure they're stored properly and consistently ordered.

When the notification server is ready, some background process in the server can read from this queue and schlep the events on over there asynchronously.  Details of that TBD but I added a couple of the low-level functions it'll probably need.

The advantage of this approach is that we won't lose creation or deletion events, and we're decoupled from the notification server.  The disadvantage is we're doing queueing and logging in the db, blech.  But since these events should be rare, and the data we keep for them small, it seems like a worthwhile tradeoff overall.  At least it's nice and simple!

@chilts thoughts?  @ckolos thoughts?  I remain open to the suggestion that this is a terrible idea :-)

Possible optimization: we could keep only the most recent event for any (uid, typ) pair, rather than e.g. a hundred ""reset"" events for a user who resets their account a hundred times.  But doing so would cost an additional index on this table, or some slow background compaction process.  And eventually we might solve this in a more general way as part of the evolving notifications infra, so we don't need to make this solution awesome right now, it just needs to work.

(This is a WIP and should not be merged yet, although if we all agree on the approach then I'd like to get it out on train-33).
",rfk,34695,2015-03-09T05:58:08Z,MEMBER,True,626,8,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,569fe69b05668df904dc7957f897dd613847cb9a,fix(tests): account for different errnos on different mysql versions.
536,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/20,20,Explicitly track account lifecycle events in the db,"Here's an idea that @dannycoates and I have been kicking around, for how the auth-server might interact with the upcoming notification server (https://github.com/mozilla/fxa-notification-server).

The idea here is to transactionally track our major account-lifecycle events in the database.  There's a simple ""eventLog"" table to which we append create, verify, reset and delete events as they happen, with an auto-increment sequence number to ensure they're stored properly and consistently ordered.

When the notification server is ready, some background process in the server can read from this queue and schlep the events on over there asynchronously.  Details of that TBD but I added a couple of the low-level functions it'll probably need.

The advantage of this approach is that we won't lose creation or deletion events, and we're decoupled from the notification server.  The disadvantage is we're doing queueing and logging in the db, blech.  But since these events should be rare, and the data we keep for them small, it seems like a worthwhile tradeoff overall.  At least it's nice and simple!

@chilts thoughts?  @ckolos thoughts?  I remain open to the suggestion that this is a terrible idea :-)

Possible optimization: we could keep only the most recent event for any (uid, typ) pair, rather than e.g. a hundred ""reset"" events for a user who resets their account a hundred times.  But doing so would cost an additional index on this table, or some slow background compaction process.  And eventually we might solve this in a more general way as part of the evolving notifications infra, so we don't need to make this solution awesome right now, it just needs to work.

(This is a WIP and should not be merged yet, although if we all agree on the approach then I'd like to get it out on train-33).
",rfk,34695,2015-03-09T05:58:08Z,MEMBER,True,626,8,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,af85740ffdc73b53d0a2cc269a54cf186d8fec59,feat(events): Add eventLog table to track account lifecycle events.
537,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/20,20,Explicitly track account lifecycle events in the db,"Here's an idea that @dannycoates and I have been kicking around, for how the auth-server might interact with the upcoming notification server (https://github.com/mozilla/fxa-notification-server).

The idea here is to transactionally track our major account-lifecycle events in the database.  There's a simple ""eventLog"" table to which we append create, verify, reset and delete events as they happen, with an auto-increment sequence number to ensure they're stored properly and consistently ordered.

When the notification server is ready, some background process in the server can read from this queue and schlep the events on over there asynchronously.  Details of that TBD but I added a couple of the low-level functions it'll probably need.

The advantage of this approach is that we won't lose creation or deletion events, and we're decoupled from the notification server.  The disadvantage is we're doing queueing and logging in the db, blech.  But since these events should be rare, and the data we keep for them small, it seems like a worthwhile tradeoff overall.  At least it's nice and simple!

@chilts thoughts?  @ckolos thoughts?  I remain open to the suggestion that this is a terrible idea :-)

Possible optimization: we could keep only the most recent event for any (uid, typ) pair, rather than e.g. a hundred ""reset"" events for a user who resets their account a hundred times.  But doing so would cost an additional index on this table, or some slow background compaction process.  And eventually we might solve this in a more general way as part of the evolving notifications infra, so we don't need to make this solution awesome right now, it just needs to work.

(This is a WIP and should not be merged yet, although if we all agree on the approach then I'd like to get it out on train-33).
",rfk,34695,2015-03-09T05:58:08Z,MEMBER,True,626,8,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a79573bde7294cfe9d09797c8dc418b8cd31f26b,feat(events): Add facility for tracking what events have been published.
538,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/18,18,chore(npm): npm warning about 'No bin file found at db_patcher.js',"completely trivial, but annoying `npm WARN package.json fxa-auth-db-mysql@0.32.0 No bin file found at db_patcher.js`
",jrgm,758162,2015-03-06T08:02:10Z,CONTRIBUTOR,True,1,1,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,29ca688f8c597c8f62d82be422b232056e86e0c9,chore(npm): npm warning about 'No bin file found at db_patcher.js'
539,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/17,17,Fix comments for which tables are related to which operations,,chilts,3048,2015-03-05T08:07:25Z,CONTRIBUTOR,True,3,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6c19f1986517f5d02edc52f7010b01b69df9d7a8,Fix comments for which tables are related to which operations
540,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/16,16,bump version in package.json and npm-shrinkwrap.json to 0.32.0,,jrgm,758162,2015-03-04T05:36:37Z,CONTRIBUTOR,True,2,2,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bcbef8e68a787de6e86a69f4df74aede2d7fe0ff,bump version in package.json and npm-shrinkwrap.json to 0.32.0
541,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/15,15,fix(shrinkwrap): [train-31] regenerated npm-shrinkwrap.json that uses the correct version of fxa-auth-db-server,"@chilts, @dannycoates, @rfk, r? - fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/14 for the train-31 branch

This is a re-generated `npm-shrinkwrap.json` file on the train-31 branch that will use the intended train-31 branch of `fxa-auth-db-server`. (It was generated with `/bin/rm -rf ./node_modules ./npm-shrinkwrap.json ; npm cache clear; npm install; npm -d prune; npm shrinkwrap --dev`, and node 0.10.36 and npm 2.6.1 (latest stable). The prune is something needed because shrinkwrap was complaining about having redundant copies of `bluebird`, `ass` and `tap` and refusing to write a new `npm-shrinkwrap.json` file. (Given that it was a clean `npm install`, it seems odd that `npm shrinkwrap` was unhappy with the result, but anyways...).

So, besides putting the installed fxa-auth-db-server at train-31 (95bda6e1d56a67ba37e85c6ed2fad2bd02d13c9e), the other changes are to sub-dependencies of dev tools: `grunt`, `mysql-patcher`, `ass`, `grunt-contrib-jshint`.

```
grunt > which
mysql-patcher > bluebird
ass > cheerio > htmlparser2 > domutils > dom-serializer > entities
grunt-contrib-jshint > hooker > jshint > htmlparser2 > domutils > dom-serializer > entities


$ git diff --cached | grep -v '""from"": ""' | grep -v '^ '
diff --git a/npm-shrinkwrap.json b/npm-shrinkwrap.json
index 0a14645..7288d68 100644
--- a/npm-shrinkwrap.json
+++ b/npm-shrinkwrap.json
@@ -1,40 +1,40 @@
-  ""version"": ""0.0.0"",
+  ""version"": ""0.31.0"",
@@ -43,52 +43,66 @@
-                  ""version"": ""1.5.0"",
-                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.0.tgz""
+                  ""version"": ""1.5.1"",
+                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz"",
+                  ""dependencies"": {
+                    ""dom-serializer"": {
+                      ""version"": ""0.1.0"",
+                      ""resolved"": ""https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz"",
+                      ""dependencies"": {
+                        ""entities"": {
+                          ""version"": ""1.1.1"",
+                          ""resolved"": ""https://registry.npmjs.org/entities/-/entities-1.1.1.tgz""
+                        }
+                      }
+                    }
+                  }
@@ -97,27 +111,27 @@
@@ -126,19 +140,19 @@
@@ -147,98 +161,98 @@
@@ -247,7 +261,7 @@
@@ -256,27 +270,27 @@
@@ -284,9 +298,9 @@
-      ""version"": ""1.18.1"",
-      ""resolved"": ""git://github.com/chilts/fxa-auth-db-server.git#3536bbfe2cf468ca898dc9f331b6497be5142fad"",
+      ""version"": ""0.31.0"",
+      ""resolved"": ""git://github.com/mozilla/fxa-auth-db-server.git#95bda6e1d56a67ba37e85c6ed2fad2bd02d13c9e"",
@@ -295,7 +309,7 @@
@@ -344,7 +358,7 @@
@@ -354,24 +368,24 @@
@@ -381,7 +395,7 @@
@@ -391,7 +405,7 @@
@@ -423,7 +437,7 @@
@@ -440,7 +454,7 @@
@@ -449,62 +463,62 @@
@@ -513,144 +527,144 @@
-          ""version"": ""1.0.8"",
-          ""resolved"": ""https://registry.npmjs.org/which/-/which-1.0.8.tgz""
+          ""version"": ""1.0.9"",
+          ""resolved"": ""https://registry.npmjs.org/which/-/which-1.0.9.tgz""
@@ -659,42 +673,42 @@
@@ -705,149 +719,163 @@
-                  ""version"": ""1.5.0"",
-                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.0.tgz""
+                  ""version"": ""1.5.1"",
+                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz"",
+                  ""dependencies"": {
+                    ""dom-serializer"": {
+                      ""version"": ""0.1.0"",
+                      ""resolved"": ""https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz"",
+                      ""dependencies"": {
+                        ""entities"": {
+                          ""version"": ""1.1.1"",
+                          ""resolved"": ""https://registry.npmjs.org/entities/-/entities-1.1.1.tgz""
+                        }
+                      }
+                    }
+                  }
@@ -856,49 +884,49 @@
@@ -907,46 +935,46 @@
@@ -957,44 +985,44 @@
@@ -1006,351 +1034,351 @@
-          ""version"": ""2.9.3"",
-          ""resolved"": ""https://registry.npmjs.org/bluebird/-/bluebird-2.9.3.tgz""
+          ""version"": ""2.9.13"",
+          ""resolved"": ""https://registry.npmjs.org/bluebird/-/bluebird-2.9.13.tgz""
@@ -1359,56 +1387,56 @@
@@ -1419,19 +1447,19 @@

```
",jrgm,758162,2015-02-28T04:00:52Z,CONTRIBUTOR,True,275,246,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5ddc9d8ae91253f41cd780c1d0e8b6f5ea27aa21,fix(shrinkwrap): regenerated npm-shrinkwrap.json that uses the correct version of fxa-auth-db-server
542,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/15,15,fix(shrinkwrap): [train-31] regenerated npm-shrinkwrap.json that uses the correct version of fxa-auth-db-server,"@chilts, @dannycoates, @rfk, r? - fixes https://github.com/mozilla/fxa-auth-db-mysql/issues/14 for the train-31 branch

This is a re-generated `npm-shrinkwrap.json` file on the train-31 branch that will use the intended train-31 branch of `fxa-auth-db-server`. (It was generated with `/bin/rm -rf ./node_modules ./npm-shrinkwrap.json ; npm cache clear; npm install; npm -d prune; npm shrinkwrap --dev`, and node 0.10.36 and npm 2.6.1 (latest stable). The prune is something needed because shrinkwrap was complaining about having redundant copies of `bluebird`, `ass` and `tap` and refusing to write a new `npm-shrinkwrap.json` file. (Given that it was a clean `npm install`, it seems odd that `npm shrinkwrap` was unhappy with the result, but anyways...).

So, besides putting the installed fxa-auth-db-server at train-31 (95bda6e1d56a67ba37e85c6ed2fad2bd02d13c9e), the other changes are to sub-dependencies of dev tools: `grunt`, `mysql-patcher`, `ass`, `grunt-contrib-jshint`.

```
grunt > which
mysql-patcher > bluebird
ass > cheerio > htmlparser2 > domutils > dom-serializer > entities
grunt-contrib-jshint > hooker > jshint > htmlparser2 > domutils > dom-serializer > entities


$ git diff --cached | grep -v '""from"": ""' | grep -v '^ '
diff --git a/npm-shrinkwrap.json b/npm-shrinkwrap.json
index 0a14645..7288d68 100644
--- a/npm-shrinkwrap.json
+++ b/npm-shrinkwrap.json
@@ -1,40 +1,40 @@
-  ""version"": ""0.0.0"",
+  ""version"": ""0.31.0"",
@@ -43,52 +43,66 @@
-                  ""version"": ""1.5.0"",
-                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.0.tgz""
+                  ""version"": ""1.5.1"",
+                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz"",
+                  ""dependencies"": {
+                    ""dom-serializer"": {
+                      ""version"": ""0.1.0"",
+                      ""resolved"": ""https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz"",
+                      ""dependencies"": {
+                        ""entities"": {
+                          ""version"": ""1.1.1"",
+                          ""resolved"": ""https://registry.npmjs.org/entities/-/entities-1.1.1.tgz""
+                        }
+                      }
+                    }
+                  }
@@ -97,27 +111,27 @@
@@ -126,19 +140,19 @@
@@ -147,98 +161,98 @@
@@ -247,7 +261,7 @@
@@ -256,27 +270,27 @@
@@ -284,9 +298,9 @@
-      ""version"": ""1.18.1"",
-      ""resolved"": ""git://github.com/chilts/fxa-auth-db-server.git#3536bbfe2cf468ca898dc9f331b6497be5142fad"",
+      ""version"": ""0.31.0"",
+      ""resolved"": ""git://github.com/mozilla/fxa-auth-db-server.git#95bda6e1d56a67ba37e85c6ed2fad2bd02d13c9e"",
@@ -295,7 +309,7 @@
@@ -344,7 +358,7 @@
@@ -354,24 +368,24 @@
@@ -381,7 +395,7 @@
@@ -391,7 +405,7 @@
@@ -423,7 +437,7 @@
@@ -440,7 +454,7 @@
@@ -449,62 +463,62 @@
@@ -513,144 +527,144 @@
-          ""version"": ""1.0.8"",
-          ""resolved"": ""https://registry.npmjs.org/which/-/which-1.0.8.tgz""
+          ""version"": ""1.0.9"",
+          ""resolved"": ""https://registry.npmjs.org/which/-/which-1.0.9.tgz""
@@ -659,42 +673,42 @@
@@ -705,149 +719,163 @@
-                  ""version"": ""1.5.0"",
-                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.0.tgz""
+                  ""version"": ""1.5.1"",
+                  ""resolved"": ""https://registry.npmjs.org/domutils/-/domutils-1.5.1.tgz"",
+                  ""dependencies"": {
+                    ""dom-serializer"": {
+                      ""version"": ""0.1.0"",
+                      ""resolved"": ""https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.1.0.tgz"",
+                      ""dependencies"": {
+                        ""entities"": {
+                          ""version"": ""1.1.1"",
+                          ""resolved"": ""https://registry.npmjs.org/entities/-/entities-1.1.1.tgz""
+                        }
+                      }
+                    }
+                  }
@@ -856,49 +884,49 @@
@@ -907,46 +935,46 @@
@@ -957,44 +985,44 @@
@@ -1006,351 +1034,351 @@
-          ""version"": ""2.9.3"",
-          ""resolved"": ""https://registry.npmjs.org/bluebird/-/bluebird-2.9.3.tgz""
+          ""version"": ""2.9.13"",
+          ""resolved"": ""https://registry.npmjs.org/bluebird/-/bluebird-2.9.13.tgz""
@@ -1359,56 +1387,56 @@
@@ -1419,19 +1447,19 @@

```
",jrgm,758162,2015-02-28T04:00:52Z,CONTRIBUTOR,True,275,246,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,68922bd434ec2da861debf89065ce8635b6e89be,docs(changelog): [train-31] add note about regenerated npm-shrinkwrap.json
543,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/13,13,feat(docker): Dockerfile and README update for basic docker development workflow,"Here's a PR for running the MySQL backend via Docker. I'll make another for the auth-db-server shortly. At that point I think each FxA process will be setup to run in a container, at which point I can get to work on linking them together.
",jamonation,328553,2015-02-18T14:35:17Z,CONTRIBUTOR,True,21,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,bce0cf4da99c50e237805ae41e68f10566fac114,feat(docker): Dockerfile and README update for basic docker development workflow
544,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/13,13,feat(docker): Dockerfile and README update for basic docker development workflow,"Here's a PR for running the MySQL backend via Docker. I'll make another for the auth-db-server shortly. At that point I think each FxA process will be setup to run in a container, at which point I can get to work on linking them together.
",jamonation,328553,2015-02-18T14:35:17Z,CONTRIBUTOR,True,21,0,2,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,541263d02872ecb41c25efdb1d10c6c70e577003,Update README.md
545,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/8,8,Fix requires if being used as a library,,chilts,3048,2015-02-04T21:55:51Z,CONTRIBUTOR,True,3,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,6b3c06c16c87f0051a634d3cadfda2bd59632e39,Fix requires if being used as a library
546,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/7,7,feat: Account locked feature.,"- Add `lockAccount`, `unlockAccount`, and `unlockCode` db functions.
- Add a new `lockedAt` column to the `accounts` table.
- Update `emailRecord` and `account` to return `lockedAt`
- Add `accountUnlockCodes` table to keep track of account unlock codes

Pieced together from:
- https://github.com/mozilla/fxa-auth-db-server/pull/91
- https://github.com/chilts/fxa-auth-db-server/pull/2
- My own additions.

Goes along with:
- https://github.com/mozilla/fxa-auth-db-server/pull/123
- https://github.com/mozilla/fxa-auth-db-mem/pull/11
- https://github.com/mozilla/fxa-auth-mailer/pull/23
- https://github.com/mozilla/fxa-js-client/pull/141
- https://github.com/mozilla/fxa-content-server/pull/1806
- https://github.com/mozilla/fxa-auth-server/pull/867
",shane-tomlinson,848085,2015-02-04T17:29:44Z,MEMBER,True,1249,816,6,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,d2acf5c66ed61d5d2c9b34e75338c9565972d811,"feat: Account locked feature.

* Add `lockAccount`, `unlockAccount`, and `unlockCode` db functions.
* Add a new `lockedAt` column to the `accounts` table.
* Update `emailRecord` and `account` to return `lockedAt`
* Add `accountUnlockCodes` table to keep track of account unlock codes

Pieced together from:
* https://github.com/mozilla/fxa-auth-db-server/pull/91
* https://github.com/chilts/fxa-auth-db-server/pull/2
* My own additions."
547,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,e92721cc5c124f19abbfbadf59c6f7b3f1e7524d,Get patches up to date and make the server start
548,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,cf5556adc9c9ee60cbcf135d2a75aae547221391,Update to latest mysql.js and patch level 5 for initial db_tests.js
549,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,967766ca0fe614b7452babce3ebeda812bd0548c,"Update to get back to the convict config, rather than rc"
550,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,97cbc62cb3ecbdb734e9140e763e893d0a3c2110,Add in all of the mysql specific tests
551,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,a348ed05594d630311618894d551671e6fc4631f,Run all remote tests from dbServer
552,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,67ae915a57438b63815a7a82529a065185e694d2,Return mysql-patcher into the repo
553,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,4ccd02fc9eb8ef5856429bfe8928f988d0985c67,Grunt when testing
554,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,c20248a9c2a4d6ba59ba0feb2328af50b419cd2b,These tokens are replaced on a per user level
555,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,8b59bab6b5f74d89f81513fbdb8e4f6e547c83dc,Add a Travis config for automated testing
556,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,0baf71e00203406e43ca7651ac27e3d12d0ed994,Add a shrinkwrap file
557,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,56969ccfd167d30966c395199d885de7cee67ef9,Minimise Travis file
558,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,228a4a1e08d519875cc91e89221e8cc6eed3415c,Make sure to patch the DB prior to testing
559,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5dbb48dc00b107d94ac3059aaa0491e0b5de1833,Remove the DELIMITER marks from the SQL patch file
560,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,96ec661b5b5a89b1d54a324713ef274dfbbb2876,Refactor into server and index for export
561,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,169ff6ca9c18dce404c4f4dc0fbcb450a23942a4,Address some review comments in #4
562,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,5fb71d19d581f99b9fb113609e6b890beb29adb3,Fix logging (and what server event to listen to for error)
563,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,151fa033f52001424d3094f807a47fcd816295e6,Fix logging of requests for success and failure
564,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/4,4,Reverse with tests,,chilts,3048,2015-01-27T23:11:35Z,CONTRIBUTOR,True,3091,1713,38,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,f74f8c99406a204d35c304edb912c8bf6acf8e54,Only fail on a db patch level less than the one expected
565,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/3,3,Add a simple README.md file,,chilts,3048,2014-09-23T17:09:45Z,CONTRIBUTOR,True,9,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,164f2850670ee48a8676005e74ab7b8be8cbbc0e,Add a simple README.md file
566,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/2,2,"adding description, repository, author fields","@chilts r?
",pdehaan,557895,2014-09-23T00:07:24Z,CONTRIBUTOR,True,7,3,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,aa7f543529fdd52b1dd44132e56ed8ccef88ddbe,"adding description, repository, author fields"
567,https://api.github.com/repos/mozilla/fxa-auth-db-mysql/pulls/1,1,Add the full text of the MPL 2.0,,chilts,3048,2014-09-22T15:41:45Z,CONTRIBUTOR,True,373,0,1,DEPRECATED - Migrated to https://github.com/mozilla/fxa,JavaScript,7332252980c1412ed6c492dc5a3ebfc747d1e5b9,Add the full text of the MPL 2.0
