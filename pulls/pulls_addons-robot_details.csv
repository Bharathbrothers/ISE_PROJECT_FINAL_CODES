,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/addons-robot/pulls/39,39,Add Mozilla Code of Conduct,"Fixes #38


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-29T17:07:22Z,CONTRIBUTOR,True,15,0,1,Bots for building out everything add-ons.,Python,ee24f0348901c5eb47fbd14d29960121cace04e9,"Add Mozilla Code of Conduct file

Fixes #38.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/addons-robot/pulls/29,29,Pin requests to latest version 2.17.3,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.17.3** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.17.3

>+++++++++++++++++++

>**Improvements**

>- Improved ``packages`` namespace identity support, for monkeypatching libraries.




>### 2.17.2

>+++++++++++++++++++

>**Improvements**

>- Improved ``packages`` namespace identity support, for monkeypatching libraries.




>### 2.17.1

>+++++++++++++++++++

>**Improvements**

>- Improved ``packages`` namespace identity support, for monkeypatching libraries.




>### 2.17.0

>+++++++++++++++++++

>**Improvements**

>- Removal of the 301 redirect cache. This improves thread-safety.




>### 2.16.5

>+++++++++++++++++++

>- Improvements to ``$ python -m requests.help``.



>### 2.16.4

>+++++++++++++++++++

>- Introduction of the ``$ python -m requests.help`` command, for debugging with maintainers!



>### 2.16.3

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.



>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/requests/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/requests/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/requests/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/requests/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/requests/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/requests/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/requests/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/requests/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/requests/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-29T22:30:57Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,7dbbb780a1ddea152b07945352cc2f2398893fd5,Pin requests to latest version 2.17.3
2,https://api.github.com/repos/mozilla/addons-robot/pulls/28,28,Pin requests to latest version 2.17.0,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.17.0** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.17.0

>+++++++++++++++++++

>**Improvements**

>- Removal of the 301 redirect cache. This improves thread-safety.




>### 2.16.5

>+++++++++++++++++++

>- Improvements to ``$ python -m requests.help``.



>### 2.16.4

>+++++++++++++++++++

>- Introduction of the ``$ python -m requests.help`` command, for debugging with maintainers!



>### 2.16.3

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.



>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/requests/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/requests/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/requests/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/requests/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/requests/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/requests/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/requests/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/requests/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/requests/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-29T19:45:58Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,882909d960b9742cbc06839a41e074526686a1cc,Pin requests to latest version 2.17.0
3,https://api.github.com/repos/mozilla/addons-robot/pulls/27,27,Pin requests to latest version 2.16.5,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.16.5** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.16.5

>+++++++++++++++++++

>- Improvements to ``$ python -m requests.help``.



>### 2.16.4

>+++++++++++++++++++

>- Introduction of the ``$ python -m requests.help`` command, for debugging with maintainers!



>### 2.16.3

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.



>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-28T07:01:55Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,a72c408eb7cd5a7948303508999e453d54cd28a7,Pin requests to latest version 2.16.5
4,https://api.github.com/repos/mozilla/addons-robot/pulls/26,26,Pin requests to latest version 2.16.4,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.16.4** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.16.4

>+++++++++++++++++++

>- Introduction of the ``$ python -m requests.help`` command, for debugging with maintainers!



>### 2.16.3

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.



>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-28T00:01:54Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,2af9c281a707b76ecfa4c4f14438f01b51ce6ce5,Pin requests to latest version 2.16.4
5,https://api.github.com/repos/mozilla/addons-robot/pulls/25,25,Pin requests to latest version 2.16.3,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.16.3** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.16.3

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.



>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-27T17:31:52Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,4d8b1577084eb665d33932b239733bb5c871e671,Pin requests to latest version 2.16.3
6,https://api.github.com/repos/mozilla/addons-robot/pulls/24,24,Pin requests to latest version 2.16.2,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.16.2** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.16.2

>+++++++++++++++++++

>- Further restored the ``requests.packages`` namespace for compatibility reasons.

>No code modification (noted below) should be neccessary any longer.



>### 2.16.1

>+++++++++++++++++++

>- Restored the ``requests.packages`` namespace for compatibility reasons.
>- Bugfix for ``urllib3`` version parsing.

>**Note**: code that was written to import against the ``requests.packages``
>namespace previously will have to import code that rests at this module-level
>now.

>For example::

>    from requests.packages.urllib3.poolmanager import PoolManager

>Will need to be re-written to be::

>    from requests.packages import urllib3
>    urllib3.poolmanager.PoolManager

>Or, even better::

>    from urllib3.poolmanager import PoolManager



>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-27T16:16:53Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,876c4bb2ae044af828dc6324a128ef0c76f268af,Pin requests to latest version 2.16.2
7,https://api.github.com/repos/mozilla/addons-robot/pulls/23,23,Pin requests to latest version 2.16.0,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.16.0** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.16.0

>+++++++++++++++++++

>- Unvendor ALL the things!



>### 2.15.1

>+++++++++++++++++++

>- Everyone makes mistakes.



>### 2.15.0

>+++++++++++++++++++

>**Improvements**

>- Introduction of the ``Response.next`` property, for getting the next
>  ``PreparedResponse`` from a redirect chain (when ``allow_redirects=False``).
>- Internal refactoring of ``__version__`` module.

>**Bugfixes**

>- Restored once-optional parameter for ``requests.utils.get_environ_proxies()``.



>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeErrors`` are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-27T04:16:55Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,0caa4c0d4313aaeffa27ec056b73373fce18a4e3,Pin requests to latest version 2.16.0
8,https://api.github.com/repos/mozilla/addons-robot/pulls/22,22,Pin requests to latest version 2.14.2,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.14.2** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.14.2

>+++++++++++++++++++

>**Bugfixes**

>- Changed a less-than to an equal-to and an or in the dependency markers to
>  widen compatibility with older setuptools releases.



>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeError``s are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-10T16:24:25Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,53315f7a457a254e337d531c44b6b08420789afb,Pin requests to latest version 2.14.2
9,https://api.github.com/repos/mozilla/addons-robot/pulls/21,21,Pin requests to latest version 2.14.1,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.14.1** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.14.1

>+++++++++++++++++++

>**Bugfixes**

>- Changed the dependency markers to widen compatibility with older pip
>  releases.



>### 2.14.0

>+++++++++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeError``s are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-09T21:24:28Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,3fc70776378708aff7e3073c96941484dc2c690e,Pin requests to latest version 2.14.1
10,https://api.github.com/repos/mozilla/addons-robot/pulls/20,20,Pin requests to latest version 2.14.0,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.14.0** for now.


These links might come in handy:  <a href=""https://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.14.0

>+++++++++++++

>**Improvements**

>- It is now possible to pass ``no_proxy`` as a key to the ``proxies``
>  dictionary to provide handling similar to the ``NO_PROXY`` environment
>  variable.
>- When users provide invalid paths to certificate bundle files or directories
>  Requests now raises ``IOError``, rather than failing at the time of the HTTPS
>  request with a fairly inscrutable certificate validation error.
>- The behavior of ``SessionRedirectMixin`` was slightly altered.
>  ``resolve_redirects`` will now detect a redirect by calling
>  ``get_redirect_target(response)`` instead of directly
>  querying ``Response.is_redirect`` and ``Response.headers[&#39;location&#39;]``.
>  Advanced users will be able to process malformed redirects more easily.
>- Changed the internal calculation of elapsed request time to have higher
>  resolution on Windows.
>- Added ``win_inet_pton`` as conditional dependency for the ``[socks]`` extra
>  on Windows with Python 2.7.
>- Changed the proxy bypass implementation on Windows: the proxy bypass
>  check doesn&#39;t use forward and reverse DNS requests anymore
>- URLs with schemes that begin with ``http`` but are not ``http`` or ``https``
>  no longer have their host parts forced to lowercase.

>**Bugfixes**

>- Much improved handling of non-ASCII ``Location`` header values in redirects.
>  Fewer ``UnicodeDecodeError``s are encountered on Python 2, and Python 3 now
>  correctly understands that Latin-1 is unlikely to be the correct encoding.
>- If an attempt to ``seek`` file to find out its length fails, we now
>  appropriately handle that by aborting our content-length calculations.
>- Restricted ``HTTPDigestAuth`` to only respond to auth challenges made on 4XX
>  responses, rather than to all auth challenges.
>- Fixed some code that was firing ``DeprecationWarning`` on Python 3.6.
>- The dismayed person emoticon (``/o\\``) no longer has a big head. I&#39;m sure
>  this is what you were all worrying about most.


>**Miscellaneous**

>- Updated bundled urllib3 to v1.21.1.
>- Updated bundled chardet to v3.0.2.
>- Updated bundled idna to v2.5.
>- Updated bundled certifi to 2017.4.17.



>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-05-09T18:09:27Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,d6cd3a3b1c4d2b35e0213b45f9a29c6a50a21de0,Pin requests to latest version 2.14.0
11,https://api.github.com/repos/mozilla/addons-robot/pulls/19,19,Pin irc to latest version 15.1.1,"
irc is not pinned to a specific version.

I'm pinning it to the latest version **15.1.1** for now.


These links might come in handy:  <a href=""http://pypi.python.org/pypi/irc"">PyPI</a> | <a href=""https://pyup.io/changelogs/irc/"">Changelog</a> | <a href=""https://github.com/jaraco/irc"">Repo</a> 



### Changelog
> 
>### 15.1.1

>======

>* New ``send_items`` method takes star args for simplicity
>  in the syntax and usage.



>### 15.1

>====

>* Introduce ``ServerConnection.send_items``, consolidating
>  common behavior across many methods previously calling
>  ``send_raw``.



>### 15.0.6

>======

>* Now publish `documentation &lt;https://python-irc.readthedocs.io/&gt;`_
>  to Read The Docs.



>### 15.0.5

>======

>* 119: Handle broken pipe exception in IRCClient _send() (server.py).



>### 15.0.4

>======

>* 116: Correct invocation of execute_every.



>### 15.0.3

>======

>* 115: Fix AttributeError in ``execute_at`` in scheduling
>  support.



>### 15.0.2

>======

>* 113: Use preferred scheduler in the bot implementation.



>### 15.0.1

>======

>* Deprecated calls to Connection.execute_*
>  and Reactor.execute_*. Instead, call the
>  equivalently-named methods on the reactor&#39;s
>  scheduler.



>### 15.0

>====

>* The event scheduling functionality has been decoupled
>  from the client.Reactor object. Now the reactor will
>  construct a Scheduler from the scheduler_class property,
>  which must be an instance of irc.schedule.IScheduler.

>  The ``_on_schedule`` parameter is no longer accepted
>  to the Reactor class. Implementations requiring a
>  signal during scheduling should hook into the ``add``
>  method of the relevant scheduler class.

>* Moved the underlying scheduler implementation to
>  `tempora &lt;https://pypi.org/project/tempora&gt;`_, allowing
>  it to be re-used for other purposes.



>### 14.2.2

>======

>* Issue 98: Add an ugly hack to force ``build_sphinx``
>  command to have the requisite libraries to build
>  module documentation.



>### 14.2.1

>======

>* Issue 97: Restore ``irc.buffer`` module for
>  compatibility.
>* Issue 95: Update docs to remove missing or
>  deprecated modules.
>* Issue 96: Declare Gitter support as a badge in the
>  docs.



>### 14.2

>====

>* Moved buffer module to `jaraco.stream
>  &lt;https://pypi.python.org/pypi/jaraco.stream&gt;`_ for
>  use in other packages.



>### 14.1

>====

>* ``SingleServerIRCBot`` now accepts a ``recon``
>  parameter implementing a ReconnectStrategy. The new
>  default strategy is ExponentialBackoff, implementing an
>  exponential backoff with jitter.
>  The ``reconnection_interval`` parameter is now deprecated
>  but retained for compatibility. To customize the minimum
>  time before reconnect, create a custom ExponentialBackoff
>  instance or create another ReconnectStrategy object and
>  pass that as the ``recon`` parameter. The
>  ``reconnection_interval`` parameter will be removed in
>  future versions.
>* Issue 82: The ``ExponentialBackoff`` implementation
>  now protects from multiple scheduled reconnects, avoiding
>  the issue where reconnect attempts accumulate
>  exponentially when the bot is immediately disconnected
>  by the server.



>### 14.0

>====

>* Dropped deprecated constructor
>  ``connection.Factory.from_legacy_params``. Use the
>  natural constructor instead.
>* Issue 83: ``connection.Factory`` no longer attempts
>  to bind before connect unless a bind address is specified.



>### 13.3.1

>======

>* Now remove mode for owners, halfops, and admins when the user
>  is removed from a channel.
>* Refactored the Channel class implementation for cleaner, less
>  repetitive code.
>* Expanded tests coverage for Channel class.



>### 13.3

>====

>* Issue 75: In ``irc.bot``, add support for tracking admin
>  status (mode &#39;a&#39;) in channels. Use ``channel.is_admin``
>  or ``channel.admins`` to identify admin users for a channel.

>* Removed deprecated irc.logging module.



>### 13.2

>====

>* Moved hosting to github.



>### 13.1.1

>======

>* Issue 67: Fix infinite recursion for ``irc.strings.IRCFoldedCase``
>  and ``irc.strings.lower``.



>### 13.1

>====

>* Issue 64: ISUPPORT PREFIX now retains the order of
>  permissions for each prefix.



>### 13.0

>====

>* Updated ``schedule`` module to properly support timezone aware
>  times and use them by default. Clients that rely on the timezone
>  naïve datetimes may restore the old behavior by overriding the
>  ``schedule.now`` and ``schedule.from_timestamp`` functions
>  like so:

>    schedule.from_timestamp = datetime.datetime.fromtimestamp
>    schedule.now = datetime.datetime.now

>  Clients that were previously patching
>  ``schedule.DelayedCommand.now`` will need to instead patch
>  the aforementioned module-global methods. The
>  classmethod technique was a poor interface for effectively
>  controlling timezone awareness, so was likely unused. Please
>  file a ticket with the project for support with your client
>  as needed.



>### 12.4.2

>======

>* Bump to jaraco.functools 1.5 to throttler failures in Python 2.



>### 12.4

>====

>* Moved ``Throttler`` class to `jaraco.functools
>  &lt;https://bitbucket.org/jaraco/jaraco.functools&gt;`_ 1.4.



>### 12.3

>====

>* Pull Request 33: Fix apparent escaping issue with IRCv3 tags.



>### 12.2

>====

>* Pull Request 32: Add numeric for WHOX reply.
>* Issue 62 and Pull Request 34: Add support for tags in message
>  processing and ``Event`` class.



>### 12.1.2

>======

>* Issue 59: Fixed broken references to irc.client members.
>* Issue 60: Fix broken initialization of ``irc.server.IRCClient`` on
>  Python 2.



>### 12.1.1

>======

>* Issue 57: Better handling of Python 3 in testbot.py script.



>### 12.1

>====

>* Remove changelog from package metadata.



>### 12.0

>====

>* Remove dependency on jaraco.util. Instead depend on surgical packages.
>* Deprecated ``irc.logging`` in favor of ``jaraco.logging``.
>* Dropped support for Python 3.2.



>### 11.1.1

>======

>* Issue 55: Correct import error on Python 2.7.



>### 11.1

>====

>* Decoding errors now log a warning giving a reference to the ``Decoding
>  Input`` section of the readme.



>### 11.0

>====

>* Renamed ``irc.client.Manifold`` to ``irc.client.Reactor``. Reactor better
>  reflects the implementation as a `reactor pattern &lt;
>  &lt;http://en.wikipedia.org/wiki/Reactor_pattern&gt;`_.
>  This name makes it&#39;s function much more clear and inline with standard
>  terminology.
>* Removed deprecated ``manifold`` and ``irclibobj`` properties from Connection.
>  Use ``reactor`` instead.
>* Removed deprecated ``ircobj`` from ``SimpleIRCClient``. Use ``reactor``
>  instead.



>### 10.1

>====

>* Added ``ServerConnection.as_nick``, a context manager to set a nick for the
>  duration of the context.



>### 10.0

>====

>* Dropped support for Python 2.6.
>* Dropped ``irc.client.LineBuffer`` and ``irc.client.DecodingBuffer``
>  (available in ``irc.client.buffer``).
>* Renamed ``irc.client.IRC`` to ``irc.client.Manifold`` to provide a clearer
>  name for that object. Clients supporting 8.6 and later can use the
>  ``Manifold`` name. Latest clients must use the ``Manifold`` name.
>* Renamed ``irc.client.Connection.irclibobj`` property to ``manifold``. The
>  property is still exposed as ``irclibobj`` for compatibility but will be
>  removed in a future version.
>* Removed unused ``irc.client.mask_matches`` function.
>* Removed unused ``irc.client.nick_characters``.
>* Added extra numerics for &#39;whoisaccount&#39; and &#39;cannotknock&#39;.



>### 9.0

>===

>* Issue 46: The ``whois`` command now accepts a single string or iterable for
>  the target.
>* NickMask now returns ``None`` when user, host, or userhost are not present.
>  Previously, an ``IndexError`` was raised.
>  See `Pull Request 26 &lt;https://bitbucket.org/jaraco/irc/pull-request/26&gt;`_
>  for details.



>### 8.9

>===

>Documentation is now published at https://pythonhosted.org/irc.



>### 8.8

>===

>* Issue 35: Removed the mutex during process_once.
>* Issue 37: Deprecated buffer.LineBuffer for Python 3.



>### 8.7

>===

>* Issue 34: Introduced ``buffer.LenientDecodingLineBuffer`` for handling
>  input in a more lenient way, preferring UTF-8 but falling back to latin-1
>  if the content cannot be decoded as UTF-8. To enable it by default for
>  your application, set it as the default decoder::

>    irc.client.ServerConnection.buffer_class = irc.buffer.LenientDecodingLineBuffer



>### 8.6

>===

>* Introduced &#39;Manifold&#39; as an alias for irc.client.IRC. This better name will
>  replace the IRC name in a future version.
>* Introduced the &#39;manifold&#39; property of SimpleIRCClient as an alias for
>  ircobj.
>* Added &#39;manifold_class&#39; property to the client.SimpleIRCClient to allow
>  consumers to provide a customized Manifold.



>### 8.5.4

>=====

>* Issue 32: Add logging around large DCC messages to facilitate
>  troubleshooting.
>* Issue 31: Fix error in connection wrapper for SSL example.



>### 8.5.3

>=====

>* Issue 28: Fix TypeError in version calculation in irc.bot CTCP version.



>### 8.5.2

>=====

>* Updated DCC send and receive scripts (Issue 27).



>### 8.5.1

>=====

>* Fix timestamp support in ``schedule.DelayedCommand`` construction.



>### 8.5

>===

>* ``irc.client.NickMask`` is now a Unicode object on Python 2. Fixes issue
>  reported in pull request 19.
>* Issue 24: Added `DCCConnection.send_bytes` for transmitting binary data.
>  `privmsg` remains to support transmitting text.



>### 8.4

>===

>* Code base now runs natively on Python 2 and Python 3, but requires `six
>  &lt;https://pypi.python.org/pypi/six&gt;`_ to be installed.
>* Issue 25: Rate-limiting has been updated to be finer grained (preventing
>  bursts exceeding the limit following idle periods).



>### 8.3.2

>=====

>* Issue 22: Catch error in bot.py on NAMREPLY when nick is not in any visible
>  channel.



>### 8.3.1

>=====

>* Fixed encoding errors in server on Python 3.



>### 8.3

>===

>* Added a ``set_keepalive`` method to the ServerConnection. Sends a periodic
>  PING message every indicated interval.



>### 8.2

>===

>* Added support for throttling send_raw messages via the ServerConnection
>  object. For example, on any connection object:

>    connection.set_rate_limit(30)

>  That would set the rate limit to 30 Hz (30 per second). Thanks to Jason
>  Kendall for the suggestion and bug fixes.



>### 8.1.2

>=====

>* Fix typo in `client.NickMask`.



>### 8.1.1

>=====

>* Fix typo in bot.py.



>### 8.1

>===

>* Issue 15: Added client support for ISUPPORT directives on server
>  connections. Now, each ServerConnection has a `features` attribute which
>  reflects the features supported by the server. See the docs for
>  `irc.features` for details about the implementation.



>### 8.0.1

>=====

>* Issue 14: Fix errors when handlers of the same priority are added under
>  Python 3. This also fixes the unintended behavior of allowing handlers of
>  the same priority to compare as unequal.



>### 8.0

>===

>This release brings several backward-incompatible changes to the scheduled
>commands.

>* Refactored implementation of schedule classes. No longer do they override
>  the datetime constructor, but now only provide suitable classmethods for
>  construction in various forms.
>* Removed backward-compatible references from irc.client.
>* Remove &#39;arguments&#39; parameter from scheduled commands.

>Clients that reference the schedule classes from irc.client or that construct
>them from the basic constructor will need to update to use the new class
>methods::

>  - DelayedCommand -&gt; DelayedCommand.after
>  - PeriodicCommand -&gt; PeriodicCommand.after

>Arguments may no longer be passed to the &#39;function&#39; callback, but one is
>encouraged instead to use functools.partial to attach parameters to the
>callback. For example::

>    DelayedCommand.after(3, func, (&#39;a&#39;, 10))

>becomes::

>    func = functools.partial(func, &#39;a&#39;, 10)
>    DelayedCommand.after(3, func)

>This mode puts less constraints on the both the handler and the caller. For
>example, a caller can now pass keyword arguments instead::

>    func = functools.partial(func, name=&#39;a&#39;, quantity=10)
>    DelayedCommand.after(3, func)

>Readability, maintainability, and usability go up.



>### 7.1.2

>=====

>* Issue 13: TypeError on Python 3 when constructing PeriodicCommand (and thus
>  execute_every).



>### 7.1.1

>=====

>* Fixed regression created in 7.0 where PeriodicCommandFixedDelay would only
>  cause the first command to be scheduled, but not subsequent ones.



>### 7.1

>===

>* Moved scheduled command classes to irc.schedule module. Kept references for
>  backwards-compatibility.



>### 7.0

>===

>* PeriodicCommand now raises a ValueError if it&#39;s created with a negative or
>  zero delay (meaning all subsequent commands are immediately due). This fixes
>  12.
>* Renamed the parameters to the IRC object. If you use a custom event loop
>  and your code constructs the IRC object with keyword parameters, you will
>  need to update your code to use the new names, so::

>    IRC(fn_to_add_socket=adder, fn_to_remove_socket=remover, fn_to_add_timeout=timeout)

>  becomes::

>    IRC(on_connect=adder, on_disconnect=remover, on_schedule=timeout)

>  If you don&#39;t use a custom event loop or you pass the parameters
>  positionally, no change is necessary.



>### 6.0.1

>=====

>* Fixed some unhandled exceptions in server client connections when the client
>  would disconnect in response to messages sent after select was called.



>### 6.0

>===

>* Moved `LineBuffer` and `DecodingLineBuffer` from client to buffer module.
>  Backward-compatible references have been kept for now.
>* Removed daemon mode and log-to-file options for server.
>* Miscellaneous bugfixes in server.



>### 5.1.1

>=====

>* Fix error in 2to3 conversion on irc/server.py (issue 11).



>### 5.1

>===

>The IRC library is now licensed under the MIT license.

>* Added irc/server.py, based on hircd by Ferry Boender.
>* Added support for CAP command (pull request 10), thanks to Danneh Oaks.



>### 5.0

>===

>Another backward-incompatible change. In irc 5.0, many of the unnecessary
>getter functions have been removed and replaced with simple attributes. This
>change addresses issue 2. In particular:

> - Connection._get_socket() -&gt; Connection.socket (including subclasses)
> - Event.eventtype() -&gt; Event.type
> - Event.source() -&gt; Event.source
> - Event.target() -&gt; Event.target
> - Event.arguments() -&gt; Event.arguments

>The `nm_to_*` functions were removed. Instead, use the NickMask class
>attributes.

>These deprecated function aliases were removed from irc.client::

> - parse_nick_modes -&gt; modes.parse_nick_modes
> - parse_channel_modes -&gt; modes.parse_channel_modes
> - generated_events -&gt; events.generated
> - protocol_events -&gt; events.protocol
> - numeric_events -&gt; events.numeric
> - all_events -&gt; events.all
> - irc_lower -&gt; strings.lower

>Also, the parameter name when constructing an event was renamed from
>`eventtype` to simply `type`.



>### 4.0

>===

>* Removed deprecated arguments to ServerConnection.connect. See notes on the


>### 3.6.1

>=====

>* Filter out disconnected sockets when processing input.



>### 3.6

>===

>* Created two new exceptions in `irc.client`: `MessageTooLong` and
>  `InvalidCharacters`.
>* Use explicit exceptions instead of ValueError when sending data.



>### 3.5

>===

>* SingleServerIRCBot now accepts keyword arguments which are passed through
>  to the `ServerConnection.connect` method. One can use this to use SSL for
>  connections::

>    factory = irc.connection.Factory(wrapper=ssl.wrap_socket)
>    bot = irc.bot.SingleServerIRCBot(..., connect_factory = factory)




>### 3.4.2

>=====

>* Issue 6: Fix AttributeError when legacy parameters are passed to
>  `ServerConnection.connect`.
>* Issue 7: Fix TypeError on `iter(LineBuffer)`.



>### 3.4.1

>=====



>### 3.4

>===

>*Broken Release*



>### 3.3

>===

>* Added `connection` module with a Factory for creating socket connections.
>* Added `connect_factory` parameter to the ServerConnection.

>It&#39;s now possible to create connections with custom SSL parameters or other
>socket wrappers. For example, to create a connection with a custom SSL cert::

>    import ssl
>    import irc.client
>    import irc.connection
>    import functools

>    irc = irc.client.IRC()
>    server = irc.server()
>    wrapper = functools.partial(ssl.wrap_socket, ssl_cert=my_cert())
>    server.connect(connect_factory = irc.connection.Factory(wrapper=wrapper))

>With this release, many of the parameters to `ServerConnection.connect` are
>now deprecated:

>    - localaddress
>    - localport
>    - ssl
>    - ipv6

>Instead, one should pass the appropriate values to a `connection.Factory`
>instance and pass that factory to the .connect method. Backwards-compatibility
>will be maintained for these parameters until the release of irc 4.0.



>### 3.2.3

>=====

>* Restore Python 2.6 compatibility.



>### 3.2.2

>=====

>* Protect from UnicodeDecodeError when decoding data on the wire when data is
>  not properly encoded in ASCII or UTF-8.



>### 3.2.1

>=====

>* Additional branch protected by mutex.



>### 3.2

>===

>* Implemented thread safety via a reentrant lock guarding shared state in IRC
>  objects.



>### 3.1.1

>=====

>* Fix some issues with bytes/unicode on Python 3



>### 3.1

>===

>* Distribute using setuptools rather than paver.
>* Minor tweaks for Python 3 support. Now installs on Python 3.



>### 3.0.1

>=====

>* Added error checking when sending a message - for both message length and
>  embedded carriage returns. Fixes 4.
>* Updated README.



>### 3.0

>===

>* Improved Unicode support. Fixes failing tests and errors lowering Unicode
>  channel names.
>* Issue 3541414 - The ServerConnection and DCCConnection now encode any
>  strings as UTF-8 before transmitting.
>* Issue 3527371 - Updated strings.FoldedCase to support comparison against
>  objects of other types.
>* Shutdown the sockets before closing.

>Applications that are currently encoding unicode as UTF-8 before passing the
>strings to `ServerConnection.send_raw` need to be updated to send Unicode
>or ASCII.



>### 2.0.4

>=====

>This release officially deprecates 2.0.1-2.0.3 in favor of 3.0.

>* Re-release of irc 2.0 (without the changes from 2.0.1-2.0.3) for
>  correct compatibility indication.



>### 2.0

>===

>* DelayedCommands now use the local time for calculating &#39;at&#39; and &#39;due&#39;
>  times. This will be more friendly for simple servers. Servers that expect
>  UTC times should either run in UTC or override DelayedCommand.now to
>  return an appropriate time object for &#39;now&#39;. For example::

>    def startup_bot():
>        irc.client.DelayedCommand.now = irc.client.DelayedCommand.utcnow
>        ...



>### 1.1

>===

>* Added irc.client.PeriodicCommandFixedDelay. Schedule this command
>  to have a function executed at a specific time and then at periodic
>  intervals thereafter.



>### 1.0

>===

>* Removed `irclib` and `ircbot` legacy modules.



>### 0.9

>===

>* Fix file saving using dccreceive.py on Windows. Fixes 2863199.
>* Created NickMask class from nm_to_* functions. Now if a source is
>  a NickMask, one can access the .nick, .host, and .user attributes.
>* Use correct attribute for saved connect args. Fixes 3523057.



>### 0.8

>===

>* Added ServerConnection.reconnect method. Fixes 3515580.



>### 0.7.1

>=====

>* Added missing events. Fixes 3515578.



>### 0.7

>===

>* Moved functionality from irclib module to irc.client module.
>* Moved functionality from ircbot module to irc.bot module.
>* Retained irclib and ircbot modules for backward-compatibility. These
>  will be removed in 1.0.
>* Renamed project to simply &#39;irc&#39;.

>To support the new module structure, simply replace references to the irclib
>module with irc.client and ircbot module with irc.bot. This project will
>support that interface through all versions of irc 1.x, so if you&#39;ve made
>these changes, you can safely depend on `irc &gt;= 0.7, &lt;2.0dev`.



>### 0.6.3

>=====

>* Fixed failing test where DelayedCommands weren&#39;t being sorted properly.
>  DelayedCommand a now subclass of the DateTime object, where the command&#39;s
>  due time is the datetime. Fixed issue 3518508.



>### 0.6.2

>=====

>* Fixed incorrect usage of Connection.execute_delayed (again).



>### 0.6.0

>=====

>* Minimum Python requirement is now Python 2.6. Python 2.3 and earlier should use 0.5.0
>  or earlier.
>* Removed incorrect usage of Connection.execute_delayed. Added Connection.execute_every.
>  Fixed issue 3516241.
>* Use new-style classes.






*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-04-19T18:31:27Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,7bbe966f6ea13481855a9b8c1bfc71878b59920d,Pin irc to latest version 15.1.1
12,https://api.github.com/repos/mozilla/addons-robot/pulls/18,18,Pin requests to latest version 2.13.0,"
requests is not pinned to a specific version.

I'm pinning it to the latest version **2.13.0** for now.


These links might come in handy:  <a href=""http://pypi.python.org/pypi/requests"">PyPI</a> | <a href=""https://pyup.io/changelogs/requests/"">Changelog</a> | <a href=""http://python-requests.org"">Homepage</a> 



### Changelog
> 
>### 2.13.0

>+++++++++++++++++++

>**Features**

>- Only load the ``idna`` library when we&#39;ve determined we need it. This will
>  save some memory for users.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.20.
>- Updated bundled idna to 2.2.



>### 2.12.5

>+++++++++++++++++++

>**Bugfixes**

>- Fixed an issue with JSON encoding detection, specifically detecting
>  big-endian UTF-32 with BOM.



>### 2.12.4

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from 2.12.2 where non-string types were rejected in the
>  basic auth parameters. While support for this behaviour has been readded,
>  the behaviour is deprecated and will be removed in the future.



>### 2.12.3

>+++++++++++++++++++

>**Bugfixes**

>- Fixed regression from v2.12.1 for URLs with schemes that begin with &quot;http&quot;.
>  These URLs have historically been processed as though they were HTTP-schemed
>  URLs, and so have had parameters added. This was removed in v2.12.2 in an
>  overzealous attempt to resolve problems with IDNA-encoding those URLs. This
>  change was reverted: the other fixes for IDNA-encoding have been judged to
>  be sufficient to return to the behaviour Requests had before v2.12.0.



>### 2.12.2

>+++++++++++++++++++

>**Bugfixes**

>- Fixed several issues with IDNA-encoding URLs that are technically invalid but
>  which are widely accepted. Requests will now attempt to IDNA-encode a URL if
>  it can but, if it fails, and the host contains only ASCII characters, it will
>  be passed through optimistically. This will allow users to opt-in to using
>  IDNA2003 themselves if they want to, and will also allow technically invalid
>  but still common hostnames.
>- Fixed an issue where URLs with leading whitespace would raise
>  ``InvalidSchema`` errors.
>- Fixed an issue where some URLs without the HTTP or HTTPS schemes would still
>  have HTTP URL preparation applied to them.
>- Fixed an issue where Unicode strings could not be used in basic auth.
>- Fixed an issue encountered by some Requests plugins where constructing a
>  Response object would cause ``Response.content`` to raise an
>  ``AttributeError``.



>### 2.12.1

>+++++++++++++++++++

>**Bugfixes**

>- Updated setuptools &#39;security&#39; extra for the new PyOpenSSL backend in urllib3.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.1.



>### 2.12.0

>+++++++++++++++++++

>**Improvements**

>- Updated support for internationalized domain names from IDNA2003 to IDNA2008.
>  This updated support is required for several forms of IDNs and is mandatory
>  for .de domains.
>- Much improved heuristics for guessing content lengths: Requests will no
>  longer read an entire ``StringIO`` into memory.
>- Much improved logic for recalculating ``Content-Length`` headers for
>  ``PreparedRequest`` objects.
>- Improved tolerance for file-like objects that have no ``tell`` method but
>  do have a ``seek`` method.
>- Anything that is a subclass of ``Mapping`` is now treated like a dictionary
>  by the ``data=`` keyword argument.
>- Requests now tolerates empty passwords in proxy credentials, rather than
>  stripping the credentials.
>- If a request is made with a file-like object as the body and that request is
>  redirected with a 307 or 308 status code, Requests will now attempt to
>  rewind the body object so it can be replayed.

>**Bugfixes**

>- When calling ``response.close``, the call to ``close`` will be propagated
>  through to non-urllib3 backends.
>- Fixed issue where the ``ALL_PROXY`` environment variable would be preferred
>  over scheme-specific variables like ``HTTP_PROXY``.
>- Fixed issue where non-UTF8 reason phrases got severely mangled by falling
>  back to decoding using ISO 8859-1 instead.
>- Fixed a bug where Requests would not correctly correlate cookies set when
>  using custom Host headers if those Host headers did not use the native
>  string type for the platform.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.19.
>- Updated bundled certifi certs to 2016.09.26.



>### 2.11.1

>+++++++++++++++++++

>**Bugfixes**

>- Fixed a bug when using ``iter_content`` with ``decode_unicode=True`` for
>  streamed bodies would raise ``AttributeError``. This bug was introduced in
>  2.11.
>- Strip Content-Type and Transfer-Encoding headers from the header block when
>  following a redirect that transforms the verb from POST/PUT to GET.



>### 2.11.0

>+++++++++++++++++++

>**Improvements**

>- Added support for the ``ALL_PROXY`` environment variable.
>- Reject header values that contain leading whitespace or newline characters to
>  reduce risk of header smuggling.

>**Bugfixes**

>- Fixed occasional ``TypeError`` when attempting to decode a JSON response that
>  occurred in an error case. Now correctly returns a ``ValueError``.
>- Requests would incorrectly ignore a non-CIDR IP address in the ``NO_PROXY``
>  environment variables: Requests now treats it as a specific IP.
>- Fixed a bug when sending JSON data that could cause us to encounter obscure
>  OpenSSL errors in certain network conditions (yes, really).
>- Added type checks to ensure that ``iter_content`` only accepts integers and
>  ``None`` for chunk sizes.
>- Fixed issue where responses whose body had not been fully consumed would have
>  the underlying connection closed but not returned to the connection pool,
>  which could cause Requests to hang in situations where the ``HTTPAdapter``
>  had been configured to use a blocking connection pool.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.16.
>- Some previous releases accidentally accepted non-strings as acceptable header values. This release does not.



>### 2.10.0

>+++++++++++++++++++

>**New Features**

>- SOCKS Proxy Support! (requires PySocks; ``$ pip install requests[socks]``)

>**Miscellaneous**

>- Updated bundled urllib3 to 1.15.1.



>### 2.9.2

>++++++++++++++++++

>**Improvements**

>- Change built-in CaseInsensitiveDict (used for headers) to use OrderedDict
>  as its underlying datastore.

>**Bugfixes**

>- Don&#39;t use redirect_cache if allow_redirects=False
>- When passed objects that throw exceptions from ``tell()``, send them via
>  chunked transfer encoding instead of failing.
>- Raise a ProxyError for proxy related connection issues.



>### 2.9.1

>++++++++++++++++++

>**Bugfixes**

>- Resolve regression introduced in 2.9.0 that made it impossible to send binary
>  strings as bodies in Python 3.
>- Fixed errors when calculating cookie expiration dates in certain locales.

>**Miscellaneous**

>- Updated bundled urllib3 to 1.13.1.



>### 2.9.0

>++++++++++++++++++

>**Minor Improvements** (Backwards compatible)

>- The ``verify`` keyword argument now supports being passed a path to a
>  directory of CA certificates, not just a single-file bundle.
>- Warnings are now emitted when sending files opened in text mode.
>- Added the 511 Network Authentication Required status code to the status code
>  registry.

>**Bugfixes**

>- For file-like objects that are not seeked to the very beginning, we now
>  send the content length for the number of bytes we will actually read, rather
>  than the total size of the file, allowing partial file uploads.
>- When uploading file-like objects, if they are empty or have no obvious
>  content length we set ``Transfer-Encoding: chunked`` rather than
>  ``Content-Length: 0``.
>- We correctly receive the response in buffered mode when uploading chunked
>  bodies.
>- We now handle being passed a query string as a bytestring on Python 3, by
>  decoding it as UTF-8.
>- Sessions are now closed in all cases (exceptional and not) when using the
>  functional API rather than leaking and waiting for the garbage collector to
>  clean them up.
>- Correctly handle digest auth headers with a malformed ``qop`` directive that
>  contains no token, by treating it the same as if no ``qop`` directive was
>  provided at all.
>- Minor performance improvements when removing specific cookies by name.

>**Miscellaneous**

>- Updated urllib3 to 1.13.



>### 2.8.1

>++++++++++++++++++

>**Bugfixes**

>- Update certificate bundle to match ``certifi`` 2015.9.6.2&#39;s weak certificate
>  bundle.
>- Fix a bug in 2.8.0 where requests would raise ``ConnectTimeout`` instead of
>  ``ConnectionError``
>- When using the PreparedRequest flow, requests will now correctly respect the
>  ``json`` parameter. Broken in 2.8.0.
>- When using the PreparedRequest flow, requests will now correctly handle a
>  Unicode-string method name on Python 2. Broken in 2.8.0.



>### 2.8.0

>++++++++++++++++++

>**Minor Improvements** (Backwards Compatible)

>- Requests now supports per-host proxies. This allows the ``proxies``
>  dictionary to have entries of the form
>  ``{&#39;&lt;scheme&gt;://&lt;hostname&gt;&#39;: &#39;&lt;proxy&gt;&#39;}``. Host-specific proxies will be used
>  in preference to the previously-supported scheme-specific ones, but the
>  previous syntax will continue to work.
>- ``Response.raise_for_status`` now prints the URL that failed as part of the
>  exception message.
>- ``requests.utils.get_netrc_auth`` now takes an ``raise_errors`` kwarg,
>  defaulting to ``False``. When ``True``, errors parsing ``.netrc`` files cause
>  exceptions to be thrown.
>- Change to bundled projects import logic to make it easier to unbundle
>  requests downstream.
>- Changed the default User-Agent string to avoid leaking data on Linux: now
>  contains only the requests version.

>**Bugfixes**

>- The ``json`` parameter to ``post()`` and friends will now only be used if
>  neither ``data`` nor ``files`` are present, consistent with the
>  documentation.
>- We now ignore empty fields in the ``NO_PROXY`` environment variable.
>- Fixed problem where ``httplib.BadStatusLine`` would get raised if combining
>  ``stream=True`` with ``contextlib.closing``.
>- Prevented bugs where we would attempt to return the same connection back to
>  the connection pool twice when sending a Chunked body.
>- Miscellaneous minor internal changes.
>- Digest Auth support is now thread safe.

>**Updates**

>- Updated urllib3 to 1.12.



>### 2.7.0

>++++++++++++++++++

>This is the first release that follows our new release process. For more, see
>`our documentation
>&lt;http://docs.python-requests.org/en/latest/community/release-process/&gt;`_.

>**Bugfixes**

>- Updated urllib3 to 1.10.4, resolving several bugs involving chunked transfer
>  encoding and response framing.



>### 2.6.2

>++++++++++++++++++

>**Bugfixes**

>- Fix regression where compressed data that was sent as chunked data was not
>  properly decompressed. (2561)



>### 2.6.1

>++++++++++++++++++

>**Bugfixes**

>- Remove VendorAlias import machinery introduced in v2.5.2.

>- Simplify the PreparedRequest.prepare API: We no longer require the user to
>  pass an empty list to the hooks keyword argument. (c.f. 2552)

>- Resolve redirects now receives and forwards all of the original arguments to
>  the adapter. (2503)

>- Handle UnicodeDecodeErrors when trying to deal with a unicode URL that
>  cannot be encoded in ASCII. (2540)

>- Populate the parsed path of the URI field when performing Digest
>  Authentication. (2426)

>- Copy a PreparedRequest&#39;s CookieJar more reliably when it is not an instance
>  of RequestsCookieJar. (2527)



>### 2.6.0

>++++++++++++++++++

>**Bugfixes**

>- CVE-2015-2296: Fix handling of cookies on redirect. Previously a cookie
>  without a host value set would use the hostname for the redirected URL
>  exposing requests users to session fixation attacks and potentially cookie
>  stealing. This was disclosed privately by Matthew Daley of
>  `BugFuzz &lt;https://bugfuzz.com&gt;`_. This affects all versions of requests from
>  v2.1.0 to v2.5.3 (inclusive on both ends).

>- Fix error when requests is an ``install_requires`` dependency and ``python
>  setup.py test`` is run. (2462)

>- Fix error when urllib3 is unbundled and requests continues to use the
>  vendored import location.

>- Include fixes to ``urllib3``&#39;s header handling.

>- Requests&#39; handling of unvendored dependencies is now more restrictive.

>**Features and Improvements**

>- Support bytearrays when passed as parameters in the ``files`` argument.
>  (2468)

>- Avoid data duplication when creating a request with ``str``, ``bytes``, or
>  ``bytearray`` input to the ``files`` argument.



>### 2.5.3

>++++++++++++++++++

>**Bugfixes**

>- Revert changes to our vendored certificate bundle. For more context see
>  (2455, 2456, and http://bugs.python.org/issue23476)



>### 2.5.2

>++++++++++++++++++

>**Features and Improvements**

>- Add sha256 fingerprint support. (`shazow/urllib3540`_)

>- Improve the performance of headers. (`shazow/urllib3544`_)

>**Bugfixes**

>- Copy pip&#39;s import machinery. When downstream redistributors remove
>  requests.packages.urllib3 the import machinery will continue to let those
>  same symbols work. Example usage in requests&#39; documentation and 3rd-party
>  libraries relying on the vendored copies of urllib3 will work without having
>  to fallback to the system urllib3.

>- Attempt to quote parts of the URL on redirect if unquoting and then quoting
>  fails. (2356)

>- Fix filename type check for multipart form-data uploads. (2411)

>- Properly handle the case where a server issuing digest authentication
>  challenges provides both auth and auth-int qop-values. (2408)

>- Fix a socket leak. (`shazow/urllib3549`_)

>- Fix multiple ``Set-Cookie`` headers properly. (`shazow/urllib3534`_)

>- Disable the built-in hostname verification. (`shazow/urllib3526`_)

>- Fix the behaviour of decoding an exhausted stream. (`shazow/urllib3535`_)

>**Security**

>- Pulled in an updated ``cacert.pem``.

>- Drop RC4 from the default cipher list. (`shazow/urllib3551`_)

>.. _shazow/urllib3551: https://github.com/shazow/urllib3/pull/551
>.. _shazow/urllib3549: https://github.com/shazow/urllib3/pull/549
>.. _shazow/urllib3544: https://github.com/shazow/urllib3/pull/544
>.. _shazow/urllib3540: https://github.com/shazow/urllib3/pull/540
>.. _shazow/urllib3535: https://github.com/shazow/urllib3/pull/535
>.. _shazow/urllib3534: https://github.com/shazow/urllib3/pull/534
>.. _shazow/urllib3526: https://github.com/shazow/urllib3/pull/526



>### 2.5.1

>++++++++++++++++++

>**Behavioural Changes**

>- Only catch HTTPErrors in raise_for_status (2382)

>**Bugfixes**

>- Handle LocationParseError from urllib3 (2344)
>- Handle file-like object filenames that are not strings (2379)
>- Unbreak HTTPDigestAuth handler. Allow new nonces to be negotiated (2389)



>### 2.5.0

>++++++++++++++++++

>**Improvements**

>- Allow usage of urllib3&#39;s Retry object with HTTPAdapters (2216)
>- The ``iter_lines`` method on a response now accepts a delimiter with which
>  to split the content (2295)

>**Behavioural Changes**

>- Add deprecation warnings to functions in requests.utils that will be removed
>  in 3.0 (2309)
>- Sessions used by the functional API are always closed (2326)
>- Restrict requests to HTTP/1.1 and HTTP/1.0 (stop accepting HTTP/0.9) (2323)

>**Bugfixes**

>- Only parse the URL once (2353)
>- Allow Content-Length header to always be overridden (2332)
>- Properly handle files in HTTPDigestAuth (2333)
>- Cap redirect_cache size to prevent memory abuse (2299)
>- Fix HTTPDigestAuth handling of redirects after authenticating successfully
>  (2253)
>- Fix crash with custom method parameter to Session.request (2317)
>- Fix how Link headers are parsed using the regular expression library (2271)

>**Documentation**

>- Add more references for interlinking (2348)
>- Update CSS for theme (2290)
>- Update width of buttons and sidebar (2289)
>- Replace references of Gittip with Gratipay (2282)
>- Add link to changelog in sidebar (2273)



>### 2.4.3

>++++++++++++++++++

>**Bugfixes**

>- Unicode URL improvements for Python 2.
>- Re-order JSON param for backwards compat.
>- Automatically defrag authentication schemes from host/pass URIs. (`2249 &lt;https://github.com/kennethreitz/requests/issues/2249&gt;`_)




>### 2.4.2

>++++++++++++++++++

>**Improvements**

>- FINALLY! Add json parameter for uploads! (`2258 &lt;https://github.com/kennethreitz/requests/pull/2258&gt;`_)
>- Support for bytestring URLs on Python 3.x (`2238 &lt;https://github.com/kennethreitz/requests/pull/2238&gt;`_)

>**Bugfixes**

>- Avoid getting stuck in a loop (`2244 &lt;https://github.com/kennethreitz/requests/pull/2244&gt;`_)
>- Multiple calls to iter* fail with unhelpful error. (`2240 &lt;https://github.com/kennethreitz/requests/issues/2240&gt;`_, `2241 &lt;https://github.com/kennethreitz/requests/issues/2241&gt;`_)

>**Documentation**

>- Correct redirection introduction (`2245 &lt;https://github.com/kennethreitz/requests/pull/2245/&gt;`_)
>- Added example of how to send multiple files in one request. (`2227 &lt;https://github.com/kennethreitz/requests/pull/2227/&gt;`_)
>- Clarify how to pass a custom set of CAs (`2248 &lt;https://github.com/kennethreitz/requests/pull/2248/&gt;`_)





>### 2.4.1

>++++++++++++++++++

>- Now has a &quot;security&quot; package extras set, ``$ pip install requests[security]``
>- Requests will now use Certifi if it is available.
>- Capture and re-raise urllib3 ProtocolError
>- Bugfix for responses that attempt to redirect to themselves forever (wtf?).




>### 2.4.0

>++++++++++++++++++

>**Behavioral Changes**

>- ``Connection: keep-alive`` header is now sent automatically.

>**Improvements**

>- Support for connect timeouts! Timeout now accepts a tuple (connect, read) which is used to set individual connect and read timeouts.
>- Allow copying of PreparedRequests without headers/cookies.
>- Updated bundled urllib3 version.
>- Refactored settings loading from environment -- new `Session.merge_environment_settings`.
>- Handle socket errors in iter_content.




>### 2.3.0

>++++++++++++++++++

>**API Changes**

>- New ``Response`` property ``is_redirect``, which is true when the
>  library could have processed this response as a redirection (whether
>  or not it actually did).
>- The ``timeout`` parameter now affects requests with both ``stream=True`` and
>  ``stream=False`` equally.
>- The change in v2.0.0 to mandate explicit proxy schemes has been reverted.
>  Proxy schemes now default to ``http://``.
>- The ``CaseInsensitiveDict`` used for HTTP headers now behaves like a normal
>  dictionary when references as string or viewed in the interpreter.

>**Bugfixes**

>- No longer expose Authorization or Proxy-Authorization headers on redirect.
>  Fix CVE-2014-1829 and CVE-2014-1830 respectively.
>- Authorization is re-evaluated each redirect.
>- On redirect, pass url as native strings.
>- Fall-back to autodetected encoding for JSON when Unicode detection fails.
>- Headers set to ``None`` on the ``Session`` are now correctly not sent.
>- Correctly honor ``decode_unicode`` even if it wasn&#39;t used earlier in the same
>  response.
>- Stop advertising ``compress`` as a supported Content-Encoding.
>- The ``Response.history`` parameter is now always a list.
>- Many, many ``urllib3`` bugfixes.



>### 2.2.1

>++++++++++++++++++

>**Bugfixes**

>- Fixes incorrect parsing of proxy credentials that contain a literal or encoded &#39;&#39; character.
>- Assorted urllib3 fixes.



>### 2.2.0

>++++++++++++++++++

>**API Changes**

>- New exception: ``ContentDecodingError``. Raised instead of ``urllib3``
>  ``DecodeError`` exceptions.

>**Bugfixes**

>- Avoid many many exceptions from the buggy implementation of ``proxy_bypass`` on OS X in Python 2.6.
>- Avoid crashing when attempting to get authentication credentials from ~/.netrc when running as a user without a home directory.
>- Use the correct pool size for pools of connections to proxies.
>- Fix iteration of ``CookieJar`` objects.
>- Ensure that cookies are persisted over redirect.
>- Switch back to using chardet, since it has merged with charade.



>### 2.1.0

>++++++++++++++++++

>- Updated CA Bundle, of course.
>- Cookies set on individual Requests through a ``Session`` (e.g. via ``Session.get()``) are no longer persisted to the ``Session``.
>- Clean up connections when we hit problems during chunked upload, rather than leaking them.
>- Return connections to the pool when a chunked upload is successful, rather than leaking it.
>- Match the HTTPbis recommendation for HTTP 301 redirects.
>- Prevent hanging when using streaming uploads and Digest Auth when a 401 is received.
>- Values of headers set by Requests are now always the native string type.
>- Fix previously broken SNI support.
>- Fix accessing HTTP proxies using proxy authentication.
>- Unencode HTTP Basic usernames and passwords extracted from URLs.
>- Support for IP address ranges for no_proxy environment variable
>- Parse headers correctly when users override the default ``Host:`` header.
>- Avoid munging the URL in case of case-sensitive servers.
>- Looser URL handling for non-HTTP/HTTPS urls.
>- Accept unicode methods in Python 2.6 and 2.7.
>- More resilient cookie handling.
>- Make ``Response`` objects pickleable.
>- Actually added MD5-sess to Digest Auth instead of pretending to like last time.
>- Updated internal urllib3.
>- Fixed Lukasa&#39;s lack of taste.



>### 2.0.1

>++++++++++++++++++

>- Updated included CA Bundle with new mistrusts and automated process for the future
>- Added MD5-sess to Digest Auth
>- Accept per-file headers in multipart file POST messages.
>- Fixed: Don&#39;t send the full URL on CONNECT messages.
>- Fixed: Correctly lowercase a redirect scheme.
>- Fixed: Cookies not persisted when set via functional API.
>- Fixed: Translate urllib3 ProxyError into a requests ProxyError derived from ConnectionError.
>- Updated internal urllib3 and chardet.



>### 2.0.0

>++++++++++++++++++

>**API Changes:**

>- Keys in the Headers dictionary are now native strings on all Python versions,
>  i.e. bytestrings on Python 2, unicode on Python 3.
>- Proxy URLs now *must* have an explicit scheme. A ``MissingSchema`` exception
>  will be raised if they don&#39;t.
>- Timeouts now apply to read time if ``Stream=False``.
>- ``RequestException`` is now a subclass of ``IOError``, not ``RuntimeError``.
>- Added new method to ``PreparedRequest`` objects: ``PreparedRequest.copy()``.
>- Added new method to ``Session`` objects: ``Session.update_request()``. This
>  method updates a ``Request`` object with the data (e.g. cookies) stored on
>  the ``Session``.
>- Added new method to ``Session`` objects: ``Session.prepare_request()``. This
>  method updates and prepares a ``Request`` object, and returns the
>  corresponding ``PreparedRequest`` object.
>- Added new method to ``HTTPAdapter`` objects: ``HTTPAdapter.proxy_headers()``.
>  This should not be called directly, but improves the subclass interface.
>- ``httplib.IncompleteRead`` exceptions caused by incorrect chunked encoding
>  will now raise a Requests ``ChunkedEncodingError`` instead.
>- Invalid percent-escape sequences now cause a Requests ``InvalidURL``
>  exception to be raised.
>- HTTP 208 no longer uses reason phrase ``&quot;im_used&quot;``. Correctly uses
>  ``&quot;already_reported&quot;``.
>- HTTP 226 reason added (``&quot;im_used&quot;``).

>**Bugfixes:**

>- Vastly improved proxy support, including the CONNECT verb. Special thanks to
>  the many contributors who worked towards this improvement.
>- Cookies are now properly managed when 401 authentication responses are
>  received.
>- Chunked encoding fixes.
>- Support for mixed case schemes.
>- Better handling of streaming downloads.
>- Retrieve environment proxies from more locations.
>- Minor cookies fixes.
>- Improved redirect behaviour.
>- Improved streaming behaviour, particularly for compressed data.
>- Miscellaneous small Python 3 text encoding bugs.
>- ``.netrc`` no longer overrides explicit auth.
>- Cookies set by hooks are now correctly persisted on Sessions.
>- Fix problem with cookies that specify port numbers in their host field.
>- ``BytesIO`` can be used to perform streaming uploads.
>- More generous parsing of the ``no_proxy`` environment variable.
>- Non-string objects can be passed in data values alongside files.



>### 1.2.3

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.2

>++++++++++++++++++

>- Simple packaging fix




>### 1.2.1

>++++++++++++++++++

>- 301 and 302 redirects now change the verb to GET for all verbs, not just
>  POST, improving browser compatibility.
>- Python 3.3.2 compatibility
>- Always percent-encode location headers
>- Fix connection adapter matching to be most-specific first
>- new argument to the default connection adapter for passing a block argument
>- prevent a KeyError when there&#39;s no link headers



>### 1.2.0

>++++++++++++++++++

>- Fixed cookies on sessions and on requests
>- Significantly change how hooks are dispatched - hooks now receive all the
>  arguments specified by the user when making a request so hooks can make a
>  secondary request with the same parameters. This is especially necessary for
>  authentication handler authors
>- certifi support was removed
>- Fixed bug where using OAuth 1 with body ``signature_type`` sent no data
>- Major proxy work thanks to Lukasa including parsing of proxy authentication
>  from the proxy url
>- Fix DigestAuth handling too many 401s
>- Update vendored urllib3 to include SSL bug fixes
>- Allow keyword arguments to be passed to ``json.loads()`` via the
>  ``Response.json()`` method
>- Don&#39;t send ``Content-Length`` header by default on ``GET`` or ``HEAD``
>  requests
>- Add ``elapsed`` attribute to ``Response`` objects to time how long a request
>  took.
>- Fix ``RequestsCookieJar``
>- Sessions and Adapters are now picklable, i.e., can be used with the
>  multiprocessing library
>- Update charade to version 1.0.3

>The change in how hooks are dispatched will likely cause a great deal of
>issues.



>### 1.1.0

>++++++++++++++++++

>- CHUNKED REQUESTS
>- Support for iterable response bodies
>- Assume servers persist redirect params
>- Allow explicit content types to be specified for file data
>- Make merge_kwargs case-insensitive when looking up keys



>### 1.0.3

>++++++++++++++++++

>- Fix file upload encoding bug
>- Fix cookie behavior



>### 1.0.2

>++++++++++++++++++

>- Proxy fix for HTTPAdapter.



>### 1.0.1

>++++++++++++++++++

>- Cert verification exception bug.
>- Proxy fix for HTTPAdapter.



>### 1.0.0

>++++++++++++++++++

>- Massive Refactor and Simplification
>- Switch to Apache 2.0 license
>- Swappable Connection Adapters
>- Mountable Connection Adapters
>- Mutable ProcessedRequest chain
>- /s/prefetch/stream
>- Removal of all configuration
>- Standard library logging
>- Make Response.json() callable, not property.
>- Usage of new charade project, which provides python 2 and 3 simultaneous chardet.
>- Removal of all hooks except &#39;response&#39;
>- Removal of all authentication helpers (OAuth, Kerberos)

>This is not a backwards compatible change.



>### 0.14.2

>+++++++++++++++++++

>- Improved mime-compatible JSON handling
>- Proxy fixes
>- Path hack fixes
>- Case-Insensitive Content-Encoding headers
>- Support for CJK parameters in form posts




>### 0.14.1

>+++++++++++++++++++

>- Python 3.3 Compatibility
>- Simply default accept-encoding
>- Bugfixes




>### 0.14.0

>++++++++++++++++++++

>- No more iter_content errors if already downloaded.



>### 0.13.9

>+++++++++++++++++++

>- Fix for OAuth + POSTs
>- Remove exception eating from dispatch_hook
>- General bugfixes



>### 0.13.8

>+++++++++++++++++++

>- Incredible Link header support :)



>### 0.13.7

>+++++++++++++++++++

>- Support for (key, value) lists everywhere.
>- Digest Authentication improvements.
>- Ensure proxy exclusions work properly.
>- Clearer UnicodeError exceptions.
>- Automatic casting of URLs to strings (fURL and such)
>- Bugfixes.



>### 0.13.6

>+++++++++++++++++++

>- Long awaited fix for hanging connections!



>### 0.13.5

>+++++++++++++++++++

>- Packaging fix



>### 0.13.4

>+++++++++++++++++++

>- GSSAPI/Kerberos authentication!
>- App Engine 2.7 Fixes!
>- Fix leaking connections (from urllib3 update)
>- OAuthlib path hack fix
>- OAuthlib URL parameters fix.



>### 0.13.3

>+++++++++++++++++++

>- Use simplejson if available.
>- Do not hide SSLErrors behind Timeouts.
>- Fixed param handling with urls containing fragments.
>- Significantly improved information in User Agent.
>- client certificates are ignored when verify=False



>### 0.13.2

>+++++++++++++++++++

>- Zero dependencies (once again)!
>- New: Response.reason
>- Sign querystring parameters in OAuth 1.0
>- Client certificates no longer ignored when verify=False
>- Add openSUSE certificate support



>### 0.13.1

>+++++++++++++++++++

>- Allow passing a file or file-like object as data.
>- Allow hooks to return responses that indicate errors.
>- Fix Response.text and Response.json for body-less responses.



>### 0.13.0

>+++++++++++++++++++

>- Removal of Requests.async in favor of `grequests &lt;https://github.com/kennethreitz/grequests&gt;`_
>- Allow disabling of cookie persistence.
>- New implementation of safe_mode
>- cookies.get now supports default argument
>- Session cookies not saved when Session.request is called with return_response=False
>- Env: no_proxy support.
>- RequestsCookieJar improvements.
>- Various bug fixes.



>### 0.12.1

>+++++++++++++++++++

>- New ``Response.json`` property.
>- Ability to add string file uploads.
>- Fix out-of-range issue with iter_lines.
>- Fix iter_content default size.
>- Fix POST redirects containing files.



>### 0.12.0

>+++++++++++++++++++

>- EXPERIMENTAL OAUTH SUPPORT!
>- Proper CookieJar-backed cookies interface with awesome dict-like interface.
>- Speed fix for non-iterated content chunks.
>- Move ``pre_request`` to a more usable place.
>- New ``pre_send`` hook.
>- Lazily encode data, params, files.
>- Load system Certificate Bundle if ``certify`` isn&#39;t available.
>- Cleanups, fixes.



>### 0.11.2

>+++++++++++++++++++

>- Attempt to use the OS&#39;s certificate bundle if ``certifi`` isn&#39;t available.
>- Infinite digest auth redirect fix.
>- Multi-part file upload improvements.
>- Fix decoding of invalid %encodings in URLs.
>- If there is no content in a response don&#39;t throw an error the second time that content is attempted to be read.
>- Upload data on redirects.



>### 0.11.1

>+++++++++++++++++++

>* POST redirects now break RFC to do what browsers do: Follow up with a GET.
>* New ``strict_mode`` configuration to disable new redirect behavior.




>### 0.11.0

>+++++++++++++++++++

>* Private SSL Certificate support
>* Remove select.poll from Gevent monkeypatching
>* Remove redundant generator for chunked transfer encoding
>* Fix: Response.ok raises Timeout Exception in safe_mode



>### 0.10.8

>+++++++++++++++++++

>* Generate chunked ValueError fix
>* Proxy configuration by environment variables
>* Simplification of iter_lines.
>* New `trust_env` configuration for disabling system/environment hints.
>* Suppress cookie errors.



>### 0.10.7

>+++++++++++++++++++

>* `encode_uri` = False



>### 0.10.6

>+++++++++++++++++++

>* Allow &#39;=&#39; in cookies.



>### 0.10.5

>+++++++++++++++++++

>* Response body with 0 content-length fix.
>* New async.imap.
>* Don&#39;t fail on netrc.




>### 0.10.4

>+++++++++++++++++++

>* Honor netrc.



>### 0.10.3

>+++++++++++++++++++

>* HEAD requests don&#39;t follow redirects anymore.
>* raise_for_status() doesn&#39;t raise for 3xx anymore.
>* Make Session objects picklable.
>* ValueError for invalid schema URLs.



>### 0.10.2

>+++++++++++++++++++

>* Vastly improved URL quoting.
>* Additional allowed cookie key values.
>* Attempted fix for &quot;Too many open files&quot; Error
>* Replace unicode errors on first pass, no need for second pass.
>* Append &#39;/&#39; to bare-domain urls before query insertion.
>* Exceptions now inherit from RuntimeError.
>* Binary uploads + auth fix.
>* Bugfixes.




>### 0.10.1

>+++++++++++++++++++

>* PYTHON 3 SUPPORT!
>* Dropped 2.5 Support. (*Backwards Incompatible*)



>### 0.10.0

>+++++++++++++++++++

>* ``Response.content`` is now bytes-only. (*Backwards Incompatible*)
>* New ``Response.text`` is unicode-only.
>* If no ``Response.encoding`` is specified and ``chardet`` is available, ``Response.text`` will guess an encoding.
>* Default to ISO-8859-1 (Western) encoding for &quot;text&quot; subtypes.
>* Removal of `decode_unicode`. (*Backwards Incompatible*)
>* New multiple-hooks system.
>* New ``Response.register_hook`` for registering hooks within the pipeline.
>* ``Response.url`` is now Unicode.



>### 0.9.3

>++++++++++++++++++

>* SSL verify=False bugfix (apparent on windows machines).



>### 0.9.2

>++++++++++++++++++

>* Asynchronous async.send method.
>* Support for proper chunk streams with boundaries.
>* session argument for Session classes.
>* Print entire hook tracebacks, not just exception instance.
>* Fix response.iter_lines from pending next line.
>* Fix but in HTTP-digest auth w/ URI having query strings.
>* Fix in Event Hooks section.
>* Urllib3 update.




>### 0.9.1

>++++++++++++++++++

>* danger_mode for automatic Response.raise_for_status()
>* Response.iter_lines refactor



>### 0.9.0

>++++++++++++++++++

>* verify ssl is default.




>### 0.8.9

>++++++++++++++++++

>* Packaging fix.




>### 0.8.8

>++++++++++++++++++

>* SSL CERT VERIFICATION!
>* Release of Cerifi: Mozilla&#39;s cert list.
>* New &#39;verify&#39; argument for SSL requests.
>* Urllib3 update.



>### 0.8.7

>++++++++++++++++++

>* iter_lines last-line truncation fix
>* Force safe_mode for async requests
>* Handle safe_mode exceptions more consistently
>* Fix iteration on null responses in safe_mode



>### 0.8.6

>++++++++++++++++++

>* Socket timeout fixes.
>* Proxy Authorization support.



>### 0.8.5

>++++++++++++++++++

>* Response.iter_lines!



>### 0.8.4

>++++++++++++++++++

>* Prefetch bugfix.
>* Added license to installed version.



>### 0.8.3

>++++++++++++++++++

>* Converted auth system to use simpler callable objects.
>* New session parameter to API methods.
>* Display full URL while logging.



>### 0.8.2

>++++++++++++++++++

>* New Unicode decoding system, based on over-ridable `Response.encoding`.
>* Proper URL slash-quote handling.
>* Cookies with ``[``, ``]``, and ``_`` allowed.



>### 0.8.1

>++++++++++++++++++

>* URL Request path fix
>* Proxy fix.
>* Timeouts fix.



>### 0.8.0

>++++++++++++++++++

>* Keep-alive support!
>* Complete removal of Urllib2
>* Complete removal of Poster
>* Complete removal of CookieJars
>* New ConnectionError raising
>* Safe_mode for error catching
>* prefetch parameter for request methods
>* OPTION method
>* Async pool size throttling
>* File uploads send real names
>* Vendored in urllib3



>### 0.7.6

>++++++++++++++++++

>* Digest authentication bugfix (attach query data to path)



>### 0.7.5

>++++++++++++++++++

>* Response.content = None if there was an invalid response.
>* Redirection auth handling.



>### 0.7.4

>++++++++++++++++++

>* Session Hooks fix.



>### 0.7.3

>++++++++++++++++++

>* Digest Auth fix.




>### 0.7.2

>++++++++++++++++++

>* PATCH Fix.




>### 0.7.1

>++++++++++++++++++

>* Move away from urllib2 authentication handling.
>* Fully Remove AuthManager, AuthObject, &amp;c.
>* New tuple-based auth system with handler callbacks.




>### 0.7.0

>++++++++++++++++++

>* Sessions are now the primary interface.
>* Deprecated InvalidMethodException.
>* PATCH fix.
>* New config system (no more global settings).




>### 0.6.6

>++++++++++++++++++

>* Session parameter bugfix (params merging).




>### 0.6.5

>++++++++++++++++++

>* Offline (fast) test suite.
>* Session dictionary argument merging.




>### 0.6.4

>++++++++++++++++++

>* Automatic decoding of unicode, based on HTTP Headers.
>* New ``decode_unicode`` setting.
>* Removal of ``r.read/close`` methods.
>* New ``r.faw`` interface for advanced response usage.*
>* Automatic expansion of parameterized headers.




>### 0.6.3

>++++++++++++++++++

>* Beautiful ``requests.async`` module, for making async requests w/ gevent.




>### 0.6.2

>++++++++++++++++++

>* GET/HEAD obeys allow_redirects=False.




>### 0.6.1

>++++++++++++++++++

>* Enhanced status codes experience ``\o/``
>* Set a maximum number of redirects (``settings.max_redirects``)
>* Full Unicode URL support
>* Support for protocol-less redirects.
>* Allow for arbitrary request types.
>* Bugfixes




>### 0.6.0

>++++++++++++++++++

>* New callback hook system
>* New persistent sessions object and context manager
>* Transparent Dict-cookie handling
>* Status code reference object
>* Removed Response.cached
>* Added Response.request
>* All args are kwargs
>* Relative redirect support
>* HTTPError handling improvements
>* Improved https testing
>* Bugfixes




>### 0.5.1

>++++++++++++++++++

>* International Domain Name Support!
>* Access headers without fetching entire body (``read()``)
>* Use lists as dicts for parameters
>* Add Forced Basic Authentication
>* Forced Basic is default authentication type
>* ``python-requests.org`` default User-Agent header
>* CaseInsensitiveDict lower-case caching
>* Response.history bugfix




>### 0.5.0

>++++++++++++++++++

>* PATCH Support
>* Support for Proxies
>* HTTPBin Test Suite
>* Redirect Fixes
>* settings.verbose stream writing
>* Querystrings for all methods
>* URLErrors (Connection Refused, Timeout, Invalid URLs) are treated as explicitly raised
>  ``r.requests.get(&#39;hwe://blah&#39;); r.raise_for_status()``




>### 0.4.1

>++++++++++++++++++

>* Improved Redirection Handling
>* New &#39;allow_redirects&#39; param for following non-GET/HEAD Redirects
>* Settings module refactoring




>### 0.4.0

>++++++++++++++++++

>* Response.history: list of redirected responses
>* Case-Insensitive Header Dictionaries!
>* Unicode URLs




>### 0.3.4

>++++++++++++++++++

>* Urllib2 HTTPAuthentication Recursion fix (Basic/Digest)
>* Internal Refactor
>* Bytes data upload Bugfix





>### 0.3.3

>++++++++++++++++++

>* Request timeouts
>* Unicode url-encoded data
>* Settings context manager and module




>### 0.3.2

>++++++++++++++++++

>* Automatic Decompression of GZip Encoded Content
>* AutoAuth Support for Tupled HTTP Auth




>### 0.3.1

>++++++++++++++++++

>* Cookie Changes
>* Response.read()
>* Poster fix




>### 0.3.0

>++++++++++++++++++

>* Automatic Authentication API Change
>* Smarter Query URL Parameterization
>* Allow file uploads and POST data together
>* New Authentication Manager System
>    - Simpler Basic HTTP System
>    - Supports all build-in urllib2 Auths
>    - Allows for custom Auth Handlers




>### 0.2.4

>++++++++++++++++++

>* Python 2.5 Support
>* PyPy-c v1.4 Support
>* Auto-Authentication tests
>* Improved Request object constructor



>### 0.2.3

>++++++++++++++++++

>* New HTTPHandling Methods
>    - Response.__nonzero__ (false if bad HTTP Status)
>    - Response.ok (True if expected HTTP Status)
>    - Response.error (Logged HTTPError if bad HTTP Status)
>    - Response.raise_for_status() (Raises stored HTTPError)




>### 0.2.2

>++++++++++++++++++

>* Still handles request in the event of an HTTPError. (Issue 2)
>* Eventlet and Gevent Monkeypatch support.
>* Cookie Support (Issue 1)




>### 0.2.1

>++++++++++++++++++

>* Added file attribute to POST and PUT requests for multipart-encode file uploads.
>* Added Request.url attribute for context and redirects




>### 0.2.0

>++++++++++++++++++

>* Birth!




>### 0.0.1

>++++++++++++++++++

>* Frustration
>* Conception







*Got merge conflicts? Close this PR and delete the branch. I'll create a new PR for you.*

Happy merging! 🤖
",pyup-bot,16239342,2017-04-19T18:31:23Z,CONTRIBUTOR,False,1,1,1,Bots for building out everything add-ons.,Python,4b7e9341fe689ced7d55c9b46564565edf65c6e9,Pin requests to latest version 2.13.0
13,https://api.github.com/repos/mozilla/addons-robot/pulls/17,17,Config file for pyup.io,"Hi there and thanks for using pyup.io!

Since you are using a non-default config I've created one for you.

There are a lot of things you can configure on top of that, so make sure to check out the [docs](https://pyup.io/docs/configuration/) to see what I can do for you.",pyup-bot,16239342,2017-03-24T15:19:47Z,CONTRIBUTOR,True,4,0,1,Bots for building out everything add-ons.,Python,a2b0e488346a05eb9c0aad6f5d6a74241b149277,create pyup.io config file
14,https://api.github.com/repos/mozilla/addons-robot/pulls/12,12,Tweak README to fix typo and add pip install,,tofumatt,90871,2016-09-02T21:58:28Z,CONTRIBUTOR,True,6,2,1,Bots for building out everything add-ons.,Python,27cd83a4e2394ed5cf6129d6cc9121b7acaaccae,Tweak README to fix typo and add pip install
15,https://api.github.com/repos/mozilla/addons-robot/pulls/11,11,ignore unmerged pull requests,"- fixes #9
",andymckay,74699,2016-09-02T21:06:33Z,CONTRIBUTOR,True,4,2,1,Bots for building out everything add-ons.,Python,194a577f7059184f1f76f3cccdae9972f4dca020,ignore unmerged pull requests
16,https://api.github.com/repos/mozilla/addons-robot/pulls/8,8,Add in comment when something gets deployed,"Not sure the message is too helpful yet, and i realised our push duty page isn't that helpful either.

It assumes that if its commented already, we don't comment again.

Assumes that the pull request would be somewhere in the last 100 merges, which seems reasonable.
",andymckay,74699,2016-07-26T23:16:47Z,CONTRIBUTOR,True,143,6,4,Bots for building out everything add-ons.,Python,b5abc84545d6f5d5ecff56b30d3a8322ecf253d2,Add in commenter when something gets deployed
17,https://api.github.com/repos/mozilla/addons-robot/pulls/6,6,send some notifications to irc,"- fixes #5
",andymckay,74699,2016-06-09T00:10:18Z,CONTRIBUTOR,True,43,0,4,Bots for building out everything add-ons.,Python,5c3bf086edb137b1423dca7bbc0308c69fcd6a05,send some notifications to irc
18,https://api.github.com/repos/mozilla/addons-robot/pulls/4,4,ignore a few more labels,"- fixes #3
",andymckay,74699,2016-05-25T14:13:06Z,CONTRIBUTOR,True,3,1,1,Bots for building out everything add-ons.,Python,d7876645c5bae4fb02ecb608aa370b9b5f64f274,ignore a few more labels
19,https://api.github.com/repos/mozilla/addons-robot/pulls/1,1,make the message nicer,,andymckay,74699,2016-05-18T19:59:04Z,CONTRIBUTOR,True,3,2,1,Bots for building out everything add-ons.,Python,23e4ee9dbe34a4e933295f2524837e8000b5c209,make the message nicer
