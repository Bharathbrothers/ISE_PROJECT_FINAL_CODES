,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/77,77,chore(version): Add archive repo notes.,"This repo is no longer going to be developed since the code has landed in Firefox.

@mozilla/fxa-devs ?",vbudhram,1295288,2019-04-01T15:06:27Z,CONTRIBUTOR,True,3,0,1,Firefox Account browser web extension shield experiment,JavaScript,17b157ea3558e35a62c68a1ea56463ef61de1b17,chore(version): Add archive repo notes.
1,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/76,76,Add Mozilla Code of Conduct,"Fixes #75


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-30T07:06:37Z,CONTRIBUTOR,True,15,0,1,Firefox Account browser web extension shield experiment,JavaScript,14ce63c0e78e6b975fbb07e1c9bb2875d4c8c44d,"Add Mozilla Code of Conduct file

Fixes #75.

_(Message COC002)_"
2,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/73,73,Fix menu button click area and update test plan,"Fixes #72 
Fixes #71 

This updates our Test plan doc and makes the clickable area the `li` element.",vbudhram,1295288,2019-02-14T16:50:36Z,CONTRIBUTOR,True,10,10,6,Firefox Account browser web extension shield experiment,JavaScript,abdc8f937c5567c473397881ec9d177ef65dee4c,chore(docs): Fix survey links
3,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/70,70,chore(metrics): reenable telemetry for testing,"Spoke with QA and they wanted to enable this flag so that they can verify the telemetry data. I rebuilt the dist and bumped version numbers too.

@mozilla/fxa-devs r?",vbudhram,1295288,2019-02-14T14:52:10Z,CONTRIBUTOR,True,3,3,4,Firefox Account browser web extension shield experiment,JavaScript,580cf8510f4961bcc797703b712fac627b7a01f1,chore(metrics): reenable telemetry for testing
4,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/69,69,chore(version): create update dist,"Forgot to bump the dist and version, @mozilla/fxa-devs r?",vbudhram,1295288,2019-02-13T20:20:14Z,CONTRIBUTOR,True,2,2,3,Firefox Account browser web extension shield experiment,JavaScript,44218156d9bcabab0bedc4b2d291a9185154ede4,chore(version): create update dist
5,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/68,68,fix(metrics): correctly set `sendtab` when opening survey,"Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/66
Fixes #20 

This bug was introduced while supporting different entrypoint for the different variations in phase 2. It now correctly checks url and sets the local storage property if the `Send tab To Device` link was clicked.

I also took this opportunity to add the MLP to source files.

@philbooth r?",vbudhram,1295288,2019-02-13T14:19:50Z,CONTRIBUTOR,True,30,2,7,Firefox Account browser web extension shield experiment,JavaScript,7a4200550ef25cce8dc5bb4758d6d3418c8ec843,fix(metrics): correctly set `sendtab` when opening survey
6,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/68,68,fix(metrics): correctly set `sendtab` when opening survey,"Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/66
Fixes #20 

This bug was introduced while supporting different entrypoint for the different variations in phase 2. It now correctly checks url and sets the local storage property if the `Send tab To Device` link was clicked.

I also took this opportunity to add the MLP to source files.

@philbooth r?",vbudhram,1295288,2019-02-13T14:19:50Z,CONTRIBUTOR,True,30,2,7,Firefox Account browser web extension shield experiment,JavaScript,dcc3910ba58b0c9a2abb676b7e74402014a35f87,fix(legal): add MLP to source files
7,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/63,63,"feat(v2): update control, treatment, treatment variations","Prepping this PR from a conversation earlier with @irrationalagent. For phase 2, we wanted the control and treatment variations to be the same as phase 1. The only difference was to introduce `treatment2` which contained the `Send Tab to Device` link.

~~Holding off on merging this until @irrationalagent and @fireshiba confirm that is what they would like to do for phase 2.~~

Confirmed in slack that we are proceeding with this version. @mozilla/fxa-devs @irrationalagent r?

",vbudhram,1295288,2019-02-06T19:23:32Z,CONTRIBUTOR,True,96,41,6,Firefox Account browser web extension shield experiment,JavaScript,10c9d801115199127f92f7a27b4196228927c5fb,"feat(v2): update control, treatment, treatment variations"
8,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/62,62,feat(v2): emit login state on first run and update docs,"This PR updates our testing doc and fixes an issue with logging logged in state

* Archive phase 1 test plan, testplan.md points to phase 2 docs
* Ran `npm run-script docformat` which replaced `*` with `-`, meh..
* We will now set the `fxaState` on telemetry type start",vbudhram,1295288,2019-02-05T23:35:39Z,CONTRIBUTOR,True,434,161,9,Firefox Account browser web extension shield experiment,JavaScript,782f78f148d1efdbd6cca4d4cf8a23620de5d57c,feat(v2): update docs
9,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/61,61,feat(v2): update extension to V2,"This PR updates the web extension to support V2 requirements. Feature doc: https://docs.google.com/document/d/1fL5Gj7zUsrA-Tykc7DRKaxpDxr7jOxfw654PIkUPyP0/edit#

* Adds a `Sent tab to device` button that links to a blog post
* Adds updated survey links, appends `sendtab=1` if user clicked the link
* Control group is not shown the menu
* Treatment group is shown the menu

I also incorporated fixes to support running in Firefox Nightly, ref https://github.com/mozilla/shield-studies-addon-template/issues/94

Note that the testing and metrics docs will be updated in upcoming PR.",vbudhram,1295288,2019-02-05T16:00:10Z,CONTRIBUTOR,True,112,60,13,Firefox Account browser web extension shield experiment,JavaScript,db847ee5fbbcc36fc1c0b2d18299c31a75a52538,feat(v2): update extension to V2
10,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/59,59,fix(icon): update toolbar icon to match theme,"From https://searchfox.org/mozilla-central/source/layout/svg/SVGContextPaint.cpp#73, the application id must end with `@mozilla.org` to use a context filled avatar icon. Making this change, requires us to update the config values in our test plan.

Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/35

<img width=""188"" alt=""screen shot 2019-01-29 at 11 25 39 am"" src=""https://user-images.githubusercontent.com/1295288/51923281-a0308600-23b8-11e9-978a-d8e45ee4c887.png"">
",vbudhram,1295288,2019-01-29T16:26:07Z,CONTRIBUTOR,True,28,28,6,Firefox Account browser web extension shield experiment,JavaScript,df745cc96893bbbf8df635ec0f8f3377cc123476,fix(icon): update toolbar icon to match theme
11,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/58,58,chore(dist): rebuild dist,,vbudhram,1295288,2019-01-28T17:44:59Z,CONTRIBUTOR,True,1,1,3,Firefox Account browser web extension shield experiment,JavaScript,0534f183f75ea8fe135d1b40b578c8e37a848bc3,chore(dist): rebuild dist
12,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/56,56,fix(control): hide extension when new windows are opened and in control,Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/42,vbudhram,1295288,2019-01-25T20:59:05Z,CONTRIBUTOR,True,18,11,3,Firefox Account browser web extension shield experiment,JavaScript,4a424d7fe7f74724b9f5272da4d4767eda3a55e7,fix(control): hide extension when new windows are opened and in control
13,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/50,50,"chore(deps): qa fixes, updates to deps, docs and dist","This PR has updated testing documentation and updates shield-studies-util to 5.1.1. A surprising result from upgrading shield lib is that I am no longer able to reproduce https://github.com/mozilla/fxa-discoverability-shield-study/issues/34, https://github.com/mozilla/fxa-discoverability-shield-study/issues/33, https://github.com/mozilla/fxa-discoverability-shield-study/issues/32.

Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/34
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/33
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/32
Fixes #31 
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/45
<img width=""346"" alt=""screen shot 2019-01-25 at 11 42 36 am"" src=""https://user-images.githubusercontent.com/1295288/51760196-e1aef180-2097-11e9-8e6c-d0cb608b7efb.png"">
",vbudhram,1295288,2019-01-25T15:58:07Z,CONTRIBUTOR,True,22,14,5,Firefox Account browser web extension shield experiment,JavaScript,3d1684cde5bfab83a0c967735ce856e962eb37a6,chore(deps): update doc and deps
14,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/50,50,"chore(deps): qa fixes, updates to deps, docs and dist","This PR has updated testing documentation and updates shield-studies-util to 5.1.1. A surprising result from upgrading shield lib is that I am no longer able to reproduce https://github.com/mozilla/fxa-discoverability-shield-study/issues/34, https://github.com/mozilla/fxa-discoverability-shield-study/issues/33, https://github.com/mozilla/fxa-discoverability-shield-study/issues/32.

Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/34
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/33
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/32
Fixes #31 
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/45
<img width=""346"" alt=""screen shot 2019-01-25 at 11 42 36 am"" src=""https://user-images.githubusercontent.com/1295288/51760196-e1aef180-2097-11e9-8e6c-d0cb608b7efb.png"">
",vbudhram,1295288,2019-01-25T15:58:07Z,CONTRIBUTOR,True,22,14,5,Firefox Account browser web extension shield experiment,JavaScript,d37b965eca16a69f7350d77af20b2862fc903f5c,fix(css): use ellipsis overflow for long emails
15,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/50,50,"chore(deps): qa fixes, updates to deps, docs and dist","This PR has updated testing documentation and updates shield-studies-util to 5.1.1. A surprising result from upgrading shield lib is that I am no longer able to reproduce https://github.com/mozilla/fxa-discoverability-shield-study/issues/34, https://github.com/mozilla/fxa-discoverability-shield-study/issues/33, https://github.com/mozilla/fxa-discoverability-shield-study/issues/32.

Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/34
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/33
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/32
Fixes #31 
Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/45
<img width=""346"" alt=""screen shot 2019-01-25 at 11 42 36 am"" src=""https://user-images.githubusercontent.com/1295288/51760196-e1aef180-2097-11e9-8e6c-d0cb608b7efb.png"">
",vbudhram,1295288,2019-01-25T15:58:07Z,CONTRIBUTOR,True,22,14,5,Firefox Account browser web extension shield experiment,JavaScript,508375abcb12cbb4314563a0d3aa7bd8a236f450,chore(dist): rebuild dist
16,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/49,49,fix(settings): hide add-on in about:addons,"Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/48.

This is based off the solution at https://github.com/mozilla/side-view/issues/385, which adds the `hidden=true`. Unfortunately, I believe this will require a signed extension to test and verify.",vbudhram,1295288,2019-01-25T14:45:26Z,CONTRIBUTOR,True,1,0,1,Firefox Account browser web extension shield experiment,JavaScript,322818fa0d75c1469c3d3777f2595f2764c9e5c6,fix(settings): hide add-on in about:addons
17,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/39,39,fix(icon): use a context-fill svg for browserAction icon,"From https://github.com/mozilla/notes/pull/811, updated default avatar svg to be context filled so that it gets browser theme color. We won't be able to test this until we get a signed version of the extension since it is only available to signed extensions.

Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/35",vbudhram,1295288,2019-01-24T20:20:52Z,CONTRIBUTOR,True,8,7,2,Firefox Account browser web extension shield experiment,JavaScript,bbedd02e05bf0acd7efe2d142e5c58b498bc1094,fix(icon): use a context-fill svg for browserAction icon
18,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/29,29,"Remove nsp, fix lint errors",Fixes #28 ,pdehaan,557895,2019-01-23T21:19:29Z,CONTRIBUTOR,True,5149,5127,4,Firefox Account browser web extension shield experiment,JavaScript,607937d628b0321db00188cd9862f944f37da278,"Remove nsp, fix lint errors"
19,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/27,27,fix(metrics): add hashed uid to telemetry,"While updating https://github.com/mozilla/fxa-discoverability-shield-study/pull/10, I noticed that the `uid` property on the telemetry data was never being set, even for logged in users. 

After a little digging, the `Weave.Service.identity.hashedUID();` function would always fail with `Don't seem to have previously seen a token`. Switching to `_fetchTokenForUser()` seemed to do the trick.",vbudhram,1295288,2019-01-23T16:01:15Z,CONTRIBUTOR,True,91,23,8,Firefox Account browser web extension shield experiment,JavaScript,66fcb22e5dc6490aac7ca40cf31891533e3c1838,fix(metrics): add hashed uid to telemetry
20,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/26,26,chore(docs): updated docs and test plan,Added TOC for test plans and some general doc comments.,vbudhram,1295288,2019-01-22T20:09:16Z,CONTRIBUTOR,True,17,6,2,Firefox Account browser web extension shield experiment,JavaScript,fffda115f5f8d4b2893eb76a81c421930bac005a,chore(version): add updated dist version
21,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/24,24,chore(version): add updated dist version,"Created an updated dist for QA to use, @philbooth r?",vbudhram,1295288,2019-01-21T16:38:50Z,CONTRIBUTOR,True,0,0,1,Firefox Account browser web extension shield experiment,JavaScript,e50de2b9c7b135a42e01718aeeeefd1ed5bd4ec5,chore(version): add updated dist version
22,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/23,23,feat(telemetry): implement telemetry metrics,"Built from https://github.com/mozilla/fxa-discoverability-shield-study/pull/17 with updated telemetry metrics from https://github.com/mozilla/fxa-discoverability-shield-study/pull/10.

I split the commits into 3 to hopefully help with the review.

* First commit contains initial telemetry metrics
* Second commit contains control/treatment logic
* Third commit contains test plan, [rendered](https://github.com/mozilla/fxa-discoverability-shield-study/blob/3f47cfc83d3f5bafc4e8fb1e71e1b3c0a459985e/docs/TESTPLAN.md)

@philbooth I think this ready for review!",vbudhram,1295288,2019-01-20T19:05:58Z,CONTRIBUTOR,True,354,167,15,Firefox Account browser web extension shield experiment,JavaScript,d7210ac1ab84b3a2e2dbabeec7a18680954987d7,"feat(telemetry): send telemetry pings for start, stop, engage events"
23,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/23,23,feat(telemetry): implement telemetry metrics,"Built from https://github.com/mozilla/fxa-discoverability-shield-study/pull/17 with updated telemetry metrics from https://github.com/mozilla/fxa-discoverability-shield-study/pull/10.

I split the commits into 3 to hopefully help with the review.

* First commit contains initial telemetry metrics
* Second commit contains control/treatment logic
* Third commit contains test plan, [rendered](https://github.com/mozilla/fxa-discoverability-shield-study/blob/3f47cfc83d3f5bafc4e8fb1e71e1b3c0a459985e/docs/TESTPLAN.md)

@philbooth I think this ready for review!",vbudhram,1295288,2019-01-20T19:05:58Z,CONTRIBUTOR,True,354,167,15,Firefox Account browser web extension shield experiment,JavaScript,b2b4fe2d56d26585a06cb95e458a651676d83614,feat(fxa): telemetry updates
24,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/23,23,feat(telemetry): implement telemetry metrics,"Built from https://github.com/mozilla/fxa-discoverability-shield-study/pull/17 with updated telemetry metrics from https://github.com/mozilla/fxa-discoverability-shield-study/pull/10.

I split the commits into 3 to hopefully help with the review.

* First commit contains initial telemetry metrics
* Second commit contains control/treatment logic
* Third commit contains test plan, [rendered](https://github.com/mozilla/fxa-discoverability-shield-study/blob/3f47cfc83d3f5bafc4e8fb1e71e1b3c0a459985e/docs/TESTPLAN.md)

@philbooth I think this ready for review!",vbudhram,1295288,2019-01-20T19:05:58Z,CONTRIBUTOR,True,354,167,15,Firefox Account browser web extension shield experiment,JavaScript,f1596574a14c31f29821c817ec772650747f171f,feat(fxa): update testplan
25,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/22,22,fix(api): return hashed metrics uid instead of raw version,"Fixes #12.

Note the hashed uid is not available until the Sync client has a token from the tokenserver, the uid property will be `undefined` immediately after signing in for instance. So if you want to test it out, press the little Sync refresh button in the hamburger menu first.

I think this is the best we can do, if it's not good enough to be useful we should probably just remove `uid` instead.

@vbudhram r?",philbooth,64367,2019-01-18T12:41:53Z,CONTRIBUTOR,True,32,11,2,Firefox Account browser web extension shield experiment,JavaScript,8f1ced326802032f325746b0c1626a0fcd0404f9,"fix(api): return hashed metrics uid instead of raw version

Note the hashed uid is not available until the Sync client has a token
from the tokenserver, so it will be `undefined` immediately after
signing in for instance."
26,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/21,21,fix(button): prevent unnecessary paints of button icon,"Fixes #19.

The main fix here, d262c0c, ensures that we only paint the button icon when it changes and we stop painting it multiple times per profile-update.

I also included two smaller, kind-of-related changes:

* In b7813f7, I tweaked the conditional code in `updateState` to be cleaner. Previously it was leading with a negative condition, which is harder for a reader to grok. But also, instead of using `else` or `return` to control the flow, it was re-asserting the negation of the earlier condition in later ones. So I flipped it round to lead with the positive condition and then use `else` for control flow.

* While testing, I noticed that some calls to `userAvatar` were being made with a `null` value for `url`. I fixed that in 732817a by flipping the conditions in `verifiedUser` so that we only make the call to `userAvatar` when `user.avatar` is set.

@vbudhram r?",philbooth,64367,2019-01-18T11:43:58Z,CONTRIBUTOR,True,38,33,1,Firefox Account browser web extension shield experiment,JavaScript,48d359be459fc100da8ba3d2d7e2abb13c74a5c6,fix(button): prevent unnecessary paints of button icon
27,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/21,21,fix(button): prevent unnecessary paints of button icon,"Fixes #19.

The main fix here, d262c0c, ensures that we only paint the button icon when it changes and we stop painting it multiple times per profile-update.

I also included two smaller, kind-of-related changes:

* In b7813f7, I tweaked the conditional code in `updateState` to be cleaner. Previously it was leading with a negative condition, which is harder for a reader to grok. But also, instead of using `else` or `return` to control the flow, it was re-asserting the negation of the earlier condition in later ones. So I flipped it round to lead with the positive condition and then use `else` for control flow.

* While testing, I noticed that some calls to `userAvatar` were being made with a `null` value for `url`. I fixed that in 732817a by flipping the conditions in `verifiedUser` so that we only make the call to `userAvatar` when `user.avatar` is set.

@vbudhram r?",philbooth,64367,2019-01-18T11:43:58Z,CONTRIBUTOR,True,38,33,1,Firefox Account browser web extension shield experiment,JavaScript,d824fc17f7fa71f131f64435b4a0c64c0772f2d5,"refactor(feature): clean up conditional code in updateState

The code in feature::updateState leads with a negative condition in the
initial branch, negating it in subsequent branches. It's easier for a
reader to start with a positive condition and then negate that. Also,
the code was re-asserting the negation of preceding conditions in
subsequent `if` statements, instead of using `else` or an early `return`
to let the flow happen naturally.

This change flips the conditions so that it leads with a positive
assertion and then uses `else` to reduce the logic in subsequent ones."
28,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/21,21,fix(button): prevent unnecessary paints of button icon,"Fixes #19.

The main fix here, d262c0c, ensures that we only paint the button icon when it changes and we stop painting it multiple times per profile-update.

I also included two smaller, kind-of-related changes:

* In b7813f7, I tweaked the conditional code in `updateState` to be cleaner. Previously it was leading with a negative condition, which is harder for a reader to grok. But also, instead of using `else` or `return` to control the flow, it was re-asserting the negation of the earlier condition in later ones. So I flipped it round to lead with the positive condition and then use `else` for control flow.

* While testing, I noticed that some calls to `userAvatar` were being made with a `null` value for `url`. I fixed that in 732817a by flipping the conditions in `verifiedUser` so that we only make the call to `userAvatar` when `user.avatar` is set.

@vbudhram r?",philbooth,64367,2019-01-18T11:43:58Z,CONTRIBUTOR,True,38,33,1,Firefox Account browser web extension shield experiment,JavaScript,160e3aef5f9de066658e136d4df24548449ec89d,fix(button): fix attempts to paint null avatar url
29,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/17,17,"feat(telemetry): send telemetry pings for start, stop, engage events","@vbudhram, this is where I got to. I'll call lots of stuff out with inline comments but the bit that isn't working is where I hoped to call `feature.sendTelemetry` from the popup js. Maybe we can bubble it up with events instead.",philbooth,64367,2019-01-17T18:17:18Z,CONTRIBUTOR,False,98,68,3,Firefox Account browser web extension shield experiment,JavaScript,609f27bd83fea284f367a091f556f869435ebc88,"feat(telemetry): send telemetry pings for start, stop, engage events"
30,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/15,15,refactor(popup): eliminate duplication in event-handler setup,"Fixes #14.

Noticed a bit of repetitive code that we could clean up.

@vbudhram r?",philbooth,64367,2019-01-17T15:29:52Z,CONTRIBUTOR,True,17,42,1,Firefox Account browser web extension shield experiment,JavaScript,97db8c3d950f80bf093325ea4595c6525df38b8c,refactor(popup): eliminate duplication in event-handler setup
31,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/11,11,feat(fxa): update css from review,Fixes https://github.com/mozilla/fxa-discoverability-shield-study/issues/5,vbudhram,1295288,2019-01-16T22:47:11Z,CONTRIBUTOR,True,119,94,17,Firefox Account browser web extension shield experiment,JavaScript,6b2b7011d8f8823adcfea6ecc5abac87472599a8,feat(fxa): update css from review
32,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/10,10,edit metrics doc with telemetry requirements,"this provides some specs for https://github.com/mozilla/fxa-discoverability-shield-study/issues/7

see the [revised doc rendered in markdown](https://github.com/mozilla/fxa-discoverability-shield-study/blob/metrics-docs/docs/TELEMETRY.md)

OK, might be worth a short meeting soon work out some details here.

1. The way shield is designed its easiest to send one ping per event, which seems inefficient to me, but its best we follow that precedent. 
2. We want to use the `shield-study-addon` ping schema for this, example [here](https://github.com/motin/taar-experiment-v3-shield-study/blob/develop/schemas/full-schema.json).
3. I've defined three ping ""types"" for enrollment, unenrollment and UI engagement events, see doc
4. I wonder if we could get away with sending the FxA user ID, if signed in, in this ping. Can we obtain it from the browser or during authentication? It could potentially allow us to join the experiment data on fxa flow events. At the very least, we should define params so that login and reg flows originating from the addon can be identified by their branch in the experiment (though I know this may not be possible for control). This would enable join-ability of client telemetry and fxa data for users enrolled in the experiment, which we may need to run past higher-ups as it has been a previous no-no. 
5. I don't want to slow down the deployment process too much, but I'm slightly worried that the addition of the toolbar icon will interfere with people trying to access the hamburger menu. Unfortunately I'm not seeing any existing browser telemetry around events relating to hamburger menu clicks. Maybe its OK to move forward with this initial version but we should look into landing code in tree that will allow this as a fast follow up - it shouldn't be too hard. Also I don't think there is any browser telemetry around views/interactions with sync prefs :(. This hampers our ability to measure the behavior of the control branch. As far as I can tell, for control, all we will be able to measure is whether sync/fxa are configured. 
",irrationalagent,5625313,2019-01-16T19:09:54Z,CONTRIBUTOR,True,221,13,2,Firefox Account browser web extension shield experiment,JavaScript,bf7751ecb4e9c0a0e365f9e657ce49e4cf5d58c5,edit metrics doc with requirements
33,https://api.github.com/repos/mozilla/fxa-discoverability-shield-study/pulls/10,10,edit metrics doc with telemetry requirements,"this provides some specs for https://github.com/mozilla/fxa-discoverability-shield-study/issues/7

see the [revised doc rendered in markdown](https://github.com/mozilla/fxa-discoverability-shield-study/blob/metrics-docs/docs/TELEMETRY.md)

OK, might be worth a short meeting soon work out some details here.

1. The way shield is designed its easiest to send one ping per event, which seems inefficient to me, but its best we follow that precedent. 
2. We want to use the `shield-study-addon` ping schema for this, example [here](https://github.com/motin/taar-experiment-v3-shield-study/blob/develop/schemas/full-schema.json).
3. I've defined three ping ""types"" for enrollment, unenrollment and UI engagement events, see doc
4. I wonder if we could get away with sending the FxA user ID, if signed in, in this ping. Can we obtain it from the browser or during authentication? It could potentially allow us to join the experiment data on fxa flow events. At the very least, we should define params so that login and reg flows originating from the addon can be identified by their branch in the experiment (though I know this may not be possible for control). This would enable join-ability of client telemetry and fxa data for users enrolled in the experiment, which we may need to run past higher-ups as it has been a previous no-no. 
5. I don't want to slow down the deployment process too much, but I'm slightly worried that the addition of the toolbar icon will interfere with people trying to access the hamburger menu. Unfortunately I'm not seeing any existing browser telemetry around events relating to hamburger menu clicks. Maybe its OK to move forward with this initial version but we should look into landing code in tree that will allow this as a fast follow up - it shouldn't be too hard. Also I don't think there is any browser telemetry around views/interactions with sync prefs :(. This hampers our ability to measure the behavior of the control branch. As far as I can tell, for control, all we will be able to measure is whether sync/fxa are configured. 
",irrationalagent,5625313,2019-01-16T19:09:54Z,CONTRIBUTOR,True,221,13,2,Firefox Account browser web extension shield experiment,JavaScript,24d4433aaa02a284a67eeea1795b1e046b831444,chore(docs): add extra documentation
