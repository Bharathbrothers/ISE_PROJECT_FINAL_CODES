,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/minijanus.js/pulls/8,8,Add Mozilla Code of Conduct,"Fixes #7


As of January 1 2019, Mozilla requires that all GitHub projects include this [CODE_OF_CONDUCT.md](https://github.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md) file in the project root. The file has two parts:

1. Required Text - All text under the headings *Community Participation Guidelines and How to Report*, are required, and should not be altered.
2. Optional Text - The Project Specific Etiquette heading provides a space to speak more specifically about ways people can work effectively and inclusively together. Some examples of those can be found on the [Firefox Debugger](https://github.com/devtools-html/debugger.html/blob/master/CODE_OF_CONDUCT.md) project, and [Common Voice](https://github.com/mozilla/voice-web/blob/master/CODE_OF_CONDUCT.md). (The optional part is commented out in the [raw template file](https://raw.githubusercontent.com/mozilla/repo-templates/blob/master/templates/CODE_OF_CONDUCT.md), and will not be visible until you modify and uncomment that part.)

If you have any questions about this file, or Code of Conduct policies and procedures, please see [Mozilla-GitHub-Standards](https://wiki.mozilla.org/GitHub/Repository_Requirements) or email Mozilla-GitHub-Standards+CoC@mozilla.com.

_(Message COC002)_",Mozilla-GitHub-Standards,48073334,2019-03-30T06:43:16Z,CONTRIBUTOR,True,15,0,1,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,d94cc83fe0fe9efecd9dca06db6ca0e92eb8bf1d,"Add Mozilla Code of Conduct file

Fixes #7.

_(Message COC002)_"
1,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,60a4f41345f579a3023bd7e0f9fa645dc23e074b,Always dispose of timeouts on session destroy.
2,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,eede97cb6c59b2c9a8dbdd3b2445f42497a7a940,Remove empty try/catch block and simplify rejection message.
3,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,862924049e94d31bd53c584800f8a97f66d1a5f7,Update comment to explain empty catch handler
4,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,5a90160aa3984afa23e26d8eedfc35fef48ccb3d,"Separate transmit behavior from send, delete transaction on destroy. Add tests"
5,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,95f0db5dba842591de4810b5604afdf7274192a7,Split destroy into two functions.
6,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,256823e6d864a88697c01a85e262bfd202df94c8,More work related to session disposal
7,https://api.github.com/repos/mozilla/minijanus.js/pulls/6,6,Always dispose of timeouts on session destroy.,"In `naf-janus-adapter` when the WebSocket was closed or in a closing state, `send(""destroy)` would error preventing the clean up of the keep alive timeout. We also need to clear any remaining transaction timeout handlers and reject their promises.",robertlong,1753624,2018-04-16T21:37:30Z,CONTRIBUTOR,True,129,50,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,12b0673e5ae275b7d4c1e568cde01ba8cf839b11,Don't throw away keepalive errors
8,https://api.github.com/repos/mozilla/minijanus.js/pulls/5,5,Do not rely upon destroy response before shutting down keepalive,It turns out Janus does not send a response message in reply to `destroy` messages. The result is that the promise returned from `destroy` is never resolved and also the keepalive routine is never terminated. This updates the API to no longer return a promise and also optimistically ends the keepalive loop.,gfodor,220020,2018-03-14T21:52:59Z,CONTRIBUTOR,True,3,3,1,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,446eb5c04871ffd07327968669181c1397aab40d,Do not rely upon destroy response before shutting down keepalive recurrence
9,https://api.github.com/repos/mozilla/minijanus.js/pulls/4,4,Hint property unnecessary to signal acks,"The plugin can actually opt not to produce a hint, so the previous version would fail to recognize some acks, and treat them as transaction responses. See the Janus core code here: https://github.com/meetecho/janus-gateway/blob/master/janus.c#L1289

Resolves #3.",mqp,428637,2018-01-04T23:30:04Z,CONTRIBUTOR,True,16,8,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,565307b3c9af9b56c7606a63b03167b4cc6d1727,Hint property unnecessary to signal acks
10,https://api.github.com/repos/mozilla/minijanus.js/pulls/2,2,Better options setting for session,"Addresses #1.

Now each option gets its default independently, so if you do
```Javascript
new Session(sendFn, { timeoutMs: 15000 })
```
the session will still have the default `keepaliveMs` of 30000.",mqp,428637,2017-12-24T19:14:08Z,CONTRIBUTOR,True,6,6,3,A small Javascript wrapper for talking to the Janus WebRTC signalling API.,JavaScript,eb708dc9df0236a0a894d08561692a4e6cf12749,Better options setting for session
