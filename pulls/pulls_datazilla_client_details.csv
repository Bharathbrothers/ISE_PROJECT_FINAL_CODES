,pullid,pulls_number,pulltitle,pullsbody,pullsuserlogin,pullsuserid,pullauthordate,author_association,merged_status,stats_addns,stats_delns,stats_changed_files,pull_repo_desc,pull_repo_lang,pull_commit_sha,pull_commit_message
0,https://api.github.com/repos/mozilla/datazilla_client/pulls/36,36,add support for results_xperf,"yeah, this will allow us to use dzclient to submit xperf results that are not a specific type (numeric or string)
",jmaher,62588,2013-04-18T19:39:21Z,CONTRIBUTOR,True,23,2,2,Client libraries to interact with the datazilla database.,Python,30b581070d115cbbbba1bee118d028f3166c9d66,add support for results_xperf
1,https://api.github.com/repos/mozilla/datazilla_client/pulls/34,34,Increase limit on revision length. Fixes #33,,davehunt,122800,2013-01-25T15:56:56Z,MEMBER,True,1,1,1,Client libraries to interact with the datazilla database.,Python,2b88e90ce17b940aa4ed05a1846483f4d61b1499,Increase limit on revision length. Fixes #33
2,https://api.github.com/repos/mozilla/datazilla_client/pulls/29,29,https://github.com/mozilla/datazilla_client/issues/28,"https://github.com/mozilla/datazilla_client/issues/28
",k0s,270826,2012-12-14T01:21:03Z,CONTRIBUTOR,True,11,6,2,Client libraries to interact with the datazilla database.,Python,7c3d9b338bdf0c8a12133ba5e5132e6e71a7b06a,https://github.com/mozilla/datazilla_client/issues/28
3,https://api.github.com/repos/mozilla/datazilla_client/pulls/27,27,26,"https://github.com/mozilla/datazilla_client/issues/26
",k0s,270826,2012-09-17T20:46:02Z,CONTRIBUTOR,True,7,2,2,Client libraries to interact with the datazilla database.,Python,ea5da0fb9cede816ec2e914da1d6ee49e3d34cbe,print out stuff
4,https://api.github.com/repos/mozilla/datazilla_client/pulls/27,27,26,"https://github.com/mozilla/datazilla_client/issues/26
",k0s,270826,2012-09-17T20:46:02Z,CONTRIBUTOR,True,7,2,2,Client libraries to interact with the datazilla database.,Python,9c9fb20502ff79961f100b71995024d2c4b14ee2,increment version
5,https://api.github.com/repos/mozilla/datazilla_client/pulls/25,25,https://github.com/mozilla/datazilla_client/issues/24,,k0s,270826,2012-08-13T21:58:14Z,CONTRIBUTOR,True,2,1,1,Client libraries to interact with the datazilla database.,Python,b5a2cc23e5cae7fb0f8b782b51fc7e35888b72d7,https://github.com/mozilla/datazilla_client/issues/24
6,https://api.github.com/repos/mozilla/datazilla_client/pulls/23,23,https://github.com/mozilla/datazilla_client/issues/22,"datazilla_client should offer a non-oauth implementation
",k0s,270826,2012-08-09T22:54:00Z,CONTRIBUTOR,True,61,17,2,Client libraries to interact with the datazilla database.,Python,1a85cfdc63ecba9e579f9f9dbb385416e9e5fdb6,https://github.com/mozilla/datazilla_client/issues/22
7,https://api.github.com/repos/mozilla/datazilla_client/pulls/20,20,https://github.com/mozilla/datazilla_client/issues/19,,k0s,270826,2012-08-07T17:25:17Z,CONTRIBUTOR,True,10,11,2,Client libraries to interact with the datazilla database.,Python,607efd8ad50abb8f0427558f2d3a8e1cdae59563,https://github.com/mozilla/datazilla_client/issues/19
8,https://api.github.com/repos/mozilla/datazilla_client/pulls/18,18,Https protocol,"The production version of datazilla uses SSL/HTTPS.  The httplib module used to send a request in datazilla_client has two separate connection functions to handle HTTP and HTTPS.  To account for this I added a ""protocol"" option to DatazillaRequest that allows the caller to specify ""http"" or ""https"" for the host. 
",jeads,949498,2012-08-03T17:55:03Z,CONTRIBUTOR,True,35,10,3,Client libraries to interact with the datazilla database.,Python,ee915e4023372b14ef84731042e5327fa6834345,added a protocol argument to specify http or https
9,https://api.github.com/repos/mozilla/datazilla_client/pulls/18,18,Https protocol,"The production version of datazilla uses SSL/HTTPS.  The httplib module used to send a request in datazilla_client has two separate connection functions to handle HTTP and HTTPS.  To account for this I added a ""protocol"" option to DatazillaRequest that allows the caller to specify ""http"" or ""https"" for the host. 
",jeads,949498,2012-08-03T17:55:03Z,CONTRIBUTOR,True,35,10,3,Client libraries to interact with the datazilla database.,Python,256836fad5cb70bbb82bf3dad55656a7bc38179e,switched default logic to match __init__
10,https://api.github.com/repos/mozilla/datazilla_client/pulls/18,18,Https protocol,"The production version of datazilla uses SSL/HTTPS.  The httplib module used to send a request in datazilla_client has two separate connection functions to handle HTTP and HTTPS.  To account for this I added a ""protocol"" option to DatazillaRequest that allows the caller to specify ""http"" or ""https"" for the host. 
",jeads,949498,2012-08-03T17:55:03Z,CONTRIBUTOR,True,35,10,3,Client libraries to interact with the datazilla database.,Python,0804654e9d4415b7fd68f8aa9fe02594741e4c71,made allowed protocols a set attribute
11,https://api.github.com/repos/mozilla/datazilla_client/pulls/17,17,fixes issues 15 and 16,,k0s,270826,2012-08-03T17:11:20Z,CONTRIBUTOR,True,49,8,2,Client libraries to interact with the datazilla database.,Python,2a639e8f5ae34c956a08644e98d23e2ca6bc4e7e,issues 15 and 16
12,https://api.github.com/repos/mozilla/datazilla_client/pulls/14,14,separate results collection from posting,,k0s,270826,2012-07-31T19:47:21Z,CONTRIBUTOR,True,65,16,3,Client libraries to interact with the datazilla database.,Python,1aedd43aa4d59e30a1ec586e16d3c6c49af06d2e,separate results collection from posting
13,https://api.github.com/repos/mozilla/datazilla_client/pulls/14,14,separate results collection from posting,,k0s,270826,2012-07-31T19:47:21Z,CONTRIBUTOR,True,65,16,3,Client libraries to interact with the datazilla database.,Python,5d35570f7469b208f1b6a11674f8687d11e0e223,fixes from feedback
14,https://api.github.com/repos/mozilla/datazilla_client/pulls/14,14,separate results collection from posting,,k0s,270826,2012-07-31T19:47:21Z,CONTRIBUTOR,True,65,16,3,Client libraries to interact with the datazilla database.,Python,b5d99d15edbcc79367c1241b63451323125def4a,add docstring for ctor
15,https://api.github.com/repos/mozilla/datazilla_client/pulls/12,12,add documentation on DatazillaRequest.datasets(),"This updates the README with how the datasets() method works
",k0s,270826,2012-07-23T17:09:41Z,CONTRIBUTOR,True,7,2,1,Client libraries to interact with the datazilla database.,Python,c38e8f0149b9d92d8b3c4c786d024839fb3b8978,documentation
16,https://api.github.com/repos/mozilla/datazilla_client/pulls/6,6,Add tox.ini,"We should add a tox.ini to automatically test dzclient on multiple Python versions (and consider supporting 2.4 so Talos can use it).
",carljm,61586,2012-07-20T21:56:20Z,MEMBER,True,12,0,3,Client libraries to interact with the datazilla database.,Python,a68edf8d5ee2d7d0c7a331cbbd8ff87c6e583cf5,Add tox.ini.
17,https://api.github.com/repos/mozilla/datazilla_client/pulls/11,11,add functionality to get JSON blobs out of the request,"https://github.com/mozilla/datazilla_client/issues/8
",k0s,270826,2012-07-20T18:20:51Z,CONTRIBUTOR,True,57,11,2,Client libraries to interact with the datazilla database.,Python,c25cc5c72f99d585b1c8aae9ef0cab598bcf805f,initial implementation
18,https://api.github.com/repos/mozilla/datazilla_client/pulls/11,11,add functionality to get JSON blobs out of the request,"https://github.com/mozilla/datazilla_client/issues/8
",k0s,270826,2012-07-20T18:20:51Z,CONTRIBUTOR,True,57,11,2,Client libraries to interact with the datazilla database.,Python,c1c70c52676994427a0c7ab8edc2d838b8f50d72,forgot some ()s
19,https://api.github.com/repos/mozilla/datazilla_client/pulls/11,11,add functionality to get JSON blobs out of the request,"https://github.com/mozilla/datazilla_client/issues/8
",k0s,270826,2012-07-20T18:20:51Z,CONTRIBUTOR,True,57,11,2,Client libraries to interact with the datazilla database.,Python,2d08f09d1f12b6926edb65cb8d6b16d2733957c1,add a test for the new method
20,https://api.github.com/repos/mozilla/datazilla_client/pulls/10,10,add __main__ section,"https://github.com/mozilla/datazilla_client/issues/9
",k0s,270826,2012-07-20T16:53:47Z,CONTRIBUTOR,True,10,9,2,Client libraries to interact with the datazilla database.,Python,689c19a496e9e485cadcbe12dc5cbe7303ae6bcb,add __main__ section
21,https://api.github.com/repos/mozilla/datazilla_client/pulls/7,7,allow use of simplejson vs json,"the setup.py already adds simplejson as a dep if json isn't available (python < 2.6).  However, client.py does not actually make use of it.  This will allow it
",k0s,270826,2012-07-20T16:08:42Z,CONTRIBUTOR,True,4,2,1,Client libraries to interact with the datazilla database.,Python,83287047abc0c6430d38c00d272ddd03261c9b0e,allow use of simplejson vs stdlib json
22,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,749d0181c0cb97c37f5161cadfdaeefa99a7f5fb,Add basic usage documentation.
23,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,b67a27ccd5f8cf672fb64890ab18fcc1e0de0c03,Add full test coverage.
24,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,05f329d56a3b2acab10cbf12e0736a95a076dfc8,Add doc note about using DatazillaRequest.send directly.
25,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,7a79941731705591b51e01c2b1d96181d17d74ba,Add OAuth support.
26,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,7a8ecb6fd5d9529fe7eb84dc0ea1d8e454ab6457,Rename top-level module from datazilla to dzclient.
27,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,98163001149ea386778a3da13b928adb7e714681,Fix bad hardcoded suite name in add_test_results.
28,https://api.github.com/repos/mozilla/datazilla_client/pulls/4,4,Rename top-level module to datazilla_client or dzclient?,"Both `datazilla` and `datazilla_client` use the top-level Python module name `datazilla`. Usually this won't cause a problem as the two wouldn't normally be installed together - but they certainly could be if someone is doing development on either one, in which case this would cause a namespace clash.

This is the type of problem it'd be best to fix sooner rather than later, before many other projects are using `datazilla_client`. I can submit a pull request for it if you think it's acceptable to change the import name at this point. If so, which top-level name do you prefer, `datazilla_client` or `dzclient`?
",carljm,61586,2012-07-16T23:12:13Z,MEMBER,True,320,27,8,Client libraries to interact with the datazilla database.,Python,9ca30fc99e1f205d7ad5a577095d94852e910a0f,Merge branch 'tests' into top-level-rename
29,https://api.github.com/repos/mozilla/datazilla_client/pulls/5,5,Oauth,"This pull request adds Oauth support to the client, which will be required to post data to the production instance of Datazilla.

This necessarily involves a change to the signature of `DatazillaRequest`, which will mean changes in code using this client library.
",carljm,61586,2012-07-14T02:11:01Z,MEMBER,False,103,33,4,Client libraries to interact with the datazilla database.,Python,7a79941731705591b51e01c2b1d96181d17d74ba,Add OAuth support.
30,https://api.github.com/repos/mozilla/datazilla_client/pulls/5,5,Oauth,"This pull request adds Oauth support to the client, which will be required to post data to the production instance of Datazilla.

This necessarily involves a change to the signature of `DatazillaRequest`, which will mean changes in code using this client library.
",carljm,61586,2012-07-14T02:11:01Z,MEMBER,False,103,33,4,Client libraries to interact with the datazilla database.,Python,53668c6be057bcfc829bc55e196e5f638bbbdfc1,Merge branch 'tests' into oauth
31,https://api.github.com/repos/mozilla/datazilla_client/pulls/3,3,Tests and docs.,"This branch adds 100% test coverage, and basic usage docs.

There are a couple minor behavior changes as well:
- The request to the datazilla server is now sent with a content-type header.
- `DatazillaResult.add_test_results` is now able to accept results for a new suite, in which case it implicitly adds the suite.
- Fixed a bug in `DatazillaResult.join_results` where it crashed if the joined results had results for a new test in an already-existing suite.
- Extracted out the `DatazillaRequest.send` method, allowing projects that build up the data structure to send themselves to still use the client to send the data. (At the moment this doesn't buy them very much, but I'm about to add OAuth support, which will make it much more worthwhile).

All of these changes should be backwards-compatible for any existing code using `datazilla_client`.
",carljm,61586,2012-07-13T21:20:03Z,MEMBER,True,244,21,7,Client libraries to interact with the datazilla database.,Python,749d0181c0cb97c37f5161cadfdaeefa99a7f5fb,Add basic usage documentation.
32,https://api.github.com/repos/mozilla/datazilla_client/pulls/3,3,Tests and docs.,"This branch adds 100% test coverage, and basic usage docs.

There are a couple minor behavior changes as well:
- The request to the datazilla server is now sent with a content-type header.
- `DatazillaResult.add_test_results` is now able to accept results for a new suite, in which case it implicitly adds the suite.
- Fixed a bug in `DatazillaResult.join_results` where it crashed if the joined results had results for a new test in an already-existing suite.
- Extracted out the `DatazillaRequest.send` method, allowing projects that build up the data structure to send themselves to still use the client to send the data. (At the moment this doesn't buy them very much, but I'm about to add OAuth support, which will make it much more worthwhile).

All of these changes should be backwards-compatible for any existing code using `datazilla_client`.
",carljm,61586,2012-07-13T21:20:03Z,MEMBER,True,244,21,7,Client libraries to interact with the datazilla database.,Python,b67a27ccd5f8cf672fb64890ab18fcc1e0de0c03,Add full test coverage.
33,https://api.github.com/repos/mozilla/datazilla_client/pulls/3,3,Tests and docs.,"This branch adds 100% test coverage, and basic usage docs.

There are a couple minor behavior changes as well:
- The request to the datazilla server is now sent with a content-type header.
- `DatazillaResult.add_test_results` is now able to accept results for a new suite, in which case it implicitly adds the suite.
- Fixed a bug in `DatazillaResult.join_results` where it crashed if the joined results had results for a new test in an already-existing suite.
- Extracted out the `DatazillaRequest.send` method, allowing projects that build up the data structure to send themselves to still use the client to send the data. (At the moment this doesn't buy them very much, but I'm about to add OAuth support, which will make it much more worthwhile).

All of these changes should be backwards-compatible for any existing code using `datazilla_client`.
",carljm,61586,2012-07-13T21:20:03Z,MEMBER,True,244,21,7,Client libraries to interact with the datazilla database.,Python,05f329d56a3b2acab10cbf12e0736a95a076dfc8,Add doc note about using DatazillaRequest.send directly.
34,https://api.github.com/repos/mozilla/datazilla_client/pulls/3,3,Tests and docs.,"This branch adds 100% test coverage, and basic usage docs.

There are a couple minor behavior changes as well:
- The request to the datazilla server is now sent with a content-type header.
- `DatazillaResult.add_test_results` is now able to accept results for a new suite, in which case it implicitly adds the suite.
- Fixed a bug in `DatazillaResult.join_results` where it crashed if the joined results had results for a new test in an already-existing suite.
- Extracted out the `DatazillaRequest.send` method, allowing projects that build up the data structure to send themselves to still use the client to send the data. (At the moment this doesn't buy them very much, but I'm about to add OAuth support, which will make it much more worthwhile).

All of these changes should be backwards-compatible for any existing code using `datazilla_client`.
",carljm,61586,2012-07-13T21:20:03Z,MEMBER,True,244,21,7,Client libraries to interact with the datazilla database.,Python,98163001149ea386778a3da13b928adb7e714681,Fix bad hardcoded suite name in add_test_results.
35,https://api.github.com/repos/mozilla/datazilla_client/pulls/2,2,"Correct docstring location/format, fix mutable-default-argument bugs.","Moved the docstrings below the class/function definition, which is the more typical location (and allows them to be found and used by Python auto-documentation tools, the online shell help() function, etc.) Also formatted them in the standard way per PEP 257 (http://www.python.org/dev/peps/pep-0257/).

Also fixed a few cases where default arguments were used in a way that would cause a subtle bug. Default arguments are evaluated at function-definition time, not function-execution time, so for instance if the default value for `test_date` is `int(time.time())`, that will be evaluated exactly once when the module is first imported, not each time a `DatazillaRequest` is created. This could be a problem in a long-running process that repeatedly creates and sends `DatazillaRequest`s.

Similarly, but even more subtly, if `[]` or `{}` (or any mutable object) is used as a default argument for a function, that creates exactly one instance of a list or dictionary, whose state will persist over time (and be shared across multiple instances of the function or class). This can be useful in some rare cases, but is almost never the desired result. For instance, with the default value of the optional `results` argument to the `DatazillaResult` constructor set to `{}`, if I run the following code:

```
res1 = DatazillaResult()
res1.add_testsuite(""talos"", [""1"", ""2""])
res2 = DatazillaResult()
```

The value of both `res1.results` and `res2.results` will, surprisingly enough, _both_ be `{'talos': ['1', '2']}`. Even more surprisingly, both instances are actually sharing the same results dictionary, and any modification I make to one (i.e. adding more results) will instantly be reflected in the other as well! Because the empty-dictionary default argument is assigned to `self.results` in `res1.__init__`, but that assignment is just a reference, not a copy - there's still only one dictionary, and it's the same one that is also still the default value of the argument in the constructor. So when I add some data to `self.results` in `res1` with the second line, I'm actually adding it to the dictionary that is the default `results` argument for all `DatazillaResult'`s - and that will be also assigned to `self.results` for any future `DatazillaResult`s that are instantiated without an explicit `results` argument.

Anyway, sorry for the novel - but the solution is simple: avoid calling any functions or using any mutable objects as function default arguments. Instead use a sentinel no-argument-provided value (usually `None`) and replace it with the correct value inside the function.
",carljm,61586,2012-07-03T02:04:20Z,MEMBER,True,30,32,1,Client libraries to interact with the datazilla database.,Python,d5afb5bd5d508a22cc977b396aa4c7de2aeb49be,"Correct docstring location/format, fix mutable-default-argument bugs."
36,https://api.github.com/repos/mozilla/datazilla_client/pulls/1,1,Remove unused find_packages import and un-useful include_package_data setup kwarg,"This pull request removes an unused import from setup.py, and also removes `include_package_data=True` from the `setup()` call. `include_package_data=True` includes all VCS-tracked files as package-data files, but only Subversion is supported natively, so for a git-hosted project an extra setuptools plugin would be required for that to have any effect. But datazilla-client has no package data files anyway, so it's kind of moot.
",carljm,61586,2012-07-03T01:26:01Z,MEMBER,True,1,2,1,Client libraries to interact with the datazilla database.,Python,68bb3e60d35936a8e67ad288c65b417940403c53,Remove unused find_packages import and un-useful include_package_data setup kwarg.
